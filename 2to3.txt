--- ./setup_translate.py	(original)
+++ ./setup_translate.py	(refactored)
@@ -2,7 +2,7 @@
 
 # Language extension for distutils Python scripts. Based on this concept:
 # http://wiki.maemo.org/Internationalize_a_Python_application
-from __future__ import print_function
+
 from distutils import cmd
 from distutils.command.build import build as _build
 import glob
--- ./contrib/model_movies/compare_functions.py	(original)
+++ ./contrib/model_movies/compare_functions.py	(refactored)
@@ -1,6 +1,6 @@
 #!/usr/bin/python
 # -*- coding: utf-8 -*-
-from __future__ import print_function
+
 import os
 import sys
 import pprint
--- ./doc/source/conf.py	(original)
+++ ./doc/source/conf.py	(refactored)
@@ -19,14 +19,14 @@
 
 # -- Project information -----------------------------------------------------
 
-project = u'e2openplugin-OpenWebif'
-copyright = u'2018, E2OpenPlugins'
-author = u'E2OpenPlugins'
+project = 'e2openplugin-OpenWebif'
+copyright = '2018, E2OpenPlugins'
+author = 'E2OpenPlugins'
 
 # The short X.Y version
-version = u'1.3.2'
+version = '1.3.2'
 # The full version, including alpha/beta/rc tags
-release = u'1.3.1'
+release = '1.3.1'
 
 
 # -- General configuration ---------------------------------------------------
@@ -137,8 +137,8 @@
 # (source start file, target name, title,
 #  author, documentclass [howto, manual, or own class]).
 latex_documents = [
-    (master_doc, 'e2openplugin-OpenWebif.tex', u'e2openplugin-OpenWebif Documentation',
-     u'E2OpenPlugins', 'manual'),
+    (master_doc, 'e2openplugin-OpenWebif.tex', 'e2openplugin-OpenWebif Documentation',
+     'E2OpenPlugins', 'manual'),
 ]
 
 
@@ -147,7 +147,7 @@
 # One entry per manual page. List of tuples
 # (source start file, name, description, authors, manual section).
 man_pages = [
-    (master_doc, 'e2openplugin-openwebif', u'e2openplugin-OpenWebif Documentation',
+    (master_doc, 'e2openplugin-openwebif', 'e2openplugin-OpenWebif Documentation',
      [author], 1)
 ]
 
@@ -158,7 +158,7 @@
 # (source start file, target name, title, author,
 #  dir menu entry, description, category)
 texinfo_documents = [
-    (master_doc, 'e2openplugin-OpenWebif', u'e2openplugin-OpenWebif Documentation',
+    (master_doc, 'e2openplugin-OpenWebif', 'e2openplugin-OpenWebif Documentation',
      author, 'e2openplugin-OpenWebif', 'One line description of project.',
      'Miscellaneous'),
 ]
--- ./locale/xml2po.py	(original)
+++ ./locale/xml2po.py	(refactored)
@@ -1,6 +1,6 @@
 #!/usr/bin/python
 # -*- coding: utf-8 -*-
-from __future__ import print_function
+
 import sys
 import os
 import string
--- ./plugin/httpserver.py	(original)
+++ ./plugin/httpserver.py	(refactored)
@@ -21,7 +21,7 @@
 # Inc., 51 Franklin Street, Fifth Floor, Boston MA 02110-1301, USA.
 ##########################################################################
 
-from __future__ import print_function
+
 import enigma
 from Screens.MessageBox import MessageBox
 from Components.config import config
--- ./plugin/sslcertificate.py	(original)
+++ ./plugin/sslcertificate.py	(refactored)
@@ -20,7 +20,7 @@
 # Inc., 51 Franklin Street, Fifth Floor, Boston MA 02110-1301, USA.
 ##########################################################################
 
-from __future__ import print_function
+
 from OpenSSL import crypto
 from socket import gethostname
 from time import time
--- ./plugin/vtiaddon.py	(original)
+++ ./plugin/vtiaddon.py	(refactored)
@@ -1,6 +1,6 @@
 #!/usr/bin/python
 # -*- coding: utf-8 -*-
-from __future__ import print_function
+
 
 from Components.ConfigList import ConfigListScreen
 from Components.config import config, getConfigListEntry, ConfigSubsection, ConfigInteger, ConfigYesNo, ConfigText, ConfigSelection
--- ./plugin/backport/OrderedDict.py	(original)
+++ ./plugin/backport/OrderedDict.py	(refactored)
@@ -4,9 +4,9 @@
 # Passes Python2.7's test suite and incorporates all the latest updates.
 
 try:
-	from thread import get_ident as _get_ident
+	from _thread import get_ident as _get_ident
 except ImportError:
-	from dummy_thread import get_ident as _get_ident
+	from _dummy_thread import get_ident as _get_ident
 
 try:
 	from _abcoll import KeysView, ValuesView, ItemsView
@@ -78,7 +78,7 @@
 	def clear(self):
 		'od.clear() -> None.  Remove all items from od.'
 		try:
-			for node in self.__map.itervalues():
+			for node in self.__map.values():
 				del node[:]
 			root = self.__root
 			root[:] = [root, root, None]
@@ -158,12 +158,12 @@
 			for key in other:
 				self[key] = other[key]
 		elif hasattr(other, 'keys'):
-			for key in other.keys():
+			for key in list(other.keys()):
 				self[key] = other[key]
 		else:
 			for key, value in other:
 				self[key] = value
-		for key, value in kwds.items():
+		for key, value in list(kwds.items()):
 			self[key] = value
 
 	__update = update  # let subclasses override update without breaking __init__
@@ -198,7 +198,7 @@
 		try:
 			if not self:
 				return '%s()' % (self.__class__.__name__,)
-			return '%s(%r)' % (self.__class__.__name__, self.items())
+			return '%s(%r)' % (self.__class__.__name__, list(self.items()))
 		finally:
 			del _repr_running[call_key]
 
@@ -231,7 +231,7 @@
 		while comparison to a regular mapping is order-insensitive.
 		'''
 		if isinstance(other, OrderedDict):
-			return len(self)==len(other) and self.items() == other.items()
+			return len(self)==len(other) and list(self.items()) == list(other.items())
 		return dict.__eq__(self, other)
 
 	def __ne__(self, other):
--- ./plugin/controllers/BouquetEditor.py	(original)
+++ ./plugin/controllers/BouquetEditor.py	(refactored)
@@ -8,7 +8,7 @@
 # http://creativecommons.org/licenses/by-nc-sa/3.0/ or send a letter to Creative
 # Commons, 559 Nathan Abbott Way, Stanford, California 94305, USA.
 
-from __future__ import print_function
+
 from Plugins.Extensions.OpenWebif.controllers.i18n import _
 from enigma import eServiceReference, eServiceCenter, eDVBDB
 from Components.Sources.Source import Source
--- ./plugin/controllers/ER.py	(original)
+++ ./plugin/controllers/ER.py	(refactored)
@@ -20,7 +20,7 @@
 # Inc., 51 Franklin Street, Fifth Floor, Boston MA 02110-1301, USA.
 ##########################################################################
 
-from __future__ import print_function
+
 from twisted.web import resource, http
 import six
 
--- ./plugin/controllers/NET.py	(original)
+++ ./plugin/controllers/NET.py	(refactored)
@@ -25,6 +25,7 @@
 import six
 from re import sub as re_sub
 from Plugins.SystemPlugins.NetworkBrowser.AutoMount import iAutoMount
+import collections
 
 
 class NetController(resource.Resource):
@@ -48,7 +49,7 @@
 	def render(self, request):
 		func = getattr(self, "P_" + self.path, None)
 		self.request = request
-		if callable(func):
+		if isinstance(func, collections.Callable):
 			request.setResponseCode(http.OK)
 			request.setHeader("content-type", "application/json")
 			func()
@@ -56,7 +57,7 @@
 			request.finish()
 		else:
 			func = getattr(self, "PC_" + self.path, None)
-			if callable(func):
+			if isinstance(func, collections.Callable):
 				self.callback = self.parsecallback
 				func()
 			else:
--- ./plugin/controllers/base.py	(original)
+++ ./plugin/controllers/base.py	(refactored)
@@ -20,7 +20,7 @@
 # Inc., 51 Franklin Street, Fifth Floor, Boston MA 02110-1301, USA.
 ##########################################################################
 
-from __future__ import print_function
+
 import os
 import imp
 import json
@@ -40,6 +40,7 @@
 from Plugins.Extensions.OpenWebif.controllers.models.info import getInfo
 from Plugins.Extensions.OpenWebif.controllers.models.config import getCollapsedMenus, getConfigsSections, getShowName, getCustomName, getBoxName
 from Plugins.Extensions.OpenWebif.controllers.defaults import getPublicPath, getViewsPath
+import collections
 
 def new_getRequestHostname(self):
 	host = self.getHeader(b'host')
@@ -119,7 +120,7 @@
 			else:
 				template = imp.load_source(module, getViewsPath(path + ".py"))
 			mod = getattr(template, module, None)
-			if callable(mod):
+			if isinstance(mod, collections.Callable):
 				return str(mod(searchList=args))
 		elif fileExists(getViewsPath(path + ".tmpl")):
 			return str(Template(file=getViewsPath(path + ".tmpl"), searchList=[args]))
@@ -167,12 +168,12 @@
 		else:
 			func = getattr(self, "P_" + self.path, None)
 
-		if callable(func):
+		if isinstance(func, collections.Callable):
 			request.setResponseCode(http.OK)
 
 			# call prePageLoad function if exist
 			plfunc = getattr(self, "prePageLoad", None)
-			if callable(plfunc):
+			if isinstance(plfunc, collections.Callable):
 				plfunc(request)
 
 			data = func(request)
--- ./plugin/controllers/defaults.py	(original)
+++ ./plugin/controllers/defaults.py	(refactored)
@@ -1,6 +1,6 @@
 #!/usr/bin/python
 # -*- coding: utf-8 -*-
-from __future__ import print_function
+
 import os
 import sys
 
--- ./plugin/controllers/utilities.py	(original)
+++ ./plugin/controllers/utilities.py	(refactored)
@@ -1,6 +1,6 @@
 #!/usr/bin/python
 # -*- coding: utf-8 -*-
-from __future__ import print_function
+
 import re
 import six
 import sys
@@ -283,7 +283,7 @@
 		if k in list(request.args.keys()):
 			return six.ensure_str(request.args[k][0])
 	else:
-		if key in request.args.keys():
+		if key in list(request.args.keys()):
 			return request.args[key][0]
 	return default
 
@@ -293,7 +293,7 @@
 		if k in list(args.keys()):
 			return six.ensure_str(args[k][0])
 	else:
-		if key in args.keys():
+		if key in list(args.keys()):
 			return args[key][0]
 	return default
 
--- ./plugin/controllers/web.py	(original)
+++ ./plugin/controllers/web.py	(refactored)
@@ -21,7 +21,7 @@
 # Inc., 51 Franklin Street, Fifth Floor, Boston MA 02110-1301, USA.
 ##########################################################################
 
-from __future__ import absolute_import, division
+
 from Components.config import config as comp_config
 from .models.info import getInfo, getCurrentTime, getStatusInfo, getFrontendStatus, testPipStatus
 from .models.services import getCurrentService, getBouquets, getServices, getSubServices, getSatellites, getBouquetEpg, getBouquetNowNextEpg, getServicesNowNextEpg, getSearchEpg, getChannelEpg, getNowNextEpg, getSearchSimilarEpg, getAllServices, getPlayableServices, getPlayableService, getParentalControlList, getEvent, loadEpg, saveEpg
--- ./plugin/controllers/models/config.py	(original)
+++ ./plugin/controllers/models/config.py	(refactored)
@@ -21,7 +21,7 @@
 # Inc., 51 Franklin Street, Fifth Floor, Boston MA 02110-1301, USA.
 ##########################################################################
 
-from __future__ import print_function
+
 from enigma import eEnv
 from Components.SystemInfo import SystemInfo
 from Components.config import config
--- ./plugin/controllers/models/control.py	(original)
+++ ./plugin/controllers/models/control.py	(refactored)
@@ -21,7 +21,7 @@
 # Inc., 51 Franklin Street, Fifth Floor, Boston MA 02110-1301, USA.
 ##########################################################################
 
-from __future__ import print_function
+
 from Components.config import config
 from enigma import eServiceReference, eActionMap, eServiceCenter
 from Plugins.Extensions.OpenWebif.controllers.models.services import getProtection
--- ./plugin/controllers/models/grab.py	(original)
+++ ./plugin/controllers/models/grab.py	(refactored)
@@ -20,7 +20,7 @@
 # Inc., 51 Franklin Street, Fifth Floor, Boston MA 02110-1301, USA.
 ##########################################################################
 
-from __future__ import print_function
+
 from enigma import eConsoleAppContainer
 from Screens.InfoBar import InfoBar
 from twisted.web import resource, server
--- ./plugin/controllers/models/info.py	(original)
+++ ./plugin/controllers/models/info.py	(refactored)
@@ -21,7 +21,7 @@
 # Inc., 51 Franklin Street, Fifth Floor, Boston MA 02110-1301, USA.
 ##########################################################################
 
-from __future__ import print_function
+
 import os
 import six
 import sys
@@ -747,7 +747,7 @@
 		if six.PY2:
 			desc = desc.decode('utf-8')
 		if len(desc) > 220:
-			desc = desc + u"..."
+			desc = desc + "..."
 		if six.PY2:
 			desc = desc.encode('utf-8')
 		statusinfo['currservice_description'] = desc
--- ./plugin/controllers/models/movies.py	(original)
+++ ./plugin/controllers/models/movies.py	(refactored)
@@ -21,7 +21,7 @@
 # Inc., 51 Franklin Street, Fifth Floor, Boston MA 02110-1301, USA.
 ##########################################################################
 
-from __future__ import print_function
+
 import os
 import struct
 import six
--- ./plugin/controllers/models/owibranding.py	(original)
+++ ./plugin/controllers/models/owibranding.py	(refactored)
@@ -28,6 +28,7 @@
 import os
 import hashlib
 import re
+from functools import reduce
 
 try:
 	from Components.About import about
@@ -63,7 +64,7 @@
 
 
 def bin2long(s):
-	return reduce(lambda x, y: (x << 8) + y, map(ord, s))
+	return reduce(lambda x, y: (x << 8) + y, list(map(ord, s)))
 
 
 def long2bin(l):
--- ./plugin/controllers/models/services.py	(original)
+++ ./plugin/controllers/models/services.py	(refactored)
@@ -21,7 +21,7 @@
 # Inc., 51 Franklin Street, Fifth Floor, Boston MA 02110-1301, USA.
 ##########################################################################
 
-from __future__ import print_function
+
 import re
 import unicodedata
 import six
@@ -81,9 +81,9 @@
 	if val is not None:
 		if encode is True:
 			if PY3:
-				return html_escape(val, quote=True).replace(u'\x8a', '\n')
+				return html_escape(val, quote=True).replace('\x8a', '\n')
 			else:
-				return html_escape(six.text_type(val, 'utf_8', errors='ignore').encode('utf_8', 'ignore'), quote=True).replace(u'\x8a', '\n')
+				return html_escape(six.text_type(val, 'utf_8', errors='ignore').encode('utf_8', 'ignore'), quote=True).replace('\x8a', '\n')
 		else:
 			# remove control chars
 			val = removeBadChars(six.ensure_binary(val))
--- ./plugin/controllers/models/timers.py	(original)
+++ ./plugin/controllers/models/timers.py	(refactored)
@@ -21,7 +21,7 @@
 # Inc., 51 Franklin Street, Fifth Floor, Boston MA 02110-1301, USA.
 ##########################################################################
 
-from __future__ import print_function
+
 import six
 from enigma import eEPGCache, eServiceReference
 from Components.UsageConfig import preferredTimerPath, preferredInstantRecordPath
--- ./plugin/controllers/views/index.py	(original)
+++ ./plugin/controllers/views/index.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -82,7 +83,7 @@
         ########################################
         ## START - generated method body
         
-        write(u"""<div id='spinner'><div class='fa fa-spinner fa-spin'></div></div>
+        write("""<div id='spinner'><div class='fa fa-spinner fa-spin'></div></div>
 """)
         
         ########################################
--- ./plugin/controllers/views/main.py	(original)
+++ ./plugin/controllers/views/main.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -61,7 +62,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -72,7 +73,7 @@
 
         ## CHEETAH: generated from #def menu($title, $name, $content) at line 7, col 1.
         trans = KWS.get("trans")
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -85,40 +86,40 @@
         ########################################
         ## START - generated method body
         
-        write(u'''<div class="some-leftmenu-main">
+        write('''<div class="some-leftmenu-main">
 ''')
         caret = "s"
         style_val = "display: initial"
         if VFFSL(SL,"name",True) in VFFSL(SL,"collapsed",True): # generated from line 11, col 2
             caret = "w"
             style_val = "display: none"
-        write(u'''\t<div class="some-leftmenu-top ui-widget-header" onclick="toggleMenu(\'''')
+        write('''\t<div class="some-leftmenu-top ui-widget-header" onclick="toggleMenu(\'''')
         _v = VFFSL(SL,"name",True) # u'$name' on line 15, col 71
-        if _v is not None: write(_filter(_v, rawExpr=u'$name')) # from line 15, col 71.
-        write(u'''\');">
+        if _v is not None: write(_filter(_v, rawExpr='$name')) # from line 15, col 71.
+        write('''\');">
 \t\t''')
         _v = VFFSL(SL,"title",True) # u'$title' on line 16, col 3
-        if _v is not None: write(_filter(_v, rawExpr=u'$title')) # from line 16, col 3.
-        write(u'''
+        if _v is not None: write(_filter(_v, rawExpr='$title')) # from line 16, col 3.
+        write('''
 \t\t<div id="leftmenu_expander_''')
         _v = VFFSL(SL,"name",True) # u'$name' on line 17, col 30
-        if _v is not None: write(_filter(_v, rawExpr=u'$name')) # from line 17, col 30.
-        write(u'''" class="ui-selectmenu-icon ui-icon ui-icon-caret-1-''')
+        if _v is not None: write(_filter(_v, rawExpr='$name')) # from line 17, col 30.
+        write('''" class="ui-selectmenu-icon ui-icon ui-icon-caret-1-''')
         _v = VFFSL(SL,"caret",True) # u'$caret' on line 17, col 87
-        if _v is not None: write(_filter(_v, rawExpr=u'$caret')) # from line 17, col 87.
-        write(u'''"></div>
+        if _v is not None: write(_filter(_v, rawExpr='$caret')) # from line 17, col 87.
+        write('''"></div>
 \t</div>
 \t<div id="leftmenu_container_''')
         _v = VFFSL(SL,"name",True) # u'$name' on line 19, col 30
-        if _v is not None: write(_filter(_v, rawExpr=u'$name')) # from line 19, col 30.
-        write(u'''" style="''')
+        if _v is not None: write(_filter(_v, rawExpr='$name')) # from line 19, col 30.
+        write('''" style="''')
         _v = VFFSL(SL,"style_val",True) # u'$style_val' on line 19, col 44
-        if _v is not None: write(_filter(_v, rawExpr=u'$style_val')) # from line 19, col 44.
-        write(u'''">
+        if _v is not None: write(_filter(_v, rawExpr='$style_val')) # from line 19, col 44.
+        write('''">
 \t''')
         _v = VFFSL(SL,"content",True) # u'$content' on line 20, col 2
-        if _v is not None: write(_filter(_v, rawExpr=u'$content')) # from line 20, col 2.
-        write(u'''
+        if _v is not None: write(_filter(_v, rawExpr='$content')) # from line 20, col 2.
+        write('''
 \t</div>
 </div>
 ''')
@@ -135,7 +136,7 @@
 
         ## CHEETAH: generated from #def mainMenu at line 24, col 1.
         trans = KWS.get("trans")
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -148,31 +149,31 @@
         ########################################
         ## START - generated method body
         
-        write(u'''<ul>
+        write('''<ul>
 \t<li><a class="lmc" href="ajax/tv">''')
         _v = VFFSL(SL,"tstrings",True)['television'] # u"$tstrings['television']" on line 26, col 36
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['television']")) # from line 26, col 36.
-        write(u'''</a></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['television']")) # from line 26, col 36.
+        write('''</a></li>
 \t<li><a class="lmc" href="ajax/radio">''')
         _v = VFFSL(SL,"tstrings",True)['radio'] # u"$tstrings['radio']" on line 27, col 39
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['radio']")) # from line 27, col 39.
-        write(u'''</a></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['radio']")) # from line 27, col 39.
+        write('''</a></li>
 \t<li><a class="lmc spin" href="ajax/movies">''')
         _v = VFFSL(SL,"tstrings",True)['movies'] # u"$tstrings['movies']" on line 28, col 45
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['movies']")) # from line 28, col 45.
-        write(u'''</a></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['movies']")) # from line 28, col 45.
+        write('''</a></li>
 \t<li><a class="lmc" href="ajax/timers">''')
         _v = VFFSL(SL,"tstrings",True)['timers'] # u"$tstrings['timers']" on line 29, col 40
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['timers']")) # from line 29, col 40.
-        write(u'''</a></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['timers']")) # from line 29, col 40.
+        write('''</a></li>
 ''')
         if VFFSL(SL,"webtv",True): # generated from line 30, col 2
-            write(u'''\t<li><a class="lmc" href="ajax/webtv">''')
+            write('''\t<li><a class="lmc" href="ajax/webtv">''')
             _v = VFFSL(SL,"tstrings",True)['webtv'] # u"$tstrings['webtv']" on line 31, col 39
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['webtv']")) # from line 31, col 39.
-            write(u'''</a></li>
-''')
-        write(u'''</ul>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['webtv']")) # from line 31, col 39.
+            write('''</a></li>
+''')
+        write('''</ul>
 ''')
         
         ########################################
@@ -187,7 +188,7 @@
 
         ## CHEETAH: generated from #def searchMenu at line 35, col 1.
         trans = KWS.get("trans")
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -201,23 +202,23 @@
         ## START - generated method body
         
         if VFFSL(SL,"epgsearchcaps",True): # generated from line 36, col 1
-            write(u'''<ul>
+            write('''<ul>
 \t<li><input type="checkbox" name="epgsearchtype" />''')
             _v = VFFSL(SL,"tstrings",True)['epgsearchextended'] # u"$tstrings['epgsearchextended']" on line 38, col 52
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['epgsearchextended']")) # from line 38, col 52.
-            write(u'''</li>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['epgsearchextended']")) # from line 38, col 52.
+            write('''</li>
 \t<li><input type="checkbox" name="epgsearchbouquetsonly" />''')
             _v = VFFSL(SL,"tstrings",True)['epgsearchbouquetsonly'] # u"$tstrings['epgsearchbouquetsonly']" on line 39, col 60
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['epgsearchbouquetsonly']")) # from line 39, col 60.
-            write(u'''</li>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['epgsearchbouquetsonly']")) # from line 39, col 60.
+            write('''</li>
 </ul>
 ''')
-        write(u'''<form action="" onSubmit="open_epg_search_dialog(); return false;">
+        write('''<form action="" onSubmit="open_epg_search_dialog(); return false;">
 \t<div style="width:100%; text-align:center; padding-top:5px;"><input type="text" id="epgSearch" size="14" /></div>
 \t<div style="width:100%; text-align:center;padding-top:5px; padding-bottom:7px;" class="epgsearch"><button>''')
         _v = VFFSL(SL,"tstrings",True)['search'] # u"$tstrings['search']" on line 44, col 108
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['search']")) # from line 44, col 108.
-        write(u'''</button></div>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['search']")) # from line 44, col 108.
+        write('''</button></div>
 </form>
 ''')
         
@@ -233,7 +234,7 @@
 
         ## CHEETAH: generated from #def remoteMenu at line 47, col 1.
         trans = KWS.get("trans")
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -246,32 +247,32 @@
         ########################################
         ## START - generated method body
         
-        write(u'''<div style="width:100%; text-align:center;">
+        write('''<div style="width:100%; text-align:center;">
 \t\t<ul>
 \t\t<li style="margin-bottom:5px;margin-top:5px;">
 \t\t<div class="tbl"><div>
 \t\t<div><a class="fbb" href=\'#\' title=''')
         _v = VFN(VFFSL(SL,"tstrings",True)['powercontrol'],"replace",False)(" ","&nbsp;") # u'$tstrings[\'powercontrol\'].replace(" ","&nbsp;")' on line 52, col 38
-        if _v is not None: write(_filter(_v, rawExpr=u'$tstrings[\'powercontrol\'].replace(" ","&nbsp;")')) # from line 52, col 38.
-        write(u''' onclick="load_dm(\'ajax/powerstate\',\'''')
+        if _v is not None: write(_filter(_v, rawExpr='$tstrings[\'powercontrol\'].replace(" ","&nbsp;")')) # from line 52, col 38.
+        write(''' onclick="load_dm(\'ajax/powerstate\',\'''')
         _v = VFFSL(SL,"tstrings",True)["powercontrol"] # u'$tstrings["powercontrol"]' on line 52, col 122
-        if _v is not None: write(_filter(_v, rawExpr=u'$tstrings["powercontrol"]')) # from line 52, col 122.
-        write(u'''\');this.blur();return false;"><i class="fa fa-power-off" aria-hidden="true"></i></a></div>
+        if _v is not None: write(_filter(_v, rawExpr='$tstrings["powercontrol"]')) # from line 52, col 122.
+        write('''\');this.blur();return false;"><i class="fa fa-power-off" aria-hidden="true"></i></a></div>
 \t<!--<div><a class="lmc fbb" href="ajax/screenshot" title=''')
         _v = VFN(VFFSL(SL,"tstrings",True)['grabscreenshot'],"replace",False)(" ","&nbsp;") # u'$tstrings[\'grabscreenshot\'].replace(" ","&nbsp;")' on line 53, col 59
-        if _v is not None: write(_filter(_v, rawExpr=u'$tstrings[\'grabscreenshot\'].replace(" ","&nbsp;")')) # from line 53, col 59.
-        write(u'''><i class="fa fa-camera-retro" aria-hidden="true"></i></a></div> -->
+        if _v is not None: write(_filter(_v, rawExpr='$tstrings[\'grabscreenshot\'].replace(" ","&nbsp;")')) # from line 53, col 59.
+        write('''><i class="fa fa-camera-retro" aria-hidden="true"></i></a></div> -->
 \t\t<div><a class="fbb" href=\'#\' title=''')
         _v = VFN(VFFSL(SL,"tstrings",True)['sendamessage'],"replace",False)(" ","&nbsp;") # u'$tstrings[\'sendamessage\'].replace(" ","&nbsp;")' on line 54, col 38
-        if _v is not None: write(_filter(_v, rawExpr=u'$tstrings[\'sendamessage\'].replace(" ","&nbsp;")')) # from line 54, col 38.
-        write(u''' onclick="load_message_dm(\'ajax/message\',\'''')
+        if _v is not None: write(_filter(_v, rawExpr='$tstrings[\'sendamessage\'].replace(" ","&nbsp;")')) # from line 54, col 38.
+        write(''' onclick="load_message_dm(\'ajax/message\',\'''')
         _v = VFFSL(SL,"tstrings",True)["sendamessage"] # u'$tstrings["sendamessage"]' on line 54, col 127
-        if _v is not None: write(_filter(_v, rawExpr=u'$tstrings["sendamessage"]')) # from line 54, col 127.
-        write(u'''\');this.blur();return false;"><i class="fa fa-envelope-o" aria-hidden="true"></i></a></div>
+        if _v is not None: write(_filter(_v, rawExpr='$tstrings["sendamessage"]')) # from line 54, col 127.
+        write('''\');this.blur();return false;"><i class="fa fa-envelope-o" aria-hidden="true"></i></a></div>
 \t\t<div><a class="fbb" href=\'#\' title=''')
         _v = VFN(VFFSL(SL,"tstrings",True)['showfullremote'],"replace",False)(" ","&nbsp;") # u'$tstrings[\'showfullremote\'].replace(" ","&nbsp;")' on line 55, col 38
-        if _v is not None: write(_filter(_v, rawExpr=u'$tstrings[\'showfullremote\'].replace(" ","&nbsp;")')) # from line 55, col 38.
-        write(u''' onclick="toggleFullRemote();return false;"><i class="fa fa-expand" aria-hidden="true"></i></a></div>
+        if _v is not None: write(_filter(_v, rawExpr='$tstrings[\'showfullremote\'].replace(" ","&nbsp;")')) # from line 55, col 38.
+        write(''' onclick="toggleFullRemote();return false;"><i class="fa fa-expand" aria-hidden="true"></i></a></div>
 \t\t</div></div>
 \t\t</li>
 \t\t</ul>
@@ -303,21 +304,21 @@
 \t<div class="help">
 \t\t''')
         _v = VFFSL(SL,"tstrings",True)['shiftforlong'] # u"$tstrings['shiftforlong']" on line 85, col 3
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['shiftforlong']")) # from line 85, col 3.
-        write(u'''
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['shiftforlong']")) # from line 85, col 3.
+        write('''
 \t</div>
 \t<ul>
 \t\t<li style="margin-bottom:5px;margin-top:5px;">
 \t\t\t<input type="checkbox" class="remotegrabscreen" name="remotegrabscreen1" /><span style="cursor:pointer;" title="''')
         _v = VFFSL(SL,"tstrings",True)['titscreenshot'] # u"$tstrings['titscreenshot']" on line 89, col 116
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['titscreenshot']")) # from line 89, col 116.
-        write(u''' ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['titscreenshot']")) # from line 89, col 116.
+        write(''' ''')
         _v = VFFSL(SL,"tstrings",True)['grabscreenshot'] # u"$tstrings['grabscreenshot']" on line 89, col 143
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['grabscreenshot']")) # from line 89, col 143.
-        write(u'''" onclick="load_maincontent(\'ajax/screenshot\');return false;">''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['grabscreenshot']")) # from line 89, col 143.
+        write('''" onclick="load_maincontent(\'ajax/screenshot\');return false;">''')
         _v = VFFSL(SL,"tstrings",True)['grabscreenshot'] # u"$tstrings['grabscreenshot']" on line 89, col 232
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['grabscreenshot']")) # from line 89, col 232.
-        write(u'''</span>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['grabscreenshot']")) # from line 89, col 232.
+        write('''</span>
 \t\t</li>
 \t</ul>
 \t<div class="volslider" style="display:table-row;margin-bottom:15px">
@@ -346,7 +347,7 @@
 
         ## CHEETAH: generated from #def extrasMenu at line 105, col 1.
         trans = KWS.get("trans")
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -359,43 +360,43 @@
         ########################################
         ## START - generated method body
         
-        write(u'''<ul>
+        write('''<ul>
 \t<li><a class="lmc" href="ajax/boxinfo">''')
         _v = VFFSL(SL,"tstrings",True)["box_info"] # u'$tstrings["box_info"]' on line 107, col 41
-        if _v is not None: write(_filter(_v, rawExpr=u'$tstrings["box_info"]')) # from line 107, col 41.
-        write(u'''</a></li>
+        if _v is not None: write(_filter(_v, rawExpr='$tstrings["box_info"]')) # from line 107, col 41.
+        write('''</a></li>
 ''')
         for extra in VFFSL(SL,"extras",True): # generated from line 108, col 2
             target_url = VFFSL(SL,"extra",True)["key"];
             if 'nw' in VFFSL(SL,"extra",True): # generated from line 110, col 3
                 if VFFSL(SL,"extra",True)["nw"] == "1": # generated from line 111, col 4
-                    write(u'''\t\t\t<li><a href="''')
+                    write('''\t\t\t<li><a href="''')
                     _v = VFFSL(SL,"target_url",True) # u'$target_url' on line 112, col 17
-                    if _v is not None: write(_filter(_v, rawExpr=u'$target_url')) # from line 112, col 17.
-                    write(u'''" target=\'_blank\'>''')
+                    if _v is not None: write(_filter(_v, rawExpr='$target_url')) # from line 112, col 17.
+                    write('''" target=\'_blank\'>''')
                     _v = VFFSL(SL,"extra",True)["description"] # u'$extra["description"]' on line 112, col 46
-                    if _v is not None: write(_filter(_v, rawExpr=u'$extra["description"]')) # from line 112, col 46.
-                    write(u'''</a></li>
+                    if _v is not None: write(_filter(_v, rawExpr='$extra["description"]')) # from line 112, col 46.
+                    write('''</a></li>
 ''')
                 else: # generated from line 113, col 4
-                    write(u'''\t\t\t<li><a class="lmc pop" href="''')
+                    write('''\t\t\t<li><a class="lmc pop" href="''')
                     _v = VFFSL(SL,"target_url",True) # u'$target_url' on line 114, col 33
-                    if _v is not None: write(_filter(_v, rawExpr=u'$target_url')) # from line 114, col 33.
-                    write(u'''">''')
+                    if _v is not None: write(_filter(_v, rawExpr='$target_url')) # from line 114, col 33.
+                    write('''">''')
                     _v = VFFSL(SL,"extra",True)["description"] # u'$extra["description"]' on line 114, col 46
-                    if _v is not None: write(_filter(_v, rawExpr=u'$extra["description"]')) # from line 114, col 46.
-                    write(u'''</a></li>
+                    if _v is not None: write(_filter(_v, rawExpr='$extra["description"]')) # from line 114, col 46.
+                    write('''</a></li>
 ''')
             else: # generated from line 116, col 3
-                write(u'''\t\t\t<li><a class="lmc" href="''')
+                write('''\t\t\t<li><a class="lmc" href="''')
                 _v = VFFSL(SL,"target_url",True) # u'$target_url' on line 117, col 29
-                if _v is not None: write(_filter(_v, rawExpr=u'$target_url')) # from line 117, col 29.
-                write(u'''">''')
+                if _v is not None: write(_filter(_v, rawExpr='$target_url')) # from line 117, col 29.
+                write('''">''')
                 _v = VFFSL(SL,"extra",True)["description"] # u'$extra["description"]' on line 117, col 42
-                if _v is not None: write(_filter(_v, rawExpr=u'$extra["description"]')) # from line 117, col 42.
-                write(u'''</a></li>
-''')
-        write(u'''</ul>
+                if _v is not None: write(_filter(_v, rawExpr='$extra["description"]')) # from line 117, col 42.
+                write('''</a></li>
+''')
+        write('''</ul>
 ''')
         
         ########################################
@@ -409,7 +410,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -425,7 +426,7 @@
         t = "original"
         if VFFSL(SL,"varExists",False)('theme'): # generated from line 4, col 1
             t = VFFSL(SL,"theme",True)
-        write(u'''<!doctype html>
+        write('''<!doctype html>
 <html>
 <head>
 \t<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
@@ -435,21 +436,21 @@
 ''')
         if VFFSL(SL,"t",True) not in ["original", "clear"]: # generated from line 129, col 2
             theme_css = VFFSL(SL,"t",True) + '.css'
-            write(u'''\t\t<link type="text/css" rel="stylesheet" href="themes/''')
+            write('''\t\t<link type="text/css" rel="stylesheet" href="themes/''')
             _v = VFFSL(SL,"theme_css",True) # u'$theme_css' on line 131, col 55
-            if _v is not None: write(_filter(_v, rawExpr=u'$theme_css')) # from line 131, col 55.
-            write(u'''">
-''')
-        write(u'''\t<link type="text/css" href="css/style.min.css" rel="stylesheet"/>
+            if _v is not None: write(_filter(_v, rawExpr='$theme_css')) # from line 131, col 55.
+            write('''">
+''')
+        write('''\t<link type="text/css" href="css/style.min.css" rel="stylesheet"/>
 ''')
         if VFFSL(SL,"t",True) == "original": # generated from line 134, col 2
-            write(u'''\t\t<link type="text/css" href="css/theme_original.css" rel="stylesheet"/>
-''')
-        write(u'''\t<link type="text/css" href="web/css" rel="stylesheet"/>
+            write('''\t\t<link type="text/css" href="css/theme_original.css" rel="stylesheet"/>
+''')
+        write('''\t<link type="text/css" href="web/css" rel="stylesheet"/>
 \t<title>''')
         _v = VFFSL(SL,"boxname",True) # u'$boxname' on line 138, col 9
-        if _v is not None: write(_filter(_v, rawExpr=u'$boxname')) # from line 138, col 9.
-        write(u''' - OpenWebif</title>
+        if _v is not None: write(_filter(_v, rawExpr='$boxname')) # from line 138, col 9.
+        write(''' - OpenWebif</title>
 </head>
 ''')
         body_classes = [VFFSL(SL,"t",True)]
@@ -458,28 +459,28 @@
         if VFFSL(SL,"t",True) in ["excite-bike", "pepper-grinder"]: # generated from line 144, col 1
             body_classes += ["ui-state-hover"]
         body_css_class = ' '.join(VFFSL(SL,"body_classes",True))
-        write(u'''<body class="''')
+        write('''<body class="''')
         _v = VFFSL(SL,"body_css_class",True) # u'$body_css_class' on line 148, col 14
-        if _v is not None: write(_filter(_v, rawExpr=u'$body_css_class')) # from line 148, col 14.
-        write(u'''">
+        if _v is not None: write(_filter(_v, rawExpr='$body_css_class')) # from line 148, col 14.
+        write('''">
 \t<div id="container">
 \t\t<div id="header">
 \t\t\t<h1><a href="/">Open<span class="ui-state-active">Webif</span></a></h1>
 ''')
         if not VFFSL(SL,"showname",True): # generated from line 152, col 4
             boxname = VFFSL(SL,"tstrings",True)['box_info']
-        write(u'''\t\t\t<h2>''')
+        write('''\t\t\t<h2>''')
         _v = VFFSL(SL,"tstrings",True)['openwebif_header'] # u"$tstrings['openwebif_header']" on line 155, col 8
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['openwebif_header']")) # from line 155, col 8.
-        write(u'''<br/><span class="ui-state-active" onclick="load_maincontent(\'ajax/boxinfo\'); return false">''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['openwebif_header']")) # from line 155, col 8.
+        write('''<br/><span class="ui-state-active" onclick="load_maincontent(\'ajax/boxinfo\'); return false">''')
         _v = VFFSL(SL,"boxname",True) # u'$boxname' on line 155, col 129
-        if _v is not None: write(_filter(_v, rawExpr=u'$boxname')) # from line 155, col 129.
-        write(u'''</span></h2>
+        if _v is not None: write(_filter(_v, rawExpr='$boxname')) # from line 155, col 129.
+        write('''</span></h2>
 \t\t\t<div id="statusheader">
 \t\t\t\t<div id="osd">''')
         _v = VFFSL(SL,"tstrings",True)['nothing_play'] # u"$tstrings['nothing_play']" on line 157, col 19
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['nothing_play']")) # from line 157, col 19.
-        write(u'''</div>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['nothing_play']")) # from line 157, col 19.
+        write('''</div>
 \t\t\t\t<div id="osd_status"></div>
 \t\t\t\t<div id="osd_bottom"></div>
 \t\t\t</div>
@@ -489,54 +490,54 @@
 \t\t\t<div id="menucontainer">
 \t\t\t\t''')
         _v = VFFSL(SL,"menu",False)(VFFSL(SL,"tstrings",True)['main'], "main", VFFSL(SL,"mainMenu",True)) # u'$menu($tstrings[\'main\'], "main", $mainMenu)' on line 165, col 5
-        if _v is not None: write(_filter(_v, rawExpr=u'$menu($tstrings[\'main\'], "main", $mainMenu)')) # from line 165, col 5.
-        write(u'''
+        if _v is not None: write(_filter(_v, rawExpr='$menu($tstrings[\'main\'], "main", $mainMenu)')) # from line 165, col 5.
+        write('''
 \t\t\t\t''')
         _v = VFFSL(SL,"menu",False)(VFFSL(SL,"tstrings",True)['remote'], "remote", VFFSL(SL,"remoteMenu",True)) # u'$menu($tstrings[\'remote\'], "remote", $remoteMenu)' on line 166, col 5
-        if _v is not None: write(_filter(_v, rawExpr=u'$menu($tstrings[\'remote\'], "remote", $remoteMenu)')) # from line 166, col 5.
-        write(u'''
+        if _v is not None: write(_filter(_v, rawExpr='$menu($tstrings[\'remote\'], "remote", $remoteMenu)')) # from line 166, col 5.
+        write('''
 \t\t\t\t''')
         _v = VFFSL(SL,"menu",False)(VFFSL(SL,"tstrings",True)['extras'], "extras", VFFSL(SL,"extrasMenu",True)) # u'$menu($tstrings[\'extras\'], "extras", $extrasMenu)' on line 167, col 5
-        if _v is not None: write(_filter(_v, rawExpr=u'$menu($tstrings[\'extras\'], "extras", $extrasMenu)')) # from line 167, col 5.
-        write(u'''
+        if _v is not None: write(_filter(_v, rawExpr='$menu($tstrings[\'extras\'], "extras", $extrasMenu)')) # from line 167, col 5.
+        write('''
 \t\t\t\t''')
         _v = VFFSL(SL,"menu",False)(VFFSL(SL,"tstrings",True)['epgsearch'], "search", VFFSL(SL,"searchMenu",True)) # u'$menu($tstrings[\'epgsearch\'], "search", $searchMenu)' on line 168, col 5
-        if _v is not None: write(_filter(_v, rawExpr=u'$menu($tstrings[\'epgsearch\'], "search", $searchMenu)')) # from line 168, col 5.
-        write(u'''
+        if _v is not None: write(_filter(_v, rawExpr='$menu($tstrings[\'epgsearch\'], "search", $searchMenu)')) # from line 168, col 5.
+        write('''
 \t\t\t</div>
 
 \t\t\t<div id="remotecontainer" style="display: none;">
 \t\t\t\t<div class="some-leftmenu-main">
 \t\t\t\t\t<div class="some-leftmenu-top ui-widget-header">''')
         _v = VFFSL(SL,"tstrings",True)['remote'] # u"$tstrings['remote']" on line 173, col 54
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['remote']")) # from line 173, col 54.
-        write(u'''</div>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['remote']")) # from line 173, col 54.
+        write('''</div>
 \t\t\t\t\t<div style="width:100%; text-align:center;">
 \t\t\t\t\t\t<ul>
 \t\t\t\t\t\t\t<li style="margin-bottom:5px;">
 \t\t\t\t\t\t\t\t<div class="tbl"><div>
 \t\t\t\t\t\t\t\t<div><a class="fbb" href=\'#\' title=''')
         _v = VFN(VFFSL(SL,"tstrings",True)['powercontrol'],"replace",False)(" ","&nbsp;") # u'$tstrings[\'powercontrol\'].replace(" ","&nbsp;")' on line 178, col 44
-        if _v is not None: write(_filter(_v, rawExpr=u'$tstrings[\'powercontrol\'].replace(" ","&nbsp;")')) # from line 178, col 44.
-        write(u''' onclick="load_dm(\'ajax/powerstate\',\'''')
+        if _v is not None: write(_filter(_v, rawExpr='$tstrings[\'powercontrol\'].replace(" ","&nbsp;")')) # from line 178, col 44.
+        write(''' onclick="load_dm(\'ajax/powerstate\',\'''')
         _v = VFFSL(SL,"tstrings",True)["powercontrol"] # u'$tstrings["powercontrol"]' on line 178, col 128
-        if _v is not None: write(_filter(_v, rawExpr=u'$tstrings["powercontrol"]')) # from line 178, col 128.
-        write(u'''\');this.blur();return false;"><i class="fa fa-power-off" aria-hidden="true"></i></a></div>
+        if _v is not None: write(_filter(_v, rawExpr='$tstrings["powercontrol"]')) # from line 178, col 128.
+        write('''\');this.blur();return false;"><i class="fa fa-power-off" aria-hidden="true"></i></a></div>
 \t\t\t\t\t\t\t<!--<div><a class="fbb" href=\'#\' title=''')
         _v = VFN(VFFSL(SL,"tstrings",True)['grabscreenshot'],"replace",False)(" ","&nbsp;") # u'$tstrings[\'grabscreenshot\'].replace(" ","&nbsp;")' on line 179, col 47
-        if _v is not None: write(_filter(_v, rawExpr=u'$tstrings[\'grabscreenshot\'].replace(" ","&nbsp;")')) # from line 179, col 47.
-        write(u''' onclick="load_maincontent(\'ajax/screenshot\');return false;"><i class="fa fa-camera-retro" aria-hidden="true"></i></a></div> -->
+        if _v is not None: write(_filter(_v, rawExpr='$tstrings[\'grabscreenshot\'].replace(" ","&nbsp;")')) # from line 179, col 47.
+        write(''' onclick="load_maincontent(\'ajax/screenshot\');return false;"><i class="fa fa-camera-retro" aria-hidden="true"></i></a></div> -->
 \t\t\t\t\t\t\t\t<div><a class="fbb" href=\'#\' title=''')
         _v = VFN(VFFSL(SL,"tstrings",True)['sendamessage'],"replace",False)(" ","&nbsp;") # u'$tstrings[\'sendamessage\'].replace(" ","&nbsp;")' on line 180, col 44
-        if _v is not None: write(_filter(_v, rawExpr=u'$tstrings[\'sendamessage\'].replace(" ","&nbsp;")')) # from line 180, col 44.
-        write(u''' onclick="load_message_dm(\'ajax/message\',\'''')
+        if _v is not None: write(_filter(_v, rawExpr='$tstrings[\'sendamessage\'].replace(" ","&nbsp;")')) # from line 180, col 44.
+        write(''' onclick="load_message_dm(\'ajax/message\',\'''')
         _v = VFFSL(SL,"tstrings",True)["sendamessage"] # u'$tstrings["sendamessage"]' on line 180, col 133
-        if _v is not None: write(_filter(_v, rawExpr=u'$tstrings["sendamessage"]')) # from line 180, col 133.
-        write(u'''\');this.blur();return false;"><i class="fa fa-envelope-o" aria-hidden="true"></i></a></div>
+        if _v is not None: write(_filter(_v, rawExpr='$tstrings["sendamessage"]')) # from line 180, col 133.
+        write('''\');this.blur();return false;"><i class="fa fa-envelope-o" aria-hidden="true"></i></a></div>
 \t\t\t\t\t\t\t\t<div><a class="fbb" href=\'#\' title=''')
         _v = VFN(VFFSL(SL,"tstrings",True)['hidefullremote'],"replace",False)(" ","&nbsp;") # u'$tstrings[\'hidefullremote\'].replace(" ","&nbsp;")' on line 181, col 44
-        if _v is not None: write(_filter(_v, rawExpr=u'$tstrings[\'hidefullremote\'].replace(" ","&nbsp;")')) # from line 181, col 44.
-        write(u''' onclick="toggleFullRemote();return false;"><i class="fa fa-compress" aria-hidden="true"></i></a></div>
+        if _v is not None: write(_filter(_v, rawExpr='$tstrings[\'hidefullremote\'].replace(" ","&nbsp;")')) # from line 181, col 44.
+        write(''' onclick="toggleFullRemote();return false;"><i class="fa fa-compress" aria-hidden="true"></i></a></div>
 \t\t\t\t\t\t\t\t</div></div>
 \t\t\t\t\t\t\t</li>
 \t\t\t\t\t\t</ul>
@@ -545,18 +546,18 @@
 \t\t\t\t\t\t<div class="help">
 \t\t\t\t\t\t\t''')
         _v = VFFSL(SL,"tstrings",True)['shiftforlong'] # u"$tstrings['shiftforlong']" on line 188, col 8
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['shiftforlong']")) # from line 188, col 8.
-        write(u'''
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['shiftforlong']")) # from line 188, col 8.
+        write('''
 \t\t\t\t\t\t</div>
 \t\t\t\t\t\t<ul>
 \t\t\t\t\t\t\t<li style="margin-bottom:5px;">
 \t\t\t\t\t\t\t<input type="checkbox" class="remotegrabscreen" name="remotegrabscreen2" /><span style="cursor:pointer;" title="Enable/Disable Screenhot on key press or ''')
         _v = VFFSL(SL,"tstrings",True)['grabscreenshot'] # u"$tstrings['grabscreenshot']" on line 192, col 161
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['grabscreenshot']")) # from line 192, col 161.
-        write(u'''" onclick="load_maincontent(\'ajax/screenshot\');return false;">''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['grabscreenshot']")) # from line 192, col 161.
+        write('''" onclick="load_maincontent(\'ajax/screenshot\');return false;">''')
         _v = VFFSL(SL,"tstrings",True)['grabscreenshot'] # u"$tstrings['grabscreenshot']" on line 192, col 250
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['grabscreenshot']")) # from line 192, col 250.
-        write(u'''</span></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['grabscreenshot']")) # from line 192, col 250.
+        write('''</span></li>
 \t\t\t\t\t\t</ul>
 \t\t\t\t\t</div>
 \t\t\t\t</div>
@@ -567,13 +568,13 @@
 \t\t\t<div id="content_container">
 \t\t\t''')
         _v = VFFSL(SL,"content",True) # u'$content' on line 201, col 4
-        if _v is not None: write(_filter(_v, rawExpr=u'$content')) # from line 201, col 4.
-        write(u'''
+        if _v is not None: write(_filter(_v, rawExpr='$content')) # from line 201, col 4.
+        write('''
 \t\t\t</div>
 \t\t\t<div id="footer"><h3>&nbsp;&nbsp;<a href="https://github.com/E2OpenPlugins">E2OpenPlugins</a> | <a href="http://www.opena.tv">openATV</a> | <a href="http://www.vuplus-community.net">Black Hole</a> | <a href="http://www.droidsat.org">OpenDroid</a> | <a href="http://www.egami-image.com">EGAMI</a> | <a href="http://www.hdfreaks.cc">OpenHDF</a> | <a href="https://www.nachtfalke.biz">openNFR</a> | <a href="https://openpli.org">OpenPli</a> | <a href="http://forum.sifteam.eu">Sif</a> | <a href="http://openspa.info">OpenSpa</a> | <a href="http://www.teamblue.tech">teamBlue</a> | <a href="http://www.world-of-satellite.com">OpenViX</a> | <a class="lmc" href="ajax/about">''')
         _v = VFFSL(SL,"tstrings",True)['about'] # u"$tstrings['about']" on line 203, col 673
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['about']")) # from line 203, col 673.
-        write(u'''</a></h3></div>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['about']")) # from line 203, col 673.
+        write('''</a></h3></div>
 \t\t</div>
 \t</div>
 \t<form name="portForm" action="web/stream.m3u" method="GET" target="_blank">
@@ -592,8 +593,8 @@
 \t</div>
 \t<div id="editTimerForm" title="''')
         _v = VFFSL(SL,"tstrings",True)['edit_timer'] # u"$tstrings['edit_timer']" on line 220, col 33
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['edit_timer']")) # from line 220, col 33.
-        write(u'''"></div>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['edit_timer']")) # from line 220, col 33.
+        write('''"></div>
 
 \t<script type="text/javascript" src="js/jquery.min.js"></script>
 \t<script type="text/javascript" src="js/jquery-ui.min.js"></script>
@@ -602,8 +603,8 @@
 \t<script type="text/javascript" src="/js/chosen.1.8.2.min.js"></script>
 \t<script type="text/javascript">initJsTranslation(''')
         _v = VFFSL(SL,"dumps",False)(VFFSL(SL,"tstrings",True)) # u'$dumps($tstrings)' on line 227, col 51
-        if _v is not None: write(_filter(_v, rawExpr=u'$dumps($tstrings)')) # from line 227, col 51.
-        write(u''')</script>
+        if _v is not None: write(_filter(_v, rawExpr='$dumps($tstrings)')) # from line 227, col 51.
+        write(''')</script>
 \t<script type="text/javascript">
 \t\tvar h = window.innerHeight - 210;
 \t\tvar hh = h-70;
@@ -615,8 +616,8 @@
 \t\t$(document).ready(function() {
 \t\t\t$("#remote_container").load("static/remotes/''')
         _v = VFFSL(SL,"remote",True) # u'${remote}' on line 237, col 49
-        if _v is not None: write(_filter(_v, rawExpr=u'${remote}')) # from line 237, col 49.
-        write(u'''.html");
+        if _v is not None: write(_filter(_v, rawExpr='${remote}')) # from line 237, col 49.
+        write('''.html");
 \t\t\tdirectlink();
 \t\t\t$(\'a.lmc\').on("click", function() {
 \t\t\t\tvar target_url = $(this).prop("href");
@@ -634,8 +635,8 @@
 \t\t});
 \t\ttheme = \'''')
         _v = VFFSL(SL,"t",True) # u'$t' on line 253, col 12
-        if _v is not None: write(_filter(_v, rawExpr=u'$t')) # from line 253, col 12.
-        write(u"""';
+        if _v is not None: write(_filter(_v, rawExpr='$t')) # from line 253, col 12.
+        write("""';
 \t\tSetLSValue('TimerListOffset',0);
 \t</script>
 </body>
--- ./plugin/controllers/views/ajax/about.py	(original)
+++ ./plugin/controllers/views/ajax/about.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -60,7 +61,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -70,7 +71,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,24 +84,24 @@
         ########################################
         ## START - generated method body
         
-        write(u'''<div id="content_main" class="ui-widget-content">
+        write('''<div id="content_main" class="ui-widget-content">
 \t<div id="info">
 \t\t<h3 class="ui-widget-header">OpenWebif</h3>
 \t\t<h2>''')
         _v = VFFSL(SL,"tstrings",True)['openwebif_header'] # u"$tstrings['openwebif_header']" on line 5, col 7
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['openwebif_header']")) # from line 5, col 7.
-        write(u'''</h2>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['openwebif_header']")) # from line 5, col 7.
+        write('''</h2>
 \t\t<h1>''')
         _v = VFFSL(SL,"tstrings",True)['version'] # u"$tstrings['version']" on line 6, col 7
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['version']")) # from line 6, col 7.
-        write(u''': ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['version']")) # from line 6, col 7.
+        write(''': ''')
         _v = VFFSL(SL,"info.owiver",True) # u'$info.owiver' on line 6, col 29
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.owiver')) # from line 6, col 29.
-        write(u'''</h1>
+        if _v is not None: write(_filter(_v, rawExpr='$info.owiver')) # from line 6, col 29.
+        write('''</h1>
 \t\t<h2>''')
         _v = VFFSL(SL,"tstrings",True)['site_source'] # u"$tstrings['site_source']" on line 7, col 7
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['site_source']")) # from line 7, col 7.
-        write(u''': <a href=\'https://github.com/E2OpenPlugins/e2openplugin-OpenWebif\'>Github</a></h2>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['site_source']")) # from line 7, col 7.
+        write(''': <a href=\'https://github.com/E2OpenPlugins/e2openplugin-OpenWebif\'>Github</a></h2>
 \t\t<hr/>
 \t\t<img src="images/about.jpg" alt="about" style="display:none;" id="ajpg">
 \t\t<img src="themes/about.png" alt="about" onerror=\'$(this).hide();$("#ajpg").show();\'>
@@ -108,8 +109,8 @@
 \t\t<br/>
 \t\t<h1>''')
         _v = VFFSL(SL,"tstrings",True)['authors'] # u"$tstrings['authors']" on line 13, col 7
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['authors']")) # from line 13, col 7.
-        write(u'''</h1>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['authors']")) # from line 13, col 7.
+        write('''</h1>
 \t\t<div class="info">
 \t\tmeo aka bacicciosat<br/>
 \t\tskaman<br/>
@@ -123,42 +124,42 @@
 \t\t<br/>
 \t\t<h1>''')
         _v = VFFSL(SL,"tstrings",True)['contributors'] # u"$tstrings['contributors']" on line 25, col 7
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['contributors']")) # from line 25, col 7.
-        write(u'''</h1>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['contributors']")) # from line 25, col 7.
+        write('''</h1>
 \t\t<div class="info">
 \t\tArmy (Graphics)<br/>
 \t\tMilo, Cimarast<br/>
 \t\tHSA (''')
         _v = VFFSL(SL,"tstrings",True)['translation_spanish'] # u"$tstrings['translation_spanish']" on line 29, col 8
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['translation_spanish']")) # from line 29, col 8.
-        write(u''')<br/>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['translation_spanish']")) # from line 29, col 8.
+        write(''')<br/>
 \t\t</div>
 \t\t<br/><hr/><br/>
 \t\t<h1>''')
         _v = VFFSL(SL,"tstrings",True)['javalib'] # u"$tstrings['javalib']" on line 32, col 7
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['javalib']")) # from line 32, col 7.
-        write(u'''</h1>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['javalib']")) # from line 32, col 7.
+        write('''</h1>
 \t\t<div class="info">
 \t\t\t<a href=\'http://jqueryui.com/\'>Jquery UI</a>
 \t\t</div>
 \t\t<br/><hr/><br/>
 \t\t<h1>''')
         _v = VFFSL(SL,"tstrings",True)['template_engine'] # u"$tstrings['template_engine']" on line 37, col 7
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['template_engine']")) # from line 37, col 7.
-        write(u'''</h1>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['template_engine']")) # from line 37, col 7.
+        write('''</h1>
 \t\t<div class="info">
 \t\t\t<a href=\'http://www.cheetahtemplate.org/\'>Cheetah</a>
 \t\t</div>
 \t\t<br/><hr/><br/>
 \t\t<h1>''')
         _v = VFFSL(SL,"tstrings",True)['license'] # u"$tstrings['license']" on line 42, col 7
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['license']")) # from line 42, col 7.
-        write(u'''</h1>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['license']")) # from line 42, col 7.
+        write('''</h1>
 \t\t<pre class="info" style="white-space: pre-wrap; margin: 0 100px;">
 \t\t''')
         _v = VFFSL(SL,"tstrings",True)['license_text'] # u"$tstrings['license_text']" on line 44, col 3
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['license_text']")) # from line 44, col 3.
-        write(u'''
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['license_text']")) # from line 44, col 3.
+        write('''
 \t\t</pre>
 \t</div>
 </div>
--- ./plugin/controllers/views/ajax/at.py	(original)
+++ ./plugin/controllers/views/ajax/at.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -60,7 +61,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -70,7 +71,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -84,13 +85,13 @@
         ## START - generated method body
         
         _orig_filter_35972456 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<style>
+        write('''<style>
 optgroup{font-weight:bolder;}
 fieldset > label{-webkit-margin-top-collapse: separate;margin-top: .5em;margin-bottom: 1em;display: inline-block;}
 input#to,input#from,.text.number {width:60px;}
@@ -103,8 +104,8 @@
 \t\t\t<div style="display:table-cell;width:200px;vertical-align:top;">
 \t\t\t\t<h3 class="ui-widget-header">''')
         _v = VFFSL(SL,"tstrings",True)['at_list'] # u"$tstrings['at_list']" on line 16, col 34
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_list']")) # from line 16, col 34.
-        write(u'''</h3>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_list']")) # from line 16, col 34.
+        write('''</h3>
 \t\t\t\t<div style="overflow:auto;max-height:600px;">
 \t\t\t\t<ol class="sellist" id="atlist">
 \t\t\t\t</ol>
@@ -115,159 +116,159 @@
 \t\t\t\t<div style="width: 100%; zoom: 1;">
 \t\t\t\t<h3 class="ui-widget-header">''')
         _v = VFFSL(SL,"tstrings",True)['at_at_edit'] # u"$tstrings['at_at_edit']" on line 25, col 34
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_at_edit']")) # from line 25, col 34.
-        write(u''' <span id=\'at_name\'></span></h3>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_at_edit']")) # from line 25, col 34.
+        write(''' <span id=\'at_name\'></span></h3>
 \t\t\t\t\t<div id="ateditcontent">
 \t\t\t\t\t\t<form>
 \t\t\t\t\t\t\t<fieldset style="border:none">
 \t\t\t\t\t\t\t\t<label for="enabled">''')
         _v = VFFSL(SL,"tstrings",True)['at_enabled'] # u"$tstrings['at_enabled']" on line 29, col 30
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_enabled']")) # from line 29, col 30.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_enabled']")) # from line 29, col 30.
+        write(''':</label>
 \t\t\t\t\t\t\t\t<input type="checkbox" id="enabled" value="">
 \t\t\t\t\t\t\t\t<br><label for="name">''')
         _v = VFFSL(SL,"tstrings",True)['at_description'] # u"$tstrings['at_description']" on line 31, col 31
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_description']")) # from line 31, col 31.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_description']")) # from line 31, col 31.
+        write(''':</label>
 \t\t\t\t\t\t\t\t<input type="text" id="name">
 \t\t\t\t\t\t\t\t<br><label for="match">''')
         _v = VFFSL(SL,"tstrings",True)['at_title_match'] # u"$tstrings['at_title_match']" on line 33, col 32
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_title_match']")) # from line 33, col 32.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_title_match']")) # from line 33, col 32.
+        write(''':</label>
 \t\t\t\t\t\t\t\t<input type="text" id="match">
 \t\t\t\t\t\t\t\t<!-- <label for="searchType">''')
         _v = VFFSL(SL,"tstrings",True)['at_search_type'] # u"$tstrings['at_search_type']" on line 35, col 38
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_search_type']")) # from line 35, col 38.
-        write(u''':</label> -->
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_search_type']")) # from line 35, col 38.
+        write(''':</label> -->
 \t\t\t\t\t\t\t\t<select id="searchType">
 \t\t\t\t\t\t\t\t<option value="partial" selected="selected">''')
         _v = VFFSL(SL,"tstrings",True)['at_partial_match'] # u"$tstrings['at_partial_match']" on line 37, col 53
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_partial_match']")) # from line 37, col 53.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_partial_match']")) # from line 37, col 53.
+        write('''</option>
 \t\t\t\t\t\t\t\t<option value="exact">''')
         _v = VFFSL(SL,"tstrings",True)['at_exact_match'] # u"$tstrings['at_exact_match']" on line 38, col 31
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_exact_match']")) # from line 38, col 31.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_exact_match']")) # from line 38, col 31.
+        write('''</option>
 \t\t\t\t\t\t\t\t<option value="description">''')
         _v = VFFSL(SL,"tstrings",True)['at_description_match'] # u"$tstrings['at_description_match']" on line 39, col 37
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_description_match']")) # from line 39, col 37.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_description_match']")) # from line 39, col 37.
+        write('''</option>
 \t\t\t\t\t\t\t\t<option value="full">''')
         _v = VFFSL(SL,"tstrings",True)['at_title_or_description_match'] # u"$tstrings['at_title_or_description_match']" on line 40, col 30
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_title_or_description_match']")) # from line 40, col 30.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_title_or_description_match']")) # from line 40, col 30.
+        write('''</option>
 \t\t\t\t\t\t\t\t<option value="shortdesc">''')
         _v = VFFSL(SL,"tstrings",True)['at_short_description_match'] # u"$tstrings['at_short_description_match']" on line 41, col 35
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_short_description_match']")) # from line 41, col 35.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_short_description_match']")) # from line 41, col 35.
+        write('''</option>
 \t\t\t\t\t\t\t\t<option value="title_shortdesc">''')
         _v = VFFSL(SL,"tstrings",True)['at_title_or_short_description_match'] # u"$tstrings['at_title_or_short_description_match']" on line 42, col 41
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_title_or_short_description_match']")) # from line 42, col 41.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_title_or_short_description_match']")) # from line 42, col 41.
+        write('''</option>
 ''')
         if 'start' in VFFSL(SL,"types",True): # generated from line 43, col 9
-            write(u'''\t\t\t\t\t\t\t\t\t<option value="start">''')
+            write('''\t\t\t\t\t\t\t\t\t<option value="start">''')
             _v = VFFSL(SL,"tstrings",True)['at_start_match'] # u"$tstrings['at_start_match']" on line 44, col 32
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_start_match']")) # from line 44, col 32.
-            write(u'''</option>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_start_match']")) # from line 44, col 32.
+            write('''</option>
 ''')
-        write(u'''\t\t\t\t\t\t\t\t</select>
+        write('''\t\t\t\t\t\t\t\t</select>
 \t\t\t\t\t\t\t\t<!-- <br><label for="searchCase">''')
         _v = VFFSL(SL,"tstrings",True)['at_search_strictness'] # u"$tstrings['at_search_strictness']" on line 47, col 42
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_search_strictness']")) # from line 47, col 42.
-        write(u''':</label> -->
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_search_strictness']")) # from line 47, col 42.
+        write(''':</label> -->
 \t\t\t\t\t\t\t\t<select id="searchCase">
 \t\t\t\t\t\t\t\t<option value="sensitive" selected="selected">''')
         _v = VFFSL(SL,"tstrings",True)['at_case_sensitive'] # u"$tstrings['at_case_sensitive']" on line 49, col 55
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_case_sensitive']")) # from line 49, col 55.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_case_sensitive']")) # from line 49, col 55.
+        write('''</option>
 \t\t\t\t\t\t\t\t<option value="insensitive">''')
         _v = VFFSL(SL,"tstrings",True)['at_case_insensitive'] # u"$tstrings['at_case_insensitive']" on line 50, col 37
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_case_insensitive']")) # from line 50, col 37.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_case_insensitive']")) # from line 50, col 37.
+        write('''</option>
 \t\t\t\t\t\t\t\t</select>
 \t\t\t\t\t\t\t\t<br><label for="justplay">''')
         _v = VFFSL(SL,"tstrings",True)['at_timer_type'] # u"$tstrings['at_timer_type']" on line 52, col 35
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_timer_type']")) # from line 52, col 35.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_timer_type']")) # from line 52, col 35.
+        write(''':</label>
 \t\t\t\t\t\t\t\t<select id="justplay">
 \t\t\t\t\t\t\t\t<option value="0" selected="selected">''')
         _v = VFFSL(SL,"tstrings",True)['at_record'] # u"$tstrings['at_record']" on line 54, col 47
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_record']")) # from line 54, col 47.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_record']")) # from line 54, col 47.
+        write('''</option>
 \t\t\t\t\t\t\t\t<option value="1">''')
         _v = VFFSL(SL,"tstrings",True)['at_zap'] # u"$tstrings['at_zap']" on line 55, col 27
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_zap']")) # from line 55, col 27.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_zap']")) # from line 55, col 27.
+        write('''</option>
 \t\t\t\t\t\t\t\t<option value="2">''')
         _v = VFFSL(SL,"tstrings",True)['at_record'] # u"$tstrings['at_record']" on line 56, col 27
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_record']")) # from line 56, col 27.
-        write(u'''+''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_record']")) # from line 56, col 27.
+        write('''+''')
         _v = VFFSL(SL,"tstrings",True)['at_zap'] # u"$tstrings['at_zap']" on line 56, col 50
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_zap']")) # from line 56, col 50.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_zap']")) # from line 56, col 50.
+        write('''</option>
 \t\t\t\t\t\t\t\t</select>
 \t\t\t\t\t\t\t\t<label for="overrideAlternatives">''')
         _v = VFFSL(SL,"tstrings",True)['at_override_alt'] # u"$tstrings['at_override_alt']" on line 58, col 43
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_override_alt']")) # from line 58, col 43.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_override_alt']")) # from line 58, col 43.
+        write(''':</label>
 \t\t\t\t\t\t\t\t<input type="checkbox" id="overrideAlternatives" value="">
 \t\t\t\t\t\t\t\t<br><label for="timeSpan">''')
         _v = VFFSL(SL,"tstrings",True)['at_timespan'] # u"$tstrings['at_timespan']" on line 60, col 35
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_timespan']")) # from line 60, col 35.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_timespan']")) # from line 60, col 35.
+        write(''':</label>
 \t\t\t\t\t\t\t\t<input type="checkbox" id="timeSpan" value="">
 \t\t\t\t\t\t\t\t\t<span id="timeSpanE">
 \t\t\t\t\t\t\t\t\t<label for="from">''')
         _v = VFFSL(SL,"tstrings",True)['at_timespan_begin'] # u"$tstrings['at_timespan_begin']" on line 63, col 28
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_timespan_begin']")) # from line 63, col 28.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_timespan_begin']")) # from line 63, col 28.
+        write(''':</label>
 \t\t\t\t\t\t\t\t\t<input type="text" id="from" value="">
 \t\t\t\t\t\t\t\t\t<label for="to">''')
         _v = VFFSL(SL,"tstrings",True)['at_timespan_end'] # u"$tstrings['at_timespan_end']" on line 65, col 26
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_timespan_end']")) # from line 65, col 26.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_timespan_end']")) # from line 65, col 26.
+        write(''':</label>
 \t\t\t\t\t\t\t\t\t<input type="text" id="to" value="">
 \t\t\t\t\t\t\t\t\t</span>
 \t\t\t\t\t\t\t\t<br><label for="timeFrame">''')
         _v = VFFSL(SL,"tstrings",True)['at_datespan'] # u"$tstrings['at_datespan']" on line 68, col 36
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_datespan']")) # from line 68, col 36.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_datespan']")) # from line 68, col 36.
+        write(''':</label>
 \t\t\t\t\t\t\t\t<input type="checkbox" id="timeFrame" value="">
 \t\t\t\t\t\t\t\t\t<span id="timeFrameE">
 \t\t\t\t\t\t\t\t\t<label for="after">''')
         _v = VFFSL(SL,"tstrings",True)['at_datespan_before'] # u"$tstrings['at_datespan_before']" on line 71, col 29
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_datespan_before']")) # from line 71, col 29.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_datespan_before']")) # from line 71, col 29.
+        write(''':</label>
 \t\t\t\t\t\t\t\t\t<input type="text" id="after" value="" class="text date">
 \t\t\t\t\t\t\t\t\t<input type="checkbox" id="timeFrameAfter" value="">
 \t\t\t\t\t\t\t\t\t<label for="before">''')
         _v = VFFSL(SL,"tstrings",True)['at_datespan_after'] # u"$tstrings['at_datespan_after']" on line 74, col 30
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_datespan_after']")) # from line 74, col 30.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_datespan_after']")) # from line 74, col 30.
+        write(''':</label>
 \t\t\t\t\t\t\t\t\t<span id="beforeE"><input type="text" id="before" value="" class="text date"></span>
 \t\t\t\t\t\t\t\t\t</span>
 \t\t\t\t\t\t\t\t<br><label for="timerOffset">''')
         _v = VFFSL(SL,"tstrings",True)['at_timer_offset'] # u"$tstrings['at_timer_offset']" on line 77, col 38
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_timer_offset']")) # from line 77, col 38.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_timer_offset']")) # from line 77, col 38.
+        write(''':</label>
 \t\t\t\t\t\t\t\t<input type="checkbox" id="timerOffset" value="">
 \t\t\t\t\t\t\t\t\t<span id="timerOffsetE">
 \t\t\t\t\t\t\t\t\t<label for="tbefore">''')
         _v = VFFSL(SL,"tstrings",True)['at_timer_offset_before'] # u"$tstrings['at_timer_offset_before']" on line 80, col 31
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_timer_offset_before']")) # from line 80, col 31.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_timer_offset_before']")) # from line 80, col 31.
+        write(''':</label>
 \t\t\t\t\t\t\t\t\t<input type="text" id="tbefore" value="" class="text number" onkeyup="this.value=this.value.replace(/[^\\d]/,\'\')">
 \t\t\t\t\t\t\t\t\t<label for="tafter">''')
         _v = VFFSL(SL,"tstrings",True)['at_timer_offset_after'] # u"$tstrings['at_timer_offset_after']" on line 82, col 30
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_timer_offset_after']")) # from line 82, col 30.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_timer_offset_after']")) # from line 82, col 30.
+        write(''':</label>
 \t\t\t\t\t\t\t\t\t<input type="text" id="tafter" value="" class="text number" onkeyup="this.value=this.value.replace(/[^\\d]/,\'\')">
 \t\t\t\t\t\t\t\t\t</span>
 \t\t\t\t\t\t\t\t<br><label for="maxDuration">''')
         _v = VFFSL(SL,"tstrings",True)['at_max_duration'] # u"$tstrings['at_max_duration']" on line 85, col 38
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_max_duration']")) # from line 85, col 38.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_max_duration']")) # from line 85, col 38.
+        write(''':</label>
 \t\t\t\t\t\t\t\t<input type="checkbox" id="maxDuration" value="">
 \t\t\t\t\t\t\t\t\t<span id="maxDurationE">
 \t\t\t\t\t\t\t\t\t<label for="maxduration"></label>
@@ -276,160 +277,160 @@
 \t\t\t\t\t\t\t\t\t</span>
 \t\t\t\t\t\t\t\t<br><label for="afterevent">''')
         _v = VFFSL(SL,"tstrings",True)['at_after_event'] # u"$tstrings['at_after_event']" on line 92, col 37
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_after_event']")) # from line 92, col 37.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_after_event']")) # from line 92, col 37.
+        write(''':</label>
 \t\t\t\t\t\t\t\t<select id="afterevent">
 \t\t\t\t\t\t\t\t<option value="" selected="selected">''')
         _v = VFFSL(SL,"tstrings",True)['at_after_event_standard'] # u"$tstrings['at_after_event_standard']" on line 94, col 46
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_after_event_standard']")) # from line 94, col 46.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_after_event_standard']")) # from line 94, col 46.
+        write('''</option>
 \t\t\t\t\t\t\t\t<option value="none">''')
         _v = VFFSL(SL,"tstrings",True)['at_after_event_nothing'] # u"$tstrings['at_after_event_nothing']" on line 95, col 30
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_after_event_nothing']")) # from line 95, col 30.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_after_event_nothing']")) # from line 95, col 30.
+        write('''</option>
 \t\t\t\t\t\t\t\t<option value="standby">''')
         _v = VFFSL(SL,"tstrings",True)['at_after_event_standby'] # u"$tstrings['at_after_event_standby']" on line 96, col 33
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_after_event_standby']")) # from line 96, col 33.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_after_event_standby']")) # from line 96, col 33.
+        write('''</option>
 \t\t\t\t\t\t\t\t<option value="shutdown">''')
         _v = VFFSL(SL,"tstrings",True)['at_after_event_deepstandby'] # u"$tstrings['at_after_event_deepstandby']" on line 97, col 34
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_after_event_deepstandby']")) # from line 97, col 34.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_after_event_deepstandby']")) # from line 97, col 34.
+        write('''</option>
 \t\t\t\t\t\t\t\t<option value="auto">''')
         _v = VFFSL(SL,"tstrings",True)['at_after_event_auto'] # u"$tstrings['at_after_event_auto']" on line 98, col 30
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_after_event_auto']")) # from line 98, col 30.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_after_event_auto']")) # from line 98, col 30.
+        write('''</option>
 \t\t\t\t\t\t\t\t</select>
 \t\t\t\t\t\t\t\t<br><br><span id="AftereventE">
 \t\t\t\t\t\t\t\t<label for="timeSpanAE">''')
         _v = VFFSL(SL,"tstrings",True)['at_event_timespan'] # u"$tstrings['at_event_timespan']" on line 101, col 33
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_event_timespan']")) # from line 101, col 33.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_event_timespan']")) # from line 101, col 33.
+        write(''':</label>
 \t\t\t\t\t\t\t\t<input type="checkbox" id="timeSpanAE" value="">
 \t\t\t\t\t\t\t\t\t<span id="timeSpanAEE">
 \t\t\t\t\t\t\t\t\t<br><br><label for="from">''')
         _v = VFFSL(SL,"tstrings",True)['at_event_timespan_begin'] # u"$tstrings['at_event_timespan_begin']" on line 104, col 36
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_event_timespan_begin']")) # from line 104, col 36.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_event_timespan_begin']")) # from line 104, col 36.
+        write(''':</label>
 \t\t\t\t\t\t\t\t\t<input type="text" id="aefrom" value="">
 \t\t\t\t\t\t\t\t\t<br><br><label for="to">''')
         _v = VFFSL(SL,"tstrings",True)['at_event_timespan_end'] # u"$tstrings['at_event_timespan_end']" on line 106, col 34
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_event_timespan_end']")) # from line 106, col 34.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_event_timespan_end']")) # from line 106, col 34.
+        write(''':</label>
 \t\t\t\t\t\t\t\t\t<input type="text" id="aeto" value="">
 \t\t\t\t\t\t\t\t\t</span>
 \t\t\t\t\t\t\t\t</span>
 \t\t\t\t\t\t\t\t<br><label for="counter">''')
         _v = VFFSL(SL,"tstrings",True)['at_max_counter'] # u"$tstrings['at_max_counter']" on line 110, col 34
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_max_counter']")) # from line 110, col 34.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_max_counter']")) # from line 110, col 34.
+        write(''':</label>
 \t\t\t\t\t\t\t\t<select id="counter">
 \t\t\t\t\t\t\t\t</select>
 \t\t\t\t\t\t\t\t<span id="CounterE">
 \t\t\t\t\t\t\t\t<label for="left">''')
         _v = VFFSL(SL,"tstrings",True)['at_left'] # u"$tstrings['at_left']" on line 114, col 27
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_left']")) # from line 114, col 27.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_left']")) # from line 114, col 27.
+        write(''':</label>
 \t\t\t\t\t\t\t\t<select id="left">
 \t\t\t\t\t\t\t\t</select>
 \t\t\t\t\t\t\t\t<label for="counterFormat">''')
         _v = VFFSL(SL,"tstrings",True)['at_reset_count'] # u"$tstrings['at_reset_count']" on line 117, col 36
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_reset_count']")) # from line 117, col 36.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_reset_count']")) # from line 117, col 36.
+        write(''':</label>
 \t\t\t\t\t\t\t\t<select id="counterFormat" size="1">
 \t\t\t\t\t\t\t\t<option value="" selected>''')
         _v = VFFSL(SL,"tstrings",True)['at_never'] # u"$tstrings['at_never']" on line 119, col 35
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_never']")) # from line 119, col 35.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_never']")) # from line 119, col 35.
+        write('''</option>
 \t\t\t\t\t\t\t\t<option value="%m">''')
         _v = VFFSL(SL,"tstrings",True)['at_monthly'] # u"$tstrings['at_monthly']" on line 120, col 28
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_monthly']")) # from line 120, col 28.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_monthly']")) # from line 120, col 28.
+        write('''</option>
 \t\t\t\t\t\t\t\t<option value="%U">''')
         _v = VFFSL(SL,"tstrings",True)['at_weekly_sun'] # u"$tstrings['at_weekly_sun']" on line 121, col 28
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_weekly_sun']")) # from line 121, col 28.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_weekly_sun']")) # from line 121, col 28.
+        write('''</option>
 \t\t\t\t\t\t\t\t<option value="%W">''')
         _v = VFFSL(SL,"tstrings",True)['at_weekly_mon'] # u"$tstrings['at_weekly_mon']" on line 122, col 28
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_weekly_mon']")) # from line 122, col 28.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_weekly_mon']")) # from line 122, col 28.
+        write('''</option>
 \t\t\t\t\t\t\t\t</select>
 \t\t\t\t\t\t\t\t</span>
 \t\t\t\t\t\t\t\t<br><label for="avoidDuplicateDescription">''')
         _v = VFFSL(SL,"tstrings",True)['at_avoid_dup'] # u"$tstrings['at_avoid_dup']" on line 125, col 52
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_avoid_dup']")) # from line 125, col 52.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_avoid_dup']")) # from line 125, col 52.
+        write(''':</label>
 \t\t\t\t\t\t\t\t<select id="avoidDuplicateDescription">
 \t\t\t\t\t\t\t\t<option value="0" selected="selected">''')
         _v = VFFSL(SL,"tstrings",True)['at_avoid_dup_no'] # u"$tstrings['at_avoid_dup_no']" on line 127, col 47
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_avoid_dup_no']")) # from line 127, col 47.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_avoid_dup_no']")) # from line 127, col 47.
+        write('''</option>
 \t\t\t\t\t\t\t\t<option value="1">''')
         _v = VFFSL(SL,"tstrings",True)['at_avoid_dup_same_service'] # u"$tstrings['at_avoid_dup_same_service']" on line 128, col 27
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_avoid_dup_same_service']")) # from line 128, col 27.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_avoid_dup_same_service']")) # from line 128, col 27.
+        write('''</option>
 \t\t\t\t\t\t\t\t<option value="2">''')
         _v = VFFSL(SL,"tstrings",True)['at_avoid_dup_any_service'] # u"$tstrings['at_avoid_dup_any_service']" on line 129, col 27
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_avoid_dup_any_service']")) # from line 129, col 27.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_avoid_dup_any_service']")) # from line 129, col 27.
+        write('''</option>
 \t\t\t\t\t\t\t\t<option value="3">''')
         _v = VFFSL(SL,"tstrings",True)['at_avoid_dup_any_service_rec'] # u"$tstrings['at_avoid_dup_any_service_rec']" on line 130, col 27
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_avoid_dup_any_service_rec']")) # from line 130, col 27.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_avoid_dup_any_service_rec']")) # from line 130, col 27.
+        write('''</option>
 \t\t\t\t\t\t\t\t</select>
 \t\t\t\t\t\t\t\t<br><label for="Location">''')
         _v = VFFSL(SL,"tstrings",True)['at_location'] # u"$tstrings['at_location']" on line 132, col 35
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_location']")) # from line 132, col 35.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_location']")) # from line 132, col 35.
+        write(''':</label>
 \t\t\t\t\t\t\t\t<input type="checkbox" id="Location" value="">
 \t\t\t\t\t\t\t\t\t<span id="LocationE">
 \t\t\t\t\t\t\t\t\t<label for="location"></label>
 \t\t\t\t\t\t\t\t\t<select id="location">
 ''')
         for location in VFFSL(SL,"locations",True): # generated from line 137, col 11
-            write(u'''\t\t\t\t\t\t\t\t\t\t\t<option value="''')
+            write('''\t\t\t\t\t\t\t\t\t\t\t<option value="''')
             _v = VFFSL(SL,"location",True) # u'$location' on line 138, col 27
-            if _v is not None: write(_filter(_v, rawExpr=u'$location')) # from line 138, col 27.
-            write(u'''">''')
+            if _v is not None: write(_filter(_v, rawExpr='$location')) # from line 138, col 27.
+            write('''">''')
             _v = VFFSL(SL,"location",True) # u'$location' on line 138, col 38
-            if _v is not None: write(_filter(_v, rawExpr=u'$location')) # from line 138, col 38.
-            write(u'''</option>
+            if _v is not None: write(_filter(_v, rawExpr='$location')) # from line 138, col 38.
+            write('''</option>
 ''')
-        write(u'''\t\t\t\t\t\t\t\t\t</select>
+        write('''\t\t\t\t\t\t\t\t\t</select>
 \t\t\t\t\t\t\t\t\t</span>
 \t\t\t\t\t\t\t\t<br><label for="Tags">''')
         _v = VFFSL(SL,"tstrings",True)['at_tags'] # u"$tstrings['at_tags']" on line 142, col 31
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_tags']")) # from line 142, col 31.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_tags']")) # from line 142, col 31.
+        write(''':</label>
 \t\t\t\t\t\t\t\t\t<span id="TagsE">
 \t\t\t\t\t\t\t\t\t<select data-placeholder="''')
         _v = VFFSL(SL,"tstrings",True)['at_select_tags'] # u"$tstrings['at_select_tags']" on line 144, col 36
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_select_tags']")) # from line 144, col 36.
-        write(u'''" id="tags" class="tags_select_box" multiple tabindex="16">
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_select_tags']")) # from line 144, col 36.
+        write('''" id="tags" class="tags_select_box" multiple tabindex="16">
 \t\t\t\t\t\t\t\t\t</select>
 \t\t\t\t\t\t\t\t\t</span>
 \t\t\t\t\t\t\t\t<br><label for="Bouquets">''')
         _v = VFFSL(SL,"tstrings",True)['at_bouquets'] # u"$tstrings['at_bouquets']" on line 147, col 35
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_bouquets']")) # from line 147, col 35.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_bouquets']")) # from line 147, col 35.
+        write(''':</label>
 \t\t\t\t\t\t\t\t<input type="checkbox" id="Bouquets" value="">
 \t\t\t\t\t\t\t\t\t<span id="BouquetsE">
 \t\t\t\t\t\t\t\t\t<select data-placeholder="''')
         _v = VFFSL(SL,"tstrings",True)['at_select_bouquets'] # u"$tstrings['at_select_bouquets']" on line 150, col 36
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_select_bouquets']")) # from line 150, col 36.
-        write(u'''" id="bouquets" class="bq_select_box" multiple tabindex="16">
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_select_bouquets']")) # from line 150, col 36.
+        write('''" id="bouquets" class="bq_select_box" multiple tabindex="16">
 \t\t\t\t\t\t\t\t\t</select>
 \t\t\t\t\t\t\t\t\t</span>
 \t\t\t\t\t\t\t\t<br><label for="Channels">''')
         _v = VFFSL(SL,"tstrings",True)['at_channels'] # u"$tstrings['at_channels']" on line 153, col 35
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_channels']")) # from line 153, col 35.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_channels']")) # from line 153, col 35.
+        write(''':</label>
 \t\t\t\t\t\t\t\t<input type="checkbox" id="Channels" value="">
 \t\t\t\t\t\t\t\t\t<span id="ChannelsE">
 \t\t\t\t\t\t\t\t\t<select data-placeholder="''')
         _v = VFFSL(SL,"tstrings",True)['at_select_channels'] # u"$tstrings['at_select_channels']" on line 156, col 36
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_select_channels']")) # from line 156, col 36.
-        write(u'''" id="channels" class="ch_select_box" multiple tabindex="16">
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_select_channels']")) # from line 156, col 36.
+        write('''" id="channels" class="ch_select_box" multiple tabindex="16">
 \t\t\t\t\t\t\t\t\t</select>
 \t\t\t\t\t\t\t\t\t</span>
 \t\t\t\t\t\t\t\t<br>
@@ -437,46 +438,46 @@
 \t\t\t\t\t\t\t\t<div>
 \t\t\t\t\t\t\t\t<label for="Filter">''')
         _v = VFFSL(SL,"tstrings",True)['at_filter'] # u"$tstrings['at_filter']" on line 162, col 29
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_filter']")) # from line 162, col 29.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_filter']")) # from line 162, col 29.
+        write(''':</label>
 \t\t\t\t\t\t\t\t<input type="checkbox" id="Filter" value="" >
 \t\t\t\t\t\t\t\t\t<span id="FilterE" style="display:inline-table">
 \t\t\t\t\t\t\t\t\t<input type="button" id="AddFilter" value="''')
         _v = VFFSL(SL,"tstrings",True)['at_add'] # u"$tstrings['at_add']" on line 165, col 53
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_add']")) # from line 165, col 53.
-        write(u'''"/>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_add']")) # from line 165, col 53.
+        write('''"/>
 \t\t\t\t\t\t\t\t\t<table id="filterlist">
 \t\t\t\t\t\t\t\t\t<tr id="dummyfilter" style="display:none">
 \t\t\t\t\t\t\t\t\t<td class="nopadding">
 \t\t\t\t\t\t\t\t\t<select size="1" class="FT">
 \t\t\t\t\t\t\t\t\t<option value="include" selected="">''')
         _v = VFFSL(SL,"tstrings",True)['at_filter_include'] # u"$tstrings['at_filter_include']" on line 170, col 46
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_filter_include']")) # from line 170, col 46.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_filter_include']")) # from line 170, col 46.
+        write('''</option>
 \t\t\t\t\t\t\t\t\t<option value="exclude">''')
         _v = VFFSL(SL,"tstrings",True)['at_filter_exclude'] # u"$tstrings['at_filter_exclude']" on line 171, col 34
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_filter_exclude']")) # from line 171, col 34.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_filter_exclude']")) # from line 171, col 34.
+        write('''</option>
 \t\t\t\t\t\t\t\t\t</select>
 \t\t\t\t\t\t\t\t\t</td>
 \t\t\t\t\t\t\t\t\t<td class="nopadding">
 \t\t\t\t\t\t\t\t\t<select size="1" class="FM">
 \t\t\t\t\t\t\t\t\t<option value="title" selected="">''')
         _v = VFFSL(SL,"tstrings",True)['at_filter_title'] # u"$tstrings['at_filter_title']" on line 176, col 44
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_filter_title']")) # from line 176, col 44.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_filter_title']")) # from line 176, col 44.
+        write('''</option>
 \t\t\t\t\t\t\t\t\t<option value="shortdescription">''')
         _v = VFFSL(SL,"tstrings",True)['at_filter_short_desc'] # u"$tstrings['at_filter_short_desc']" on line 177, col 43
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_filter_short_desc']")) # from line 177, col 43.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_filter_short_desc']")) # from line 177, col 43.
+        write('''</option>
 \t\t\t\t\t\t\t\t\t<option value="description">''')
         _v = VFFSL(SL,"tstrings",True)['at_filter_desc'] # u"$tstrings['at_filter_desc']" on line 178, col 38
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_filter_desc']")) # from line 178, col 38.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_filter_desc']")) # from line 178, col 38.
+        write('''</option>
 \t\t\t\t\t\t\t\t\t<option value="dayofweek">''')
         _v = VFFSL(SL,"tstrings",True)['at_filter_day'] # u"$tstrings['at_filter_day']" on line 179, col 36
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_filter_day']")) # from line 179, col 36.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_filter_day']")) # from line 179, col 36.
+        write('''</option>
 \t\t\t\t\t\t\t\t\t</select>
 \t\t\t\t\t\t\t\t\t</td>
 \t\t\t\t\t\t\t\t\t<td class="nopadding">
@@ -484,120 +485,120 @@
 \t\t\t\t\t\t\t\t\t<select size="1" class="FS" style="display: none;">
 \t\t\t\t\t\t\t\t\t<option value="0" selected="">''')
         _v = VFFSL(SL,"tstrings",True)['monday'] # u"$tstrings['monday']" on line 185, col 40
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['monday']")) # from line 185, col 40.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['monday']")) # from line 185, col 40.
+        write('''</option>
 \t\t\t\t\t\t\t\t\t<option value="1">''')
         _v = VFFSL(SL,"tstrings",True)['tuesday'] # u"$tstrings['tuesday']" on line 186, col 28
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['tuesday']")) # from line 186, col 28.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['tuesday']")) # from line 186, col 28.
+        write('''</option>
 \t\t\t\t\t\t\t\t\t<option value="2">''')
         _v = VFFSL(SL,"tstrings",True)['wednesday'] # u"$tstrings['wednesday']" on line 187, col 28
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['wednesday']")) # from line 187, col 28.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['wednesday']")) # from line 187, col 28.
+        write('''</option>
 \t\t\t\t\t\t\t\t\t<option value="3">''')
         _v = VFFSL(SL,"tstrings",True)['thursday'] # u"$tstrings['thursday']" on line 188, col 28
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['thursday']")) # from line 188, col 28.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['thursday']")) # from line 188, col 28.
+        write('''</option>
 \t\t\t\t\t\t\t\t\t<option value="4">''')
         _v = VFFSL(SL,"tstrings",True)['friday'] # u"$tstrings['friday']" on line 189, col 28
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['friday']")) # from line 189, col 28.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['friday']")) # from line 189, col 28.
+        write('''</option>
 \t\t\t\t\t\t\t\t\t<option value="5">''')
         _v = VFFSL(SL,"tstrings",True)['saturday'] # u"$tstrings['saturday']" on line 190, col 28
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['saturday']")) # from line 190, col 28.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['saturday']")) # from line 190, col 28.
+        write('''</option>
 \t\t\t\t\t\t\t\t\t<option value="6">''')
         _v = VFFSL(SL,"tstrings",True)['sunday'] # u"$tstrings['sunday']" on line 191, col 28
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['sunday']")) # from line 191, col 28.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['sunday']")) # from line 191, col 28.
+        write('''</option>
 \t\t\t\t\t\t\t\t\t<option value="weekend">''')
         _v = VFFSL(SL,"tstrings",True)['at_filter_weekend'] # u"$tstrings['at_filter_weekend']" on line 192, col 34
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_filter_weekend']")) # from line 192, col 34.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_filter_weekend']")) # from line 192, col 34.
+        write('''</option>
 \t\t\t\t\t\t\t\t\t<option value="weekday">''')
         _v = VFFSL(SL,"tstrings",True)['at_filter_weekday'] # u"$tstrings['at_filter_weekday']" on line 193, col 34
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_filter_weekday']")) # from line 193, col 34.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_filter_weekday']")) # from line 193, col 34.
+        write('''</option>
 \t\t\t\t\t\t\t\t\t</select>
 \t\t\t\t\t\t\t\t\t</td>
 \t\t\t\t\t\t\t\t\t<td><input type="checkbox" id="RemoveFilterID" value="" class="FR checkbox"> ''')
         _v = VFFSL(SL,"tstrings",True)['at_del'] # u"$tstrings['at_del']" on line 196, col 87
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_del']")) # from line 196, col 87.
-        write(u'''</td>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_del']")) # from line 196, col 87.
+        write('''</td>
 \t\t\t\t\t\t\t\t\t</tr>
 \t\t\t\t\t\t\t\t\t</table>
 \t\t\t\t\t\t\t\t\t</span>
 \t\t\t\t\t\t\t\t</div>
 ''')
         if VFFSL(SL,"hasVPS",True) == 1: # generated from line 201, col 9
-            write(u'''\t\t\t\t\t\t\t\t<br><label for="vps">''')
+            write('''\t\t\t\t\t\t\t\t<br><label for="vps">''')
             _v = VFFSL(SL,"tstrings",True)['vps'] # u"$tstrings['vps']" on line 202, col 30
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['vps']")) # from line 202, col 30.
-            write(u''':</label>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['vps']")) # from line 202, col 30.
+            write(''':</label>
 \t\t\t\t\t\t\t\t<input type="checkbox" id="vps" value="">
 \t\t\t\t\t\t\t\t<span id="vpsE">
 \t\t\t\t\t\t\t\t<label for="vpssm">''')
             _v = VFFSL(SL,"tstrings",True)['safe_mode'] # u"$tstrings['safe_mode']" on line 205, col 28
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['safe_mode']")) # from line 205, col 28.
-            write(u''':</label>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['safe_mode']")) # from line 205, col 28.
+            write(''':</label>
 \t\t\t\t\t\t\t\t\t<input type="checkbox" id="vpssm" value="">
 \t\t\t\t\t\t\t\t</span>
 ''')
         if VFFSL(SL,"hasSeriesPlugin",True) == 1: # generated from line 209, col 9
-            write(u'''\t\t\t\t\t\t\t\t<br><label for="seriesplugin">''')
+            write('''\t\t\t\t\t\t\t\t<br><label for="seriesplugin">''')
             _v = VFFSL(SL,"tstrings",True)['at_label_series'] # u"$tstrings['at_label_series']" on line 210, col 39
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_label_series']")) # from line 210, col 39.
-            write(u''':</label>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_label_series']")) # from line 210, col 39.
+            write(''':</label>
 \t\t\t\t\t\t\t\t<input type="checkbox" id="series_labeling" value="">
 ''')
-        write(u'''\t\t\t\t\t\t\t</fieldset>
+        write('''\t\t\t\t\t\t\t</fieldset>
 \t\t\t\t\t\t</form>
 \t\t\t\t\t<div class="ui-dialog-buttonpane ui-widget-content ui-helper-clearfix">
 \t\t\t\t\t\t<div id="actions">
 \t\t\t\t\t\t<button id="atbutton0">''')
         _v = VFFSL(SL,"tstrings",True)['at_add'] # u"$tstrings['at_add']" on line 217, col 30
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_add']")) # from line 217, col 30.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_add']")) # from line 217, col 30.
+        write('''</button>
 \t\t\t\t\t\t<button id="atbutton1">''')
         _v = VFFSL(SL,"tstrings",True)['at_del'] # u"$tstrings['at_del']" on line 218, col 30
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_del']")) # from line 218, col 30.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_del']")) # from line 218, col 30.
+        write('''</button>
 \t\t\t\t\t\t<button id="atbutton2">''')
         _v = VFFSL(SL,"tstrings",True)['at_reload'] # u"$tstrings['at_reload']" on line 219, col 30
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_reload']")) # from line 219, col 30.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_reload']")) # from line 219, col 30.
+        write('''</button>
 \t\t\t\t\t\t<button id="atbutton3">''')
         _v = VFFSL(SL,"tstrings",True)['at_save'] # u"$tstrings['at_save']" on line 220, col 30
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_save']")) # from line 220, col 30.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_save']")) # from line 220, col 30.
+        write('''</button>
 \t\t\t\t\t\t<button id="atbutton4">''')
         _v = VFFSL(SL,"tstrings",True)['at_parse'] # u"$tstrings['at_parse']" on line 221, col 30
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_parse']")) # from line 221, col 30.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_parse']")) # from line 221, col 30.
+        write('''</button>
 \t\t\t\t\t\t<button id="atbutton5">''')
         _v = VFFSL(SL,"tstrings",True)['at_simulate'] # u"$tstrings['at_simulate']" on line 222, col 30
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_simulate']")) # from line 222, col 30.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_simulate']")) # from line 222, col 30.
+        write('''</button>
 \t\t\t\t\t\t<button id="atbutton6">Test</button>
 \t\t\t\t\t\t<button id="atbutton7">''')
         _v = VFFSL(SL,"tstrings",True)['at_timers'] # u"$tstrings['at_timers']" on line 224, col 30
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_timers']")) # from line 224, col 30.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_timers']")) # from line 224, col 30.
+        write('''</button>
 \t\t\t\t\t\t<button id="atbutton8" data-title="''')
         _v = VFFSL(SL,"tstrings",True)['ats_auto_timer_settings'] # u"$tstrings['ats_auto_timer_settings']" on line 225, col 42
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_auto_timer_settings']")) # from line 225, col 42.
-        write(u'''">''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['ats_auto_timer_settings']")) # from line 225, col 42.
+        write('''">''')
         _v = VFFSL(SL,"tstrings",True)['at_settings'] # u"$tstrings['at_settings']" on line 225, col 80
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_settings']")) # from line 225, col 80.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_settings']")) # from line 225, col 80.
+        write('''</button>
 \t\t\t\t\t\t<button id="atbutton9">''')
         _v = VFFSL(SL,"tstrings",True)['export'] # u"$tstrings['export']" on line 226, col 30
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['export']")) # from line 226, col 30.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['export']")) # from line 226, col 30.
+        write('''</button>
 \t\t\t\t\t\t<button id="atbutton10">''')
         _v = VFFSL(SL,"tstrings",True)['import'] # u"$tstrings['import']" on line 227, col 31
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['import']")) # from line 227, col 31.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['import']")) # from line 227, col 31.
+        write('''</button>
 \t\t\t\t\t\t</div>
 \t\t\t\t\t</div>
 \t\t\t\t\t<div id="statuscont" style="display:none">
@@ -619,20 +620,20 @@
 <thead class="ui-widget-header">
 <tr><th>State</th><th>''')
         _v = VFFSL(SL,"tstrings",True)['name'] # u"$tstrings['name']" on line 247, col 23
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['name']")) # from line 247, col 23.
-        write(u'''</th><th>''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['name']")) # from line 247, col 23.
+        write('''</th><th>''')
         _v = VFFSL(SL,"tstrings",True)['title'] # u"$tstrings['title']" on line 247, col 49
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['title']")) # from line 247, col 49.
-        write(u'''</th><th>''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['title']")) # from line 247, col 49.
+        write('''</th><th>''')
         _v = VFFSL(SL,"tstrings",True)['channel'] # u"$tstrings['channel']" on line 247, col 76
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['channel']")) # from line 247, col 76.
-        write(u'''</th><th>''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['channel']")) # from line 247, col 76.
+        write('''</th><th>''')
         _v = VFFSL(SL,"tstrings",True)['start'] # u"$tstrings['start']" on line 247, col 105
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['start']")) # from line 247, col 105.
-        write(u'''</th><th>''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['start']")) # from line 247, col 105.
+        write('''</th><th>''')
         _v = VFFSL(SL,"tstrings",True)['end'] # u"$tstrings['end']" on line 247, col 132
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['end']")) # from line 247, col 132.
-        write(u'''</th></tr>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['end']")) # from line 247, col 132.
+        write('''</th></tr>
 </thead>
 <tbody id=\'simtb\' class="ui-widget-content">
 </tbody>
@@ -651,97 +652,97 @@
 <fieldset>
 <label for="ats_autopoll">''')
         _v = VFFSL(SL,"tstrings",True)['ats_autopoll'] # u"$tstrings['ats_autopoll']" on line 264, col 27
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_autopoll']")) # from line 264, col 27.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['ats_autopoll']")) # from line 264, col 27.
+        write(''':</label>
 <input type="checkbox" id="ats_autopoll" value="" >
 <label for="ats_interval">''')
         _v = VFFSL(SL,"tstrings",True)['ats_interval'] # u"$tstrings['ats_interval']" on line 266, col 27
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_interval']")) # from line 266, col 27.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['ats_interval']")) # from line 266, col 27.
+        write(''':</label>
 <input type="text" size="5" id="ats_interval">
 <label for="ats_maxdaysinfuture">''')
         _v = VFFSL(SL,"tstrings",True)['ats_maxdaysinfuture'] # u"$tstrings['ats_maxdaysinfuture']" on line 268, col 34
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_maxdaysinfuture']")) # from line 268, col 34.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['ats_maxdaysinfuture']")) # from line 268, col 34.
+        write(''':</label>
 <input type="text" size="5" id="ats_maxdaysinfuture">
 <br><label for="ats_try_guessing">''')
         _v = VFFSL(SL,"tstrings",True)['ats_try_guessing'] # u"$tstrings['ats_try_guessing']" on line 270, col 35
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_try_guessing']")) # from line 270, col 35.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['ats_try_guessing']")) # from line 270, col 35.
+        write(''':</label>
 <input type="checkbox" id="ats_try_guessing" value="" >
 <label for="ats_fastscan">''')
         _v = VFFSL(SL,"tstrings",True)['ats_fastscan'] # u"$tstrings['ats_fastscan']" on line 272, col 27
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_fastscan']")) # from line 272, col 27.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['ats_fastscan']")) # from line 272, col 27.
+        write(''':</label>
 <input type="checkbox" id="ats_fastscan" value="" >
 <label for="ats_show_in_extensionsmenu">''')
         _v = VFFSL(SL,"tstrings",True)['ats_show_in_extensionsmenu'] # u"$tstrings['ats_show_in_extensionsmenu']" on line 274, col 41
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_show_in_extensionsmenu']")) # from line 274, col 41.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['ats_show_in_extensionsmenu']")) # from line 274, col 41.
+        write(''':</label>
 <input type="checkbox" id="ats_show_in_extensionsmenu" value="" >
 <br><label for="ats_disabled_on_conflict">''')
         _v = VFFSL(SL,"tstrings",True)['ats_disabled_on_conflict'] # u"$tstrings['ats_disabled_on_conflict']" on line 276, col 43
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_disabled_on_conflict']")) # from line 276, col 43.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['ats_disabled_on_conflict']")) # from line 276, col 43.
+        write(''':</label>
 <input type="checkbox" id="ats_disabled_on_conflict" value="" >
 <label for="ats_addsimilar_on_conflict">''')
         _v = VFFSL(SL,"tstrings",True)['ats_addsimilar_on_conflict'] # u"$tstrings['ats_addsimilar_on_conflict']" on line 278, col 41
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_addsimilar_on_conflict']")) # from line 278, col 41.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['ats_addsimilar_on_conflict']")) # from line 278, col 41.
+        write(''':</label>
 <input type="checkbox" id="ats_addsimilar_on_conflict" value="" >
 <br><label for="ats_notifconflict">''')
         _v = VFFSL(SL,"tstrings",True)['ats_notifconflict'] # u"$tstrings['ats_notifconflict']" on line 280, col 36
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_notifconflict']")) # from line 280, col 36.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['ats_notifconflict']")) # from line 280, col 36.
+        write(''':</label>
 <input type="checkbox" id="ats_notifconflict" value="" >
 <label for="ats_notifsimilar">''')
         _v = VFFSL(SL,"tstrings",True)['ats_notifsimilar'] # u"$tstrings['ats_notifsimilar']" on line 282, col 31
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_notifsimilar']")) # from line 282, col 31.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['ats_notifsimilar']")) # from line 282, col 31.
+        write(''':</label>
 <input type="checkbox" id="ats_notifsimilar" value="" >
 <br><label for="ats_add_autotimer_to_tags">''')
         _v = VFFSL(SL,"tstrings",True)['ats_add_autotimer_to_tags'] # u"$tstrings['ats_add_autotimer_to_tags']" on line 284, col 44
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_add_autotimer_to_tags']")) # from line 284, col 44.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['ats_add_autotimer_to_tags']")) # from line 284, col 44.
+        write(''':</label>
 <input type="checkbox" id="ats_add_autotimer_to_tags" value="" >
 <label for="ats_add_name_to_tags">''')
         _v = VFFSL(SL,"tstrings",True)['ats_add_name_to_tags'] # u"$tstrings['ats_add_name_to_tags']" on line 286, col 35
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_add_name_to_tags']")) # from line 286, col 35.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['ats_add_name_to_tags']")) # from line 286, col 35.
+        write(''':</label>
 <input type="checkbox" id="ats_add_name_to_tags" value="" >
 
 <br><label for="ats_refresh">''')
         _v = VFFSL(SL,"tstrings",True)['ats_refresh'] # u"$tstrings['ats_refresh']" on line 289, col 30
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_refresh']")) # from line 289, col 30.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['ats_refresh']")) # from line 289, col 30.
+        write(''':</label>
 <select id="ats_refresh" size="1">
 \t<option value="none" selected="selected">''')
         _v = VFFSL(SL,"tstrings",True)['ats_refresh_none'] # u"$tstrings['ats_refresh_none']" on line 291, col 43
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_refresh_none']")) # from line 291, col 43.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['ats_refresh_none']")) # from line 291, col 43.
+        write('''</option>
 \t<option value="auto" selected="selected">''')
         _v = VFFSL(SL,"tstrings",True)['ats_refresh_auto'] # u"$tstrings['ats_refresh_auto']" on line 292, col 43
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_refresh_auto']")) # from line 292, col 43.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['ats_refresh_auto']")) # from line 292, col 43.
+        write('''</option>
 \t<option value="all" selected="selected">''')
         _v = VFFSL(SL,"tstrings",True)['ats_refresh_all'] # u"$tstrings['ats_refresh_all']" on line 293, col 42
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_refresh_all']")) # from line 293, col 42.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['ats_refresh_all']")) # from line 293, col 42.
+        write('''</option>
 </select>
 
 <label for="ats_editor">''')
         _v = VFFSL(SL,"tstrings",True)['ats_editor'] # u"$tstrings['ats_editor']" on line 296, col 25
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_editor']")) # from line 296, col 25.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['ats_editor']")) # from line 296, col 25.
+        write('''</label>
 <select id="ats_editor" size="1">
 \t<option value="plain" selected="selected">''')
         _v = VFFSL(SL,"tstrings",True)['ats_editor_plain'] # u"$tstrings['ats_editor_plain']" on line 298, col 44
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_editor_plain']")) # from line 298, col 44.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['ats_editor_plain']")) # from line 298, col 44.
+        write('''</option>
 \t<option value="wizzard" selected="selected">''')
         _v = VFFSL(SL,"tstrings",True)['ats_editor_wizzard'] # u"$tstrings['ats_editor_wizzard']" on line 299, col 46
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_editor_wizzard']")) # from line 299, col 46.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['ats_editor_wizzard']")) # from line 299, col 46.
+        write('''</option>
 </select>
 
 </fieldset>
--- ./plugin/controllers/views/ajax/bouquets.py	(original)
+++ ./plugin/controllers/views/ajax/bouquets.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -61,7 +62,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -71,7 +72,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -84,7 +85,7 @@
         ########################################
         ## START - generated method body
         
-        write(u'''<script>
+        write('''<script>
 $(function() { InitAccordeon("#accordion");});
 function pl(bq,bn) {
 var plf = GetLSValue(\'pl\',\'m3u\');
@@ -94,37 +95,37 @@
 <div id="accordion">
 ''')
         for bouquet in VFFSL(SL,"bouquets",True): # generated from line 11, col 1
-            write(u'''<h1>
+            write('''<h1>
 <div style="display:inline-block">
 <span onclick="pl(\'''')
             _v = VFFSL(SL,"quote",False)(VFFSL(SL,"bouquet",True)[0]) # u'$quote($bouquet[0])' on line 14, col 20
-            if _v is not None: write(_filter(_v, rawExpr=u'$quote($bouquet[0])')) # from line 14, col 20.
-            write(u"""','""")
+            if _v is not None: write(_filter(_v, rawExpr='$quote($bouquet[0])')) # from line 14, col 20.
+            write("""','""")
             _v = VFFSL(SL,"quote",False)(VFFSL(SL,"bouquet",True)[1]) # u'$quote($bouquet[1])' on line 14, col 42
-            if _v is not None: write(_filter(_v, rawExpr=u'$quote($bouquet[1])')) # from line 14, col 42.
-            write(u'''\');return false;" style="margin-left:10px;margin-right:10px;" title="''')
+            if _v is not None: write(_filter(_v, rawExpr='$quote($bouquet[1])')) # from line 14, col 42.
+            write('''\');return false;" style="margin-left:10px;margin-right:10px;" title="''')
             _v = VFFSL(SL,"tstrings",True)['download_playlist'] # u"$tstrings['download_playlist']" on line 14, col 130
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['download_playlist']")) # from line 14, col 130.
-            write(u''' ''')
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['download_playlist']")) # from line 14, col 130.
+            write(''' ''')
             _v = VFFSL(SL,"bouquet",True)[1] # u'$bouquet[1]' on line 14, col 161
-            if _v is not None: write(_filter(_v, rawExpr=u'$bouquet[1]')) # from line 14, col 161.
-            write(u'''" ><i class="fa fa-desktop"></i></span>
+            if _v is not None: write(_filter(_v, rawExpr='$bouquet[1]')) # from line 14, col 161.
+            write('''" ><i class="fa fa-desktop"></i></span>
 <a style="display: inline-block;" href="#" id="ajax/channels?id=''')
             _v = VFFSL(SL,"quote",False)(VFFSL(SL,"bouquet",True)[0]) # u'$quote($bouquet[0])' on line 15, col 65
-            if _v is not None: write(_filter(_v, rawExpr=u'$quote($bouquet[0])')) # from line 15, col 65.
-            write(u'''&stype=''')
+            if _v is not None: write(_filter(_v, rawExpr='$quote($bouquet[0])')) # from line 15, col 65.
+            write('''&stype=''')
             _v = VFFSL(SL,"stype",True) # u'$stype' on line 15, col 91
-            if _v is not None: write(_filter(_v, rawExpr=u'$stype')) # from line 15, col 91.
-            write(u'''">''')
+            if _v is not None: write(_filter(_v, rawExpr='$stype')) # from line 15, col 91.
+            write('''">''')
             _v = VFFSL(SL,"bouquet",True)[1] # u'$bouquet[1]' on line 15, col 99
-            if _v is not None: write(_filter(_v, rawExpr=u'$bouquet[1]')) # from line 15, col 99.
-            write(u'''</a>
+            if _v is not None: write(_filter(_v, rawExpr='$bouquet[1]')) # from line 15, col 99.
+            write('''</a>
 </div></h1><div>''')
             _v = VFFSL(SL,"tstrings",True)["loading"] # u'$tstrings["loading"]' on line 16, col 17
-            if _v is not None: write(_filter(_v, rawExpr=u'$tstrings["loading"]')) # from line 16, col 17.
-            write(u''' ...</div>
+            if _v is not None: write(_filter(_v, rawExpr='$tstrings["loading"]')) # from line 16, col 17.
+            write(''' ...</div>
 ''')
-        write(u'''</div>
+        write('''</div>
 ''')
         
         ########################################
--- ./plugin/controllers/views/ajax/boxinfo.py	(original)
+++ ./plugin/controllers/views/ajax/boxinfo.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -60,7 +61,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -70,7 +71,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,18 +84,18 @@
         ########################################
         ## START - generated method body
         
-        write(u'''<!-- box_info -->
+        write('''<!-- box_info -->
 <div id="content_main" class="ui-widget-content">
 \t<div id="info">
 \t\t<h3 class="ui-widget-header">''')
         _v = VFFSL(SL,"tstrings",True)['box_info'] # u"$tstrings['box_info']" on line 5, col 32
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['box_info']")) # from line 5, col 32.
-        write(u'''</h3>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['box_info']")) # from line 5, col 32.
+        write('''</h3>
 \t\t<hr />
 \t\t<img src="images/boxes/''')
         _v = VFFSL(SL,"boximage",True) # u'${boximage}' on line 7, col 26
-        if _v is not None: write(_filter(_v, rawExpr=u'${boximage}')) # from line 7, col 26.
-        write(u'''" id="box_image" alt="box_info">
+        if _v is not None: write(_filter(_v, rawExpr='${boximage}')) # from line 7, col 26.
+        write('''" id="box_image" alt="box_info">
 \t\t<hr />
 \t\t<br/>
 \t\t<table width="100%">
@@ -104,54 +105,54 @@
 \t\t\t\t\t\t<tr>
 \t\t\t\t\t\t\t<th colspan="2" class="ui-widget-header">''')
         _v = VFFSL(SL,"tstrings",True)['box'] # u"$tstrings['box']" on line 15, col 49
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['box']")) # from line 15, col 49.
-        write(u'''</th>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['box']")) # from line 15, col 49.
+        write('''</th>
 \t\t\t\t\t\t</tr>
 \t\t\t\t\t\t<tr>
 \t\t\t\t\t\t\t<td class="infoleft">''')
         _v = VFFSL(SL,"tstrings",True)['brand'] # u"$tstrings['brand']" on line 18, col 29
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['brand']")) # from line 18, col 29.
-        write(u''' & ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['brand']")) # from line 18, col 29.
+        write(''' & ''')
         _v = VFFSL(SL,"tstrings",True)['model'] # u"$tstrings['model']" on line 18, col 50
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['model']")) # from line 18, col 50.
-        write(u''':</td>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['model']")) # from line 18, col 50.
+        write(''':</td>
 \t\t\t\t\t\t\t<td class="inforight">''')
         _v = VFFSL(SL,"brand",True) # u'$brand' on line 19, col 30
-        if _v is not None: write(_filter(_v, rawExpr=u'$brand')) # from line 19, col 30.
-        write(u''' ''')
+        if _v is not None: write(_filter(_v, rawExpr='$brand')) # from line 19, col 30.
+        write(''' ''')
         _v = VFFSL(SL,"model",True) # u'$model' on line 19, col 37
-        if _v is not None: write(_filter(_v, rawExpr=u'$model')) # from line 19, col 37.
-        write(u'''</td>
+        if _v is not None: write(_filter(_v, rawExpr='$model')) # from line 19, col 37.
+        write('''</td>
 \t\t\t\t\t\t</tr>
 \t\t\t\t\t\t<tr>
 \t\t\t\t\t\t\t<td class="infoleft">''')
         _v = VFFSL(SL,"friendlychipsetdescription",True) # u'$friendlychipsetdescription' on line 22, col 29
-        if _v is not None: write(_filter(_v, rawExpr=u'$friendlychipsetdescription')) # from line 22, col 29.
-        write(u''':</td>
+        if _v is not None: write(_filter(_v, rawExpr='$friendlychipsetdescription')) # from line 22, col 29.
+        write(''':</td>
 \t\t\t\t\t\t\t<td class="inforight">''')
         _v = VFFSL(SL,"friendlychipsettext",True) # u'$friendlychipsettext' on line 23, col 30
-        if _v is not None: write(_filter(_v, rawExpr=u'$friendlychipsettext')) # from line 23, col 30.
-        write(u'''</td>
+        if _v is not None: write(_filter(_v, rawExpr='$friendlychipsettext')) # from line 23, col 30.
+        write('''</td>
 \t\t\t\t\t\t</tr>
 \t\t\t\t\t\t<tr>
 \t\t\t\t\t\t\t<td class="infoleft">''')
         _v = VFFSL(SL,"tstrings",True)['main_memory'] # u"$tstrings['main_memory']" on line 26, col 29
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['main_memory']")) # from line 26, col 29.
-        write(u''':</td>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['main_memory']")) # from line 26, col 29.
+        write(''':</td>
 \t\t\t\t\t\t\t<td class="inforight">''')
         _v = VFFSL(SL,"mem3",True) # u'$mem3' on line 27, col 30
-        if _v is not None: write(_filter(_v, rawExpr=u'$mem3')) # from line 27, col 30.
-        write(u'''</td>
+        if _v is not None: write(_filter(_v, rawExpr='$mem3')) # from line 27, col 30.
+        write('''</td>
 \t\t\t\t\t\t</tr>
 \t\t\t\t\t\t<tr>
 \t\t\t\t\t\t\t<td class="infoleft">''')
         _v = VFFSL(SL,"tstrings",True)['box_uptime'] # u"$tstrings['box_uptime']" on line 30, col 29
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['box_uptime']")) # from line 30, col 29.
-        write(u''':</td>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['box_uptime']")) # from line 30, col 29.
+        write(''':</td>
 \t\t\t\t\t\t\t<td class="inforight">''')
         _v = VFFSL(SL,"uptime",True) # u'$uptime' on line 31, col 30
-        if _v is not None: write(_filter(_v, rawExpr=u'$uptime')) # from line 31, col 30.
-        write(u'''</td>
+        if _v is not None: write(_filter(_v, rawExpr='$uptime')) # from line 31, col 30.
+        write('''</td>
 \t\t\t\t\t\t</tr>
 \t\t\t\t\t</table>
 \t\t\t\t</td>
@@ -162,50 +163,50 @@
 \t\t\t\t\t\t<tr>
 \t\t\t\t\t\t\t<th colspan="2" class="ui-widget-header">''')
         _v = VFFSL(SL,"tstrings",True)['software'] # u"$tstrings['software']" on line 40, col 49
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['software']")) # from line 40, col 49.
-        write(u'''</th>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['software']")) # from line 40, col 49.
+        write('''</th>
 \t\t\t\t\t\t</tr>
 \t\t\t\t\t\t<tr>
 \t\t\t\t\t\t\t<td class="infoleft">''')
         _v = VFFSL(SL,"tstrings",True)['oe_version'] # u"$tstrings['oe_version']" on line 43, col 29
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['oe_version']")) # from line 43, col 29.
-        write(u''':</td>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['oe_version']")) # from line 43, col 29.
+        write(''':</td>
 \t\t\t\t\t\t\t<td class="inforight">''')
         _v = VFFSL(SL,"oever",True) # u'$oever' on line 44, col 30
-        if _v is not None: write(_filter(_v, rawExpr=u'$oever')) # from line 44, col 30.
-        write(u'''</td>
+        if _v is not None: write(_filter(_v, rawExpr='$oever')) # from line 44, col 30.
+        write('''</td>
 \t\t\t\t\t\t</tr>
 \t\t\t\t\t\t<tr>
 \t\t\t\t\t\t\t<td class="infoleft">''')
         _v = VFFSL(SL,"tstrings",True)['firmware_version'] # u"$tstrings['firmware_version']" on line 47, col 29
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['firmware_version']")) # from line 47, col 29.
-        write(u''':</td>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['firmware_version']")) # from line 47, col 29.
+        write(''':</td>
 \t\t\t\t\t\t\t<td class="inforight">''')
         _v = VFFSL(SL,"friendlyimagedistro",True) # u'$friendlyimagedistro' on line 48, col 30
-        if _v is not None: write(_filter(_v, rawExpr=u'$friendlyimagedistro')) # from line 48, col 30.
-        write(u''' ''')
+        if _v is not None: write(_filter(_v, rawExpr='$friendlyimagedistro')) # from line 48, col 30.
+        write(''' ''')
         _v = VFFSL(SL,"imagever",True) # u'$imagever' on line 48, col 51
-        if _v is not None: write(_filter(_v, rawExpr=u'$imagever')) # from line 48, col 51.
-        write(u''' (''')
+        if _v is not None: write(_filter(_v, rawExpr='$imagever')) # from line 48, col 51.
+        write(''' (''')
         _v = VFFSL(SL,"enigmaver",True) # u'$enigmaver' on line 48, col 62
-        if _v is not None: write(_filter(_v, rawExpr=u'$enigmaver')) # from line 48, col 62.
-        write(u''')</td>
+        if _v is not None: write(_filter(_v, rawExpr='$enigmaver')) # from line 48, col 62.
+        write(''')</td>
 \t\t\t\t\t\t</tr>
 \t\t\t\t\t\t<tr>
 \t\t\t\t\t\t\t<td class="infoleft">''')
         _v = VFFSL(SL,"tstrings",True)['kernel_version'] # u"$tstrings['kernel_version']" on line 51, col 29
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['kernel_version']")) # from line 51, col 29.
-        write(u''' / ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['kernel_version']")) # from line 51, col 29.
+        write(''' / ''')
         _v = VFFSL(SL,"tstrings",True)['driver_date'] # u"$tstrings['driver_date']" on line 51, col 59
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['driver_date']")) # from line 51, col 59.
-        write(u''':</td>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['driver_date']")) # from line 51, col 59.
+        write(''':</td>
 \t\t\t\t\t\t\t<td class="inforight">''')
         _v = VFFSL(SL,"kernelver",True) # u'$kernelver' on line 52, col 30
-        if _v is not None: write(_filter(_v, rawExpr=u'$kernelver')) # from line 52, col 30.
-        write(u''' / ''')
+        if _v is not None: write(_filter(_v, rawExpr='$kernelver')) # from line 52, col 30.
+        write(''' / ''')
         _v = VFFSL(SL,"driverdate",True) # u'$driverdate' on line 52, col 43
-        if _v is not None: write(_filter(_v, rawExpr=u'$driverdate')) # from line 52, col 43.
-        write(u'''</td>
+        if _v is not None: write(_filter(_v, rawExpr='$driverdate')) # from line 52, col 43.
+        write('''</td>
 \t\t\t\t\t\t</tr>
 \t\t\t\t\t</table>
 \t\t\t\t</td>
@@ -216,45 +217,45 @@
 \t\t\t\t\t\t<tr>
 \t\t\t\t\t\t\t<th colspan="2" class="ui-widget-header">''')
         _v = VFFSL(SL,"tstrings",True)['tuners'] # u"$tstrings['tuners']" on line 61, col 49
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['tuners']")) # from line 61, col 49.
-        write(u'''</th>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['tuners']")) # from line 61, col 49.
+        write('''</th>
 \t\t\t\t\t\t</tr>
 ''')
         for tuner in VFFSL(SL,"tuners",True): # generated from line 63, col 7
-            write(u'''\t\t\t\t\t\t<tr>
+            write('''\t\t\t\t\t\t<tr>
 \t\t\t\t\t\t\t<td class="infoleft" style="vertical-align:text-top;">''')
             _v = VFFSL(SL,"tuner.name",True) # u'$tuner.name' on line 65, col 62
-            if _v is not None: write(_filter(_v, rawExpr=u'$tuner.name')) # from line 65, col 62.
-            write(u'''</td>
+            if _v is not None: write(_filter(_v, rawExpr='$tuner.name')) # from line 65, col 62.
+            write('''</td>
 \t\t\t\t\t\t\t<td class="inforight">
 \t\t\t\t\t\t\t\t''')
             _v = VFFSL(SL,"tuner.type",True) # u'$tuner.type' on line 67, col 9
-            if _v is not None: write(_filter(_v, rawExpr=u'$tuner.type')) # from line 67, col 9.
-            write(u'''<br>
+            if _v is not None: write(_filter(_v, rawExpr='$tuner.type')) # from line 67, col 9.
+            write('''<br>
 ''')
             if VFFSL(SL,"tuner.live",True) != '': # generated from line 68, col 10
-                write(u"""\t\t\t\t\t\t\t\t\t\t<div class='tled-box'><div class='tled green'></div></div>""")
+                write("""\t\t\t\t\t\t\t\t\t\t<div class='tled-box'><div class='tled green'></div></div>""")
                 _v = VFFSL(SL,"tuner.live",True) # u'$tuner.live' on line 69, col 69
-                if _v is not None: write(_filter(_v, rawExpr=u'$tuner.live')) # from line 69, col 69.
-                write(u'''<br>
+                if _v is not None: write(_filter(_v, rawExpr='$tuner.live')) # from line 69, col 69.
+                write('''<br>
 ''')
             if VFFSL(SL,"tuner.rec",True) != '': # generated from line 71, col 10
-                write(u"""\t\t\t\t\t\t\t\t\t\t<div class='tled-box'><div class='tled red'></div></div>""")
+                write("""\t\t\t\t\t\t\t\t\t\t<div class='tled-box'><div class='tled red'></div></div>""")
                 _v = VFFSL(SL,"tuner.rec",True) # u'$tuner.rec' on line 72, col 67
-                if _v is not None: write(_filter(_v, rawExpr=u'$tuner.rec')) # from line 72, col 67.
-                write(u'''<br>
-''')
-            write(u'''\t\t\t\t\t\t\t</div>
+                if _v is not None: write(_filter(_v, rawExpr='$tuner.rec')) # from line 72, col 67.
+                write('''<br>
+''')
+            write('''\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t</td>
 \t\t\t\t\t\t</tr>
 ''')
         if VFFSL(SL,"EX",True) != '': # generated from line 78, col 7
-            write(u'''\t\t\t\t\t\t<tr><td colspan="2">''')
+            write('''\t\t\t\t\t\t<tr><td colspan="2">''')
             _v = VFFSL(SL,"EX",True) # u'$EX' on line 79, col 27
-            if _v is not None: write(_filter(_v, rawExpr=u'$EX')) # from line 79, col 27.
-            write(u'''</td></tr>
-''')
-        write(u'''<!--\t\t\t\t\t<tr><td colspan="2">
+            if _v is not None: write(_filter(_v, rawExpr='$EX')) # from line 79, col 27.
+            write('''</td></tr>
+''')
+        write('''<!--\t\t\t\t\t<tr><td colspan="2">
 \t\t\t\t\t\t<div class=\'tled-box\'><div class=\'tled black\'></div></div>free
 \t\t\t\t\t\t<div class=\'tled-box\'><div class=\'tled green\'></div></div>Live
 \t\t\t\t\t\t<div class=\'tled-box\'><div class=\'tled red\'></div></div>Record or Stream
@@ -265,195 +266,195 @@
 \t\t\t</tr>
 ''')
         if VFFSL(SL,"len",False)(VFFSL(SL,"streams",True)) > 0: # generated from line 90, col 4
-            write(u'''\t\t\t<tr>
+            write('''\t\t\t<tr>
 \t\t\t\t<td width="100%">
 \t\t\t\t\t<table cellspacing="0" class="infomain ui-widget-content" >
 \t\t\t\t\t\t<tr>
 \t\t\t\t\t\t\t<th colspan="2" class="ui-widget-header">''')
             _v = VFFSL(SL,"tstrings",True)['streamclients'] # u"$tstrings['streamclients']" on line 95, col 49
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['streamclients']")) # from line 95, col 49.
-            write(u'''</th>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['streamclients']")) # from line 95, col 49.
+            write('''</th>
 \t\t\t\t\t\t</tr>
 ''')
             for stream in VFFSL(SL,"streams",True): # generated from line 97, col 7
-                write(u'''\t\t\t\t\t\t<tr>
+                write('''\t\t\t\t\t\t<tr>
 \t\t\t\t\t\t\t<td class="infoleft" style="vertical-align:text-top;">''')
                 _v = VFFSL(SL,"stream.ip",True) # u'$stream.ip' on line 99, col 62
-                if _v is not None: write(_filter(_v, rawExpr=u'$stream.ip')) # from line 99, col 62.
-                write(u'''</td>
+                if _v is not None: write(_filter(_v, rawExpr='$stream.ip')) # from line 99, col 62.
+                write('''</td>
 \t\t\t\t\t\t\t<td class="inforight">
 ''')
                 if VFFSL(SL,"stream.type",True) == 'T': # generated from line 101, col 10
-                    write(u'''\t\t\t\t\t\t\t\t\t\t''')
+                    write('''\t\t\t\t\t\t\t\t\t\t''')
                     _v = VFFSL(SL,"stream.name",True) # u'$stream.name' on line 102, col 11
-                    if _v is not None: write(_filter(_v, rawExpr=u'$stream.name')) # from line 102, col 11.
-                    write(u''' / (''')
+                    if _v is not None: write(_filter(_v, rawExpr='$stream.name')) # from line 102, col 11.
+                    write(''' / (''')
                     _v = VFFSL(SL,"tstrings",True)['transcoded'] # u"$tstrings['transcoded']" on line 102, col 27
-                    if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['transcoded']")) # from line 102, col 27.
-                    write(u''')
+                    if _v is not None: write(_filter(_v, rawExpr="$tstrings['transcoded']")) # from line 102, col 27.
+                    write(''')
 ''')
                 else: # generated from line 103, col 10
-                    write(u'''\t\t\t\t\t\t\t\t\t\t''')
+                    write('''\t\t\t\t\t\t\t\t\t\t''')
                     _v = VFFSL(SL,"stream.name",True) # u'$stream.name' on line 104, col 11
-                    if _v is not None: write(_filter(_v, rawExpr=u'$stream.name')) # from line 104, col 11.
-                    write(u'''
-''')
-                write(u'''\t\t\t\t\t\t\t</div>
+                    if _v is not None: write(_filter(_v, rawExpr='$stream.name')) # from line 104, col 11.
+                    write('''
+''')
+                write('''\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t</td>
 \t\t\t\t\t\t</tr>
 ''')
-            write(u'''\t\t\t\t\t</table>
+            write('''\t\t\t\t\t</table>
 \t\t\t\t</td>
 \t\t\t</tr>
 ''')
         for hd in VFFSL(SL,"hdd",True): # generated from line 114, col 4
-            write(u'''\t\t\t<tr>
+            write('''\t\t\t<tr>
 \t\t\t\t<td width="100%">
 \t\t\t\t\t<table cellspacing="0" class="infomain ui-widget-content" >
 \t\t\t\t\t\t<tr>
 \t\t\t\t\t\t\t<th colspan="2" class="ui-widget-header">''')
             _v = VFFSL(SL,"tstrings",True)['hdd_model'] # u"$tstrings['hdd_model']" on line 119, col 49
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['hdd_model']")) # from line 119, col 49.
-            write(u''': ''')
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['hdd_model']")) # from line 119, col 49.
+            write(''': ''')
             _v = VFFSL(SL,"hd.model",True) # u'$hd.model' on line 119, col 73
-            if _v is not None: write(_filter(_v, rawExpr=u'$hd.model')) # from line 119, col 73.
-            write(u'''</th>
+            if _v is not None: write(_filter(_v, rawExpr='$hd.model')) # from line 119, col 73.
+            write('''</th>
 \t\t\t\t\t\t</tr>
 \t\t\t\t\t\t<tr>
 \t\t\t\t\t\t\t<td class="infoleft">''')
             _v = VFFSL(SL,"tstrings",True)['capacity'] # u"$tstrings['capacity']" on line 122, col 29
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['capacity']")) # from line 122, col 29.
-            write(u''':</td>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['capacity']")) # from line 122, col 29.
+            write(''':</td>
 \t\t\t\t\t\t\t<td class="inforight">''')
             _v = VFFSL(SL,"hd.friendlycapacity",True) # u'$hd.friendlycapacity' on line 123, col 30
-            if _v is not None: write(_filter(_v, rawExpr=u'$hd.friendlycapacity')) # from line 123, col 30.
-            write(u''' (''')
+            if _v is not None: write(_filter(_v, rawExpr='$hd.friendlycapacity')) # from line 123, col 30.
+            write(''' (''')
             _v = VFFSL(SL,"hd.mount",True) # u'$hd.mount' on line 123, col 52
-            if _v is not None: write(_filter(_v, rawExpr=u'$hd.mount')) # from line 123, col 52.
-            write(u''')</td>
+            if _v is not None: write(_filter(_v, rawExpr='$hd.mount')) # from line 123, col 52.
+            write(''')</td>
 \t\t\t\t\t\t</tr>
 \t\t\t\t\t</table>
 \t\t\t\t</td>
 \t\t\t</tr>
 ''')
         if VFFSL(SL,"shares",True): # generated from line 129, col 4
-            write(u'''\t\t\t<tr>
+            write('''\t\t\t<tr>
 \t\t\t\t<td width="100%">
 \t\t\t\t\t<table cellspacing="0" class="infomain ui-widget-content" >
 \t\t\t\t\t\t<tr>
 \t\t\t\t\t\t\t<th colspan="2" class="ui-widget-header">''')
             _v = VFFSL(SL,"tstrings",True)['networkshares'] # u"$tstrings['networkshares']" on line 134, col 49
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['networkshares']")) # from line 134, col 49.
-            write(u''':</th>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['networkshares']")) # from line 134, col 49.
+            write(''':</th>
 \t\t\t\t\t\t</tr>
 ''')
             for share in VFFSL(SL,"shares",True): # generated from line 136, col 7
-                write(u'''\t\t\t\t\t\t<tr>
+                write('''\t\t\t\t\t\t<tr>
 \t\t\t\t\t\t\t<td class="infoleft">''')
                 _v = VFFSL(SL,"share.name",True) # u'$share.name' on line 138, col 29
-                if _v is not None: write(_filter(_v, rawExpr=u'$share.name')) # from line 138, col 29.
-                write(u''':</td>
+                if _v is not None: write(_filter(_v, rawExpr='$share.name')) # from line 138, col 29.
+                write(''':</td>
 \t\t\t\t\t\t\t<td class="inforight">''')
                 _v = VFFSL(SL,"share.type",True) # u'$share.type' on line 139, col 30
-                if _v is not None: write(_filter(_v, rawExpr=u'$share.type')) # from line 139, col 30.
-                write(u''' ''')
+                if _v is not None: write(_filter(_v, rawExpr='$share.type')) # from line 139, col 30.
+                write(''' ''')
                 _v = VFFSL(SL,"tstrings",True)['using'] # u"$tstrings['using']" on line 139, col 42
-                if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['using']")) # from line 139, col 42.
-                write(u''' ''')
+                if _v is not None: write(_filter(_v, rawExpr="$tstrings['using']")) # from line 139, col 42.
+                write(''' ''')
                 _v = VFFSL(SL,"share.method",True) # u'$share.method' on line 139, col 61
-                if _v is not None: write(_filter(_v, rawExpr=u'$share.method')) # from line 139, col 61.
-                write(u''': ''')
+                if _v is not None: write(_filter(_v, rawExpr='$share.method')) # from line 139, col 61.
+                write(''': ''')
                 _v = VFFSL(SL,"share.path",True) # u'$share.path' on line 139, col 76
-                if _v is not None: write(_filter(_v, rawExpr=u'$share.path')) # from line 139, col 76.
-                write(u''' (''')
+                if _v is not None: write(_filter(_v, rawExpr='$share.path')) # from line 139, col 76.
+                write(''' (''')
                 _v = VFFSL(SL,"share.friendlyaddress",True) # u'$share.friendlyaddress' on line 139, col 89
-                if _v is not None: write(_filter(_v, rawExpr=u'$share.friendlyaddress')) # from line 139, col 89.
-                write(u''')</td>
-\t\t\t\t\t\t</tr>
-''')
-            write(u'''\t\t\t\t\t</table>
+                if _v is not None: write(_filter(_v, rawExpr='$share.friendlyaddress')) # from line 139, col 89.
+                write(''')</td>
+\t\t\t\t\t\t</tr>
+''')
+            write('''\t\t\t\t\t</table>
 \t\t\t\t</td>
 \t\t\t</tr>
 ''')
         for iface in VFFSL(SL,"ifaces",True): # generated from line 146, col 4
-            write(u'''\t\t\t<tr>
+            write('''\t\t\t<tr>
 \t\t\t\t<td width="100%">
 \t\t\t\t\t<table cellspacing="0" class="infomain ui-widget-content" >
 \t\t\t\t\t\t<tr>
 \t\t\t\t\t\t\t<th colspan="2" class="ui-widget-header">''')
             _v = VFFSL(SL,"tstrings",True)['network_interface'] # u"$tstrings['network_interface']" on line 151, col 49
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['network_interface']")) # from line 151, col 49.
-            write(u''': ''')
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['network_interface']")) # from line 151, col 49.
+            write(''': ''')
             _v = VFFSL(SL,"iface.name",True) # u'$iface.name' on line 151, col 81
-            if _v is not None: write(_filter(_v, rawExpr=u'$iface.name')) # from line 151, col 81.
-            write(u''' (''')
+            if _v is not None: write(_filter(_v, rawExpr='$iface.name')) # from line 151, col 81.
+            write(''' (''')
             _v = VFFSL(SL,"iface.friendlynic",True) # u'$iface.friendlynic' on line 151, col 94
-            if _v is not None: write(_filter(_v, rawExpr=u'$iface.friendlynic')) # from line 151, col 94.
-            write(u''')</th>
+            if _v is not None: write(_filter(_v, rawExpr='$iface.friendlynic')) # from line 151, col 94.
+            write(''')</th>
 \t\t\t\t\t\t</tr>
 \t\t\t\t\t\t<tr>
 \t\t\t\t\t\t\t<td class="infoleft">''')
             _v = VFFSL(SL,"tstrings",True)['linkspeed'] # u"$tstrings['linkspeed']" on line 154, col 29
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['linkspeed']")) # from line 154, col 29.
-            write(u''':</td>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['linkspeed']")) # from line 154, col 29.
+            write(''':</td>
 \t\t\t\t\t\t\t<td class="inforight">''')
             _v = VFFSL(SL,"iface.linkspeed",True) # u'$iface.linkspeed' on line 155, col 30
-            if _v is not None: write(_filter(_v, rawExpr=u'$iface.linkspeed')) # from line 155, col 30.
-            write(u'''</td>
+            if _v is not None: write(_filter(_v, rawExpr='$iface.linkspeed')) # from line 155, col 30.
+            write('''</td>
 \t\t\t\t\t\t</tr>
 \t\t\t\t\t\t<tr>
 \t\t\t\t\t\t\t<td class="infoleft">''')
             _v = VFFSL(SL,"tstrings",True)['mac_address'] # u"$tstrings['mac_address']" on line 158, col 29
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['mac_address']")) # from line 158, col 29.
-            write(u''':</td>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['mac_address']")) # from line 158, col 29.
+            write(''':</td>
 \t\t\t\t\t\t\t<td class="inforight">''')
             _v = VFFSL(SL,"iface.mac",True) # u'$iface.mac' on line 159, col 30
-            if _v is not None: write(_filter(_v, rawExpr=u'$iface.mac')) # from line 159, col 30.
-            write(u'''</td>
+            if _v is not None: write(_filter(_v, rawExpr='$iface.mac')) # from line 159, col 30.
+            write('''</td>
 \t\t\t\t\t\t</tr>
 \t\t\t\t\t\t<tr>
 \t\t\t\t\t\t\t<td class="infoleft">''')
             _v = VFFSL(SL,"tstrings",True)['ipv6_address'] # u"$tstrings['ipv6_address']" on line 162, col 29
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ipv6_address']")) # from line 162, col 29.
-            write(u''':</td>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['ipv6_address']")) # from line 162, col 29.
+            write(''':</td>
 \t\t\t\t\t\t\t<td class="inforight">''')
             _v = VFFSL(SL,"iface.ipv6",True) # u'$iface.ipv6' on line 163, col 30
-            if _v is not None: write(_filter(_v, rawExpr=u'$iface.ipv6')) # from line 163, col 30.
-            write(u''' (''')
+            if _v is not None: write(_filter(_v, rawExpr='$iface.ipv6')) # from line 163, col 30.
+            write(''' (''')
             _v = VFFSL(SL,"iface.ipmethod",True) # u'$iface.ipmethod' on line 163, col 43
-            if _v is not None: write(_filter(_v, rawExpr=u'$iface.ipmethod')) # from line 163, col 43.
-            write(u''')</td>
+            if _v is not None: write(_filter(_v, rawExpr='$iface.ipmethod')) # from line 163, col 43.
+            write(''')</td>
 \t\t\t\t\t\t</tr>
 ''')
             if VFFSL(SL,"iface.ip",True) != "0.0.0.0": # generated from line 165, col 7
-                write(u'''\t\t\t\t\t\t\t<tr>
+                write('''\t\t\t\t\t\t\t<tr>
 \t\t\t\t\t\t\t\t<td class="infoleft">''')
                 _v = VFFSL(SL,"tstrings",True)['ipv4_address'] # u"$tstrings['ipv4_address']" on line 167, col 30
-                if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ipv4_address']")) # from line 167, col 30.
-                write(u''':</td>
+                if _v is not None: write(_filter(_v, rawExpr="$tstrings['ipv4_address']")) # from line 167, col 30.
+                write(''':</td>
 \t\t\t\t\t\t\t\t<td class="inforight">''')
                 _v = VFFSL(SL,"iface.ip",True) # u'$iface.ip' on line 168, col 31
-                if _v is not None: write(_filter(_v, rawExpr=u'$iface.ip')) # from line 168, col 31.
-                write(u'''/''')
+                if _v is not None: write(_filter(_v, rawExpr='$iface.ip')) # from line 168, col 31.
+                write('''/''')
                 _v = VFFSL(SL,"iface.v4prefix",True) # u'$iface.v4prefix' on line 168, col 41
-                if _v is not None: write(_filter(_v, rawExpr=u'$iface.v4prefix')) # from line 168, col 41.
-                write(u''' ''')
+                if _v is not None: write(_filter(_v, rawExpr='$iface.v4prefix')) # from line 168, col 41.
+                write(''' ''')
                 _v = VFFSL(SL,"tstrings",True)['via'] # u"$tstrings['via']" on line 168, col 57
-                if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['via']")) # from line 168, col 57.
-                write(u''' ''')
+                if _v is not None: write(_filter(_v, rawExpr="$tstrings['via']")) # from line 168, col 57.
+                write(''' ''')
                 _v = VFFSL(SL,"iface.gw",True) # u'$iface.gw' on line 168, col 74
-                if _v is not None: write(_filter(_v, rawExpr=u'$iface.gw')) # from line 168, col 74.
-                write(u''' (''')
+                if _v is not None: write(_filter(_v, rawExpr='$iface.gw')) # from line 168, col 74.
+                write(''' (''')
                 _v = VFFSL(SL,"iface.ipv4method",True) # u'$iface.ipv4method' on line 168, col 85
-                if _v is not None: write(_filter(_v, rawExpr=u'$iface.ipv4method')) # from line 168, col 85.
-                write(u''')</td>
+                if _v is not None: write(_filter(_v, rawExpr='$iface.ipv4method')) # from line 168, col 85.
+                write(''')</td>
 \t\t\t\t\t\t\t</tr>
 ''')
-            write(u'''\t\t\t\t\t</table>
-\t\t\t\t</td>
-\t\t\t</tr>
-''')
-        write(u'''\t\t</table>
+            write('''\t\t\t\t\t</table>
+\t\t\t\t</td>
+\t\t\t</tr>
+''')
+        write('''\t\t</table>
 \t</div>
 </div>\t
 <!-- /box_info -->
--- ./plugin/controllers/views/ajax/bqe.py	(original)
+++ ./plugin/controllers/views/ajax/bqe.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -60,7 +61,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -70,7 +71,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -84,13 +85,13 @@
         ## START - generated method body
         
         _orig_filter_16948939 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<style>
+        write('''<style>
 .select { width: 100%; }
 .sortable { list-style-type: none; margin: 0; padding: 0; width: 200px; }
 .sortable li { margin: 0 1px 1px 2px; padding-left: 1.5em; font-size: .8em;  height:20px;}
@@ -106,8 +107,8 @@
 \t\t<div id="info">
 \t\t<h3 class="ui-widget-header">''')
         _v = VFFSL(SL,"tstrings",True)['Bouquet_Editor'] # u"$tstrings['Bouquet_Editor']" on line 17, col 32
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['Bouquet_Editor']")) # from line 17, col 32.
-        write(u'''</h3>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['Bouquet_Editor']")) # from line 17, col 32.
+        write('''</h3>
 \t\t<div style="display: inline-block; width: 100%; zoom: 1;height: 700px;">
 \t\t<div style="width:50%; height:50%; float:left">
 \t\t<div style="padding:5px;">
@@ -115,26 +116,26 @@
 \t\t\t<span id="tb1">
 \t\t\t\t<input type="radio" id="toolbar-choose-tv" name="tb1" checked="checked" /><label for="toolbar-choose-tv">''')
         _v = VFFSL(SL,"tstrings",True)['tv'] # u"$tstrings['tv']" on line 23, col 110
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['tv']")) # from line 23, col 110.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['tv']")) # from line 23, col 110.
+        write('''</label>
 \t\t\t\t<input type="radio" id="toolbar-choose-radio" name="tb1"/><label for="toolbar-choose-radio">''')
         _v = VFFSL(SL,"tstrings",True)['radio'] # u"$tstrings['radio']" on line 24, col 97
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['radio']")) # from line 24, col 97.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['radio']")) # from line 24, col 97.
+        write('''</label>
 \t\t\t</span>
 \t\t\t<span id="tb2">
 \t\t\t\t<input type="radio" id="toolbar-choose-satellites" name="tb2" /><label for="toolbar-choose-satellites">''')
         _v = VFFSL(SL,"tstrings",True)['satellites'] # u"$tstrings['satellites']" on line 27, col 108
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['satellites']")) # from line 27, col 108.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['satellites']")) # from line 27, col 108.
+        write('''</label>
 \t\t\t\t<input type="radio" id="toolbar-choose-providers" name="tb2" checked="checked" /><label for="toolbar-choose-providers">''')
         _v = VFFSL(SL,"tstrings",True)['providers'] # u"$tstrings['providers']" on line 28, col 124
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['providers']")) # from line 28, col 124.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['providers']")) # from line 28, col 124.
+        write('''</label>
 \t\t\t\t<input type="radio" id="toolbar-choose-channels" name="tb2" /><label for="toolbar-choose-channels">''')
         _v = VFFSL(SL,"tstrings",True)['all_channels'] # u"$tstrings['all_channels']" on line 29, col 104
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['all_channels']")) # from line 29, col 104.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['all_channels']")) # from line 29, col 104.
+        write('''</label>
 \t\t\t</span>
 \t\t</div>
 \t\t<div id="sel0" style="height: 255px;overflow-y:scroll;margin:5px;">
@@ -143,14 +144,14 @@
 \t\t<div style="margin:5px;">
 \t\t\t<button id="btn-provider-add">''')
         _v = VFFSL(SL,"tstrings",True)['bqe_add_provider_as_bouquet'] # u"$tstrings['bqe_add_provider_as_bouquet']" on line 36, col 34
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['bqe_add_provider_as_bouquet']")) # from line 36, col 34.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['bqe_add_provider_as_bouquet']")) # from line 36, col 34.
+        write('''</button>
 \t\t</div>
 \t\t<div style="margin:5px;">
 \t\t\t''')
         _v = VFFSL(SL,"tstrings",True)['bqe_search'] # u"$tstrings['bqe_search']" on line 39, col 4
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['bqe_search']")) # from line 39, col 4.
-        write(u''': <input id="searchch" value="...">
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['bqe_search']")) # from line 39, col 4.
+        write(''': <input id="searchch" value="...">
 \t\t</div>
 \t\t<div id="sel1" style="height: 300px;overflow-y:scroll;margin:5px;">
 \t\t\t<ol id="channels" class="selectable"></ol>
@@ -158,12 +159,12 @@
 \t\t<div style="margin:5px 0 5px 0;">
 \t\t\t<button id="btn-channel-add">''')
         _v = VFFSL(SL,"tstrings",True)['bqe_add_channel'] # u"$tstrings['bqe_add_channel']" on line 45, col 33
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['bqe_add_channel']")) # from line 45, col 33.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['bqe_add_channel']")) # from line 45, col 33.
+        write('''</button>
 \t\t\t<button id="btn-alternative-add">''')
         _v = VFFSL(SL,"tstrings",True)['bqe_add_alternative'] # u"$tstrings['bqe_add_alternative']" on line 46, col 37
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['bqe_add_alternative']")) # from line 46, col 37.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['bqe_add_alternative']")) # from line 46, col 37.
+        write('''</button>
 \t\t</div>
 \t\t</div>
 \t\t</div>
@@ -173,16 +174,16 @@
 \t\t\t<span id="tb3">
 \t\t\t\t<button id="toolbar-bouquets-reload">''')
         _v = VFFSL(SL,"tstrings",True)['bqe_reload'] # u"$tstrings['bqe_reload']" on line 54, col 42
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['bqe_reload']")) # from line 54, col 42.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['bqe_reload']")) # from line 54, col 42.
+        write('''</button>
 \t\t\t\t<button id="toolbar-bouquets-export">''')
         _v = VFFSL(SL,"tstrings",True)['export'] # u"$tstrings['export']" on line 55, col 42
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['export']")) # from line 55, col 42.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['export']")) # from line 55, col 42.
+        write('''</button>
 \t\t\t\t<button id="toolbar-bouquets-import">''')
         _v = VFFSL(SL,"tstrings",True)['import'] # u"$tstrings['import']" on line 56, col 42
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['import']")) # from line 56, col 42.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['import']")) # from line 56, col 42.
+        write('''</button>
 \t\t\t</span>
 \t\t</div>
 \t\t<div style="padding:5px;">
@@ -192,16 +193,16 @@
 \t\t\t<div style="margin:5px 0 5px 0;">
 \t\t\t\t<button id="btn-bouquet-add">''')
         _v = VFFSL(SL,"tstrings",True)['bqe_add_bq'] # u"$tstrings['bqe_add_bq']" on line 64, col 34
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['bqe_add_bq']")) # from line 64, col 34.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['bqe_add_bq']")) # from line 64, col 34.
+        write('''</button>
 \t\t\t\t<button id="btn-bouquet-rename">''')
         _v = VFFSL(SL,"tstrings",True)['bqe_rename_bq'] # u"$tstrings['bqe_rename_bq']" on line 65, col 37
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['bqe_rename_bq']")) # from line 65, col 37.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['bqe_rename_bq']")) # from line 65, col 37.
+        write('''</button>
 \t\t\t\t<button id="btn-bouquet-delete">''')
         _v = VFFSL(SL,"tstrings",True)['bqe_delete_bq'] # u"$tstrings['bqe_delete_bq']" on line 66, col 37
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['bqe_delete_bq']")) # from line 66, col 37.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['bqe_delete_bq']")) # from line 66, col 37.
+        write('''</button>
 \t\t\t</div>
 \t\t\t<div id="sel3" style="height: 300px;overflow-y:scroll;">
 \t\t\t\t<ol id="bqs" class="selectable"></ol>
@@ -209,20 +210,20 @@
 \t\t\t<div style="margin:5px 0 5px 0;">
 \t\t\t\t<button id="btn-channel-delete">''')
         _v = VFFSL(SL,"tstrings",True)['delete'] # u"$tstrings['delete']" on line 72, col 37
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['delete']")) # from line 72, col 37.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['delete']")) # from line 72, col 37.
+        write('''</button>
 \t\t\t\t<button id="btn-marker-add">''')
         _v = VFFSL(SL,"tstrings",True)['bqe_add_marker'] # u"$tstrings['bqe_add_marker']" on line 73, col 33
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['bqe_add_marker']")) # from line 73, col 33.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['bqe_add_marker']")) # from line 73, col 33.
+        write('''</button>
 \t\t\t\t<button id="btn-spacer-add">''')
         _v = VFFSL(SL,"tstrings",True)['bqe_add_spacer'] # u"$tstrings['bqe_add_spacer']" on line 74, col 33
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['bqe_add_spacer']")) # from line 74, col 33.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['bqe_add_spacer']")) # from line 74, col 33.
+        write('''</button>
 \t\t\t\t<button id="btn-marker-group-rename">''')
         _v = VFFSL(SL,"tstrings",True)['bqe_rename'] # u"$tstrings['bqe_rename']" on line 75, col 42
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['bqe_rename']")) # from line 75, col 42.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['bqe_rename']")) # from line 75, col 42.
+        write('''</button>
 \t\t\t</div>
 \t\t\t</div>
 \t\t</div>
--- ./plugin/controllers/views/ajax/channels.py	(original)
+++ ./plugin/controllers/views/ajax/channels.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -60,7 +61,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -70,7 +71,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -84,187 +85,187 @@
         ## START - generated method body
         
         for channel in VFFSL(SL,"channels",True): # generated from line 2, col 1
-            write(u'''<div class="cht">
+            write('''<div class="cht">
 \t<div class="fr">
 \t\t<div class="a">
 ''')
             if 'protection' in VFFSL(SL,"channel",True): # generated from line 6, col 3
                 if VFFSL(SL,"channel.protection",True) == "0": # generated from line 7, col 4
                     if VFFSL(SL,"type",True) == "radio": # generated from line 8, col 5
-                        write(u'''\t\t\t\t\t<a href="#" onclick="addTimer(\'\',\'''')
+                        write('''\t\t\t\t\t<a href="#" onclick="addTimer(\'\',\'''')
                         _v = VFFSL(SL,"channel.ref",True) # u'$channel.ref' on line 9, col 40
-                        if _v is not None: write(_filter(_v, rawExpr=u'$channel.ref')) # from line 9, col 40.
-                        write(u"""','""")
+                        if _v is not None: write(_filter(_v, rawExpr='$channel.ref')) # from line 9, col 40.
+                        write("""','""")
                         _v = VFFSL(SL,"channel.name",True) # u'$channel.name' on line 9, col 55
-                        if _v is not None: write(_filter(_v, rawExpr=u'$channel.name')) # from line 9, col 55.
-                        write(u'''\',\'\')" title="''')
+                        if _v is not None: write(_filter(_v, rawExpr='$channel.name')) # from line 9, col 55.
+                        write('''\',\'\')" title="''')
                         _v = VFFSL(SL,"tstrings",True)['add_timer'] # u"$tstrings['add_timer']" on line 9, col 82
-                        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['add_timer']")) # from line 9, col 82.
-                        write(u'''"><i class="fa fa-clock-o"></i></a>
+                        if _v is not None: write(_filter(_v, rawExpr="$tstrings['add_timer']")) # from line 9, col 82.
+                        write('''"><i class="fa fa-clock-o"></i></a>
 ''')
                     if '4097:' in VFFSL(SL,"channel.ref",True): # generated from line 11, col 5
-                        write(u'''\t\t\t\t\t<a href="#" onclick="open_epg_dialog(\'''')
+                        write('''\t\t\t\t\t<a href="#" onclick="open_epg_dialog(\'''')
                         _v = VFFSL(SL,"channel.ref",True) # u'$channel.ref' on line 12, col 44
-                        if _v is not None: write(_filter(_v, rawExpr=u'$channel.ref')) # from line 12, col 44.
-                        write(u"""','""")
+                        if _v is not None: write(_filter(_v, rawExpr='$channel.ref')) # from line 12, col 44.
+                        write("""','""")
                         _v = VFFSL(SL,"channel.name",True) # u'$channel.name' on line 12, col 59
-                        if _v is not None: write(_filter(_v, rawExpr=u'$channel.name')) # from line 12, col 59.
-                        write(u'''\')" title="''')
+                        if _v is not None: write(_filter(_v, rawExpr='$channel.name')) # from line 12, col 59.
+                        write('''\')" title="''')
                         _v = VFFSL(SL,"tstrings",True)['show_epg_for'] # u"$tstrings['show_epg_for']" on line 12, col 83
-                        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['show_epg_for']")) # from line 12, col 83.
-                        write(u''' ''')
+                        if _v is not None: write(_filter(_v, rawExpr="$tstrings['show_epg_for']")) # from line 12, col 83.
+                        write(''' ''')
                         _v = VFFSL(SL,"channel.name",True) # u'$channel.name' on line 12, col 109
-                        if _v is not None: write(_filter(_v, rawExpr=u'$channel.name')) # from line 12, col 109.
-                        write(u'''"><i class="fa fa-list-alt"></i></a>
+                        if _v is not None: write(_filter(_v, rawExpr='$channel.name')) # from line 12, col 109.
+                        write('''"><i class="fa fa-list-alt"></i></a>
 ''')
                         rname = ":" + VFFSL(SL,"channel.name",True)
                         lnk = VFN(VFN(VFN(VFFSL(SL,"channel.ref",True),"replace",False)("4097:0:1:0:0:0:0:0:0:0:", ""),"replace",False)("%3a", ":"),"replace",False)(VFFSL(SL,"rname",True), "")
-                        write(u'''\t\t\t\t\t<a target="_blank" href=\'''')
+                        write('''\t\t\t\t\t<a target="_blank" href=\'''')
                         _v = VFFSL(SL,"lnk",True) # u'$lnk' on line 15, col 31
-                        if _v is not None: write(_filter(_v, rawExpr=u'$lnk')) # from line 15, col 31.
-                        write(u'''\' title="''')
+                        if _v is not None: write(_filter(_v, rawExpr='$lnk')) # from line 15, col 31.
+                        write('''\' title="''')
                         _v = VFFSL(SL,"tstrings",True)['stream'] # u"$tstrings['stream']" on line 15, col 44
-                        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['stream']")) # from line 15, col 44.
-                        write(u''' ''')
+                        if _v is not None: write(_filter(_v, rawExpr="$tstrings['stream']")) # from line 15, col 44.
+                        write(''' ''')
                         _v = VFFSL(SL,"channel.name",True) # u'$channel.name' on line 15, col 64
-                        if _v is not None: write(_filter(_v, rawExpr=u'$channel.name')) # from line 15, col 64.
-                        write(u'''"><i class="fa fa-desktop"></i></a>
+                        if _v is not None: write(_filter(_v, rawExpr='$channel.name')) # from line 15, col 64.
+                        write('''"><i class="fa fa-desktop"></i></a>
 ''')
                     else: # generated from line 16, col 5
-                        write(u'''\t\t\t\t\t<a href="#" onclick="open_epg_dialog(\'''')
+                        write('''\t\t\t\t\t<a href="#" onclick="open_epg_dialog(\'''')
                         _v = VFFSL(SL,"channel.ref",True) # u'$channel.ref' on line 17, col 44
-                        if _v is not None: write(_filter(_v, rawExpr=u'$channel.ref')) # from line 17, col 44.
-                        write(u"""','""")
+                        if _v is not None: write(_filter(_v, rawExpr='$channel.ref')) # from line 17, col 44.
+                        write("""','""")
                         _v = VFFSL(SL,"channel.name",True) # u'$channel.name' on line 17, col 59
-                        if _v is not None: write(_filter(_v, rawExpr=u'$channel.name')) # from line 17, col 59.
-                        write(u'''\')" title="''')
+                        if _v is not None: write(_filter(_v, rawExpr='$channel.name')) # from line 17, col 59.
+                        write('''\')" title="''')
                         _v = VFFSL(SL,"tstrings",True)['show_epg_for'] # u"$tstrings['show_epg_for']" on line 17, col 83
-                        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['show_epg_for']")) # from line 17, col 83.
-                        write(u''' ''')
+                        if _v is not None: write(_filter(_v, rawExpr="$tstrings['show_epg_for']")) # from line 17, col 83.
+                        write(''' ''')
                         _v = VFFSL(SL,"channel.name",True) # u'$channel.name' on line 17, col 109
-                        if _v is not None: write(_filter(_v, rawExpr=u'$channel.name')) # from line 17, col 109.
-                        write(u'''"><i class="fa fa-list-alt"></i></a>
+                        if _v is not None: write(_filter(_v, rawExpr='$channel.name')) # from line 17, col 109.
+                        write('''"><i class="fa fa-list-alt"></i></a>
 ''')
                         if VFFSL(SL,"transcoding",True): # generated from line 18, col 6
-                            write(u'''\t\t\t\t\t\t<a href="#" onclick="jumper8001(\'''')
+                            write('''\t\t\t\t\t\t<a href="#" onclick="jumper8001(\'''')
                             _v = VFFSL(SL,"channel.ref",True) # u'$channel.ref' on line 19, col 40
-                            if _v is not None: write(_filter(_v, rawExpr=u'$channel.ref')) # from line 19, col 40.
-                            write(u"""', '""")
+                            if _v is not None: write(_filter(_v, rawExpr='$channel.ref')) # from line 19, col 40.
+                            write("""', '""")
                             _v = VFFSL(SL,"channel.name",True) # u'$channel.name' on line 19, col 56
-                            if _v is not None: write(_filter(_v, rawExpr=u'$channel.name')) # from line 19, col 56.
-                            write(u'''\');" title="''')
+                            if _v is not None: write(_filter(_v, rawExpr='$channel.name')) # from line 19, col 56.
+                            write('''\');" title="''')
                             _v = VFFSL(SL,"tstrings",True)['stream'] # u"$tstrings['stream']" on line 19, col 81
-                            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['stream']")) # from line 19, col 81.
-                            write(u''': ''')
+                            if _v is not None: write(_filter(_v, rawExpr="$tstrings['stream']")) # from line 19, col 81.
+                            write(''': ''')
                             _v = VFFSL(SL,"channel.name",True) # u'$channel.name' on line 19, col 102
-                            if _v is not None: write(_filter(_v, rawExpr=u'$channel.name')) # from line 19, col 102.
-                            write(u'''"><i class="fa fa-desktop"></i></a>
+                            if _v is not None: write(_filter(_v, rawExpr='$channel.name')) # from line 19, col 102.
+                            write('''"><i class="fa fa-desktop"></i></a>
 \t\t\t\t\t\t<a href="#" onclick="jumper8002(\'''')
                             _v = VFFSL(SL,"channel.ref",True) # u'$channel.ref' on line 20, col 40
-                            if _v is not None: write(_filter(_v, rawExpr=u'$channel.ref')) # from line 20, col 40.
-                            write(u"""', '""")
+                            if _v is not None: write(_filter(_v, rawExpr='$channel.ref')) # from line 20, col 40.
+                            write("""', '""")
                             _v = VFFSL(SL,"channel.name",True) # u'$channel.name' on line 20, col 56
-                            if _v is not None: write(_filter(_v, rawExpr=u'$channel.name')) # from line 20, col 56.
-                            write(u'''\');" title="''')
+                            if _v is not None: write(_filter(_v, rawExpr='$channel.name')) # from line 20, col 56.
+                            write('''\');" title="''')
                             _v = VFFSL(SL,"tstrings",True)['stream'] # u"$tstrings['stream']" on line 20, col 81
-                            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['stream']")) # from line 20, col 81.
-                            write(u''' (''')
+                            if _v is not None: write(_filter(_v, rawExpr="$tstrings['stream']")) # from line 20, col 81.
+                            write(''' (''')
                             _v = VFFSL(SL,"tstrings",True)['transcoded'] # u"$tstrings['transcoded']" on line 20, col 102
-                            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['transcoded']")) # from line 20, col 102.
-                            write(u'''): ''')
+                            if _v is not None: write(_filter(_v, rawExpr="$tstrings['transcoded']")) # from line 20, col 102.
+                            write('''): ''')
                             _v = VFFSL(SL,"channel.name",True) # u'$channel.name' on line 20, col 128
-                            if _v is not None: write(_filter(_v, rawExpr=u'$channel.name')) # from line 20, col 128.
-                            write(u'''"><i class="fa fa-mobile"></i></a>
+                            if _v is not None: write(_filter(_v, rawExpr='$channel.name')) # from line 20, col 128.
+                            write('''"><i class="fa fa-mobile"></i></a>
 ''')
                         else: # generated from line 21, col 6
-                            write(u'''\t\t\t\t\t\t<a target="_blank" href=\'web/stream.m3u?ref=''')
+                            write('''\t\t\t\t\t\t<a target="_blank" href=\'web/stream.m3u?ref=''')
                             _v = VFFSL(SL,"channel.ref",True) # u'$channel.ref' on line 22, col 51
-                            if _v is not None: write(_filter(_v, rawExpr=u'$channel.ref')) # from line 22, col 51.
-                            write(u'''&name=''')
+                            if _v is not None: write(_filter(_v, rawExpr='$channel.ref')) # from line 22, col 51.
+                            write('''&name=''')
                             _v = VFFSL(SL,"channel.name",True) # u'$channel.name' on line 22, col 69
-                            if _v is not None: write(_filter(_v, rawExpr=u'$channel.name')) # from line 22, col 69.
-                            write(u'''&fname=''')
+                            if _v is not None: write(_filter(_v, rawExpr='$channel.name')) # from line 22, col 69.
+                            write('''&fname=''')
                             _v = VFFSL(SL,"channel.name",True) # u'$channel.name' on line 22, col 89
-                            if _v is not None: write(_filter(_v, rawExpr=u'$channel.name')) # from line 22, col 89.
-                            write(u'''\' title="''')
+                            if _v is not None: write(_filter(_v, rawExpr='$channel.name')) # from line 22, col 89.
+                            write('''\' title="''')
                             _v = VFFSL(SL,"tstrings",True)['stream'] # u"$tstrings['stream']" on line 22, col 111
-                            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['stream']")) # from line 22, col 111.
-                            write(u''' ''')
+                            if _v is not None: write(_filter(_v, rawExpr="$tstrings['stream']")) # from line 22, col 111.
+                            write(''' ''')
                             _v = VFFSL(SL,"channel.name",True) # u'$channel.name' on line 22, col 131
-                            if _v is not None: write(_filter(_v, rawExpr=u'$channel.name')) # from line 22, col 131.
-                            write(u'''"><i class="fa fa-desktop"></i></a>
+                            if _v is not None: write(_filter(_v, rawExpr='$channel.name')) # from line 22, col 131.
+                            write('''"><i class="fa fa-desktop"></i></a>
 ''')
                 else: # generated from line 25, col 4
-                    write(u'''\t\t\t\t<a target="_blank" href=\'#\' title="''')
+                    write('''\t\t\t\t<a target="_blank" href=\'#\' title="''')
                     _v = VFFSL(SL,"tstrings",True)['locked'] # u"$tstrings['locked']" on line 26, col 40
-                    if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['locked']")) # from line 26, col 40.
-                    write(u'''"><i class="fa fa-lock"></i></a>
-''')
-            write(u'''\t\t</div>
+                    if _v is not None: write(_filter(_v, rawExpr="$tstrings['locked']")) # from line 26, col 40.
+                    write('''"><i class="fa fa-lock"></i></a>
+''')
+            write('''\t\t</div>
 
 \t\t<div class="b">
 ''')
             name = VFN(VFFSL(SL,"channel.name",True),"replace",False)("'", r"\'")
-            write(u'''\t\t\t<span class="channel-name">
+            write('''\t\t\t<span class="channel-name">
 ''')
             if 'protection' in VFFSL(SL,"channel",True): # generated from line 34, col 4
                 if VFFSL(SL,"channel.protection",True) == "0": # generated from line 35, col 5
-                    write(u'''\t\t\t\t\t<a href="#" onclick="zapChannel(\'''')
+                    write('''\t\t\t\t\t<a href="#" onclick="zapChannel(\'''')
                     _v = VFFSL(SL,"channel.ref",True) # u'$channel.ref' on line 36, col 39
-                    if _v is not None: write(_filter(_v, rawExpr=u'$channel.ref')) # from line 36, col 39.
-                    write(u"""', '""")
+                    if _v is not None: write(_filter(_v, rawExpr='$channel.ref')) # from line 36, col 39.
+                    write("""', '""")
                     _v = VFFSL(SL,"name",True) # u'$name' on line 36, col 55
-                    if _v is not None: write(_filter(_v, rawExpr=u'$name')) # from line 36, col 55.
-                    write(u'''\'); return false" title="''')
+                    if _v is not None: write(_filter(_v, rawExpr='$name')) # from line 36, col 55.
+                    write('''\'); return false" title="''')
                     _v = VFFSL(SL,"tstrings",True)['zap_to'] # u"$tstrings['zap_to']" on line 36, col 85
-                    if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['zap_to']")) # from line 36, col 85.
-                    write(u''' ''')
+                    if _v is not None: write(_filter(_v, rawExpr="$tstrings['zap_to']")) # from line 36, col 85.
+                    write(''' ''')
                     _v = VFFSL(SL,"channel.name",True) # u'$channel.name' on line 36, col 105
-                    if _v is not None: write(_filter(_v, rawExpr=u'$channel.name')) # from line 36, col 105.
-                    write(u'''">''')
+                    if _v is not None: write(_filter(_v, rawExpr='$channel.name')) # from line 36, col 105.
+                    write('''">''')
                     _v = VFFSL(SL,"channel.name",True) # u'$channel.name' on line 36, col 120
-                    if _v is not None: write(_filter(_v, rawExpr=u'$channel.name')) # from line 36, col 120.
-                    write(u'''</a>
+                    if _v is not None: write(_filter(_v, rawExpr='$channel.name')) # from line 36, col 120.
+                    write('''</a>
 ''')
                 else: # generated from line 37, col 5
-                    write(u'''\t\t\t\t\t<a href="#" onclick="return false" title="''')
+                    write('''\t\t\t\t\t<a href="#" onclick="return false" title="''')
                     _v = VFFSL(SL,"tstrings",True)['locked'] # u"$tstrings['locked']" on line 38, col 48
-                    if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['locked']")) # from line 38, col 48.
-                    write(u'''">''')
+                    if _v is not None: write(_filter(_v, rawExpr="$tstrings['locked']")) # from line 38, col 48.
+                    write('''">''')
                     _v = VFFSL(SL,"channel.name",True) # u'$channel.name' on line 38, col 69
-                    if _v is not None: write(_filter(_v, rawExpr=u'$channel.name')) # from line 38, col 69.
-                    write(u'''</a>
+                    if _v is not None: write(_filter(_v, rawExpr='$channel.name')) # from line 38, col 69.
+                    write('''</a>
 ''')
             else: # generated from line 40, col 4
-                write(u'''\t\t\t\t''')
+                write('''\t\t\t\t''')
                 _v = VFFSL(SL,"channel.name",True) # u'$channel.name' on line 41, col 5
-                if _v is not None: write(_filter(_v, rawExpr=u'$channel.name')) # from line 41, col 5.
-                write(u'''
-''')
-            write(u'''\t\t\t</span>
+                if _v is not None: write(_filter(_v, rawExpr='$channel.name')) # from line 41, col 5.
+                write('''
+''')
+            write('''\t\t\t</span>
 ''')
             if '4097:' in VFFSL(SL,"channel.ref",True) or '5002:' in VFFSL(SL,"channel.ref",True) or 'http%3a' in VFFSL(SL,"channel.ref",True) or 'https%3a' in VFFSL(SL,"channel.ref",True): # generated from line 44, col 4
-                write(u'''\t\t\t\t<span class="channel-tag ST-IPTV">IPTV</span>
+                write('''\t\t\t\t<span class="channel-tag ST-IPTV">IPTV</span>
 ''')
             elif 'ns' in VFFSL(SL,"channel",True): # generated from line 46, col 4
                 ns = "DVB-S"
                 if 'DVB' in VFFSL(SL,"channel.ns",True): # generated from line 48, col 5
                     ns = VFFSL(SL,"channel.ns",True)
-                write(u'''\t\t\t\t<span class="channel-tag ST-''')
+                write('''\t\t\t\t<span class="channel-tag ST-''')
                 _v = VFFSL(SL,"channel.service_type",True) # u'$channel.service_type' on line 51, col 33
-                if _v is not None: write(_filter(_v, rawExpr=u'$channel.service_type')) # from line 51, col 33.
-                write(u'''">''')
+                if _v is not None: write(_filter(_v, rawExpr='$channel.service_type')) # from line 51, col 33.
+                write('''">''')
                 _v = VFFSL(SL,"channel.service_type",True) # u'$channel.service_type' on line 51, col 56
-                if _v is not None: write(_filter(_v, rawExpr=u'$channel.service_type')) # from line 51, col 56.
-                write(u'''</span><span class="channel-tag NS-''')
+                if _v is not None: write(_filter(_v, rawExpr='$channel.service_type')) # from line 51, col 56.
+                write('''</span><span class="channel-tag NS-''')
                 _v = VFFSL(SL,"ns",True) # u'$ns' on line 51, col 112
-                if _v is not None: write(_filter(_v, rawExpr=u'$ns')) # from line 51, col 112.
-                write(u'''">''')
+                if _v is not None: write(_filter(_v, rawExpr='$ns')) # from line 51, col 112.
+                write('''">''')
                 _v = VFFSL(SL,"channel.ns",True) # u'$channel.ns' on line 51, col 117
-                if _v is not None: write(_filter(_v, rawExpr=u'$channel.ns')) # from line 51, col 117.
-                write(u'''</span>
-''')
-            write(u'''\t\t</div>
+                if _v is not None: write(_filter(_v, rawExpr='$channel.ns')) # from line 51, col 117.
+                write('''</span>
+''')
+            write('''\t\t</div>
 \t</div>
 
 ''')
@@ -272,66 +273,66 @@
             if VFFSL(SL,"showchannelpicon",True) and 'now_title' not in VFFSL(SL,"channel",True): # generated from line 57, col 2
                 if 'picon' in VFFSL(SL,"channel",True) and VFFSL(SL,"channel.picon",True) == "/images/default_picon.png": # generated from line 58, col 3
                     picon = False
-            write(u'''
+            write('''
 ''')
             if 'protection' in VFFSL(SL,"channel",True) and VFFSL(SL,"channel.protection",True) == "0" and VFFSL(SL,"picon",True): # generated from line 63, col 2
-                write(u'''\t<div>
+                write('''\t<div>
 ''')
                 if VFFSL(SL,"showchannelpicon",True): # generated from line 65, col 3
-                    write(u'''\t\t\t<div class="channel-picon">
+                    write('''\t\t\t<div class="channel-picon">
 \t\t\t\t<img class="pic" src="''')
                     _v = VFFSL(SL,"channel.picon",True) # u'$channel.picon' on line 67, col 27
-                    if _v is not None: write(_filter(_v, rawExpr=u'$channel.picon')) # from line 67, col 27.
-                    write(u'''" title="">
+                    if _v is not None: write(_filter(_v, rawExpr='$channel.picon')) # from line 67, col 27.
+                    write('''" title="">
 \t\t\t</div>
 ''')
                 else: # generated from line 69, col 3
-                    write(u'''\t\t\t<div style="display:none;"></div>
-''')
-                write(u'''\t\t<div class="channel-info">
+                    write('''\t\t\t<div style="display:none;"></div>
+''')
+                write('''\t\t<div class="channel-info">
 ''')
                 if 'now_title' in VFFSL(SL,"channel",True): # generated from line 73, col 3
-                    write(u'''\t\t\t<div class="tt">
+                    write('''\t\t\t<div class="tt">
 \t\t\t\t<div class="a">
 \t\t\t\t\t''')
                     _v = VFFSL(SL,"channel.now_begin",True) # u'$channel.now_begin' on line 76, col 6
-                    if _v is not None: write(_filter(_v, rawExpr=u'$channel.now_begin')) # from line 76, col 6.
-                    write(u''' &mdash; ''')
+                    if _v is not None: write(_filter(_v, rawExpr='$channel.now_begin')) # from line 76, col 6.
+                    write(''' &mdash; ''')
                     _v = VFFSL(SL,"channel.now_end",True) # u'$channel.now_end' on line 76, col 33
-                    if _v is not None: write(_filter(_v, rawExpr=u'$channel.now_end')) # from line 76, col 33.
-                    write(u''' &nbsp;&nbsp;&nbsp;
+                    if _v is not None: write(_filter(_v, rawExpr='$channel.now_end')) # from line 76, col 33.
+                    write(''' &nbsp;&nbsp;&nbsp;
 \t\t\t\t</div>
 \t\t\t\t<div class="b">
 \t\t\t\t\t<a href=\'#\' onClick="toggle_chan_des(\'''')
                     _v = VFFSL(SL,"channel.now_ev_id",True) # u'$channel.now_ev_id' on line 79, col 44
-                    if _v is not None: write(_filter(_v, rawExpr=u'$channel.now_ev_id')) # from line 79, col 44.
-                    write(u"""', '""")
+                    if _v is not None: write(_filter(_v, rawExpr='$channel.now_ev_id')) # from line 79, col 44.
+                    write("""', '""")
                     _v = VFFSL(SL,"channel.ref",True) # u'$channel.ref' on line 79, col 66
-                    if _v is not None: write(_filter(_v, rawExpr=u'$channel.ref')) # from line 79, col 66.
-                    write(u"""', '""")
+                    if _v is not None: write(_filter(_v, rawExpr='$channel.ref')) # from line 79, col 66.
+                    write("""', '""")
                     _v = VFFSL(SL,"channel.now_idp",True) # u'$channel.now_idp' on line 79, col 82
-                    if _v is not None: write(_filter(_v, rawExpr=u'$channel.now_idp')) # from line 79, col 82.
-                    write(u'''\'); return false" title="''')
+                    if _v is not None: write(_filter(_v, rawExpr='$channel.now_idp')) # from line 79, col 82.
+                    write('''\'); return false" title="''')
                     _v = VFFSL(SL,"channel.now_title",True) # u'$channel.now_title' on line 79, col 123
-                    if _v is not None: write(_filter(_v, rawExpr=u'$channel.now_title')) # from line 79, col 123.
-                    write(u'''">''')
+                    if _v is not None: write(_filter(_v, rawExpr='$channel.now_title')) # from line 79, col 123.
+                    write('''">''')
                     _v = VFFSL(SL,"channel.now_title",True) # u'$channel.now_title' on line 79, col 143
-                    if _v is not None: write(_filter(_v, rawExpr=u'$channel.now_title')) # from line 79, col 143.
-                    write(u'''</a>&nbsp;(+''')
+                    if _v is not None: write(_filter(_v, rawExpr='$channel.now_title')) # from line 79, col 143.
+                    write('''</a>&nbsp;(+''')
                     _v = VFFSL(SL,"channel.now_left",True) # u'$channel.now_left' on line 79, col 173
-                    if _v is not None: write(_filter(_v, rawExpr=u'$channel.now_left')) # from line 79, col 173.
-                    write(u''' min)
+                    if _v is not None: write(_filter(_v, rawExpr='$channel.now_left')) # from line 79, col 173.
+                    write(''' min)
 \t\t\t\t</div>
 \t\t\t</div>
 \t\t\t<div class="tt">
 \t\t\t\t<div class="c">
 \t\t\t\t\t<div class="tcld ui-state-default" id="''')
                     _v = VFFSL(SL,"channel.now_idp",True) # u'$channel.now_idp' on line 84, col 45
-                    if _v is not None: write(_filter(_v, rawExpr=u'$channel.now_idp')) # from line 84, col 45.
-                    write(u'''">''')
+                    if _v is not None: write(_filter(_v, rawExpr='$channel.now_idp')) # from line 84, col 45.
+                    write('''">''')
                     _v = VFFSL(SL,"tstrings",True)['no_description_available'] # u"$tstrings['no_description_available']" on line 84, col 63
-                    if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['no_description_available']")) # from line 84, col 63.
-                    write(u'''</div>
+                    if _v is not None: write(_filter(_v, rawExpr="$tstrings['no_description_available']")) # from line 84, col 63.
+                    write('''</div>
 \t\t\t\t</div>
 \t\t\t</div>
 \t\t\t<div class="tt">
@@ -339,8 +340,8 @@
 \t\t\t\t\t<div class="ui-progressbar ui-corner-all ui-widget ui-widget-content">
 \t\t\t\t\t\t<div class="ui-progressbar-value ui-corner-left ui-widget-header" style="width: ''')
                     _v = VFFSL(SL,"channel.progress",True) # u'${channel.progress}' on line 90, col 87
-                    if _v is not None: write(_filter(_v, rawExpr=u'${channel.progress}')) # from line 90, col 87.
-                    write(u'''%;"></div>
+                    if _v is not None: write(_filter(_v, rawExpr='${channel.progress}')) # from line 90, col 87.
+                    write('''%;"></div>
 \t\t\t\t\t</div>
 \t\t\t\t</div>
 \t\t\t</div>
@@ -348,50 +349,50 @@
 \t\t\t\t<div class="a">
 \t\t\t\t\t''')
                     _v = VFFSL(SL,"channel.next_begin",True) # u'$channel.next_begin' on line 96, col 6
-                    if _v is not None: write(_filter(_v, rawExpr=u'$channel.next_begin')) # from line 96, col 6.
-                    write(u''' &mdash; ''')
+                    if _v is not None: write(_filter(_v, rawExpr='$channel.next_begin')) # from line 96, col 6.
+                    write(''' &mdash; ''')
                     _v = VFFSL(SL,"channel.next_end",True) # u'$channel.next_end' on line 96, col 34
-                    if _v is not None: write(_filter(_v, rawExpr=u'$channel.next_end')) # from line 96, col 34.
-                    write(u''' &nbsp;&nbsp;&nbsp;
+                    if _v is not None: write(_filter(_v, rawExpr='$channel.next_end')) # from line 96, col 34.
+                    write(''' &nbsp;&nbsp;&nbsp;
 \t\t\t\t</div>
 \t\t\t\t<div class="b">
 \t\t\t\t\t<a href=\'#\' onClick="toggle_chan_des(\'''')
                     _v = VFFSL(SL,"channel.next_ev_id",True) # u'$channel.next_ev_id' on line 99, col 44
-                    if _v is not None: write(_filter(_v, rawExpr=u'$channel.next_ev_id')) # from line 99, col 44.
-                    write(u"""', '""")
+                    if _v is not None: write(_filter(_v, rawExpr='$channel.next_ev_id')) # from line 99, col 44.
+                    write("""', '""")
                     _v = VFFSL(SL,"channel.ref",True) # u'$channel.ref' on line 99, col 67
-                    if _v is not None: write(_filter(_v, rawExpr=u'$channel.ref')) # from line 99, col 67.
-                    write(u"""', '""")
+                    if _v is not None: write(_filter(_v, rawExpr='$channel.ref')) # from line 99, col 67.
+                    write("""', '""")
                     _v = VFFSL(SL,"channel.next_idp",True) # u'$channel.next_idp' on line 99, col 83
-                    if _v is not None: write(_filter(_v, rawExpr=u'$channel.next_idp')) # from line 99, col 83.
-                    write(u'''\'); return false" title="''')
+                    if _v is not None: write(_filter(_v, rawExpr='$channel.next_idp')) # from line 99, col 83.
+                    write('''\'); return false" title="''')
                     _v = VFFSL(SL,"channel.next_title",True) # u'$channel.next_title' on line 99, col 125
-                    if _v is not None: write(_filter(_v, rawExpr=u'$channel.next_title')) # from line 99, col 125.
-                    write(u'''">''')
+                    if _v is not None: write(_filter(_v, rawExpr='$channel.next_title')) # from line 99, col 125.
+                    write('''">''')
                     _v = VFFSL(SL,"channel.next_title",True) # u'$channel.next_title' on line 99, col 146
-                    if _v is not None: write(_filter(_v, rawExpr=u'$channel.next_title')) # from line 99, col 146.
-                    write(u'''</a>&nbsp;(''')
+                    if _v is not None: write(_filter(_v, rawExpr='$channel.next_title')) # from line 99, col 146.
+                    write('''</a>&nbsp;(''')
                     _v = VFFSL(SL,"channel.next_duration",True) # u'$channel.next_duration' on line 99, col 176
-                    if _v is not None: write(_filter(_v, rawExpr=u'$channel.next_duration')) # from line 99, col 176.
-                    write(u''' min)
+                    if _v is not None: write(_filter(_v, rawExpr='$channel.next_duration')) # from line 99, col 176.
+                    write(''' min)
 \t\t\t\t</div>
 \t\t\t</div>
 \t\t\t<div class="tt">
 \t\t\t\t<div class="c">
 \t\t\t\t\t<div class="tcld ui-state-default" id="''')
                     _v = VFFSL(SL,"channel.next_idp",True) # u'$channel.next_idp' on line 104, col 45
-                    if _v is not None: write(_filter(_v, rawExpr=u'$channel.next_idp')) # from line 104, col 45.
-                    write(u'''">''')
+                    if _v is not None: write(_filter(_v, rawExpr='$channel.next_idp')) # from line 104, col 45.
+                    write('''">''')
                     _v = VFFSL(SL,"tstrings",True)['no_description_available'] # u"$tstrings['no_description_available']" on line 104, col 64
-                    if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['no_description_available']")) # from line 104, col 64.
-                    write(u'''</div>
-\t\t\t\t</div>
-\t\t\t</div>
-''')
-                write(u'''\t\t</div>
+                    if _v is not None: write(_filter(_v, rawExpr="$tstrings['no_description_available']")) # from line 104, col 64.
+                    write('''</div>
+\t\t\t\t</div>
+\t\t\t</div>
+''')
+                write('''\t\t</div>
 \t</div>
 ''')
-            write(u'''</div>
+            write('''</div>
 ''')
         
         ########################################
--- ./plugin/controllers/views/ajax/config.py	(original)
+++ ./plugin/controllers/views/ajax/config.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -70,53 +71,53 @@
 
         ## CHEETAH: generated from #def select($config) at line 1, col 1.
         trans = KWS.get("trans")
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
-            trans = self.transaction # is None unless self.awake() was called
-        if not trans:
-            trans = DummyTransaction()
-            _dummyTrans = True
-        else: _dummyTrans = False
-        write = trans.response().write
-        SL = self._CHEETAH__searchList
-        _filter = self._CHEETAH__currentFilter
-        
-        ########################################
-        ## START - generated method body
-        
-        write(u'''<tr>
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
+            trans = self.transaction # is None unless self.awake() was called
+        if not trans:
+            trans = DummyTransaction()
+            _dummyTrans = True
+        else: _dummyTrans = False
+        write = trans.response().write
+        SL = self._CHEETAH__searchList
+        _filter = self._CHEETAH__currentFilter
+        
+        ########################################
+        ## START - generated method body
+        
+        write('''<tr>
 <td>''')
         _v = VFFSL(SL,"config.description",True) # u'$config.description' on line 3, col 5
-        if _v is not None: write(_filter(_v, rawExpr=u'$config.description')) # from line 3, col 5.
-        write(u'''</td>
+        if _v is not None: write(_filter(_v, rawExpr='$config.description')) # from line 3, col 5.
+        write('''</td>
 <td>
 \t<select id="''')
         _v = VFFSL(SL,"config.path",True) # u'$config.path' on line 5, col 14
-        if _v is not None: write(_filter(_v, rawExpr=u'$config.path')) # from line 5, col 14.
-        write(u'''" onchange="saveConfig(\'''')
+        if _v is not None: write(_filter(_v, rawExpr='$config.path')) # from line 5, col 14.
+        write('''" onchange="saveConfig(\'''')
         _v = VFFSL(SL,"config.path",True) # u'$config.path' on line 5, col 50
-        if _v is not None: write(_filter(_v, rawExpr=u'$config.path')) # from line 5, col 50.
-        write(u'''\', this.value);">
+        if _v is not None: write(_filter(_v, rawExpr='$config.path')) # from line 5, col 50.
+        write('''\', this.value);">
 ''')
         for choice in VFFSL(SL,"config.data.choices",True): # generated from line 6, col 3
             if VFFSL(SL,"config.data.current",True) == VFFSL(SL,"choice",True)[0]: # generated from line 7, col 4
-                write(u'''\t\t\t\t<option value="''')
+                write('''\t\t\t\t<option value="''')
                 _v = VFFSL(SL,"choice",True)[0] # u'$choice[0]' on line 8, col 20
-                if _v is not None: write(_filter(_v, rawExpr=u'$choice[0]')) # from line 8, col 20.
-                write(u'''" selected="true">''')
+                if _v is not None: write(_filter(_v, rawExpr='$choice[0]')) # from line 8, col 20.
+                write('''" selected="true">''')
                 _v = VFFSL(SL,"choice",True)[1] # u'$choice[1]' on line 8, col 48
-                if _v is not None: write(_filter(_v, rawExpr=u'$choice[1]')) # from line 8, col 48.
-                write(u'''</option>
+                if _v is not None: write(_filter(_v, rawExpr='$choice[1]')) # from line 8, col 48.
+                write('''</option>
 ''')
             else: # generated from line 9, col 4
-                write(u'''\t\t\t\t<option value="''')
+                write('''\t\t\t\t<option value="''')
                 _v = VFFSL(SL,"choice",True)[0] # u'$choice[0]' on line 10, col 20
-                if _v is not None: write(_filter(_v, rawExpr=u'$choice[0]')) # from line 10, col 20.
-                write(u'''">''')
+                if _v is not None: write(_filter(_v, rawExpr='$choice[0]')) # from line 10, col 20.
+                write('''">''')
                 _v = VFFSL(SL,"choice",True)[1] # u'$choice[1]' on line 10, col 32
-                if _v is not None: write(_filter(_v, rawExpr=u'$choice[1]')) # from line 10, col 32.
-                write(u'''</option>
-''')
-        write(u'''\t</select>
+                if _v is not None: write(_filter(_v, rawExpr='$choice[1]')) # from line 10, col 32.
+                write('''</option>
+''')
+        write('''\t</select>
 </td>
 </tr>
 ''')
@@ -133,45 +134,45 @@
 
         ## CHEETAH: generated from #def checkbox($config) at line 18, col 1.
         trans = KWS.get("trans")
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
-            trans = self.transaction # is None unless self.awake() was called
-        if not trans:
-            trans = DummyTransaction()
-            _dummyTrans = True
-        else: _dummyTrans = False
-        write = trans.response().write
-        SL = self._CHEETAH__searchList
-        _filter = self._CHEETAH__currentFilter
-        
-        ########################################
-        ## START - generated method body
-        
-        write(u'''<tr>
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
+            trans = self.transaction # is None unless self.awake() was called
+        if not trans:
+            trans = DummyTransaction()
+            _dummyTrans = True
+        else: _dummyTrans = False
+        write = trans.response().write
+        SL = self._CHEETAH__searchList
+        _filter = self._CHEETAH__currentFilter
+        
+        ########################################
+        ## START - generated method body
+        
+        write('''<tr>
 <td>''')
         _v = VFFSL(SL,"config.description",True) # u'$config.description' on line 20, col 5
-        if _v is not None: write(_filter(_v, rawExpr=u'$config.description')) # from line 20, col 5.
-        write(u'''</td>
+        if _v is not None: write(_filter(_v, rawExpr='$config.description')) # from line 20, col 5.
+        write('''</td>
 <td>
 ''')
         if VFFSL(SL,"config.data.current",True): # generated from line 22, col 2
-            write(u'''\t\t<input type="checkbox" id="''')
+            write('''\t\t<input type="checkbox" id="''')
             _v = VFFSL(SL,"config.path",True) # u'$config.path' on line 23, col 30
-            if _v is not None: write(_filter(_v, rawExpr=u'$config.path')) # from line 23, col 30.
-            write(u'''" checked="true" onclick="saveConfig(\'''')
+            if _v is not None: write(_filter(_v, rawExpr='$config.path')) # from line 23, col 30.
+            write('''" checked="true" onclick="saveConfig(\'''')
             _v = VFFSL(SL,"config.path",True) # u'$config.path' on line 23, col 80
-            if _v is not None: write(_filter(_v, rawExpr=u'$config.path')) # from line 23, col 80.
-            write(u'''\', this.checked);" />
+            if _v is not None: write(_filter(_v, rawExpr='$config.path')) # from line 23, col 80.
+            write('''\', this.checked);" />
 ''')
         else: # generated from line 24, col 2
-            write(u'''\t\t<input type="checkbox" id="''')
+            write('''\t\t<input type="checkbox" id="''')
             _v = VFFSL(SL,"config.path",True) # u'$config.path' on line 25, col 30
-            if _v is not None: write(_filter(_v, rawExpr=u'$config.path')) # from line 25, col 30.
-            write(u'''" onclick="saveConfig(\'''')
+            if _v is not None: write(_filter(_v, rawExpr='$config.path')) # from line 25, col 30.
+            write('''" onclick="saveConfig(\'''')
             _v = VFFSL(SL,"config.path",True) # u'$config.path' on line 25, col 65
-            if _v is not None: write(_filter(_v, rawExpr=u'$config.path')) # from line 25, col 65.
-            write(u'''\', this.checked);" />
-''')
-        write(u'''</td>
+            if _v is not None: write(_filter(_v, rawExpr='$config.path')) # from line 25, col 65.
+            write('''\', this.checked);" />
+''')
+        write('''</td>
 </tr>
 ''')
         
@@ -187,63 +188,63 @@
 
         ## CHEETAH: generated from #def multicheckbox($config) at line 31, col 1.
         trans = KWS.get("trans")
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
-            trans = self.transaction # is None unless self.awake() was called
-        if not trans:
-            trans = DummyTransaction()
-            _dummyTrans = True
-        else: _dummyTrans = False
-        write = trans.response().write
-        SL = self._CHEETAH__searchList
-        _filter = self._CHEETAH__currentFilter
-        
-        ########################################
-        ## START - generated method body
-        
-        write(u'''<tr>
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
+            trans = self.transaction # is None unless self.awake() was called
+        if not trans:
+            trans = DummyTransaction()
+            _dummyTrans = True
+        else: _dummyTrans = False
+        write = trans.response().write
+        SL = self._CHEETAH__searchList
+        _filter = self._CHEETAH__currentFilter
+        
+        ########################################
+        ## START - generated method body
+        
+        write('''<tr>
 <td>''')
         _v = VFFSL(SL,"config.description",True) # u'$config.description' on line 33, col 5
-        if _v is not None: write(_filter(_v, rawExpr=u'$config.description')) # from line 33, col 5.
-        write(u'''</td>
+        if _v is not None: write(_filter(_v, rawExpr='$config.description')) # from line 33, col 5.
+        write('''</td>
 <td>
 ''')
         for choice in VFFSL(SL,"config.data.choices",True): # generated from line 35, col 2
             if VFFSL(SL,"choice",True) in VFFSL(SL,"config.data.current",True): # generated from line 36, col 3
-                write(u'''\t\t\t<input type="checkbox" id="''')
+                write('''\t\t\t<input type="checkbox" id="''')
                 _v = VFFSL(SL,"config.path",True) # u'${config.path}' on line 37, col 31
-                if _v is not None: write(_filter(_v, rawExpr=u'${config.path}')) # from line 37, col 31.
-                write(u'''_''')
+                if _v is not None: write(_filter(_v, rawExpr='${config.path}')) # from line 37, col 31.
+                write('''_''')
                 _v = VFFSL(SL,"choice",True) # u'${choice}' on line 37, col 46
-                if _v is not None: write(_filter(_v, rawExpr=u'${choice}')) # from line 37, col 46.
-                write(u'''" checked="true" onclick="saveConfig(\'''')
+                if _v is not None: write(_filter(_v, rawExpr='${choice}')) # from line 37, col 46.
+                write('''" checked="true" onclick="saveConfig(\'''')
                 _v = VFFSL(SL,"config.path",True) # u'$config.path' on line 37, col 93
-                if _v is not None: write(_filter(_v, rawExpr=u'$config.path')) # from line 37, col 93.
-                write(u"""', """)
+                if _v is not None: write(_filter(_v, rawExpr='$config.path')) # from line 37, col 93.
+                write("""', """)
                 _v = VFFSL(SL,"choice",True) # u'$choice' on line 37, col 108
-                if _v is not None: write(_filter(_v, rawExpr=u'$choice')) # from line 37, col 108.
-                write(u''');" />
+                if _v is not None: write(_filter(_v, rawExpr='$choice')) # from line 37, col 108.
+                write(''');" />
 ''')
             else: # generated from line 38, col 3
-                write(u'''\t\t\t<input type="checkbox" id="''')
+                write('''\t\t\t<input type="checkbox" id="''')
                 _v = VFFSL(SL,"config.path",True) # u'${config.path}' on line 39, col 31
-                if _v is not None: write(_filter(_v, rawExpr=u'${config.path}')) # from line 39, col 31.
-                write(u'''_''')
+                if _v is not None: write(_filter(_v, rawExpr='${config.path}')) # from line 39, col 31.
+                write('''_''')
                 _v = VFFSL(SL,"choice",True) # u'${choice}' on line 39, col 46
-                if _v is not None: write(_filter(_v, rawExpr=u'${choice}')) # from line 39, col 46.
-                write(u'''" onclick="saveConfig(\'''')
+                if _v is not None: write(_filter(_v, rawExpr='${choice}')) # from line 39, col 46.
+                write('''" onclick="saveConfig(\'''')
                 _v = VFFSL(SL,"config.path",True) # u'$config.path' on line 39, col 78
-                if _v is not None: write(_filter(_v, rawExpr=u'$config.path')) # from line 39, col 78.
-                write(u"""', """)
+                if _v is not None: write(_filter(_v, rawExpr='$config.path')) # from line 39, col 78.
+                write("""', """)
                 _v = VFFSL(SL,"choice",True) # u'$choice' on line 39, col 93
-                if _v is not None: write(_filter(_v, rawExpr=u'$choice')) # from line 39, col 93.
-                write(u''');" />
-''')
-            write(u'''\t\t''')
+                if _v is not None: write(_filter(_v, rawExpr='$choice')) # from line 39, col 93.
+                write(''');" />
+''')
+            write('''\t\t''')
             _v = VFFSL(SL,"choice",True) # u'$choice' on line 41, col 3
-            if _v is not None: write(_filter(_v, rawExpr=u'$choice')) # from line 41, col 3.
-            write(u'''
-''')
-        write(u'''</td>
+            if _v is not None: write(_filter(_v, rawExpr='$choice')) # from line 41, col 3.
+            write('''
+''')
+        write('''</td>
 </tr>
 ''')
         
@@ -259,35 +260,35 @@
 
         ## CHEETAH: generated from #def number($config) at line 47, col 1.
         trans = KWS.get("trans")
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
-            trans = self.transaction # is None unless self.awake() was called
-        if not trans:
-            trans = DummyTransaction()
-            _dummyTrans = True
-        else: _dummyTrans = False
-        write = trans.response().write
-        SL = self._CHEETAH__searchList
-        _filter = self._CHEETAH__currentFilter
-        
-        ########################################
-        ## START - generated method body
-        
-        write(u'''<tr>
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
+            trans = self.transaction # is None unless self.awake() was called
+        if not trans:
+            trans = DummyTransaction()
+            _dummyTrans = True
+        else: _dummyTrans = False
+        write = trans.response().write
+        SL = self._CHEETAH__searchList
+        _filter = self._CHEETAH__currentFilter
+        
+        ########################################
+        ## START - generated method body
+        
+        write('''<tr>
 <td>''')
         _v = VFFSL(SL,"config.description",True) # u'$config.description' on line 49, col 5
-        if _v is not None: write(_filter(_v, rawExpr=u'$config.description')) # from line 49, col 5.
-        write(u'''</td>
+        if _v is not None: write(_filter(_v, rawExpr='$config.description')) # from line 49, col 5.
+        write('''</td>
 <td>
 \t<input type="text" id="''')
         _v = VFFSL(SL,"config.path",True) # u'${config.path}' on line 51, col 25
-        if _v is not None: write(_filter(_v, rawExpr=u'${config.path}')) # from line 51, col 25.
-        write(u'''" value="''')
+        if _v is not None: write(_filter(_v, rawExpr='${config.path}')) # from line 51, col 25.
+        write('''" value="''')
         _v = VFFSL(SL,"config.data.current",True) # u'$config.data.current' on line 51, col 48
-        if _v is not None: write(_filter(_v, rawExpr=u'$config.data.current')) # from line 51, col 48.
-        write(u'''" onkeydown="numberTextboxKeydownFilter(event);" onchange="saveConfig(\'''')
+        if _v is not None: write(_filter(_v, rawExpr='$config.data.current')) # from line 51, col 48.
+        write('''" onkeydown="numberTextboxKeydownFilter(event);" onchange="saveConfig(\'''')
         _v = VFFSL(SL,"config.path",True) # u'$config.path' on line 51, col 139
-        if _v is not None: write(_filter(_v, rawExpr=u'$config.path')) # from line 51, col 139.
-        write(u'''\', this.value);">
+        if _v is not None: write(_filter(_v, rawExpr='$config.path')) # from line 51, col 139.
+        write('''\', this.value);">
 </td>
 </tr>
 ''')
@@ -304,35 +305,35 @@
 
         ## CHEETAH: generated from #def text($config) at line 56, col 1.
         trans = KWS.get("trans")
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
-            trans = self.transaction # is None unless self.awake() was called
-        if not trans:
-            trans = DummyTransaction()
-            _dummyTrans = True
-        else: _dummyTrans = False
-        write = trans.response().write
-        SL = self._CHEETAH__searchList
-        _filter = self._CHEETAH__currentFilter
-        
-        ########################################
-        ## START - generated method body
-        
-        write(u'''<tr>
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
+            trans = self.transaction # is None unless self.awake() was called
+        if not trans:
+            trans = DummyTransaction()
+            _dummyTrans = True
+        else: _dummyTrans = False
+        write = trans.response().write
+        SL = self._CHEETAH__searchList
+        _filter = self._CHEETAH__currentFilter
+        
+        ########################################
+        ## START - generated method body
+        
+        write('''<tr>
 <td>''')
         _v = VFFSL(SL,"config.description",True) # u'$config.description' on line 58, col 5
-        if _v is not None: write(_filter(_v, rawExpr=u'$config.description')) # from line 58, col 5.
-        write(u'''</td>
+        if _v is not None: write(_filter(_v, rawExpr='$config.description')) # from line 58, col 5.
+        write('''</td>
 <td>
 \t<input type="text" id="''')
         _v = VFFSL(SL,"config.path",True) # u'${config.path}' on line 60, col 25
-        if _v is not None: write(_filter(_v, rawExpr=u'${config.path}')) # from line 60, col 25.
-        write(u'''" value="''')
+        if _v is not None: write(_filter(_v, rawExpr='${config.path}')) # from line 60, col 25.
+        write('''" value="''')
         _v = VFFSL(SL,"config.data.current",True) # u'$config.data.current' on line 60, col 48
-        if _v is not None: write(_filter(_v, rawExpr=u'$config.data.current')) # from line 60, col 48.
-        write(u'''" onchange="saveConfig(\'''')
+        if _v is not None: write(_filter(_v, rawExpr='$config.data.current')) # from line 60, col 48.
+        write('''" onchange="saveConfig(\'''')
         _v = VFFSL(SL,"config.path",True) # u'$config.path' on line 60, col 92
-        if _v is not None: write(_filter(_v, rawExpr=u'$config.path')) # from line 60, col 92.
-        write(u'''\', this.value);">
+        if _v is not None: write(_filter(_v, rawExpr='$config.path')) # from line 60, col 92.
+        write('''\', this.value);">
 </td>
 </tr>
 ''')
@@ -348,20 +349,20 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
-            trans = self.transaction # is None unless self.awake() was called
-        if not trans:
-            trans = DummyTransaction()
-            _dummyTrans = True
-        else: _dummyTrans = False
-        write = trans.response().write
-        SL = self._CHEETAH__searchList
-        _filter = self._CHEETAH__currentFilter
-        
-        ########################################
-        ## START - generated method body
-        
-        write(u'''
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
+            trans = self.transaction # is None unless self.awake() was called
+        if not trans:
+            trans = DummyTransaction()
+            _dummyTrans = True
+        else: _dummyTrans = False
+        write = trans.response().write
+        SL = self._CHEETAH__searchList
+        _filter = self._CHEETAH__currentFilter
+        
+        ########################################
+        ## START - generated method body
+        
+        write('''
 
 
 
@@ -369,48 +370,48 @@
 <div id="content_main">
 \t<h3 class="ui-widget-header">''')
         _v = VFFSL(SL,"title",True) # u'$title' on line 66, col 31
-        if _v is not None: write(_filter(_v, rawExpr=u'$title')) # from line 66, col 31.
-        write(u'''</h3>
+        if _v is not None: write(_filter(_v, rawExpr='$title')) # from line 66, col 31.
+        write('''</h3>
 \t<table id="configuration">
 ''')
         for config in VFFSL(SL,"configs",True): # generated from line 68, col 3
             if VFFSL(SL,"config.data.type",True) == "select": # generated from line 69, col 4
-                write(u'''\t\t\t\t''')
+                write('''\t\t\t\t''')
                 _v = VFFSL(SL,"select",False)(VFFSL(SL,"config",True)) # u'$select($config)' on line 70, col 5
-                if _v is not None: write(_filter(_v, rawExpr=u'$select($config)')) # from line 70, col 5.
-                write(u'''
+                if _v is not None: write(_filter(_v, rawExpr='$select($config)')) # from line 70, col 5.
+                write('''
 ''')
             elif VFFSL(SL,"config.data.type",True) == "checkbox": # generated from line 71, col 4
-                write(u'''\t\t\t\t''')
+                write('''\t\t\t\t''')
                 _v = VFFSL(SL,"checkbox",False)(VFFSL(SL,"config",True)) # u'$checkbox($config)' on line 72, col 5
-                if _v is not None: write(_filter(_v, rawExpr=u'$checkbox($config)')) # from line 72, col 5.
-                write(u'''
+                if _v is not None: write(_filter(_v, rawExpr='$checkbox($config)')) # from line 72, col 5.
+                write('''
 ''')
             elif VFFSL(SL,"config.data.type",True) == "multicheckbox": # generated from line 73, col 4
-                write(u'''\t\t\t\t''')
+                write('''\t\t\t\t''')
                 _v = VFFSL(SL,"multicheckbox",False)(VFFSL(SL,"config",True)) # u'$multicheckbox($config)' on line 74, col 5
-                if _v is not None: write(_filter(_v, rawExpr=u'$multicheckbox($config)')) # from line 74, col 5.
-                write(u'''
+                if _v is not None: write(_filter(_v, rawExpr='$multicheckbox($config)')) # from line 74, col 5.
+                write('''
 ''')
             elif VFFSL(SL,"config.data.type",True) == "number": # generated from line 75, col 4
-                write(u'''\t\t\t\t''')
+                write('''\t\t\t\t''')
                 _v = VFFSL(SL,"number",False)(VFFSL(SL,"config",True)) # u'$number($config)' on line 76, col 5
-                if _v is not None: write(_filter(_v, rawExpr=u'$number($config)')) # from line 76, col 5.
-                write(u'''
+                if _v is not None: write(_filter(_v, rawExpr='$number($config)')) # from line 76, col 5.
+                write('''
 ''')
             elif VFFSL(SL,"config.data.type",True) == "text": # generated from line 77, col 4
-                write(u'''\t\t\t\t''')
+                write('''\t\t\t\t''')
                 _v = VFFSL(SL,"text",False)(VFFSL(SL,"config",True)) # u'$text($config)' on line 78, col 5
-                if _v is not None: write(_filter(_v, rawExpr=u'$text($config)')) # from line 78, col 5.
-                write(u'''
+                if _v is not None: write(_filter(_v, rawExpr='$text($config)')) # from line 78, col 5.
+                write('''
 ''')
             elif VFFSL(SL,"config.data.type",True) == "slider": # generated from line 79, col 4
-                write(u'''\t\t\t\t''')
+                write('''\t\t\t\t''')
                 _v = VFFSL(SL,"number",False)(VFFSL(SL,"config",True)) # u'$number($config)' on line 80, col 5
-                if _v is not None: write(_filter(_v, rawExpr=u'$number($config)')) # from line 80, col 5.
-                write(u'''
-''')
-        write(u'''\t</table>
+                if _v is not None: write(_filter(_v, rawExpr='$number($config)')) # from line 80, col 5.
+                write('''
+''')
+        write('''\t</table>
 </div>
 ''')
         
--- ./plugin/controllers/views/ajax/current.py	(original)
+++ ./plugin/controllers/views/ajax/current.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -60,7 +61,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -70,7 +71,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,7 +84,7 @@
         ########################################
         ## START - generated method body
         
-        write(u'''<!-- OSD -->
+        write('''<!-- OSD -->
 <style>
 .ib,.id{float:left;position:relative;margin:0 0 3px 3px;height:26px;}
 .id{width:64px;background-image:url(/images/osd/icon_64x26.png);}
@@ -101,139 +102,139 @@
 \t\t<div class=\'d120\' style="height:37px;">
 \t\t\t<div style="position:relative;top:10px;left:18px;font-size:13px;font-weight:bold;">''')
         _v = VFFSL(SL,"info.date",True) # u'$info.date' on line 18, col 87
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.date')) # from line 18, col 87.
-        write(u'''</div>
+        if _v is not None: write(_filter(_v, rawExpr='$info.date')) # from line 18, col 87.
+        write('''</div>
 \t\t</div>
 \t\t<div class=\'d120\' style="height:60px;">
 \t\t\t<div style="position:relative;top:0px;left:15px;"><img border=\'0\' width="100px" height="60px" src=\'''')
         _v = VFFSL(SL,"getVar",False)("info.picon", "images/default_picon.png") # u'$getVar("info.picon", "images/default_picon.png")' on line 21, col 103
-        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("info.picon", "images/default_picon.png")')) # from line 21, col 103.
-        write(u'''\' onclick="open_epg_dialog(\'''')
+        if _v is not None: write(_filter(_v, rawExpr='$getVar("info.picon", "images/default_picon.png")')) # from line 21, col 103.
+        write('''\' onclick="open_epg_dialog(\'''')
         _v = VFFSL(SL,"info.ref",True) # u'$info.ref' on line 21, col 180
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.ref')) # from line 21, col 180.
-        write(u"""','""")
+        if _v is not None: write(_filter(_v, rawExpr='$info.ref')) # from line 21, col 180.
+        write("""','""")
         _v = VFFSL(SL,"info.name",True) # u'$info.name' on line 21, col 192
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.name')) # from line 21, col 192.
-        write(u'''\');" style="cursor:pointer;" title="''')
+        if _v is not None: write(_filter(_v, rawExpr='$info.name')) # from line 21, col 192.
+        write('''\');" style="cursor:pointer;" title="''')
         _v = VFFSL(SL,"tstrings",True)['show_epg_for'] # u"$tstrings['show_epg_for']" on line 21, col 238
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['show_epg_for']")) # from line 21, col 238.
-        write(u''' ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['show_epg_for']")) # from line 21, col 238.
+        write(''' ''')
         _v = VFFSL(SL,"info.name",True) # u'$info.name' on line 21, col 264
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.name')) # from line 21, col 264.
-        write(u'''" border="0" alt=\'\' /></div>
+        if _v is not None: write(_filter(_v, rawExpr='$info.name')) # from line 21, col 264.
+        write('''" border="0" alt=\'\' /></div>
  \t\t</div>
 \t\t<div class=\'d120\' style="height:40px;">
 \t\t\t<div style="position:relative;top:8px;left:0px;text-align:center;font-size:11px;font-weight:bold;">''')
         _v = VFFSL(SL,"info.provider",True) # u'$info.provider' on line 24, col 103
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.provider')) # from line 24, col 103.
-        write(u'''</div>
+        if _v is not None: write(_filter(_v, rawExpr='$info.provider')) # from line 24, col 103.
+        write('''</div>
 \t\t</div>
 \t</div>
 \t<div style="float:left;width:560px;height:137px;">
 \t\t<div style="float:left;width:560px;height:25px;">
 \t\t\t<div style="float:left;position:relative;top:5px;left:0px;width:480px;text-align:center;font-size:18px;"><a target="_blank" title="''')
         _v = VFFSL(SL,"tstrings",True)['stream'] # u"$tstrings['stream']" on line 29, col 135
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['stream']")) # from line 29, col 135.
-        write(u''' ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['stream']")) # from line 29, col 135.
+        write(''' ''')
         _v = VFFSL(SL,"getVar",False)('now.title', '') # u"$getVar('now.title', '')" on line 29, col 155
-        if _v is not None: write(_filter(_v, rawExpr=u"$getVar('now.title', '')")) # from line 29, col 155.
-        write(u''' from ''')
+        if _v is not None: write(_filter(_v, rawExpr="$getVar('now.title', '')")) # from line 29, col 155.
+        write(''' from ''')
         _v = VFFSL(SL,"info.name",True) # u'$info.name' on line 29, col 185
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.name')) # from line 29, col 185.
-        write(u'''" href=\'web/stream.m3u?ref=''')
+        if _v is not None: write(_filter(_v, rawExpr='$info.name')) # from line 29, col 185.
+        write('''" href=\'web/stream.m3u?ref=''')
         _v = VFFSL(SL,"info.ref",True) # u'$info.ref' on line 29, col 222
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.ref')) # from line 29, col 222.
-        write(u'''&name=''')
+        if _v is not None: write(_filter(_v, rawExpr='$info.ref')) # from line 29, col 222.
+        write('''&name=''')
         _v = VFFSL(SL,"info.name",True) # u'$info.name' on line 29, col 237
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.name')) # from line 29, col 237.
-        write(u"""'>""")
+        if _v is not None: write(_filter(_v, rawExpr='$info.name')) # from line 29, col 237.
+        write("""'>""")
         _v = VFFSL(SL,"info.name",True) # u'$info.name' on line 29, col 249
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.name')) # from line 29, col 249.
-        write(u'''</a></div>
+        if _v is not None: write(_filter(_v, rawExpr='$info.name')) # from line 29, col 249.
+        write('''</a></div>
 \t\t</div>
 \t\t<div style="float:left;width:560px;height:24px;">
 \t\t\t<div class=\'dh24\' style="width:70px;">
 \t\t\t\t<div class=\'d24\' style="left:15px;">''')
         _v = VFFSL(SL,"getVar",False)("now.begin", " ") # u'$getVar("now.begin", " ")' on line 33, col 41
-        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("now.begin", " ")')) # from line 33, col 41.
-        write(u'''</div>
+        if _v is not None: write(_filter(_v, rawExpr='$getVar("now.begin", " ")')) # from line 33, col 41.
+        write('''</div>
 \t\t\t</div>
 \t\t\t<div class=\'dh24\' style="width:360px;-o-text-overflow: ellipsis;text-overflow: ellipsis;white-space: nowrap;">
 \t\t\t\t<div class=\'d24\'>''')
         _v = VFFSL(SL,"getVar",False)("now.title", " ") # u'$getVar("now.title", " ")' on line 36, col 22
-        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("now.title", " ")')) # from line 36, col 22.
-        write(u'''</div>
+        if _v is not None: write(_filter(_v, rawExpr='$getVar("now.title", " ")')) # from line 36, col 22.
+        write('''</div>
 \t\t\t</div>
 \t\t\t<div class=\'dh24\' style="width:130px;">
 \t\t\t\t<div class=\'d24\'>+''')
         _v = VFFSL(SL,"getVar",False)("now.tleft", " ") # u'$getVar("now.tleft", " ")' on line 39, col 23
-        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("now.tleft", " ")')) # from line 39, col 23.
-        write(u''' min</div>
+        if _v is not None: write(_filter(_v, rawExpr='$getVar("now.tleft", " ")')) # from line 39, col 23.
+        write(''' min</div>
 \t\t\t</div>
 \t\t</div>
 \t\t<div style="float:left;width:560px;height:16px;">
 \t\t\t<div style="float:left;position:relative;top:2px;left:15px;width:400px;height:14px;background-image:url(images/osd/chan_bar_back.png);">
 \t\t\t\t<div class=\'dh14\' style="width:400px;"><img border=\'0\' height=\'14px\' width=\'''')
         _v = VFFSL(SL,"getVar",False)("now.progress", "0") # u'${getVar("now.progress", "0")}' on line 44, col 81
-        if _v is not None: write(_filter(_v, rawExpr=u'${getVar("now.progress", "0")}')) # from line 44, col 81.
-        write(u'''px\' src=\'images/osd/chan_bar.png\' alt=\'\' /></div>
+        if _v is not None: write(_filter(_v, rawExpr='${getVar("now.progress", "0")}')) # from line 44, col 81.
+        write('''px\' src=\'images/osd/chan_bar.png\' alt=\'\' /></div>
 \t\t\t</div>
 \t\t</div>
 \t\t<div class=\'dh14\' style="width:560px;">
 \t\t\t<div class=\'dh14\' style="width:70px;">
 \t\t\t\t<div class=\'d14\' style="left:15px;">''')
         _v = VFFSL(SL,"getVar",False)("next.begin", " ") # u'$getVar("next.begin", " ")' on line 49, col 41
-        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("next.begin", " ")')) # from line 49, col 41.
-        write(u'''</div>
+        if _v is not None: write(_filter(_v, rawExpr='$getVar("next.begin", " ")')) # from line 49, col 41.
+        write('''</div>
 \t\t\t</div>
 \t\t\t<div class=\'dh14\'style="width:360px;-o-text-overflow: ellipsis;text-overflow: ellipsis;white-space: nowrap;">
 \t\t\t\t<div class=\'d14\'>''')
         _v = VFFSL(SL,"getVar",False)("next.title", " ") # u'$getVar("next.title", " ")' on line 52, col 22
-        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("next.title", " ")')) # from line 52, col 22.
-        write(u'''</div>
+        if _v is not None: write(_filter(_v, rawExpr='$getVar("next.title", " ")')) # from line 52, col 22.
+        write('''</div>
 \t\t\t</div>
 \t\t\t<div class=\'dh14\' style="width:130px;">
 \t\t\t\t<div class=\'d14\'>&nbsp; ''')
         _v = VFFSL(SL,"getVar",False)("next.duration", " ") # u'$getVar("next.duration", " ")' on line 55, col 29
-        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("next.duration", " ")')) # from line 55, col 29.
-        write(u''' min</div>
+        if _v is not None: write(_filter(_v, rawExpr='$getVar("next.duration", " ")')) # from line 55, col 29.
+        write(''' min</div>
 \t\t\t</div>
 \t\t</div>
 \t\t<div class=\'dh20\' style="width:560px;">
 \t\t\t<div class=\'dh20\' style="width:100px;">
 \t\t\t\t<div class=\'d14\' style="top:6px;left:15px;">''')
         _v = VFFSL(SL,"getVar",False)("info.tunertype", " ") # u'$getVar("info.tunertype", " ")' on line 60, col 49
-        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("info.tunertype", " ")')) # from line 60, col 49.
-        write(u'''</div>
+        if _v is not None: write(_filter(_v, rawExpr='$getVar("info.tunertype", " ")')) # from line 60, col 49.
+        write('''</div>
 \t\t\t</div>
 \t\t\t<div class=\'dh20\' style="width:80px;">
 \t\t\t\t<div class=\'d14\' style="float:left;top:6px;">Snr: ''')
         _v = VFFSL(SL,"getVar",False)("info.snr", "0") # u'$getVar("info.snr", "0")' on line 63, col 55
-        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("info.snr", "0")')) # from line 63, col 55.
-        write(u''' % </div>
+        if _v is not None: write(_filter(_v, rawExpr='$getVar("info.snr", "0")')) # from line 63, col 55.
+        write(''' % </div>
 \t\t\t</div>
 \t\t\t<div class=\'dh20\' style="width:100px;">
 \t\t\t\t<div class=\'dh14\' style="position:relative;top:8px;left:0px;width:100px;background-image:url(images/osd/snr_bar_back.png);">
 \t\t\t\t\t<div class=\'dh14\' style="width:100px;"><img border=\'0\' height=\'14px\' width=\'''')
         _v = VFFSL(SL,"getVar",False)("info.snr", "0") # u'${getVar("info.snr", "0")}' on line 67, col 82
-        if _v is not None: write(_filter(_v, rawExpr=u'${getVar("info.snr", "0")}')) # from line 67, col 82.
-        write(u'''px\' src=\'images/osd/chan_bar.png\' alt=\'\' /></div>
+        if _v is not None: write(_filter(_v, rawExpr='${getVar("info.snr", "0")}')) # from line 67, col 82.
+        write('''px\' src=\'images/osd/chan_bar.png\' alt=\'\' /></div>
 \t\t\t\t</div>
 \t\t\t</div>
 \t\t\t<div class=\'dh20\' style="width:100px;">
 \t\t\t\t<div class=\'d14\' style="float:left;top:6px;left:7px;"> Ber: ''')
         _v = VFFSL(SL,"getVar",False)("info.ber", "N/A") # u'$getVar("info.ber", "N/A")' on line 71, col 65
-        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("info.ber", "N/A")')) # from line 71, col 65.
-        write(u''' </div>
+        if _v is not None: write(_filter(_v, rawExpr='$getVar("info.ber", "N/A")')) # from line 71, col 65.
+        write(''' </div>
 \t\t\t</div>
 \t\t\t<div class=\'dh20\' style="width:125px;">
 \t\t\t\t<div class=\'d14\' style="top:6px;">''')
         _v = VFFSL(SL,"info.width",True) # u'$info.width' on line 74, col 39
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.width')) # from line 74, col 39.
-        write(u''' x ''')
+        if _v is not None: write(_filter(_v, rawExpr='$info.width')) # from line 74, col 39.
+        write(''' x ''')
         _v = VFFSL(SL,"info.height",True) # u'$info.height' on line 74, col 53
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.height')) # from line 74, col 53.
-        write(u'''</div>
+        if _v is not None: write(_filter(_v, rawExpr='$info.height')) # from line 74, col 53.
+        write('''</div>
 \t\t\t</div>
 \t\t</div>
 \t\t<div style="float:left;width:560px;height:60px">
@@ -243,19 +244,19 @@
         tnum = 0
         for tuner in VFFSL(SL,"info.tuners",True): # generated from line 81, col 1
             if VFFSL(SL,"info.tunernumber",True) == VFFSL(SL,"tnum",True): # generated from line 82, col 2
-                write(u'''\t\t<span style="opacity:1">''')
+                write('''\t\t<span style="opacity:1">''')
                 _v = VFFSL(SL,"tuner",True) # u'$tuner' on line 83, col 27
-                if _v is not None: write(_filter(_v, rawExpr=u'$tuner')) # from line 83, col 27.
-                write(u'''</span>
+                if _v is not None: write(_filter(_v, rawExpr='$tuner')) # from line 83, col 27.
+                write('''</span>
 ''')
             else: # generated from line 84, col 2
-                write(u'''\t\t<span>''')
+                write('''\t\t<span>''')
                 _v = VFFSL(SL,"tuner",True) # u'$tuner' on line 85, col 9
-                if _v is not None: write(_filter(_v, rawExpr=u'$tuner')) # from line 85, col 9.
-                write(u'''</span>
+                if _v is not None: write(_filter(_v, rawExpr='$tuner')) # from line 85, col 9.
+                write('''</span>
 ''')
             tnum = VFFSL(SL,"tnum",True) + 1
-        write(u'''\t\t\t\t</div>
+        write('''\t\t\t\t</div>
 \t\t\t</div>
 \t\t\t<div style="float:left;height:32px;">
 \t\t\t\t<div class="iconadl" style="left:10px">
@@ -263,58 +264,58 @@
         ta = '44px'
         if VFFSL(SL,"info.crypt",True) == 1: # generated from line 94, col 1
             ta = '0px'
-        write(u'''\t\t\t\t\t<div class="ib" style="background-position: -''')
+        write('''\t\t\t\t\t<div class="ib" style="background-position: -''')
         _v = VFFSL(SL,"ta",True) # u'$ta' on line 97, col 51
-        if _v is not None: write(_filter(_v, rawExpr=u'$ta')) # from line 97, col 51.
-        write(u''' 0px"></div>
+        if _v is not None: write(_filter(_v, rawExpr='$ta')) # from line 97, col 51.
+        write(''' 0px"></div>
 ''')
         ta = '64px'
         if VFFSL(SL,"info.dolby",True) == True: # generated from line 99, col 1
             ta = '0px'
-        write(u'''\t\t\t\t\t<div class="id" style="background-position: -''')
+        write('''\t\t\t\t\t<div class="id" style="background-position: -''')
         _v = VFFSL(SL,"ta",True) # u'$ta' on line 102, col 51
-        if _v is not None: write(_filter(_v, rawExpr=u'$ta')) # from line 102, col 51.
-        write(u''' 0px"></div>
+        if _v is not None: write(_filter(_v, rawExpr='$ta')) # from line 102, col 51.
+        write(''' 0px"></div>
 ''')
         ta = '132px'
         if VFFSL(SL,"info.wide",True) == True: # generated from line 104, col 1
             ta = '88px'
-        write(u'''\t\t\t\t\t<div class="ib" style="background-position: -''')
+        write('''\t\t\t\t\t<div class="ib" style="background-position: -''')
         _v = VFFSL(SL,"ta",True) # u'$ta' on line 107, col 51
-        if _v is not None: write(_filter(_v, rawExpr=u'$ta')) # from line 107, col 51.
-        write(u''' 0px"></div>
+        if _v is not None: write(_filter(_v, rawExpr='$ta')) # from line 107, col 51.
+        write(''' 0px"></div>
 ''')
         ta = '220px'
         if VFFSL(SL,"info.width",True) != "N/A" and VFFSL(SL,"info.width",True) > 1900: # generated from line 109, col 1
             ta = '176px'
-        write(u'''\t\t\t\t\t<div class="ib" style="background-position: -''')
+        write('''\t\t\t\t\t<div class="ib" style="background-position: -''')
         _v = VFFSL(SL,"ta",True) # u'$ta' on line 112, col 51
-        if _v is not None: write(_filter(_v, rawExpr=u'$ta')) # from line 112, col 51.
-        write(u''' 0px"></div>
+        if _v is not None: write(_filter(_v, rawExpr='$ta')) # from line 112, col 51.
+        write(''' 0px"></div>
 ''')
         ta = '220px'
         if VFFSL(SL,"info.txtpid",True) != "N/A": # generated from line 114, col 1
             ta = '176px'
-        write(u'''\t\t\t\t\t<div class="ib" style="background-position: -''')
+        write('''\t\t\t\t\t<div class="ib" style="background-position: -''')
         _v = VFFSL(SL,"ta",True) # u'$ta' on line 117, col 51
-        if _v is not None: write(_filter(_v, rawExpr=u'$ta')) # from line 117, col 51.
-        write(u''' -26px"></div>
+        if _v is not None: write(_filter(_v, rawExpr='$ta')) # from line 117, col 51.
+        write(''' -26px"></div>
 ''')
         ta = '132px'
         if VFFSL(SL,"info.subs",True) == True: # generated from line 119, col 1
             ta = '88px'
-        write(u'''\t\t\t\t\t<div class="ib" style="background-position: -''')
+        write('''\t\t\t\t\t<div class="ib" style="background-position: -''')
         _v = VFFSL(SL,"ta",True) # u'$ta' on line 122, col 51
-        if _v is not None: write(_filter(_v, rawExpr=u'$ta')) # from line 122, col 51.
-        write(u''' -26px"></div>
+        if _v is not None: write(_filter(_v, rawExpr='$ta')) # from line 122, col 51.
+        write(''' -26px"></div>
 ''')
         ta = '44px'
         if VFFSL(SL,"info.rec_state",True) == True: # generated from line 124, col 1
             ta = '0px'
-        write(u'''\t\t\t\t\t<div class="ib" style="background-position: -''')
+        write('''\t\t\t\t\t<div class="ib" style="background-position: -''')
         _v = VFFSL(SL,"ta",True) # u'$ta' on line 127, col 51
-        if _v is not None: write(_filter(_v, rawExpr=u'$ta')) # from line 127, col 51.
-        write(u''' -26px"></div>
+        if _v is not None: write(_filter(_v, rawExpr='$ta')) # from line 127, col 51.
+        write(''' -26px"></div>
 \t\t\t\t</div>
 \t\t\t</div>
 \t\t</div>
@@ -328,290 +329,290 @@
 \t<tr style="background-color:initial;" >
 \t\t<th colspan="3" class="ui-widget-header">''')
         _v = VFFSL(SL,"tstrings",True)['service'] # u"$tstrings['service']" on line 139, col 44
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['service']")) # from line 139, col 44.
-        write(u'''</th>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['service']")) # from line 139, col 44.
+        write('''</th>
 \t</tr>
 \t<tr>
 \t\t<td>''')
         _v = VFFSL(SL,"tstrings",True)['name'] # u"$tstrings['name']" on line 142, col 7
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['name']")) # from line 142, col 7.
-        write(u''': ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['name']")) # from line 142, col 7.
+        write(''': ''')
         _v = VFFSL(SL,"info.name",True) # u'$info.name' on line 142, col 26
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.name')) # from line 142, col 26.
-        write(u'''</td>
+        if _v is not None: write(_filter(_v, rawExpr='$info.name')) # from line 142, col 26.
+        write('''</td>
 \t\t<td>''')
         _v = VFFSL(SL,"tstrings",True)['provider'] # u"$tstrings['provider']" on line 143, col 7
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['provider']")) # from line 143, col 7.
-        write(u''': ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['provider']")) # from line 143, col 7.
+        write(''': ''')
         _v = VFFSL(SL,"info.provider",True) # u'$info.provider' on line 143, col 30
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.provider')) # from line 143, col 30.
-        write(u'''</td>
+        if _v is not None: write(_filter(_v, rawExpr='$info.provider')) # from line 143, col 30.
+        write('''</td>
 \t\t<td id="ns" data-ns="''')
         _v = VFFSL(SL,"info.namespace",True) # u'$info.namespace' on line 144, col 24
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.namespace')) # from line 144, col 24.
-        write(u'''">''')
+        if _v is not None: write(_filter(_v, rawExpr='$info.namespace')) # from line 144, col 24.
+        write('''">''')
         _v = VFFSL(SL,"tstrings",True)['namespace'] # u"$tstrings['namespace']" on line 144, col 41
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['namespace']")) # from line 144, col 41.
-        write(u''': ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['namespace']")) # from line 144, col 41.
+        write(''': ''')
         _v = VFFSL(SL,"info.namespace",True) # u'$info.namespace' on line 144, col 65
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.namespace')) # from line 144, col 65.
-        write(u'''</td>
+        if _v is not None: write(_filter(_v, rawExpr='$info.namespace')) # from line 144, col 65.
+        write('''</td>
 \t</tr>
 \t<tr>
 \t\t<td>''')
         _v = VFFSL(SL,"tstrings",True)['video_width'] # u"$tstrings['video_width']" on line 147, col 7
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['video_width']")) # from line 147, col 7.
-        write(u''': ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['video_width']")) # from line 147, col 7.
+        write(''': ''')
         _v = VFFSL(SL,"info.width",True) # u'$info.width' on line 147, col 33
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.width')) # from line 147, col 33.
-        write(u'''</td>
+        if _v is not None: write(_filter(_v, rawExpr='$info.width')) # from line 147, col 33.
+        write('''</td>
 \t\t<td>''')
         _v = VFFSL(SL,"tstrings",True)['video_height'] # u"$tstrings['video_height']" on line 148, col 7
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['video_height']")) # from line 148, col 7.
-        write(u''': ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['video_height']")) # from line 148, col 7.
+        write(''': ''')
         _v = VFFSL(SL,"info.height",True) # u'$info.height' on line 148, col 34
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.height')) # from line 148, col 34.
-        write(u'''</td>
+        if _v is not None: write(_filter(_v, rawExpr='$info.height')) # from line 148, col 34.
+        write('''</td>
 \t\t<td>''')
         _v = VFFSL(SL,"tstrings",True)['video_wide'] # u"$tstrings['video_wide']" on line 149, col 7
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['video_wide']")) # from line 149, col 7.
-        write(u''': ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['video_wide']")) # from line 149, col 7.
+        write(''': ''')
         _v = VFFSL(SL,"info.wide",True) # u'$info.wide' on line 149, col 32
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.wide')) # from line 149, col 32.
-        write(u'''</td>
+        if _v is not None: write(_filter(_v, rawExpr='$info.wide')) # from line 149, col 32.
+        write('''</td>
 \t</tr>
 \t<tr>
 \t\t<td>''')
         _v = VFFSL(SL,"tstrings",True)['encrypted'] # u"$tstrings['encrypted']" on line 152, col 7
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['encrypted']")) # from line 152, col 7.
-        write(u''': ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['encrypted']")) # from line 152, col 7.
+        write(''': ''')
         _v = VFFSL(SL,"info.crypt",True) # u'$info.crypt' on line 152, col 31
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.crypt')) # from line 152, col 31.
-        write(u'''</td>
+        if _v is not None: write(_filter(_v, rawExpr='$info.crypt')) # from line 152, col 31.
+        write('''</td>
 \t\t<td>''')
         _v = VFFSL(SL,"tstrings",True)['dolby'] # u"$tstrings['dolby']" on line 153, col 7
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['dolby']")) # from line 153, col 7.
-        write(u''': ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['dolby']")) # from line 153, col 7.
+        write(''': ''')
         _v = VFFSL(SL,"info.dolby",True) # u'$info.dolby' on line 153, col 27
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.dolby')) # from line 153, col 27.
-        write(u'''</td>
+        if _v is not None: write(_filter(_v, rawExpr='$info.dolby')) # from line 153, col 27.
+        write('''</td>
 \t\t<td>''')
         _v = VFFSL(SL,"tstrings",True)['subservices'] # u"$tstrings['subservices']" on line 154, col 7
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['subservices']")) # from line 154, col 7.
-        write(u''': ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['subservices']")) # from line 154, col 7.
+        write(''': ''')
         _v = VFFSL(SL,"info.subs",True) # u'$info.subs' on line 154, col 33
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.subs')) # from line 154, col 33.
-        write(u'''</td>
+        if _v is not None: write(_filter(_v, rawExpr='$info.subs')) # from line 154, col 33.
+        write('''</td>
 \t</tr>
 \t<tr>
 \t\t<td>''')
         _v = VFFSL(SL,"tstrings",True)['teletext'] # u"$tstrings['teletext']" on line 157, col 7
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['teletext']")) # from line 157, col 7.
-        write(u''': ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['teletext']")) # from line 157, col 7.
+        write(''': ''')
         _v = VFFSL(SL,"info.txtpid",True) # u'$info.txtpid' on line 157, col 30
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.txtpid')) # from line 157, col 30.
-        write(u'''</td>
+        if _v is not None: write(_filter(_v, rawExpr='$info.txtpid')) # from line 157, col 30.
+        write('''</td>
 \t\t<td>''')
         _v = VFFSL(SL,"tstrings",True)['rec_status'] # u"$tstrings['rec_status']" on line 158, col 7
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['rec_status']")) # from line 158, col 7.
-        write(u''': ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['rec_status']")) # from line 158, col 7.
+        write(''': ''')
         _v = VFFSL(SL,"info.rec_state",True) # u'$info.rec_state' on line 158, col 32
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.rec_state')) # from line 158, col 32.
-        write(u'''</td>
+        if _v is not None: write(_filter(_v, rawExpr='$info.rec_state')) # from line 158, col 32.
+        write('''</td>
 \t\t<td id="pmtpid" data-pmtpid="''')
         _v = VFFSL(SL,"info.pmtpid",True) # u'$info.pmtpid' on line 159, col 32
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.pmtpid')) # from line 159, col 32.
-        write(u'''">''')
+        if _v is not None: write(_filter(_v, rawExpr='$info.pmtpid')) # from line 159, col 32.
+        write('''">''')
         _v = VFFSL(SL,"tstrings",True)['pmt_pid'] # u"$tstrings['pmt_pid']" on line 159, col 46
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['pmt_pid']")) # from line 159, col 46.
-        write(u''': ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['pmt_pid']")) # from line 159, col 46.
+        write(''': ''')
         _v = VFFSL(SL,"info.pmtpid",True) # u'$info.pmtpid' on line 159, col 68
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.pmtpid')) # from line 159, col 68.
-        write(u'''</td>
+        if _v is not None: write(_filter(_v, rawExpr='$info.pmtpid')) # from line 159, col 68.
+        write('''</td>
 \t</tr>
 \t<tr>
 \t\t<td id="apid" data-apid="''')
         _v = VFFSL(SL,"info.apid",True) # u'$info.apid' on line 162, col 28
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.apid')) # from line 162, col 28.
-        write(u'''">''')
+        if _v is not None: write(_filter(_v, rawExpr='$info.apid')) # from line 162, col 28.
+        write('''">''')
         _v = VFFSL(SL,"tstrings",True)['a_pid'] # u"$tstrings['a_pid']" on line 162, col 40
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['a_pid']")) # from line 162, col 40.
-        write(u''': ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['a_pid']")) # from line 162, col 40.
+        write(''': ''')
         _v = VFFSL(SL,"info.apid",True) # u'$info.apid' on line 162, col 60
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.apid')) # from line 162, col 60.
-        write(u'''</td>
+        if _v is not None: write(_filter(_v, rawExpr='$info.apid')) # from line 162, col 60.
+        write('''</td>
 \t\t<td id="vpid" data-vpid="''')
         _v = VFFSL(SL,"info.vpid",True) # u'$info.vpid' on line 163, col 28
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.vpid')) # from line 163, col 28.
-        write(u'''">''')
+        if _v is not None: write(_filter(_v, rawExpr='$info.vpid')) # from line 163, col 28.
+        write('''">''')
         _v = VFFSL(SL,"tstrings",True)['v_pid'] # u"$tstrings['v_pid']" on line 163, col 40
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['v_pid']")) # from line 163, col 40.
-        write(u''': ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['v_pid']")) # from line 163, col 40.
+        write(''': ''')
         _v = VFFSL(SL,"info.vpid",True) # u'$info.vpid' on line 163, col 60
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.vpid')) # from line 163, col 60.
-        write(u'''</td>
+        if _v is not None: write(_filter(_v, rawExpr='$info.vpid')) # from line 163, col 60.
+        write('''</td>
 \t\t<td id="pcrpid" data-pcrpid="''')
         _v = VFFSL(SL,"info.pcrpid",True) # u'$info.pcrpid' on line 164, col 32
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.pcrpid')) # from line 164, col 32.
-        write(u'''">''')
+        if _v is not None: write(_filter(_v, rawExpr='$info.pcrpid')) # from line 164, col 32.
+        write('''">''')
         _v = VFFSL(SL,"tstrings",True)['pcr_pid'] # u"$tstrings['pcr_pid']" on line 164, col 46
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['pcr_pid']")) # from line 164, col 46.
-        write(u''': ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['pcr_pid']")) # from line 164, col 46.
+        write(''': ''')
         _v = VFFSL(SL,"info.pcrpid",True) # u'$info.pcrpid' on line 164, col 68
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.pcrpid')) # from line 164, col 68.
-        write(u'''</td>
+        if _v is not None: write(_filter(_v, rawExpr='$info.pcrpid')) # from line 164, col 68.
+        write('''</td>
 \t</tr>
 \t<tr>
 \t\t<td id="tsid" data-tsid="''')
         _v = VFFSL(SL,"info.tsid",True) # u'$info.tsid' on line 167, col 28
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.tsid')) # from line 167, col 28.
-        write(u'''">''')
+        if _v is not None: write(_filter(_v, rawExpr='$info.tsid')) # from line 167, col 28.
+        write('''">''')
         _v = VFFSL(SL,"tstrings",True)['ts_id'] # u"$tstrings['ts_id']" on line 167, col 40
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ts_id']")) # from line 167, col 40.
-        write(u''': ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['ts_id']")) # from line 167, col 40.
+        write(''': ''')
         _v = VFFSL(SL,"info.tsid",True) # u'$info.tsid' on line 167, col 60
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.tsid')) # from line 167, col 60.
-        write(u''' </td>
+        if _v is not None: write(_filter(_v, rawExpr='$info.tsid')) # from line 167, col 60.
+        write(''' </td>
 \t\t<td id="onid" data-onid="''')
         _v = VFFSL(SL,"info.onid",True) # u'$info.onid' on line 168, col 28
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.onid')) # from line 168, col 28.
-        write(u'''">''')
+        if _v is not None: write(_filter(_v, rawExpr='$info.onid')) # from line 168, col 28.
+        write('''">''')
         _v = VFFSL(SL,"tstrings",True)['on_id'] # u"$tstrings['on_id']" on line 168, col 40
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['on_id']")) # from line 168, col 40.
-        write(u''': ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['on_id']")) # from line 168, col 40.
+        write(''': ''')
         _v = VFFSL(SL,"info.onid",True) # u'$info.onid' on line 168, col 60
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.onid')) # from line 168, col 60.
-        write(u'''</td>
+        if _v is not None: write(_filter(_v, rawExpr='$info.onid')) # from line 168, col 60.
+        write('''</td>
 \t\t<td id="sid" data-sid="''')
         _v = VFFSL(SL,"info.sid",True) # u'$info.sid' on line 169, col 26
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.sid')) # from line 169, col 26.
-        write(u'''">''')
+        if _v is not None: write(_filter(_v, rawExpr='$info.sid')) # from line 169, col 26.
+        write('''">''')
         _v = VFFSL(SL,"tstrings",True)['s_id'] # u"$tstrings['s_id']" on line 169, col 37
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['s_id']")) # from line 169, col 37.
-        write(u''': ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['s_id']")) # from line 169, col 37.
+        write(''': ''')
         _v = VFFSL(SL,"info.sid",True) # u'$info.sid' on line 169, col 56
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.sid')) # from line 169, col 56.
-        write(u'''</td>
+        if _v is not None: write(_filter(_v, rawExpr='$info.sid')) # from line 169, col 56.
+        write('''</td>
 \t</tr>
 \t<tr>
 \t\t<td>''')
         _v = VFFSL(SL,"tstrings",True)['s_ref'] # u"$tstrings['s_ref']" on line 172, col 7
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['s_ref']")) # from line 172, col 7.
-        write(u''': ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['s_ref']")) # from line 172, col 7.
+        write(''': ''')
         _v = VFFSL(SL,"info.sref",True) # u'$info.sref' on line 172, col 27
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.sref')) # from line 172, col 27.
-        write(u'''</td>
+        if _v is not None: write(_filter(_v, rawExpr='$info.sref')) # from line 172, col 27.
+        write('''</td>
 \t\t<td>''')
         _v = VFFSL(SL,"getVar",False)("info.srefv2", "") # u'$getVar("info.srefv2", "")' on line 173, col 7
-        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("info.srefv2", "")')) # from line 173, col 7.
-        write(u'''</td>
+        if _v is not None: write(_filter(_v, rawExpr='$getVar("info.srefv2", "")')) # from line 173, col 7.
+        write('''</td>
 \t\t<td>''')
         _v = VFFSL(SL,"getVar",False)("info.orbital_position", "") # u'$getVar("info.orbital_position", "")' on line 174, col 7
-        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("info.orbital_position", "")')) # from line 174, col 7.
-        write(u'''</td>
+        if _v is not None: write(_filter(_v, rawExpr='$getVar("info.orbital_position", "")')) # from line 174, col 7.
+        write('''</td>
 \t</tr>
 \t<tr style="background-color:initial;" >
 \t\t<th colspan="3" class="ui-widget-header">''')
         _v = VFFSL(SL,"tstrings",True)['tuner_signal'] # u"$tstrings['tuner_signal']" on line 177, col 44
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['tuner_signal']")) # from line 177, col 44.
-        write(u'''</th>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['tuner_signal']")) # from line 177, col 44.
+        write('''</th>
 \t</tr>
 \t<tr>
 \t\t<td>''')
         _v = VFFSL(SL,"tstrings",True)['tuner_type'] # u"$tstrings['tuner_type']" on line 180, col 7
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['tuner_type']")) # from line 180, col 7.
-        write(u''': ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['tuner_type']")) # from line 180, col 7.
+        write(''': ''')
         _v = VFFSL(SL,"getVar",False)("info.tunertype", "N/A") # u'$getVar("info.tunertype", "N/A")' on line 180, col 32
-        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("info.tunertype", "N/A")')) # from line 180, col 32.
-        write(u'''</td>
+        if _v is not None: write(_filter(_v, rawExpr='$getVar("info.tunertype", "N/A")')) # from line 180, col 32.
+        write('''</td>
 \t\t<td>''')
         _v = VFFSL(SL,"tstrings",True)['tuner_number'] # u"$tstrings['tuner_number']" on line 181, col 7
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['tuner_number']")) # from line 181, col 7.
-        write(u''':  ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['tuner_number']")) # from line 181, col 7.
+        write(''':  ''')
         _v = VFFSL(SL,"getVar",False)("info.tunernumber", "N/A") # u'$getVar("info.tunernumber", "N/A")' on line 181, col 35
-        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("info.tunernumber", "N/A")')) # from line 181, col 35.
-        write(u'''</td>
+        if _v is not None: write(_filter(_v, rawExpr='$getVar("info.tunernumber", "N/A")')) # from line 181, col 35.
+        write('''</td>
 \t\t<td>''')
         _v = VFFSL(SL,"tstrings",True)['tuner_signal_snr'] # u"$tstrings['tuner_signal_snr']" on line 182, col 7
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['tuner_signal_snr']")) # from line 182, col 7.
-        write(u''':  ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['tuner_signal_snr']")) # from line 182, col 7.
+        write(''':  ''')
         _v = VFFSL(SL,"getVar",False)("info.snr", "N/A") # u'$getVar("info.snr", "N/A")' on line 182, col 39
-        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("info.snr", "N/A")')) # from line 182, col 39.
-        write(u'''</td>
+        if _v is not None: write(_filter(_v, rawExpr='$getVar("info.snr", "N/A")')) # from line 182, col 39.
+        write('''</td>
 \t</tr>
 \t<tr>
 \t\t<td>''')
         _v = VFFSL(SL,"tstrings",True)['tuner_signal_snr_db'] # u"$tstrings['tuner_signal_snr_db']" on line 185, col 7
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['tuner_signal_snr_db']")) # from line 185, col 7.
-        write(u''':  ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['tuner_signal_snr_db']")) # from line 185, col 7.
+        write(''':  ''')
         _v = VFFSL(SL,"getVar",False)("info.snr_db", "N/A") # u'$getVar("info.snr_db", "N/A")' on line 185, col 42
-        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("info.snr_db", "N/A")')) # from line 185, col 42.
-        write(u'''</td>
+        if _v is not None: write(_filter(_v, rawExpr='$getVar("info.snr_db", "N/A")')) # from line 185, col 42.
+        write('''</td>
 \t\t<td>''')
         _v = VFFSL(SL,"tstrings",True)['tuner_signal_agc'] # u"$tstrings['tuner_signal_agc']" on line 186, col 7
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['tuner_signal_agc']")) # from line 186, col 7.
-        write(u''':  ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['tuner_signal_agc']")) # from line 186, col 7.
+        write(''':  ''')
         _v = VFFSL(SL,"getVar",False)("info.agc", "N/A") # u'$getVar("info.agc", "N/A")' on line 186, col 39
-        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("info.agc", "N/A")')) # from line 186, col 39.
-        write(u'''</td>
+        if _v is not None: write(_filter(_v, rawExpr='$getVar("info.agc", "N/A")')) # from line 186, col 39.
+        write('''</td>
 \t\t<td>''')
         _v = VFFSL(SL,"tstrings",True)['tuner_ber'] # u"$tstrings['tuner_ber']" on line 187, col 7
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['tuner_ber']")) # from line 187, col 7.
-        write(u''':  ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['tuner_ber']")) # from line 187, col 7.
+        write(''':  ''')
         _v = VFFSL(SL,"getVar",False)("info.ber", "N/A") # u'$getVar("info.ber", "N/A")' on line 187, col 32
-        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("info.ber", "N/A")')) # from line 187, col 32.
-        write(u'''</td>
+        if _v is not None: write(_filter(_v, rawExpr='$getVar("info.ber", "N/A")')) # from line 187, col 32.
+        write('''</td>
 \t</tr>
 \t<tr style="background-color:initial;" >
 \t\t<th colspan="3" class="ui-widget-header">''')
         _v = VFFSL(SL,"tstrings",True)['current_event'] # u"$tstrings['current_event']" on line 190, col 44
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['current_event']")) # from line 190, col 44.
-        write(u'''</th>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['current_event']")) # from line 190, col 44.
+        write('''</th>
 \t</tr>
 \t<tr>
 \t\t<td colspan="3">''')
         _v = VFFSL(SL,"tstrings",True)['title'] # u"$tstrings['title']" on line 193, col 19
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['title']")) # from line 193, col 19.
-        write(u''': ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['title']")) # from line 193, col 19.
+        write(''': ''')
         _v = VFFSL(SL,"getVar",False)("now.title", " ") # u'$getVar("now.title", " ")' on line 193, col 39
-        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("now.title", " ")')) # from line 193, col 39.
-        write(u'''</td>
+        if _v is not None: write(_filter(_v, rawExpr='$getVar("now.title", " ")')) # from line 193, col 39.
+        write('''</td>
 \t</tr>
 \t<tr>
 \t\t<td>''')
         _v = VFFSL(SL,"tstrings",True)['begin'] # u"$tstrings['begin']" on line 196, col 7
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['begin']")) # from line 196, col 7.
-        write(u''': ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['begin']")) # from line 196, col 7.
+        write(''': ''')
         _v = VFFSL(SL,"getVar",False)("now.begin", " ") # u'$getVar("now.begin", " ")' on line 196, col 27
-        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("now.begin", " ")')) # from line 196, col 27.
-        write(u'''</td>
+        if _v is not None: write(_filter(_v, rawExpr='$getVar("now.begin", " ")')) # from line 196, col 27.
+        write('''</td>
 \t\t<td>''')
         _v = VFFSL(SL,"tstrings",True)['end'] # u"$tstrings['end']" on line 197, col 7
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['end']")) # from line 197, col 7.
-        write(u''': ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['end']")) # from line 197, col 7.
+        write(''': ''')
         _v = VFFSL(SL,"getVar",False)("now.end", " ") # u'$getVar("now.end", " ")' on line 197, col 25
-        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("now.end", " ")')) # from line 197, col 25.
-        write(u'''</td>
+        if _v is not None: write(_filter(_v, rawExpr='$getVar("now.end", " ")')) # from line 197, col 25.
+        write('''</td>
 \t\t<td>''')
         _v = VFFSL(SL,"tstrings",True)['duration'] # u"$tstrings['duration']" on line 198, col 7
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['duration']")) # from line 198, col 7.
-        write(u''': ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['duration']")) # from line 198, col 7.
+        write(''': ''')
         _v = VFFSL(SL,"getVar",False)("now.duration", " ") # u'$getVar("now.duration", " ")' on line 198, col 30
-        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("now.duration", " ")')) # from line 198, col 30.
-        write(u'''</td>
+        if _v is not None: write(_filter(_v, rawExpr='$getVar("now.duration", " ")')) # from line 198, col 30.
+        write('''</td>
 \t</tr>
 \t<tr>
 \t\t<td colspan="3">''')
         _v = VFFSL(SL,"tstrings",True)['description'] # u"$tstrings['description']" on line 201, col 19
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['description']")) # from line 201, col 19.
-        write(u''':  ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['description']")) # from line 201, col 19.
+        write(''':  ''')
         _v = VFFSL(SL,"getVar",False)("now.shortdesc", " ") # u'$getVar("now.shortdesc", " ")' on line 201, col 46
-        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("now.shortdesc", " ")')) # from line 201, col 46.
-        write(u'''
+        if _v is not None: write(_filter(_v, rawExpr='$getVar("now.shortdesc", " ")')) # from line 201, col 46.
+        write('''
 \t\t<br>''')
         _v = VFFSL(SL,"getVar",False)("now.longdesc", " ") # u'$getVar("now.longdesc", " ")' on line 202, col 7
-        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("now.longdesc", " ")')) # from line 202, col 7.
-        write(u'''
+        if _v is not None: write(_filter(_v, rawExpr='$getVar("now.longdesc", " ")')) # from line 202, col 7.
+        write('''
 \t\t</td>
 \t</tr>
 </table>
--- ./plugin/controllers/views/ajax/edittimer.py	(original)
+++ ./plugin/controllers/views/ajax/edittimer.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -60,7 +61,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -70,7 +71,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,7 +84,7 @@
         ########################################
         ## START - generated method body
         
-        write(u'''<style>
+        write('''<style>
 .t,.t2,.t3 { display:table;width: 100%; padding-bottom:10px;background-image:none;}
 .t3.ui-widget-content,.t2.ui-widget-content,.t.ui-widget-content { border:none;}
 .t3 > div,.t > div,.t2 > div { display:table-cell;}
@@ -101,124 +102,124 @@
 \t<div class="t ui-widget-content">
 \t\t<div>''')
         _v = VFFSL(SL,"tstrings",True)['enabled'] # u"$tstrings['enabled']" on line 18, col 8
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['enabled']")) # from line 18, col 8.
-        write(u''':<input type="checkbox" name="enabled" id="enabled" value="0" /></div>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['enabled']")) # from line 18, col 8.
+        write(''':<input type="checkbox" name="enabled" id="enabled" value="0" /></div>
 \t\t<div>''')
         _v = VFFSL(SL,"tstrings",True)['just_play'] # u"$tstrings['just_play']" on line 19, col 8
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['just_play']")) # from line 19, col 8.
-        write(u''':<input type="checkbox" name="justplay" id="justplay" value="0" /><span id="sep1">/</span>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['just_play']")) # from line 19, col 8.
+        write(''':<input type="checkbox" name="justplay" id="justplay" value="0" /><span id="sep1">/</span>
 \t\t''')
         _v = VFFSL(SL,"tstrings",True)['record_zap'] # u"$tstrings['record_zap']" on line 20, col 3
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['record_zap']")) # from line 20, col 3.
-        write(u''':<input type="checkbox" name="always_zap" id="always_zap" value="0" />
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['record_zap']")) # from line 20, col 3.
+        write(''':<input type="checkbox" name="always_zap" id="always_zap" value="0" />
 ''')
         if VFFSL(SL,"pipzap",True): # generated from line 21, col 3
-            write(u'''\t\t<br>
+            write('''\t\t<br>
 \t\t''')
             _v = VFFSL(SL,"tstrings",True)['pipifposible'] # u"$tstrings['pipifposible']" on line 23, col 3
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['pipifposible']")) # from line 23, col 3.
-            write(u''': <input type="checkbox" name="pipzap" id="pipzap" value="0" />
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['pipifposible']")) # from line 23, col 3.
+            write(''': <input type="checkbox" name="pipzap" id="pipzap" value="0" />
 ''')
         else: # generated from line 24, col 3
-            write(u'''\t\t<input type="checkbox" name="pipzap" id="pipzap" value="0" style="display:none"/>
-''')
-        write(u'''\t\t</div>
+            write('''\t\t<input type="checkbox" name="pipzap" id="pipzap" value="0" style="display:none"/>
+''')
+        write('''\t\t</div>
 \t</div>
 
 \t<div class="t ui-widget-content">
 \t\t<div>''')
         _v = VFFSL(SL,"tstrings",True)['name'] # u"$tstrings['name']" on line 31, col 8
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['name']")) # from line 31, col 8.
-        write(u''':</div>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['name']")) # from line 31, col 8.
+        write(''':</div>
 \t\t<div><input type="text" name="timername" id="timername" style="width:100%;" class="text ui-widget-content ui-corner-all" /></div>
 \t</div>
 \t<div class="t ui-widget-content">
 \t\t<div>''')
         _v = VFFSL(SL,"tstrings",True)['description'] # u"$tstrings['description']" on line 35, col 8
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['description']")) # from line 35, col 8.
-        write(u''':</div>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['description']")) # from line 35, col 8.
+        write(''':</div>
 \t\t<div><textarea name="description" id="description" style="width:100%; height: 50px;" class="text ui-widget-content ui-corner-all" /></div>
 \t</div>
 \t<div class="t ui-widget-content">
 \t\t<div>''')
         _v = VFFSL(SL,"tstrings",True)['channel'] # u"$tstrings['channel']" on line 39, col 8
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['channel']")) # from line 39, col 8.
-        write(u''':
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['channel']")) # from line 39, col 8.
+        write(''':
 \t\t<label style="display:none;"><input class="cbtvr" id="cbtv" type="checkbox" name="group1[]" /> ''')
         _v = VFFSL(SL,"tstrings",True)['tv'] # u"$tstrings['tv']" on line 40, col 98
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['tv']")) # from line 40, col 98.
-        write(u''' </label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['tv']")) # from line 40, col 98.
+        write(''' </label>
 \t\t<span id="rcb">(''')
         _v = VFFSL(SL,"tstrings",True)['radio'] # u"$tstrings['radio']" on line 41, col 19
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['radio']")) # from line 41, col 19.
-        write(u''':<input class="cbtvr" id="cbradio" type="checkbox" name="group1[]" />)</span>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['radio']")) # from line 41, col 19.
+        write(''':<input class="cbtvr" id="cbradio" type="checkbox" name="group1[]" />)</span>
 \t\t</div>
 \t\t<div>
 \t\t<select id="bouquet_select" name="bouquet_select" style="width:100%;">
 \t\t\t<option value="0">''')
         _v = VFFSL(SL,"tstrings",True)['nothing'] # u"$tstrings['nothing']" on line 45, col 22
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['nothing']")) # from line 45, col 22.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['nothing']")) # from line 45, col 22.
+        write('''</option>
 \t\t</select></div>
 \t</div>
 
 \t<div class="t ui-widget-content">
 \t\t<div>''')
         _v = VFFSL(SL,"tstrings",True)['time'] # u"$tstrings['time']" on line 50, col 8
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['time']")) # from line 50, col 8.
-        write(u''':</div>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['time']")) # from line 50, col 8.
+        write(''':</div>
 \t\t<div>''')
         _v = VFFSL(SL,"tstrings",True)['start'] # u"$tstrings['start']" on line 51, col 8
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['start']")) # from line 51, col 8.
-        write(u''':<input type="text" name="timerbegin" id="timerbegin" value="" class="text ui-widget-content ui-corner-all" />&nbsp;
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['start']")) # from line 51, col 8.
+        write(''':<input type="text" name="timerbegin" id="timerbegin" value="" class="text ui-widget-content ui-corner-all" />&nbsp;
 \t\t''')
         _v = VFFSL(SL,"tstrings",True)['end'] # u"$tstrings['end']" on line 52, col 3
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['end']")) # from line 52, col 3.
-        write(u''':<input type="text" name="timerend" id="timerend" value="" class="text ui-widget-content ui-corner-all" /></div>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['end']")) # from line 52, col 3.
+        write(''':<input type="text" name="timerend" id="timerend" value="" class="text ui-widget-content ui-corner-all" /></div>
 \t</div>
 
 
 \t<div class="t ui-widget-content">
 \t\t<div>''')
         _v = VFFSL(SL,"tstrings",True)['repeated'] # u"$tstrings['repeated']" on line 57, col 8
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['repeated']")) # from line 57, col 8.
-        write(u''':</div>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['repeated']")) # from line 57, col 8.
+        write(''':</div>
 \t\t<div>
 \t\t<span id="repeatdays" style="margin: 5px;">
 ''')
         i = 0
         for day in [VFFSL(SL,"tstrings",True)['mo'], VFFSL(SL,"tstrings",True)['tu'], VFFSL(SL,"tstrings",True)['we'], VFFSL(SL,"tstrings",True)['th'], VFFSL(SL,"tstrings",True)['fr'], VFFSL(SL,"tstrings",True)['sa'], VFFSL(SL,"tstrings",True)['su']]: # generated from line 61, col 3
             value = 2 ** VFFSL(SL,"i",True)
-            write(u'''\t\t\t<label for="day''')
+            write('''\t\t\t<label for="day''')
             _v = VFFSL(SL,"i",True) # u'$i' on line 63, col 19
-            if _v is not None: write(_filter(_v, rawExpr=u'$i')) # from line 63, col 19.
-            write(u'''">''')
+            if _v is not None: write(_filter(_v, rawExpr='$i')) # from line 63, col 19.
+            write('''">''')
             _v = VFFSL(SL,"day",True) # u'$day' on line 63, col 23
-            if _v is not None: write(_filter(_v, rawExpr=u'$day')) # from line 63, col 23.
-            write(u'''</label><input type="checkbox" name="repeated" id="day''')
+            if _v is not None: write(_filter(_v, rawExpr='$day')) # from line 63, col 23.
+            write('''</label><input type="checkbox" name="repeated" id="day''')
             _v = VFFSL(SL,"i",True) # u'$i' on line 63, col 81
-            if _v is not None: write(_filter(_v, rawExpr=u'$i')) # from line 63, col 81.
-            write(u'''" value="''')
+            if _v is not None: write(_filter(_v, rawExpr='$i')) # from line 63, col 81.
+            write('''" value="''')
             _v = VFFSL(SL,"value",True) # u'$value' on line 63, col 92
-            if _v is not None: write(_filter(_v, rawExpr=u'$value')) # from line 63, col 92.
-            write(u'''" />
+            if _v is not None: write(_filter(_v, rawExpr='$value')) # from line 63, col 92.
+            write('''" />
 ''')
             i = VFFSL(SL,"i",True)+1
-        write(u'''\t\t</span>
+        write('''\t\t</span>
 \t\t</div>
 \t</div>
 
 \t<div class="t ui-widget-content">
 \t\t<div>''')
         _v = VFFSL(SL,"tstrings",True)['location'] # u"$tstrings['location']" on line 71, col 8
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['location']")) # from line 71, col 8.
-        write(u''':</div>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['location']")) # from line 71, col 8.
+        write(''':</div>
 \t\t<div>
 \t\t<select id="dirname" name="dirname">
 \t\t\t<option value="None">''')
         _v = VFFSL(SL,"tstrings",True)['default'] # u"$tstrings['default']" on line 74, col 25
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['default']")) # from line 74, col 25.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['default']")) # from line 74, col 25.
+        write('''</option>
 \t\t</select>
 \t\t</div>
 \t</div>
@@ -226,26 +227,26 @@
 \t<div class="t ui-widget-content">
 \t\t<div>''')
         _v = VFFSL(SL,"tstrings",True)['after_event'] # u"$tstrings['after_event']" on line 80, col 8
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['after_event']")) # from line 80, col 8.
-        write(u''':</div>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['after_event']")) # from line 80, col 8.
+        write(''':</div>
 \t\t<div>
 \t\t<select id="afterevent" name="afterevent">
 \t\t\t<option value="0">''')
         _v = VFFSL(SL,"tstrings",True)['nothing'] # u"$tstrings['nothing']" on line 83, col 22
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['nothing']")) # from line 83, col 22.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['nothing']")) # from line 83, col 22.
+        write('''</option>
 \t\t\t<option value="1">''')
         _v = VFFSL(SL,"tstrings",True)['standby'] # u"$tstrings['standby']" on line 84, col 22
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['standby']")) # from line 84, col 22.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['standby']")) # from line 84, col 22.
+        write('''</option>
 \t\t\t<option value="2">''')
         _v = VFFSL(SL,"tstrings",True)['shutdown'] # u"$tstrings['shutdown']" on line 85, col 22
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['shutdown']")) # from line 85, col 22.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['shutdown']")) # from line 85, col 22.
+        write('''</option>
 \t\t\t<option value="3" selected="">''')
         _v = VFFSL(SL,"tstrings",True)['auto'] # u"$tstrings['auto']" on line 86, col 34
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['auto']")) # from line 86, col 34.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['auto']")) # from line 86, col 34.
+        write('''</option>
 \t\t</select>
 \t\t</div>
 \t</div>
@@ -253,15 +254,15 @@
 \t<div class="timerlist_row" id="has_vpsplugin1">
 \t\t<span class="timerlist_row_l">''')
         _v = VFFSL(SL,"tstrings",True)['vps'] # u"$tstrings['vps']" on line 92, col 33
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['vps']")) # from line 92, col 33.
-        write(u''':</span>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['vps']")) # from line 92, col 33.
+        write(''':</span>
 \t\t<span style="margin: 5px;">
 \t\t\t<input type="checkbox" name="vpsplugin_enabled" id="vpsplugin_enabled" value="0" />
 \t\t</span>
 \t\t<span id="has_vpsplugin2" class="timerlist_row_r">''')
         _v = VFFSL(SL,"tstrings",True)['safe_mode'] # u"$tstrings['safe_mode']" on line 96, col 53
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['safe_mode']")) # from line 96, col 53.
-        write(u''':</span>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['safe_mode']")) # from line 96, col 53.
+        write(''':</span>
 \t\t<span style="margin: 5px;">
 \t\t\t<input type="checkbox" name="vpsplugin_safemode" id="vpsplugin_safemode" value="0" />
 \t\t</span>
@@ -269,30 +270,30 @@
 
 ''')
         if VFFSL(SL,"autoadjust",True): # generated from line 102, col 2
-            write(u'''\t<div class="t ui-widget-content">
+            write('''\t<div class="t ui-widget-content">
 \t\t<div>VTi Extras:</div>
 \t\t<div>
 \t\t\t''')
             _v = VFFSL(SL,"tstrings",True)['autoadjust'] # u"$tstrings['autoadjust']" on line 106, col 4
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['autoadjust']")) # from line 106, col 4.
-            write(u''': <input type="checkbox" id="autoadjust" value="1" />
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['autoadjust']")) # from line 106, col 4.
+            write(''': <input type="checkbox" id="autoadjust" value="1" />
 \t\t\t''')
             _v = VFFSL(SL,"tstrings",True)['allow_duplicate'] # u"$tstrings['allow_duplicate']" on line 107, col 4
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['allow_duplicate']")) # from line 107, col 4.
-            write(u''': <input type="checkbox" id="allow_duplicate" value="1" />
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['allow_duplicate']")) # from line 107, col 4.
+            write(''': <input type="checkbox" id="allow_duplicate" value="1" />
 \t\t</div>
 \t</div>
 ''')
         else: # generated from line 110, col 2
-            write(u'''\t<input type="checkbox" name="autoadjust" id="autoadjust" value="0" style="display:none" />
+            write('''\t<input type="checkbox" name="autoadjust" id="autoadjust" value="0" style="display:none" />
 \t<input type="checkbox" name="allow_duplicate" id="allow_duplicate" value="0" style="display:none" />
 ''')
-        write(u'''\t
+        write('''\t
 \t<div class="timerlist_row">
 \t\t<span class="timerlist_row_l">''')
         _v = VFFSL(SL,"tstrings",True)['tags'] # u"$tstrings['tags']" on line 116, col 33
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['tags']")) # from line 116, col 33.
-        write(u''':</span>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['tags']")) # from line 116, col 33.
+        write(''':</span>
 \t\t<span id="tagsnew" style="margin:5px">
 \t\t</span>
 \t</div>
--- ./plugin/controllers/views/ajax/epgdialog.py	(original)
+++ ./plugin/controllers/views/ajax/epgdialog.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -61,7 +62,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -71,7 +72,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -85,11 +86,11 @@
         ## START - generated method body
         
         if len(VFFSL(SL,"events",True)) == 0: # generated from line 3, col 1
-            write(u'''<img src="images/not_found.jpg" title="No items found" border="0" style="display:none;" id="ajpg">
+            write('''<img src="images/not_found.jpg" title="No items found" border="0" style="display:none;" id="ajpg">
 <img src="themes/not_found.png" title="No items found" border="0" onerror=\'$(this).hide();$("#ajpg").show();\'>
 ''')
         else: # generated from line 6, col 1
-            write(u'''<style>
+            write('''<style>
 .tb { display:inline-block; margin-left:3px;}
 .tb i.fa { font-size:32px;}
 #station { cursor:pointer;}
@@ -115,61 +116,61 @@
                 channel = VFN(VFFSL(SL,"event.sname",True),"replace",False)("'", r"\'")
                 title = VFN(VFFSL(SL,"event.title",True),"replace",False)("'", r"\'")
                 sref = quote(VFFSL(SL,"event.sref",True), safe=' ~@#$&()*!+=:;,.?/\'')
-                write(u"""
+                write("""
 \t<tbody data-id='""")
                 _v = VFFSL(SL,"sref",True) # u'$sref' on line 33, col 18
-                if _v is not None: write(_filter(_v, rawExpr=u'$sref')) # from line 33, col 18.
-                write(u''';''')
+                if _v is not None: write(_filter(_v, rawExpr='$sref')) # from line 33, col 18.
+                write(''';''')
                 _v = VFFSL(SL,"event.begin_timestamp",True) # u'$event.begin_timestamp' on line 33, col 24
-                if _v is not None: write(_filter(_v, rawExpr=u'$event.begin_timestamp')) # from line 33, col 24.
-                write(u''';''')
+                if _v is not None: write(_filter(_v, rawExpr='$event.begin_timestamp')) # from line 33, col 24.
+                write(''';''')
                 _v = VFFSL(SL,"event.duration",True) # u'$event.duration' on line 33, col 47
-                if _v is not None: write(_filter(_v, rawExpr=u'$event.duration')) # from line 33, col 47.
-                write(u'''\'>
+                if _v is not None: write(_filter(_v, rawExpr='$event.duration')) # from line 33, col 47.
+                write('''\'>
 \t<tr class="eft">
 \t<td class="efi ui-widget-header" colspan="2"><img src="''')
                 _v = VFFSL(SL,"event.picon",True) # u'$event.picon' on line 35, col 57
-                if _v is not None: write(_filter(_v, rawExpr=u'$event.picon')) # from line 35, col 57.
-                write(u'''" title=""></td>
+                if _v is not None: write(_filter(_v, rawExpr='$event.picon')) # from line 35, col 57.
+                write('''" title=""></td>
 \t<td style="width:100%;height:60px;">
 \t\t<div>
 \t\t<div class="esl1 panel ui-state-hover">''')
                 _v = VFFSL(SL,"event.sname",True) # u'$event.sname' on line 38, col 42
-                if _v is not None: write(_filter(_v, rawExpr=u'$event.sname')) # from line 38, col 42.
-                write(u'''<br />
+                if _v is not None: write(_filter(_v, rawExpr='$event.sname')) # from line 38, col 42.
+                write('''<br />
 ''')
                 if 'ns' in VFFSL(SL,"event",True): # generated from line 39, col 4
                     if '4097:' in VFFSL(SL,"event.sref",True) or '5002:' in VFFSL(SL,"event.sref",True) or 'http%3a' in VFFSL(SL,"event.sref",True) or 'https%3a' in VFFSL(SL,"event.sref",True): # generated from line 40, col 5
-                        write(u'''\t\t\t\t\tIPTV
+                        write('''\t\t\t\t\tIPTV
 ''')
                     else: # generated from line 42, col 5
-                        write(u'''\t\t\t\t\t''')
+                        write('''\t\t\t\t\t''')
                         _v = VFFSL(SL,"event.service_type",True) # u'$event.service_type' on line 43, col 6
-                        if _v is not None: write(_filter(_v, rawExpr=u'$event.service_type')) # from line 43, col 6.
-                        write(u''' / ''')
+                        if _v is not None: write(_filter(_v, rawExpr='$event.service_type')) # from line 43, col 6.
+                        write(''' / ''')
                         _v = VFFSL(SL,"event.ns",True) # u'$event.ns' on line 43, col 28
-                        if _v is not None: write(_filter(_v, rawExpr=u'$event.ns')) # from line 43, col 28.
-                        write(u'''
-''')
-                    write(u'''\t\t\t<br />
-''')
-                write(u'''\t\t\t''')
+                        if _v is not None: write(_filter(_v, rawExpr='$event.ns')) # from line 43, col 28.
+                        write('''
+''')
+                    write('''\t\t\t<br />
+''')
+                write('''\t\t\t''')
                 _v = VFFSL(SL,"event.date",True) # u'$event.date' on line 47, col 4
-                if _v is not None: write(_filter(_v, rawExpr=u'$event.date')) # from line 47, col 4.
-                write(u'''</div>
+                if _v is not None: write(_filter(_v, rawExpr='$event.date')) # from line 47, col 4.
+                write('''</div>
 \t\t<div class="esl2 panel ui-state-hover">''')
                 _v = VFFSL(SL,"event.title",True) # u'$event.title' on line 48, col 42
-                if _v is not None: write(_filter(_v, rawExpr=u'$event.title')) # from line 48, col 42.
-                write(u'''<br/>''')
+                if _v is not None: write(_filter(_v, rawExpr='$event.title')) # from line 48, col 42.
+                write('''<br/>''')
                 _v = VFFSL(SL,"event.begin",True) # u'$event.begin' on line 48, col 59
-                if _v is not None: write(_filter(_v, rawExpr=u'$event.begin')) # from line 48, col 59.
-                write(u'''&nbsp;-&nbsp;''')
+                if _v is not None: write(_filter(_v, rawExpr='$event.begin')) # from line 48, col 59.
+                write('''&nbsp;-&nbsp;''')
                 _v = VFFSL(SL,"event.end",True) # u'$event.end' on line 48, col 84
-                if _v is not None: write(_filter(_v, rawExpr=u'$event.end')) # from line 48, col 84.
-                write(u'''&nbsp;(''')
+                if _v is not None: write(_filter(_v, rawExpr='$event.end')) # from line 48, col 84.
+                write('''&nbsp;(''')
                 _v = VFFSL(SL,"event.duration",True) # u'$event.duration' on line 48, col 101
-                if _v is not None: write(_filter(_v, rawExpr=u'$event.duration')) # from line 48, col 101.
-                write(u''' min.)</div>
+                if _v is not None: write(_filter(_v, rawExpr='$event.duration')) # from line 48, col 101.
+                write(''' min.)</div>
 \t\t</div>
 \t</td>
 \t</tr>
@@ -177,149 +178,149 @@
 \t\t<td class="timerpanel panel ui-state-hover">
 \t\t\t<a class="tb addtimer" href="#" onclick="addTimerEvent(\'''')
                 _v = VFFSL(SL,"sref",True) # u'$sref' on line 54, col 60
-                if _v is not None: write(_filter(_v, rawExpr=u'$sref')) # from line 54, col 60.
-                write(u"""',""")
+                if _v is not None: write(_filter(_v, rawExpr='$sref')) # from line 54, col 60.
+                write("""',""")
                 _v = VFFSL(SL,"event.id",True) # u'$event.id' on line 54, col 67
-                if _v is not None: write(_filter(_v, rawExpr=u'$event.id')) # from line 54, col 67.
-                write(u''',false);return false;" title="''')
+                if _v is not None: write(_filter(_v, rawExpr='$event.id')) # from line 54, col 67.
+                write(''',false);return false;" title="''')
                 _v = VFFSL(SL,"tstrings",True)['add_timer'] # u"$tstrings['add_timer']" on line 54, col 106
-                if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['add_timer']")) # from line 54, col 106.
-                write(u'''">
+                if _v is not None: write(_filter(_v, rawExpr="$tstrings['add_timer']")) # from line 54, col 106.
+                write('''">
 \t\t\t<i class="fa fa-timerplus"></i>
 \t\t\t</a>
 \t\t\t<a class="tb deltimer" href="#" onclick="delTimerEvent(\'''')
                 _v = VFFSL(SL,"sref",True) # u'$sref' on line 57, col 60
-                if _v is not None: write(_filter(_v, rawExpr=u'$sref')) # from line 57, col 60.
-                write(u"""',""")
+                if _v is not None: write(_filter(_v, rawExpr='$sref')) # from line 57, col 60.
+                write("""',""")
                 _v = VFFSL(SL,"event.id",True) # u'$event.id' on line 57, col 67
-                if _v is not None: write(_filter(_v, rawExpr=u'$event.id')) # from line 57, col 67.
-                write(u''');return false;" title="''')
+                if _v is not None: write(_filter(_v, rawExpr='$event.id')) # from line 57, col 67.
+                write(''');return false;" title="''')
                 _v = VFFSL(SL,"tstrings",True)['delete_timer'] # u"$tstrings['delete_timer']" on line 57, col 100
-                if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['delete_timer']")) # from line 57, col 100.
-                write(u'''">
+                if _v is not None: write(_filter(_v, rawExpr="$tstrings['delete_timer']")) # from line 57, col 100.
+                write('''">
 \t\t\t<i class="fa fa-timertrash"></i>
 \t\t\t</a>
 \t\t</td>
 \t\t<td class="panel ui-state-hover">
 \t\t\t<a class="tb" href="#" onclick="addEditTimerEvent(\'''')
                 _v = VFFSL(SL,"sref",True) # u'$sref' on line 62, col 55
-                if _v is not None: write(_filter(_v, rawExpr=u'$sref')) # from line 62, col 55.
-                write(u"""',""")
+                if _v is not None: write(_filter(_v, rawExpr='$sref')) # from line 62, col 55.
+                write("""',""")
                 _v = VFFSL(SL,"event.id",True) # u'$event.id' on line 62, col 62
-                if _v is not None: write(_filter(_v, rawExpr=u'$event.id')) # from line 62, col 62.
-                write(u''');return false;" title="''')
+                if _v is not None: write(_filter(_v, rawExpr='$event.id')) # from line 62, col 62.
+                write(''');return false;" title="''')
                 _v = VFFSL(SL,"tstrings",True)['edit_timer'] # u"$tstrings['edit_timer']" on line 62, col 95
-                if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['edit_timer']")) # from line 62, col 95.
-                write(u'''">
+                if _v is not None: write(_filter(_v, rawExpr="$tstrings['edit_timer']")) # from line 62, col 95.
+                write('''">
 \t\t\t<i class="fa fa-timeredit"></i>
 \t\t\t</a>
 \t\t</td>
 \t\t<td class="eff" rowspan="4"><div class="eff1">
 \t\t\t<span>''')
                 _v = VFFSL(SL,"event.shortdesc",True) # u'$event.shortdesc' on line 67, col 10
-                if _v is not None: write(_filter(_v, rawExpr=u'$event.shortdesc')) # from line 67, col 10.
-                write(u'''</span><br><br></div>
+                if _v is not None: write(_filter(_v, rawExpr='$event.shortdesc')) # from line 67, col 10.
+                write('''</span><br><br></div>
 \t\t\t''')
                 _v = VFFSL(SL,"event.longdesc",True) # u'$event.longdesc' on line 68, col 4
-                if _v is not None: write(_filter(_v, rawExpr=u'$event.longdesc')) # from line 68, col 4.
-                write(u'''
+                if _v is not None: write(_filter(_v, rawExpr='$event.longdesc')) # from line 68, col 4.
+                write('''
 \t\t</td>
 \t</tr>
 \t<tr>
 \t\t<td class="panel ui-state-hover">
 \t\t\t<a class="tb" href="#" onclick="addTimerEvent(\'''')
                 _v = VFFSL(SL,"sref",True) # u'$sref' on line 73, col 51
-                if _v is not None: write(_filter(_v, rawExpr=u'$sref')) # from line 73, col 51.
-                write(u"""',""")
+                if _v is not None: write(_filter(_v, rawExpr='$sref')) # from line 73, col 51.
+                write("""',""")
                 _v = VFFSL(SL,"event.id",True) # u'$event.id' on line 73, col 58
-                if _v is not None: write(_filter(_v, rawExpr=u'$event.id')) # from line 73, col 58.
-                write(u''',true);return false;" title="''')
+                if _v is not None: write(_filter(_v, rawExpr='$event.id')) # from line 73, col 58.
+                write(''',true);return false;" title="''')
                 _v = VFFSL(SL,"tstrings",True)['add_zaptimer'] # u"$tstrings['add_zaptimer']" on line 73, col 96
-                if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['add_zaptimer']")) # from line 73, col 96.
-                write(u'''">
+                if _v is not None: write(_filter(_v, rawExpr="$tstrings['add_zaptimer']")) # from line 73, col 96.
+                write('''">
 \t\t\t<i class="fa fa-timerplay"></i>
 \t\t\t</a>
 \t\t</td>
 \t\t<td class="panel ui-state-hover">
 ''')
                 if VFFSL(SL,"at",True): # generated from line 78, col 4
-                    write(u'''\t\t\t\t<a class="tb" href="#" onclick="addAutoTimerEvent(\'''')
+                    write('''\t\t\t\t<a class="tb" href="#" onclick="addAutoTimerEvent(\'''')
                     _v = VFFSL(SL,"sref",True) # u'$sref' on line 79, col 56
-                    if _v is not None: write(_filter(_v, rawExpr=u'$sref')) # from line 79, col 56.
-                    write(u"""','""")
+                    if _v is not None: write(_filter(_v, rawExpr='$sref')) # from line 79, col 56.
+                    write("""','""")
                     _v = VFFSL(SL,"channel",True) # u'$channel' on line 79, col 64
-                    if _v is not None: write(_filter(_v, rawExpr=u'$channel')) # from line 79, col 64.
-                    write(u"""','""")
+                    if _v is not None: write(_filter(_v, rawExpr='$channel')) # from line 79, col 64.
+                    write("""','""")
                     _v = VFFSL(SL,"title",True) # u'$title' on line 79, col 75
-                    if _v is not None: write(_filter(_v, rawExpr=u'$title')) # from line 79, col 75.
-                    write(u"""','""")
+                    if _v is not None: write(_filter(_v, rawExpr='$title')) # from line 79, col 75.
+                    write("""','""")
                     _v = VFFSL(SL,"event.begin",True) # u'$event.begin' on line 79, col 84
-                    if _v is not None: write(_filter(_v, rawExpr=u'$event.begin')) # from line 79, col 84.
-                    write(u"""','""")
+                    if _v is not None: write(_filter(_v, rawExpr='$event.begin')) # from line 79, col 84.
+                    write("""','""")
                     _v = VFFSL(SL,"event.end",True) # u'$event.end' on line 79, col 99
-                    if _v is not None: write(_filter(_v, rawExpr=u'$event.end')) # from line 79, col 99.
-                    write(u'''\');return false;" title="''')
+                    if _v is not None: write(_filter(_v, rawExpr='$event.end')) # from line 79, col 99.
+                    write('''\');return false;" title="''')
                     _v = VFFSL(SL,"tstrings",True)['add_autotimer'] # u"$tstrings['add_autotimer']" on line 79, col 134
-                    if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['add_autotimer']")) # from line 79, col 134.
-                    write(u'''">
+                    if _v is not None: write(_filter(_v, rawExpr="$tstrings['add_autotimer']")) # from line 79, col 134.
+                    write('''">
 \t\t\t\t<i class="fa fa-timerat"></i>
 \t\t\t\t</a>
 ''')
-                write(u'''\t\t</td>
+                write('''\t\t</td>
 \t</tr>
 \t<tr>
 \t\t<td class="panel ui-state-hover">
 ''')
                 if VFFSL(SL,"moviedb",True) == "Kinopoisk": # generated from line 87, col 4
-                    write(u'''\t\t\t\t<a class="tb" target="_blank" href="http://www.kinopoisk.ru/index.php?first=no&kp_query=''')
+                    write('''\t\t\t\t<a class="tb" target="_blank" href="http://www.kinopoisk.ru/index.php?first=no&kp_query=''')
                     _v = VFFSL(SL,"quote",False)(VFFSL(SL,"event.title",True)) # u'$quote($event.title)' on line 88, col 93
-                    if _v is not None: write(_filter(_v, rawExpr=u'$quote($event.title)')) # from line 88, col 93.
-                    write(u'''"><img src="../images/kinopoisk.png" style="width:24px; height:24px; margin:0px 3px 0px 0px" title="''')
+                    if _v is not None: write(_filter(_v, rawExpr='$quote($event.title)')) # from line 88, col 93.
+                    write('''"><img src="../images/kinopoisk.png" style="width:24px; height:24px; margin:0px 3px 0px 0px" title="''')
                     _v = VFFSL(SL,"tstrings",True)['search_kinopoisk'] # u"$tstrings['search_kinopoisk']" on line 88, col 213
-                    if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['search_kinopoisk']")) # from line 88, col 213.
-                    write(u'''" border="0"></a>
+                    if _v is not None: write(_filter(_v, rawExpr="$tstrings['search_kinopoisk']")) # from line 88, col 213.
+                    write('''" border="0"></a>
 ''')
                 elif VFFSL(SL,"moviedb",True) == "CSFD": # generated from line 89, col 4
-                    write(u'''\t\t\t\t<a class="im tb" target="_blank" href="https://www.csfd.cz/hledat/?q=''')
+                    write('''\t\t\t\t<a class="im tb" target="_blank" href="https://www.csfd.cz/hledat/?q=''')
                     _v = VFFSL(SL,"event.title",True) # u'$event.title' on line 90, col 74
-                    if _v is not None: write(_filter(_v, rawExpr=u'$event.title')) # from line 90, col 74.
-                    write(u'''" title="''')
+                    if _v is not None: write(_filter(_v, rawExpr='$event.title')) # from line 90, col 74.
+                    write('''" title="''')
                     _v = VFFSL(SL,"tstrings",True)['search_csfd'] # u"$tstrings['search_csfd']" on line 90, col 95
-                    if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['search_csfd']")) # from line 90, col 95.
-                    write(u'''">csfd</a>
+                    if _v is not None: write(_filter(_v, rawExpr="$tstrings['search_csfd']")) # from line 90, col 95.
+                    write('''">csfd</a>
 ''')
                 else: # generated from line 91, col 4
-                    write(u'''\t\t\t\t<a class="im tb" target="_blank" href="http://www.imdb.com/find?s=all&amp;q=''')
+                    write('''\t\t\t\t<a class="im tb" target="_blank" href="http://www.imdb.com/find?s=all&amp;q=''')
                     _v = VFFSL(SL,"quote",False)(VFFSL(SL,"event.title",True)) # u'$quote($event.title)' on line 92, col 81
-                    if _v is not None: write(_filter(_v, rawExpr=u'$quote($event.title)')) # from line 92, col 81.
-                    write(u'''" title="''')
+                    if _v is not None: write(_filter(_v, rawExpr='$quote($event.title)')) # from line 92, col 81.
+                    write('''" title="''')
                     _v = VFFSL(SL,"tstrings",True)['search_imdb'] # u"$tstrings['search_imdb']" on line 92, col 110
-                    if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['search_imdb']")) # from line 92, col 110.
-                    write(u'''">IMDb</a>
-''')
-                write(u'''\t\t</td>
+                    if _v is not None: write(_filter(_v, rawExpr="$tstrings['search_imdb']")) # from line 92, col 110.
+                    write('''">IMDb</a>
+''')
+                write('''\t\t</td>
 \t\t<td></td>
 \t</tr>
 </tbody>
 ''')
-            write(u'''</table>
+            write('''</table>
 </div>
 <script type="text/javascript">
 var t = [
 ''')
             for timer in VFFSL(SL,"timers",True): # generated from line 103, col 1
-                write(u"""\t{'begin':""")
+                write("""\t{'begin':""")
                 _v = VFFSL(SL,"timer.begin",True) # u'$timer.begin' on line 104, col 11
-                if _v is not None: write(_filter(_v, rawExpr=u'$timer.begin')) # from line 104, col 11.
-                write(u""",'end':""")
+                if _v is not None: write(_filter(_v, rawExpr='$timer.begin')) # from line 104, col 11.
+                write(""",'end':""")
                 _v = VFFSL(SL,"timer.end",True) # u'$timer.end' on line 104, col 30
-                if _v is not None: write(_filter(_v, rawExpr=u'$timer.end')) # from line 104, col 30.
-                write(u""",'sref':'""")
+                if _v is not None: write(_filter(_v, rawExpr='$timer.end')) # from line 104, col 30.
+                write(""",'sref':'""")
                 _v = VFFSL(SL,"timer.serviceref",True) # u'$timer.serviceref' on line 104, col 49
-                if _v is not None: write(_filter(_v, rawExpr=u'$timer.serviceref')) # from line 104, col 49.
-                write(u"""'},
+                if _v is not None: write(_filter(_v, rawExpr='$timer.serviceref')) # from line 104, col 49.
+                write("""'},
 """)
-            write(u'''];
+            write('''];
 var reloadTimers = true;
 $(function() {
 \t$(\'#editTimerForm\').load(\'ajax/edittimer\');
--- ./plugin/controllers/views/ajax/epgpop.py	(original)
+++ ./plugin/controllers/views/ajax/epgpop.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -62,7 +63,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -72,7 +73,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -86,7 +87,7 @@
         ## START - generated method body
         
         if len(VFFSL(SL,"events",True)) == 0: # generated from line 4, col 1
-            write(u'''<html xmlns="http://www.w3.org/1999/xhtml">
+            write('''<html xmlns="http://www.w3.org/1999/xhtml">
 <html>
 <head>
 <title>No items found.</title>
@@ -101,7 +102,7 @@
             t = "original"
             if VFFSL(SL,"varExists",False)('theme'): # generated from line 17, col 1
                 t = VFFSL(SL,"theme",True)
-            write(u'''<!doctype html>
+            write('''<!doctype html>
 <html>
 <head>
 <meta http-equiv="X-UA-Compatible" content="IE=Edge" />
@@ -113,20 +114,20 @@
 ''')
             if VFFSL(SL,"t",True) != "original" and VFFSL(SL,"t",True) != "clear": # generated from line 29, col 1
                 t = VFFSL(SL,"t",True) + '.css'
-                write(u'''\t<link rel="stylesheet" href="../themes/''')
+                write('''\t<link rel="stylesheet" href="../themes/''')
                 _v = VFFSL(SL,"t",True) # u'$t' on line 31, col 41
-                if _v is not None: write(_filter(_v, rawExpr=u'$t')) # from line 31, col 41.
-                write(u'''">
-''')
-            write(u'''<link type="text/css" href="../css/style.min.css" rel="stylesheet"/>
+                if _v is not None: write(_filter(_v, rawExpr='$t')) # from line 31, col 41.
+                write('''">
+''')
+            write('''<link type="text/css" href="../css/style.min.css" rel="stylesheet"/>
 <link type="text/css" href="../web/css" rel="stylesheet"/>
 <script type="text/javascript" src="../js/openwebif-1.2.20.min.js"></script>
 <script type="text/javascript" src="../js/jquery-ui-timepicker-addon.min.js"></script>
 <script type="text/javascript" src="../js/chosen.1.8.2.min.js"></script>
 <script type="text/javascript">initJsTranslation(''')
             _v = VFFSL(SL,"dumps",False)(VFFSL(SL,"tstrings",True)) # u'$dumps($tstrings)' on line 38, col 50
-            if _v is not None: write(_filter(_v, rawExpr=u'$dumps($tstrings)')) # from line 38, col 50.
-            write(u''')</script>
+            if _v is not None: write(_filter(_v, rawExpr='$dumps($tstrings)')) # from line 38, col 50.
+            write(''')</script>
 <style>
 
 a {text-decoration:none;color:#000;}
@@ -151,8 +152,8 @@
 
 <title>Open Webif ''')
             _v = VFFSL(SL,"tstrings",True)['epg'] # u"$tstrings['epg']" on line 61, col 19
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['epg']")) # from line 61, col 19.
-            write(u'''</title>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['epg']")) # from line 61, col 19.
+            write('''</title>
 </head>
 <body>
 <div class="ETV">
@@ -162,61 +163,61 @@
                 channel = VFN(VFFSL(SL,"event.sname",True),"replace",False)("'", r"\'")
                 title = VFN(VFFSL(SL,"event.title",True),"replace",False)("'", r"\'")
                 sref = quote(VFFSL(SL,"event.sref",True), safe=' ~@#$&()*!+=:;,.?/\'')
-                write(u"""
+                write("""
 \t<tbody data-id='""")
                 _v = VFFSL(SL,"sref",True) # u'$sref' on line 71, col 18
-                if _v is not None: write(_filter(_v, rawExpr=u'$sref')) # from line 71, col 18.
-                write(u''';''')
+                if _v is not None: write(_filter(_v, rawExpr='$sref')) # from line 71, col 18.
+                write(''';''')
                 _v = VFFSL(SL,"event.begin_timestamp",True) # u'$event.begin_timestamp' on line 71, col 24
-                if _v is not None: write(_filter(_v, rawExpr=u'$event.begin_timestamp')) # from line 71, col 24.
-                write(u''';''')
+                if _v is not None: write(_filter(_v, rawExpr='$event.begin_timestamp')) # from line 71, col 24.
+                write(''';''')
                 _v = VFFSL(SL,"event.duration",True) # u'$event.duration' on line 71, col 47
-                if _v is not None: write(_filter(_v, rawExpr=u'$event.duration')) # from line 71, col 47.
-                write(u'''\'>
+                if _v is not None: write(_filter(_v, rawExpr='$event.duration')) # from line 71, col 47.
+                write('''\'>
 \t<tr class="eft">
 \t<td class="efi ui-widget-header" colspan="2"><img src="''')
                 _v = VFFSL(SL,"event.picon",True) # u'$event.picon' on line 73, col 57
-                if _v is not None: write(_filter(_v, rawExpr=u'$event.picon')) # from line 73, col 57.
-                write(u'''" title=""></td>
+                if _v is not None: write(_filter(_v, rawExpr='$event.picon')) # from line 73, col 57.
+                write('''" title=""></td>
 \t<td style="width:100%;height:60px;">
 \t\t<div>
 \t\t<div class="esl1 panel ui-state-hover">''')
                 _v = VFFSL(SL,"event.sname",True) # u'$event.sname' on line 76, col 42
-                if _v is not None: write(_filter(_v, rawExpr=u'$event.sname')) # from line 76, col 42.
-                write(u'''<br />
+                if _v is not None: write(_filter(_v, rawExpr='$event.sname')) # from line 76, col 42.
+                write('''<br />
 ''')
                 if 'ns' in VFFSL(SL,"event",True): # generated from line 77, col 4
                     if '4097:' in VFFSL(SL,"event.sref",True) or '5002:' in VFFSL(SL,"event.sref",True) or 'http%3a' in VFFSL(SL,"event.sref",True) or 'https%3a' in VFFSL(SL,"event.sref",True): # generated from line 78, col 5
-                        write(u'''\t\t\t\t\tIPTV
+                        write('''\t\t\t\t\tIPTV
 ''')
                     else: # generated from line 80, col 5
-                        write(u'''\t\t\t\t\t''')
+                        write('''\t\t\t\t\t''')
                         _v = VFFSL(SL,"event.service_type",True) # u'$event.service_type' on line 81, col 6
-                        if _v is not None: write(_filter(_v, rawExpr=u'$event.service_type')) # from line 81, col 6.
-                        write(u''' / ''')
+                        if _v is not None: write(_filter(_v, rawExpr='$event.service_type')) # from line 81, col 6.
+                        write(''' / ''')
                         _v = VFFSL(SL,"event.ns",True) # u'$event.ns' on line 81, col 28
-                        if _v is not None: write(_filter(_v, rawExpr=u'$event.ns')) # from line 81, col 28.
-                        write(u'''
-''')
-                    write(u'''\t\t\t<br />
-''')
-                write(u'''\t\t\t''')
+                        if _v is not None: write(_filter(_v, rawExpr='$event.ns')) # from line 81, col 28.
+                        write('''
+''')
+                    write('''\t\t\t<br />
+''')
+                write('''\t\t\t''')
                 _v = VFFSL(SL,"event.date",True) # u'$event.date' on line 85, col 4
-                if _v is not None: write(_filter(_v, rawExpr=u'$event.date')) # from line 85, col 4.
-                write(u'''</div>
+                if _v is not None: write(_filter(_v, rawExpr='$event.date')) # from line 85, col 4.
+                write('''</div>
 \t\t<div class="esl2 panel ui-state-hover">''')
                 _v = VFFSL(SL,"event.title",True) # u'$event.title' on line 86, col 42
-                if _v is not None: write(_filter(_v, rawExpr=u'$event.title')) # from line 86, col 42.
-                write(u'''<br/>''')
+                if _v is not None: write(_filter(_v, rawExpr='$event.title')) # from line 86, col 42.
+                write('''<br/>''')
                 _v = VFFSL(SL,"event.begin",True) # u'$event.begin' on line 86, col 59
-                if _v is not None: write(_filter(_v, rawExpr=u'$event.begin')) # from line 86, col 59.
-                write(u'''&nbsp;-&nbsp;''')
+                if _v is not None: write(_filter(_v, rawExpr='$event.begin')) # from line 86, col 59.
+                write('''&nbsp;-&nbsp;''')
                 _v = VFFSL(SL,"event.end",True) # u'$event.end' on line 86, col 84
-                if _v is not None: write(_filter(_v, rawExpr=u'$event.end')) # from line 86, col 84.
-                write(u'''&nbsp;(''')
+                if _v is not None: write(_filter(_v, rawExpr='$event.end')) # from line 86, col 84.
+                write('''&nbsp;(''')
                 _v = VFFSL(SL,"event.duration",True) # u'$event.duration' on line 86, col 101
-                if _v is not None: write(_filter(_v, rawExpr=u'$event.duration')) # from line 86, col 101.
-                write(u''' min.)</div>
+                if _v is not None: write(_filter(_v, rawExpr='$event.duration')) # from line 86, col 101.
+                write(''' min.)</div>
 \t\t</div>
 \t</td>
 \t</tr>
@@ -224,154 +225,154 @@
 \t\t<td class="timerpanel panel ui-state-hover">
 \t\t\t<a class="tb addtimer" href="#" onclick="addTimerEvent(\'''')
                 _v = VFFSL(SL,"sref",True) # u'$sref' on line 92, col 60
-                if _v is not None: write(_filter(_v, rawExpr=u'$sref')) # from line 92, col 60.
-                write(u"""',""")
+                if _v is not None: write(_filter(_v, rawExpr='$sref')) # from line 92, col 60.
+                write("""',""")
                 _v = VFFSL(SL,"event.id",True) # u'$event.id' on line 92, col 67
-                if _v is not None: write(_filter(_v, rawExpr=u'$event.id')) # from line 92, col 67.
-                write(u''',false);return false;" title="''')
+                if _v is not None: write(_filter(_v, rawExpr='$event.id')) # from line 92, col 67.
+                write(''',false);return false;" title="''')
                 _v = VFFSL(SL,"tstrings",True)['add_timer'] # u"$tstrings['add_timer']" on line 92, col 106
-                if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['add_timer']")) # from line 92, col 106.
-                write(u'''">
+                if _v is not None: write(_filter(_v, rawExpr="$tstrings['add_timer']")) # from line 92, col 106.
+                write('''">
 \t\t\t<i class="fa fa-timerplus"></i>
 \t\t\t</a>
 \t\t\t<a class="tb deltimer" href="#" onclick="delTimerEvent(\'''')
                 _v = VFFSL(SL,"sref",True) # u'$sref' on line 95, col 60
-                if _v is not None: write(_filter(_v, rawExpr=u'$sref')) # from line 95, col 60.
-                write(u"""',""")
+                if _v is not None: write(_filter(_v, rawExpr='$sref')) # from line 95, col 60.
+                write("""',""")
                 _v = VFFSL(SL,"event.id",True) # u'$event.id' on line 95, col 67
-                if _v is not None: write(_filter(_v, rawExpr=u'$event.id')) # from line 95, col 67.
-                write(u''');return false;" title="''')
+                if _v is not None: write(_filter(_v, rawExpr='$event.id')) # from line 95, col 67.
+                write(''');return false;" title="''')
                 _v = VFFSL(SL,"tstrings",True)['delete_timer'] # u"$tstrings['delete_timer']" on line 95, col 100
-                if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['delete_timer']")) # from line 95, col 100.
-                write(u'''">
+                if _v is not None: write(_filter(_v, rawExpr="$tstrings['delete_timer']")) # from line 95, col 100.
+                write('''">
 \t\t\t<i class="fa fa-timertrash"></i>
 \t\t\t</a>
 \t</td>
 \t\t<td class="panel ui-state-hover">
 \t\t<a class="tb" href="#" onclick="addEditTimerEvent(\'''')
                 _v = VFFSL(SL,"sref",True) # u'$sref' on line 100, col 54
-                if _v is not None: write(_filter(_v, rawExpr=u'$sref')) # from line 100, col 54.
-                write(u"""',""")
+                if _v is not None: write(_filter(_v, rawExpr='$sref')) # from line 100, col 54.
+                write("""',""")
                 _v = VFFSL(SL,"event.id",True) # u'$event.id' on line 100, col 61
-                if _v is not None: write(_filter(_v, rawExpr=u'$event.id')) # from line 100, col 61.
-                write(u''');return false;" title="''')
+                if _v is not None: write(_filter(_v, rawExpr='$event.id')) # from line 100, col 61.
+                write(''');return false;" title="''')
                 _v = VFFSL(SL,"tstrings",True)['edit_timer'] # u"$tstrings['edit_timer']" on line 100, col 94
-                if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['edit_timer']")) # from line 100, col 94.
-                write(u'''">
+                if _v is not None: write(_filter(_v, rawExpr="$tstrings['edit_timer']")) # from line 100, col 94.
+                write('''">
 \t\t\t<i class="fa fa-timeredit"></i>
 \t\t\t</a>
 \t\t\t</td>
 \t\t<td class="eff" rowspan="4"><div class="eff1">
 \t\t\t<span>''')
                 _v = VFFSL(SL,"event.shortdesc",True) # u'$event.shortdesc' on line 105, col 10
-                if _v is not None: write(_filter(_v, rawExpr=u'$event.shortdesc')) # from line 105, col 10.
-                write(u'''</span><br><br></div>
+                if _v is not None: write(_filter(_v, rawExpr='$event.shortdesc')) # from line 105, col 10.
+                write('''</span><br><br></div>
 \t\t\t''')
                 _v = VFFSL(SL,"event.longdesc",True) # u'$event.longdesc' on line 106, col 4
-                if _v is not None: write(_filter(_v, rawExpr=u'$event.longdesc')) # from line 106, col 4.
-                write(u'''
+                if _v is not None: write(_filter(_v, rawExpr='$event.longdesc')) # from line 106, col 4.
+                write('''
 \t</td>
 \t</tr>
 \t<tr>
 \t\t<td class="panel ui-state-hover">
 \t\t\t<a class="tb" href="#" onclick="addTimerEvent(\'''')
                 _v = VFFSL(SL,"sref",True) # u'$sref' on line 111, col 51
-                if _v is not None: write(_filter(_v, rawExpr=u'$sref')) # from line 111, col 51.
-                write(u"""',""")
+                if _v is not None: write(_filter(_v, rawExpr='$sref')) # from line 111, col 51.
+                write("""',""")
                 _v = VFFSL(SL,"event.id",True) # u'$event.id' on line 111, col 58
-                if _v is not None: write(_filter(_v, rawExpr=u'$event.id')) # from line 111, col 58.
-                write(u''',true);return false;" title="''')
+                if _v is not None: write(_filter(_v, rawExpr='$event.id')) # from line 111, col 58.
+                write(''',true);return false;" title="''')
                 _v = VFFSL(SL,"tstrings",True)['add_zaptimer'] # u"$tstrings['add_zaptimer']" on line 111, col 96
-                if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['add_zaptimer']")) # from line 111, col 96.
-                write(u'''">
+                if _v is not None: write(_filter(_v, rawExpr="$tstrings['add_zaptimer']")) # from line 111, col 96.
+                write('''">
 \t\t\t<i class="fa fa-timerplay"></i>
 \t\t\t</a>
 \t</td>
 \t\t<td class="panel ui-state-hover">
 ''')
                 if VFFSL(SL,"at",True): # generated from line 116, col 5
-                    write(u'''\t\t\t<a class="tb" href="#" onclick="addAutoTimerEvent(\'''')
+                    write('''\t\t\t<a class="tb" href="#" onclick="addAutoTimerEvent(\'''')
                     _v = VFFSL(SL,"sref",True) # u'$sref' on line 117, col 55
-                    if _v is not None: write(_filter(_v, rawExpr=u'$sref')) # from line 117, col 55.
-                    write(u"""','""")
+                    if _v is not None: write(_filter(_v, rawExpr='$sref')) # from line 117, col 55.
+                    write("""','""")
                     _v = VFFSL(SL,"channel",True) # u'$channel' on line 117, col 63
-                    if _v is not None: write(_filter(_v, rawExpr=u'$channel')) # from line 117, col 63.
-                    write(u"""','""")
+                    if _v is not None: write(_filter(_v, rawExpr='$channel')) # from line 117, col 63.
+                    write("""','""")
                     _v = VFFSL(SL,"title",True) # u'$title' on line 117, col 74
-                    if _v is not None: write(_filter(_v, rawExpr=u'$title')) # from line 117, col 74.
-                    write(u"""','""")
+                    if _v is not None: write(_filter(_v, rawExpr='$title')) # from line 117, col 74.
+                    write("""','""")
                     _v = VFFSL(SL,"event.begin",True) # u'$event.begin' on line 117, col 83
-                    if _v is not None: write(_filter(_v, rawExpr=u'$event.begin')) # from line 117, col 83.
-                    write(u"""','""")
+                    if _v is not None: write(_filter(_v, rawExpr='$event.begin')) # from line 117, col 83.
+                    write("""','""")
                     _v = VFFSL(SL,"event.end",True) # u'$event.end' on line 117, col 98
-                    if _v is not None: write(_filter(_v, rawExpr=u'$event.end')) # from line 117, col 98.
-                    write(u'''\');return false;" title="''')
+                    if _v is not None: write(_filter(_v, rawExpr='$event.end')) # from line 117, col 98.
+                    write('''\');return false;" title="''')
                     _v = VFFSL(SL,"tstrings",True)['add_autotimer'] # u"$tstrings['add_autotimer']" on line 117, col 133
-                    if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['add_autotimer']")) # from line 117, col 133.
-                    write(u'''">
+                    if _v is not None: write(_filter(_v, rawExpr="$tstrings['add_autotimer']")) # from line 117, col 133.
+                    write('''">
 \t\t\t\t<i class="fa fa-timerat"></i>
 \t\t\t</a>
 ''')
-                write(u'''\t</td>
+                write('''\t</td>
 \t</tr>
 \t<tr>
 \t\t<td class="panel ui-state-hover">
 ''')
                 if VFFSL(SL,"moviedb",True) == "Kinopoisk": # generated from line 125, col 4
-                    write(u'''\t\t\t\t<a class="tb" target="_blank" href="http://www.kinopoisk.ru/index.php?first=no&kp_query=''')
+                    write('''\t\t\t\t<a class="tb" target="_blank" href="http://www.kinopoisk.ru/index.php?first=no&kp_query=''')
                     _v = VFFSL(SL,"quote",False)(VFFSL(SL,"event.title",True)) # u'$quote($event.title)' on line 126, col 93
-                    if _v is not None: write(_filter(_v, rawExpr=u'$quote($event.title)')) # from line 126, col 93.
-                    write(u'''"><img src="../images/kinopoisk.png" style="width:24px; height:24px; margin:0px 3px 0px 0px" title="''')
+                    if _v is not None: write(_filter(_v, rawExpr='$quote($event.title)')) # from line 126, col 93.
+                    write('''"><img src="../images/kinopoisk.png" style="width:24px; height:24px; margin:0px 3px 0px 0px" title="''')
                     _v = VFFSL(SL,"tstrings",True)['search_kinopoisk'] # u"$tstrings['search_kinopoisk']" on line 126, col 213
-                    if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['search_kinopoisk']")) # from line 126, col 213.
-                    write(u'''" border="0"></a>
+                    if _v is not None: write(_filter(_v, rawExpr="$tstrings['search_kinopoisk']")) # from line 126, col 213.
+                    write('''" border="0"></a>
 ''')
                 elif VFFSL(SL,"moviedb",True) == "CSFD": # generated from line 127, col 4
-                    write(u'''\t\t\t\t<a class="im tb" target="_blank" href="https://www.csfd.cz/hledat/?q=''')
+                    write('''\t\t\t\t<a class="im tb" target="_blank" href="https://www.csfd.cz/hledat/?q=''')
                     _v = VFFSL(SL,"event.title",True) # u'$event.title' on line 128, col 74
-                    if _v is not None: write(_filter(_v, rawExpr=u'$event.title')) # from line 128, col 74.
-                    write(u'''" title="''')
+                    if _v is not None: write(_filter(_v, rawExpr='$event.title')) # from line 128, col 74.
+                    write('''" title="''')
                     _v = VFFSL(SL,"tstrings",True)['search_csfd'] # u"$tstrings['search_csfd']" on line 128, col 95
-                    if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['search_csfd']")) # from line 128, col 95.
-                    write(u'''">csfd</a>
+                    if _v is not None: write(_filter(_v, rawExpr="$tstrings['search_csfd']")) # from line 128, col 95.
+                    write('''">csfd</a>
 ''')
                 else: # generated from line 129, col 4
-                    write(u'''\t\t\t\t<a class="im tb" target="_blank" href="http://www.imdb.com/find?s=all&amp;q=''')
+                    write('''\t\t\t\t<a class="im tb" target="_blank" href="http://www.imdb.com/find?s=all&amp;q=''')
                     _v = VFFSL(SL,"quote",False)(VFFSL(SL,"event.title",True)) # u'$quote($event.title)' on line 130, col 81
-                    if _v is not None: write(_filter(_v, rawExpr=u'$quote($event.title)')) # from line 130, col 81.
-                    write(u'''" title="''')
+                    if _v is not None: write(_filter(_v, rawExpr='$quote($event.title)')) # from line 130, col 81.
+                    write('''" title="''')
                     _v = VFFSL(SL,"tstrings",True)['search_imdb'] # u"$tstrings['search_imdb']" on line 130, col 110
-                    if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['search_imdb']")) # from line 130, col 110.
-                    write(u'''">IMDb</a>
-''')
-                write(u'''\t</td>
+                    if _v is not None: write(_filter(_v, rawExpr="$tstrings['search_imdb']")) # from line 130, col 110.
+                    write('''">IMDb</a>
+''')
+                write('''\t</td>
 \t\t<td></td>
 \t</tr>
 </tbody>
 ''')
-            write(u'''</table>
+            write('''</table>
 </div>
 <div id="editTimerForm" title="''')
             _v = VFFSL(SL,"tstrings",True)['edit_timer'] # u"$tstrings['edit_timer']" on line 139, col 32
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['edit_timer']")) # from line 139, col 32.
-            write(u'''"></div>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['edit_timer']")) # from line 139, col 32.
+            write('''"></div>
 </body>
 <script type="text/javascript">
 var t = [
 ''')
             for timer in VFFSL(SL,"timers",True): # generated from line 143, col 1
-                write(u"""\t{'begin':""")
+                write("""\t{'begin':""")
                 _v = VFFSL(SL,"timer.begin",True) # u'$timer.begin' on line 144, col 11
-                if _v is not None: write(_filter(_v, rawExpr=u'$timer.begin')) # from line 144, col 11.
-                write(u""",'end':""")
+                if _v is not None: write(_filter(_v, rawExpr='$timer.begin')) # from line 144, col 11.
+                write(""",'end':""")
                 _v = VFFSL(SL,"timer.end",True) # u'$timer.end' on line 144, col 30
-                if _v is not None: write(_filter(_v, rawExpr=u'$timer.end')) # from line 144, col 30.
-                write(u""",'sref':'""")
+                if _v is not None: write(_filter(_v, rawExpr='$timer.end')) # from line 144, col 30.
+                write(""",'sref':'""")
                 _v = VFFSL(SL,"timer.serviceref",True) # u'$timer.serviceref' on line 144, col 49
-                if _v is not None: write(_filter(_v, rawExpr=u'$timer.serviceref')) # from line 144, col 49.
-                write(u"""'},
+                if _v is not None: write(_filter(_v, rawExpr='$timer.serviceref')) # from line 144, col 49.
+                write("""'},
 """)
-            write(u'''];
+            write('''];
 var reloadTimers = true;
 $(function() {
 \t$(\'#editTimerForm\').load(\'ajax/edittimer\');
--- ./plugin/controllers/views/ajax/epgr.py	(original)
+++ ./plugin/controllers/views/ajax/epgr.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -60,7 +61,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -70,7 +71,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -84,13 +85,13 @@
         ## START - generated method body
         
         _orig_filter_56118836 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<style>
+        write('''<style>
 optgroup {font-weight: bolder;}
 #epgrefreshcontent label
 {
@@ -116,39 +117,39 @@
 \t\t\t<div>
 \t\t<label for="enabled">''')
         _v = VFFSL(SL,"tstrings",True)['er_enabled'] # u"$tstrings['er_enabled']" on line 27, col 24
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['er_enabled']")) # from line 27, col 24.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['er_enabled']")) # from line 27, col 24.
+        write(''':</label>
 \t\t<input type="checkbox" id="er_enabled" value="">
 \t\t\t</div>
 \t\t\t<div>
 \t\t<label for="er_enablemessage">''')
         _v = VFFSL(SL,"tstrings",True)['er_enable_messages'] # u"$tstrings['er_enable_messages']" on line 31, col 33
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['er_enable_messages']")) # from line 31, col 33.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['er_enable_messages']")) # from line 31, col 33.
+        write(''':</label>
 \t\t<input type="checkbox" id="er_enablemessage" value="">
 \t\t\t</div>
 \t\t\t<div>
 \t\t</span><label for="er_adapter">''')
         _v = VFFSL(SL,"tstrings",True)['er_adapter'] # u"$tstrings['er_adapter']" on line 35, col 34
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['er_adapter']")) # from line 35, col 34.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['er_adapter']")) # from line 35, col 34.
+        write(''':</label>
 \t\t<select id="er_adapter">
 \t\t<option value="main" selected="selected">''')
         _v = VFFSL(SL,"tstrings",True)['er_main'] # u"$tstrings['er_main']" on line 37, col 44
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['er_main']")) # from line 37, col 44.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['er_main']")) # from line 37, col 44.
+        write('''</option>
 \t\t<option value="pip">''')
         _v = VFFSL(SL,"tstrings",True)['er_pip'] # u"$tstrings['er_pip']" on line 38, col 23
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['er_pip']")) # from line 38, col 23.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['er_pip']")) # from line 38, col 23.
+        write('''</option>
 \t\t<option value="pip_hidden">''')
         _v = VFFSL(SL,"tstrings",True)['er_pip_hidden'] # u"$tstrings['er_pip_hidden']" on line 39, col 30
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['er_pip_hidden']")) # from line 39, col 30.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['er_pip_hidden']")) # from line 39, col 30.
+        write('''</option>
 \t\t<option value="record">''')
         _v = VFFSL(SL,"tstrings",True)['er_fake_recording'] # u"$tstrings['er_fake_recording']" on line 40, col 26
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['er_fake_recording']")) # from line 40, col 26.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['er_fake_recording']")) # from line 40, col 26.
+        write('''</option>
 \t\t</select>
 \t\t\t</div>
 \t\t</div>
@@ -156,15 +157,15 @@
 \t\t\t<div>
 \t\t<label for="er_begin">''')
         _v = VFFSL(SL,"tstrings",True)['er_begin'] # u"$tstrings['er_begin']" on line 46, col 25
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['er_begin']")) # from line 46, col 25.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['er_begin']")) # from line 46, col 25.
+        write(''':</label>
 \t\t<input type="text" id="er_begin" value="" class="text date ui-widget-content ui-corner-all">
 \t\t\t</div>
 \t\t\t<div>
 \t\t<label for="er_end">''')
         _v = VFFSL(SL,"tstrings",True)['er_end'] # u"$tstrings['er_end']" on line 50, col 23
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['er_end']")) # from line 50, col 23.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['er_end']")) # from line 50, col 23.
+        write(''':</label>
 \t\t<input type="text" id="er_end" value="" class="text date ui-widget-content ui-corner-all">
 \t\t\t</div>
 \t\t</div>
@@ -172,18 +173,18 @@
 \t\t\t<div>
 \t\t<label for="er_delay_standby">''')
         _v = VFFSL(SL,"tstrings",True)['er_delay_standby'] # u"$tstrings['er_delay_standby']" on line 56, col 33
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['er_delay_standby']")) # from line 56, col 33.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['er_delay_standby']")) # from line 56, col 33.
+        write(''':</label>
 \t\t<input type="text" id="er_delay_standby">
 \t\t\t</div>
 \t\t\t<div>
 \t\t<label id="lblm" for="er_interval">''')
         _v = VFFSL(SL,"tstrings",True)['er_interval_min'] # u"$tstrings['er_interval_min']" on line 60, col 38
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['er_interval_min']")) # from line 60, col 38.
-        write(u''':</label><label id="lbls" for="er_interval">''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['er_interval_min']")) # from line 60, col 38.
+        write(''':</label><label id="lbls" for="er_interval">''')
         _v = VFFSL(SL,"tstrings",True)['er_interval_sec'] # u"$tstrings['er_interval_sec']" on line 60, col 110
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['er_interval_sec']")) # from line 60, col 110.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['er_interval_sec']")) # from line 60, col 110.
+        write(''':</label>
 \t\t<input type="text" id="er_interval" class="text ui-widget-content ui-corner-all">
 \t\t\t</div>
 \t\t</div>
@@ -191,22 +192,22 @@
 \t\t\t<div>
 \t\t<label for="er_afterevent">''')
         _v = VFFSL(SL,"tstrings",True)['er_afterevent'] # u"$tstrings['er_afterevent']" on line 66, col 30
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['er_afterevent']")) # from line 66, col 30.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['er_afterevent']")) # from line 66, col 30.
+        write(''':</label>
 \t\t<input type="checkbox" id="er_afterevent" value="">
 \t\t\t</div>
 \t\t\t<div>
 \t\t<label for="er_force">''')
         _v = VFFSL(SL,"tstrings",True)['er_force'] # u"$tstrings['er_force']" on line 70, col 25
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['er_force']")) # from line 70, col 25.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['er_force']")) # from line 70, col 25.
+        write(''':</label>
 \t\t<input type="checkbox" id="er_force" value="">
 \t\t\t</div>
 \t\t\t<div>
 \t\t<label for="er_wakeup">''')
         _v = VFFSL(SL,"tstrings",True)['er_wakeup'] # u"$tstrings['er_wakeup']" on line 74, col 26
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['er_wakeup']")) # from line 74, col 26.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['er_wakeup']")) # from line 74, col 26.
+        write(''':</label>
 \t\t<input type="checkbox" id="er_wakeup" value="">
 \t\t\t</div>
 \t\t</div>
@@ -214,60 +215,60 @@
 \t\t\t<div>
 \t\t<span id="er_hasAT"><label for="er_inherit_autotimer">''')
         _v = VFFSL(SL,"tstrings",True)['er_inherit_autotimer'] # u"$tstrings['er_inherit_autotimer']" on line 80, col 57
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['er_inherit_autotimer']")) # from line 80, col 57.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['er_inherit_autotimer']")) # from line 80, col 57.
+        write(''':</label>
 \t\t<input type="checkbox" id="er_inherit_autotimer" value="">
 \t\t\t</div>
 \t\t\t<div>
 \t\t<label for="er_parse_autotimer">''')
         _v = VFFSL(SL,"tstrings",True)['er_parse_autotimer'] # u"$tstrings['er_parse_autotimer']" on line 84, col 35
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['er_parse_autotimer']")) # from line 84, col 35.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['er_parse_autotimer']")) # from line 84, col 35.
+        write(''':</label>
 \t\t<select id="er_parse_autotimer">
 \t\t<option value="always">''')
         _v = VFFSL(SL,"tstrings",True)['er_always'] # u"$tstrings['er_always']" on line 86, col 26
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['er_always']")) # from line 86, col 26.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['er_always']")) # from line 86, col 26.
+        write('''</option>
 \t\t<option value="never" selected="selected">''')
         _v = VFFSL(SL,"tstrings",True)['er_never'] # u"$tstrings['er_never']" on line 87, col 45
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['er_never']")) # from line 87, col 45.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['er_never']")) # from line 87, col 45.
+        write('''</option>
 \t\t<option value="bg_only">''')
         _v = VFFSL(SL,"tstrings",True)['er_bg_only'] # u"$tstrings['er_bg_only']" on line 88, col 27
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['er_bg_only']")) # from line 88, col 27.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['er_bg_only']")) # from line 88, col 27.
+        write('''</option>
 \t\t<option value="ask_yes">''')
         _v = VFFSL(SL,"tstrings",True)['er_ask_yes'] # u"$tstrings['er_ask_yes']" on line 89, col 27
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['er_ask_yes']")) # from line 89, col 27.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['er_ask_yes']")) # from line 89, col 27.
+        write('''</option>
 \t\t<option value="ask_no">''')
         _v = VFFSL(SL,"tstrings",True)['er_ask_no'] # u"$tstrings['er_ask_no']" on line 90, col 26
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['er_ask_no']")) # from line 90, col 26.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['er_ask_no']")) # from line 90, col 26.
+        write('''</option>
 \t\t</select>
 \t\t\t</div>
 \t\t</div>
 \t\t<br>
 \t\t<label for="bouquets">''')
         _v = VFFSL(SL,"tstrings",True)['at_bouquets'] # u"$tstrings['at_bouquets']" on line 95, col 25
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_bouquets']")) # from line 95, col 25.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_bouquets']")) # from line 95, col 25.
+        write(''':</label>
 \t\t<br>
 \t\t<select data-placeholder="''')
         _v = VFFSL(SL,"tstrings",True)['at_select_bouquets'] # u"$tstrings['at_select_bouquets']" on line 97, col 29
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_select_bouquets']")) # from line 97, col 29.
-        write(u'''" id="bouquets" class="bq_select_box" multiple tabindex="16">
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_select_bouquets']")) # from line 97, col 29.
+        write('''" id="bouquets" class="bq_select_box" multiple tabindex="16">
 \t\t</select>
 \t\t<br>
 \t\t<label for="channels">''')
         _v = VFFSL(SL,"tstrings",True)['at_channels'] # u"$tstrings['at_channels']" on line 100, col 25
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_channels']")) # from line 100, col 25.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_channels']")) # from line 100, col 25.
+        write(''':</label>
 \t\t<br>
 \t\t<select data-placeholder="''')
         _v = VFFSL(SL,"tstrings",True)['at_select_channels'] # u"$tstrings['at_select_channels']" on line 102, col 29
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_select_channels']")) # from line 102, col 29.
-        write(u'''" id="channels" class="ch_select_box" multiple tabindex="16">
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_select_channels']")) # from line 102, col 29.
+        write('''" id="channels" class="ch_select_box" multiple tabindex="16">
 \t\t</select>
 \t\t<br>
 \t\t<br>
@@ -277,16 +278,16 @@
 \t<div id="actions">
 \t<button id="epgrbutton0">''')
         _v = VFFSL(SL,"tstrings",True)['er_reload'] # u"$tstrings['er_reload']" on line 110, col 27
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['er_reload']")) # from line 110, col 27.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['er_reload']")) # from line 110, col 27.
+        write('''</button>
 \t<button id="epgrbutton1">''')
         _v = VFFSL(SL,"tstrings",True)['er_save'] # u"$tstrings['er_save']" on line 111, col 27
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['er_save']")) # from line 111, col 27.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['er_save']")) # from line 111, col 27.
+        write('''</button>
 \t<button id="epgrbutton2">''')
         _v = VFFSL(SL,"tstrings",True)['er_refresh'] # u"$tstrings['er_refresh']" on line 112, col 27
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['er_refresh']")) # from line 112, col 27.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['er_refresh']")) # from line 112, col 27.
+        write('''</button>
 \t</div></div>
 
 \t<div id="statuscont" style="display:none;margin-top:10px;">
--- ./plugin/controllers/views/ajax/event.py	(original)
+++ ./plugin/controllers/views/ajax/event.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -62,7 +63,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -72,7 +73,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -89,7 +90,7 @@
         channel = VFN(VFFSL(SL,"event.channel",True),"replace",False)("'", r"\'")
         title = VFN(VFFSL(SL,"event.title",True),"replace",False)("'", r"\'")
         sref = quote(VFFSL(SL,"event.sref",True), safe=' ~@#$&()*!+=:;,.?/\'')
-        write(u'''
+        write('''
 <style>
 .tb { padding:0; margin:0 0 0 0; background:none;width:40px}
 .tb i.fa { font-size:32px;}
@@ -104,8 +105,8 @@
 \t<div id="leftmenu_top" class="ui-widget-header">
 \t\t<div class="handle" style="cursor:move;float:left;width:95%">''')
         _v = VFFSL(SL,"channel",True) # u'$channel' on line 21, col 64
-        if _v is not None: write(_filter(_v, rawExpr=u'$channel')) # from line 21, col 64.
-        write(u'''</div>
+        if _v is not None: write(_filter(_v, rawExpr='$channel')) # from line 21, col 64.
+        write('''</div>
 \t\t<div id="leftmenu_expander_main" class="ui-selectmenu-icon ui-icon ui-icon-closethick" onclick="$(\'#eventdescription\').hide(200)" style="cursor:pointer"></div>
 \t</div>
 \t<div id="leftmenu_container_main" class="ui-widget ui-widget-content" style="padding:6px">
@@ -115,136 +116,136 @@
 \t\t<td style="width: 80px;" colspan="2">
 \t\t\t<div class="ui-widget-header" id="station" onclick="zapChannel(\'''')
         _v = VFFSL(SL,"str",False)(VFFSL(SL,"event",True)['sref']) # u"$str($event['sref'])" on line 29, col 68
-        if _v is not None: write(_filter(_v, rawExpr=u"$str($event['sref'])")) # from line 29, col 68.
-        write(u"""', '""")
+        if _v is not None: write(_filter(_v, rawExpr="$str($event['sref'])")) # from line 29, col 68.
+        write("""', '""")
         _v = VFFSL(SL,"channel",True) # u'$channel' on line 29, col 92
-        if _v is not None: write(_filter(_v, rawExpr=u'$channel')) # from line 29, col 92.
-        write(u'''\')" title="''')
+        if _v is not None: write(_filter(_v, rawExpr='$channel')) # from line 29, col 92.
+        write('''\')" title="''')
         _v = VFFSL(SL,"tstrings",True)['zap'] # u"$tstrings['zap']" on line 29, col 111
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['zap']")) # from line 29, col 111.
-        write(u'''">''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['zap']")) # from line 29, col 111.
+        write('''">''')
         _v = VFFSL(SL,"event",True)['channel'] # u"$event['channel']" on line 29, col 129
-        if _v is not None: write(_filter(_v, rawExpr=u"$event['channel']")) # from line 29, col 129.
-        write(u'''</div>
+        if _v is not None: write(_filter(_v, rawExpr="$event['channel']")) # from line 29, col 129.
+        write('''</div>
 \t\t
 \t\t\t<div class="ui-widget-header" style="padding:3px;margin-top:2px">
 \t\t\t\t<div style="font-size:1.7em;text-align:center">''')
         _v = VFFSL(SL,"event.begin_str",True) # u'$event.begin_str' on line 32, col 52
-        if _v is not None: write(_filter(_v, rawExpr=u'$event.begin_str')) # from line 32, col 52.
-        write(u'''</div>
+        if _v is not None: write(_filter(_v, rawExpr='$event.begin_str')) # from line 32, col 52.
+        write('''</div>
 \t\t\t\t<div style="text-align:center">''')
         _v = VFFSL(SL,"int",False)(VFFSL(SL,"event.duration",True)/60) # u'$int($event.duration/60)' on line 33, col 36
-        if _v is not None: write(_filter(_v, rawExpr=u'$int($event.duration/60)')) # from line 33, col 36.
-        write(u''' min</div>
+        if _v is not None: write(_filter(_v, rawExpr='$int($event.duration/60)')) # from line 33, col 36.
+        write(''' min</div>
 \t\t\t</div>
 \t\t\t<div class="ui-widget-header" style="padding:3px;margin-top:2px">
 \t\t\t\t<div style="font-size:1.7em; text-align:center">''')
         _v = VFFSL(SL,"tstrings",True)[("day_" + (VFN(VFFSL(SL,"time",True),"strftime",False)("%w", VFFSL(SL,"etime",True))))] # u'$tstrings[("day_" + ($time.strftime("%w", $etime)))]' on line 36, col 53
-        if _v is not None: write(_filter(_v, rawExpr=u'$tstrings[("day_" + ($time.strftime("%w", $etime)))]')) # from line 36, col 53.
-        write(u'''</div>
+        if _v is not None: write(_filter(_v, rawExpr='$tstrings[("day_" + ($time.strftime("%w", $etime)))]')) # from line 36, col 53.
+        write('''</div>
 \t\t\t\t<div style="color:#A9D1FA; text-align:center">''')
         _v = VFN(VFFSL(SL,"time",True),"strftime",False)("%d", VFFSL(SL,"etime",True)) # u'$time.strftime("%d", $etime)' on line 37, col 51
-        if _v is not None: write(_filter(_v, rawExpr=u'$time.strftime("%d", $etime)')) # from line 37, col 51.
-        write(u''' ''')
+        if _v is not None: write(_filter(_v, rawExpr='$time.strftime("%d", $etime)')) # from line 37, col 51.
+        write(''' ''')
         _v = VFFSL(SL,"tstrings",True)[("month_" + (VFN(VFFSL(SL,"time",True),"strftime",False)("%m", VFFSL(SL,"etime",True))))] # u'$tstrings[("month_" + ($time.strftime("%m", $etime)))]' on line 37, col 80
-        if _v is not None: write(_filter(_v, rawExpr=u'$tstrings[("month_" + ($time.strftime("%m", $etime)))]')) # from line 37, col 80.
-        write(u'''</div>
+        if _v is not None: write(_filter(_v, rawExpr='$tstrings[("month_" + ($time.strftime("%m", $etime)))]')) # from line 37, col 80.
+        write('''</div>
 \t\t\t</div>
 \t\t</td>
 \t\t<td style="width: 100%;text-align:left;" rowspan="6">
 \t\t\t<div style="font-size:1.4em; font-weight: bold">''')
         _v = VFFSL(SL,"event.title",True) # u'$event.title' on line 41, col 52
-        if _v is not None: write(_filter(_v, rawExpr=u'$event.title')) # from line 41, col 52.
-        write(u'''</div>
+        if _v is not None: write(_filter(_v, rawExpr='$event.title')) # from line 41, col 52.
+        write('''</div>
 ''')
         if VFFSL(SL,"event.title",True) != VFFSL(SL,"event.shortdesc",True): # generated from line 42, col 1
-            write(u'''\t\t\t<div style="font-size:1.2em; font-weight:bold;margin-top:0.2em">''')
+            write('''\t\t\t<div style="font-size:1.2em; font-weight:bold;margin-top:0.2em">''')
             _v = VFFSL(SL,"event.shortdesc",True) # u'$event.shortdesc' on line 43, col 68
-            if _v is not None: write(_filter(_v, rawExpr=u'$event.shortdesc')) # from line 43, col 68.
-            write(u'''</div>
-''')
-        write(u'''\t\t\t<div style="font-size:1.1em;max-height:300px;overflow:auto;margin-top:0.4em"><p>''')
-        _v = VFN(VFN(VFFSL(SL,"event.longdesc",True),"replace",False)("\n","<br/>"),"replace",False)(u"\u008a","<br/>") # u'$(event.longdesc.replace("\\n","<br/>").replace(u"\\u008a","<br/>"))' on line 45, col 84
-        if _v is not None: write(_filter(_v, rawExpr=u'$(event.longdesc.replace("\\n","<br/>").replace(u"\\u008a","<br/>"))')) # from line 45, col 84.
-        write(u'''</p></div>
+            if _v is not None: write(_filter(_v, rawExpr='$event.shortdesc')) # from line 43, col 68.
+            write('''</div>
+''')
+        write('''\t\t\t<div style="font-size:1.1em;max-height:300px;overflow:auto;margin-top:0.4em"><p>''')
+        _v = VFN(VFN(VFFSL(SL,"event.longdesc",True),"replace",False)("\n","<br/>"),"replace",False)("\u008a","<br/>") # u'$(event.longdesc.replace("\\n","<br/>").replace(u"\\u008a","<br/>"))' on line 45, col 84
+        if _v is not None: write(_filter(_v, rawExpr='$(event.longdesc.replace("\\n","<br/>").replace(u"\\u008a","<br/>"))')) # from line 45, col 84.
+        write('''</p></div>
 \t\t</td>
 \t\t</tr>
 \t\t<tr>
 ''')
         if VFFSL(SL,"transcoding",True): # generated from line 49, col 4
-            write(u'''\t\t\t<td><a href="#" onclick="jumper8001(\'''')
+            write('''\t\t\t<td><a href="#" onclick="jumper8001(\'''')
             _v = VFFSL(SL,"sref",True) # u'$sref' on line 50, col 41
-            if _v is not None: write(_filter(_v, rawExpr=u'$sref')) # from line 50, col 41.
-            write(u"""', '""")
+            if _v is not None: write(_filter(_v, rawExpr='$sref')) # from line 50, col 41.
+            write("""', '""")
             _v = VFFSL(SL,"channel",True) # u'$channel' on line 50, col 50
-            if _v is not None: write(_filter(_v, rawExpr=u'$channel')) # from line 50, col 50.
-            write(u'''\');" title="''')
+            if _v is not None: write(_filter(_v, rawExpr='$channel')) # from line 50, col 50.
+            write('''\');" title="''')
             _v = VFFSL(SL,"tstrings",True)['stream'] # u"$tstrings['stream']" on line 50, col 70
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['stream']")) # from line 50, col 70.
-            write(u''': ''')
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['stream']")) # from line 50, col 70.
+            write(''': ''')
             _v = VFFSL(SL,"channel",True) # u'$channel' on line 50, col 91
-            if _v is not None: write(_filter(_v, rawExpr=u'$channel')) # from line 50, col 91.
-            write(u'''"><i class="fa fa-desktop" style="font-size:22px;"></i></a></td>
+            if _v is not None: write(_filter(_v, rawExpr='$channel')) # from line 50, col 91.
+            write('''"><i class="fa fa-desktop" style="font-size:22px;"></i></a></td>
 \t\t\t<td><a href="#" onclick="jumper8002(\'''')
             _v = VFFSL(SL,"sref",True) # u'$sref' on line 51, col 41
-            if _v is not None: write(_filter(_v, rawExpr=u'$sref')) # from line 51, col 41.
-            write(u"""', '""")
+            if _v is not None: write(_filter(_v, rawExpr='$sref')) # from line 51, col 41.
+            write("""', '""")
             _v = VFFSL(SL,"channel",True) # u'$channel' on line 51, col 50
-            if _v is not None: write(_filter(_v, rawExpr=u'$channel')) # from line 51, col 50.
-            write(u'''\');" title="''')
+            if _v is not None: write(_filter(_v, rawExpr='$channel')) # from line 51, col 50.
+            write('''\');" title="''')
             _v = VFFSL(SL,"tstrings",True)['stream'] # u"$tstrings['stream']" on line 51, col 70
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['stream']")) # from line 51, col 70.
-            write(u''' (''')
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['stream']")) # from line 51, col 70.
+            write(''' (''')
             _v = VFFSL(SL,"tstrings",True)['transcoded'] # u"$tstrings['transcoded']" on line 51, col 91
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['transcoded']")) # from line 51, col 91.
-            write(u'''): ''')
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['transcoded']")) # from line 51, col 91.
+            write('''): ''')
             _v = VFFSL(SL,"channel",True) # u'$channel' on line 51, col 117
-            if _v is not None: write(_filter(_v, rawExpr=u'$channel')) # from line 51, col 117.
-            write(u'''"><i class="fa fa-mobile" style="font-size:26px;margin-top:-3px;"></i></a></td>
+            if _v is not None: write(_filter(_v, rawExpr='$channel')) # from line 51, col 117.
+            write('''"><i class="fa fa-mobile" style="font-size:26px;margin-top:-3px;"></i></a></td>
 ''')
         else: # generated from line 52, col 4
-            write(u'''\t\t\t<td><a target="_blank" href=\'../web/stream.m3u?ref=''')
+            write('''\t\t\t<td><a target="_blank" href=\'../web/stream.m3u?ref=''')
             _v = VFFSL(SL,"sref",True) # u'$sref' on line 53, col 55
-            if _v is not None: write(_filter(_v, rawExpr=u'$sref')) # from line 53, col 55.
-            write(u'''&name=''')
+            if _v is not None: write(_filter(_v, rawExpr='$sref')) # from line 53, col 55.
+            write('''&name=''')
             _v = VFFSL(SL,"channel",True) # u'$channel' on line 53, col 66
-            if _v is not None: write(_filter(_v, rawExpr=u'$channel')) # from line 53, col 66.
-            write(u'''\' title="''')
+            if _v is not None: write(_filter(_v, rawExpr='$channel')) # from line 53, col 66.
+            write('''\' title="''')
             _v = VFFSL(SL,"tstrings",True)['stream'] # u"$tstrings['stream']" on line 53, col 83
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['stream']")) # from line 53, col 83.
-            write(u''' ''')
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['stream']")) # from line 53, col 83.
+            write(''' ''')
             _v = VFFSL(SL,"channel",True) # u'$channel' on line 53, col 103
-            if _v is not None: write(_filter(_v, rawExpr=u'$channel')) # from line 53, col 103.
-            write(u'''"><i class="fa fa-desktop" style="font-size:22px;"></i></a></td>
+            if _v is not None: write(_filter(_v, rawExpr='$channel')) # from line 53, col 103.
+            write('''"><i class="fa fa-desktop" style="font-size:22px;"></i></a></td>
 \t\t\t<td></td>
 ''')
-        write(u'''\t\t</tr>
+        write('''\t\t</tr>
 \t\t<tr>
 \t\t\t<td>
 \t\t\t\t<a class="tb" href="#" onclick="addTimerEvent(\'''')
         _v = VFFSL(SL,"sref",True) # u'$sref' on line 59, col 52
-        if _v is not None: write(_filter(_v, rawExpr=u'$sref')) # from line 59, col 52.
-        write(u"""',""")
+        if _v is not None: write(_filter(_v, rawExpr='$sref')) # from line 59, col 52.
+        write("""',""")
         _v = VFFSL(SL,"event.id",True) # u'$event.id' on line 59, col 59
-        if _v is not None: write(_filter(_v, rawExpr=u'$event.id')) # from line 59, col 59.
-        write(u''',false,cbAddTimerEvent);return false;" title="''')
+        if _v is not None: write(_filter(_v, rawExpr='$event.id')) # from line 59, col 59.
+        write(''',false,cbAddTimerEvent);return false;" title="''')
         _v = VFFSL(SL,"tstrings",True)['add_timer'] # u"$tstrings['add_timer']" on line 59, col 114
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['add_timer']")) # from line 59, col 114.
-        write(u'''">
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['add_timer']")) # from line 59, col 114.
+        write('''">
 \t\t\t\t<i class="fa fa-timerplus"></i>
 \t\t\t\t</a>
 \t\t\t\t</td>
 \t\t\t\t<td>
 \t\t\t\t<a class="tb" href="#" onclick="addEditTimerEvent(\'''')
         _v = VFFSL(SL,"sref",True) # u'$sref' on line 64, col 56
-        if _v is not None: write(_filter(_v, rawExpr=u'$sref')) # from line 64, col 56.
-        write(u"""',""")
+        if _v is not None: write(_filter(_v, rawExpr='$sref')) # from line 64, col 56.
+        write("""',""")
         _v = VFFSL(SL,"event.id",True) # u'$event.id' on line 64, col 63
-        if _v is not None: write(_filter(_v, rawExpr=u'$event.id')) # from line 64, col 63.
-        write(u''');return false;" title="''')
+        if _v is not None: write(_filter(_v, rawExpr='$event.id')) # from line 64, col 63.
+        write(''');return false;" title="''')
         _v = VFFSL(SL,"tstrings",True)['edit_timer'] # u"$tstrings['edit_timer']" on line 64, col 96
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['edit_timer']")) # from line 64, col 96.
-        write(u'''">
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['edit_timer']")) # from line 64, col 96.
+        write('''">
 \t\t\t\t<i class="fa fa-timeredit"></i>
 \t\t\t\t</a>
 \t\t\t</td>
@@ -253,56 +254,56 @@
 \t\t\t<td>
 \t\t\t\t<a class="tb" href="#" onclick="addTimerEvent(\'''')
         _v = VFFSL(SL,"sref",True) # u'$sref' on line 71, col 52
-        if _v is not None: write(_filter(_v, rawExpr=u'$sref')) # from line 71, col 52.
-        write(u"""',""")
+        if _v is not None: write(_filter(_v, rawExpr='$sref')) # from line 71, col 52.
+        write("""',""")
         _v = VFFSL(SL,"event.id",True) # u'$event.id' on line 71, col 59
-        if _v is not None: write(_filter(_v, rawExpr=u'$event.id')) # from line 71, col 59.
-        write(u''',true,cbAddTimerEvent);return false;" title="''')
+        if _v is not None: write(_filter(_v, rawExpr='$event.id')) # from line 71, col 59.
+        write(''',true,cbAddTimerEvent);return false;" title="''')
         _v = VFFSL(SL,"tstrings",True)['add_zaptimer'] # u"$tstrings['add_zaptimer']" on line 71, col 113
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['add_zaptimer']")) # from line 71, col 113.
-        write(u'''">
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['add_zaptimer']")) # from line 71, col 113.
+        write('''">
 \t\t\t\t<i class="fa fa-timerplay"></i>
 \t\t\t\t</a>
 \t\t\t</td>
 \t\t\t<td>
 ''')
         if VFFSL(SL,"at",True): # generated from line 76, col 5
-            write(u'''\t\t\t\t<a class="tb" href="#" onclick="addAutoTimerEvent(\'''')
+            write('''\t\t\t\t<a class="tb" href="#" onclick="addAutoTimerEvent(\'''')
             _v = VFFSL(SL,"sref",True) # u'$sref' on line 77, col 56
-            if _v is not None: write(_filter(_v, rawExpr=u'$sref')) # from line 77, col 56.
-            write(u"""','""")
+            if _v is not None: write(_filter(_v, rawExpr='$sref')) # from line 77, col 56.
+            write("""','""")
             _v = VFFSL(SL,"channel",True) # u'$channel' on line 77, col 64
-            if _v is not None: write(_filter(_v, rawExpr=u'$channel')) # from line 77, col 64.
-            write(u"""','""")
+            if _v is not None: write(_filter(_v, rawExpr='$channel')) # from line 77, col 64.
+            write("""','""")
             _v = VFFSL(SL,"title",True) # u'$title' on line 77, col 75
-            if _v is not None: write(_filter(_v, rawExpr=u'$title')) # from line 77, col 75.
-            write(u"""','""")
+            if _v is not None: write(_filter(_v, rawExpr='$title')) # from line 77, col 75.
+            write("""','""")
             _v = VFFSL(SL,"event.begin_str",True) # u'$event.begin_str' on line 77, col 84
-            if _v is not None: write(_filter(_v, rawExpr=u'$event.begin_str')) # from line 77, col 84.
-            write(u"""','""")
+            if _v is not None: write(_filter(_v, rawExpr='$event.begin_str')) # from line 77, col 84.
+            write("""','""")
             _v = VFFSL(SL,"event.end",True) # u'$event.end' on line 77, col 103
-            if _v is not None: write(_filter(_v, rawExpr=u'$event.end')) # from line 77, col 103.
-            write(u'''\');return false;" title="''')
+            if _v is not None: write(_filter(_v, rawExpr='$event.end')) # from line 77, col 103.
+            write('''\');return false;" title="''')
             _v = VFFSL(SL,"tstrings",True)['add_autotimer'] # u"$tstrings['add_autotimer']" on line 77, col 138
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['add_autotimer']")) # from line 77, col 138.
-            write(u'''">
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['add_autotimer']")) # from line 77, col 138.
+            write('''">
 \t\t\t\t<i class="fa fa-timerat"></i>
 \t\t\t\t</a>
 ''')
-        write(u'''\t\t\t</td>
+        write('''\t\t\t</td>
 \t\t</tr>
 \t\t<tr>
 \t\t\t<td>
 \t\t\t\t<a class="d_timer tb" href="#" onclick="delTimerEvent(\'''')
         _v = VFFSL(SL,"sref",True) # u'$sref' on line 85, col 60
-        if _v is not None: write(_filter(_v, rawExpr=u'$sref')) # from line 85, col 60.
-        write(u"""','""")
+        if _v is not None: write(_filter(_v, rawExpr='$sref')) # from line 85, col 60.
+        write("""','""")
         _v = VFFSL(SL,"event.id",True) # u'$event.id' on line 85, col 68
-        if _v is not None: write(_filter(_v, rawExpr=u'$event.id')) # from line 85, col 68.
-        write(u'''\');return false;" title="''')
+        if _v is not None: write(_filter(_v, rawExpr='$event.id')) # from line 85, col 68.
+        write('''\');return false;" title="''')
         _v = VFFSL(SL,"tstrings",True)['delete_timer'] # u"$tstrings['delete_timer']" on line 85, col 102
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['delete_timer']")) # from line 85, col 102.
-        write(u'''">
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['delete_timer']")) # from line 85, col 102.
+        write('''">
 \t\t\t\t<i class="fa fa-timertrash"></i>
 \t\t\t\t</a>
 \t\t\t</td>
@@ -313,33 +314,33 @@
 \t\t\t<td>
 ''')
         if VFFSL(SL,"moviedb",True) == "Kinopoisk": # generated from line 94, col 5
-            write(u'''\t\t\t\t\t<a class="tb" target="_blank" href="http://www.kinopoisk.ru/index.php?first=no&kp_query=''')
+            write('''\t\t\t\t\t<a class="tb" target="_blank" href="http://www.kinopoisk.ru/index.php?first=no&kp_query=''')
             _v = VFFSL(SL,"quote",False)(VFFSL(SL,"event.title",True)) # u'$quote($event.title)' on line 95, col 94
-            if _v is not None: write(_filter(_v, rawExpr=u'$quote($event.title)')) # from line 95, col 94.
-            write(u'''"><img src="../images/kinopoisk.png" style="width:24px; height:24px; margin:0px 3px 0px 0px" title="''')
+            if _v is not None: write(_filter(_v, rawExpr='$quote($event.title)')) # from line 95, col 94.
+            write('''"><img src="../images/kinopoisk.png" style="width:24px; height:24px; margin:0px 3px 0px 0px" title="''')
             _v = VFFSL(SL,"tstrings",True)['search_kinopoisk'] # u"$tstrings['search_kinopoisk']" on line 95, col 214
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['search_kinopoisk']")) # from line 95, col 214.
-            write(u'''" border="0"></a>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['search_kinopoisk']")) # from line 95, col 214.
+            write('''" border="0"></a>
 ''')
         elif VFFSL(SL,"moviedb",True) == "CSFD": # generated from line 96, col 5
-            write(u'''\t\t\t\t\t<a class="tb im" target="_blank" href="https://www.csfd.cz/hledat/?q=''')
+            write('''\t\t\t\t\t<a class="tb im" target="_blank" href="https://www.csfd.cz/hledat/?q=''')
             _v = VFFSL(SL,"event.title",True) # u'$event.title' on line 97, col 75
-            if _v is not None: write(_filter(_v, rawExpr=u'$event.title')) # from line 97, col 75.
-            write(u'''" title="''')
+            if _v is not None: write(_filter(_v, rawExpr='$event.title')) # from line 97, col 75.
+            write('''" title="''')
             _v = VFFSL(SL,"tstrings",True)['search_csfd'] # u"$tstrings['search_csfd']" on line 97, col 96
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['search_csfd']")) # from line 97, col 96.
-            write(u'''">csfd</a>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['search_csfd']")) # from line 97, col 96.
+            write('''">csfd</a>
 ''')
         else: # generated from line 98, col 5
-            write(u'''\t\t\t\t\t<a class="tb im" target="_blank" href="http://www.imdb.com/find?s=all&amp;q=''')
+            write('''\t\t\t\t\t<a class="tb im" target="_blank" href="http://www.imdb.com/find?s=all&amp;q=''')
             _v = VFFSL(SL,"quote",False)(VFFSL(SL,"event.title",True)) # u'$quote($event.title)' on line 99, col 82
-            if _v is not None: write(_filter(_v, rawExpr=u'$quote($event.title)')) # from line 99, col 82.
-            write(u'''" title="''')
+            if _v is not None: write(_filter(_v, rawExpr='$quote($event.title)')) # from line 99, col 82.
+            write('''" title="''')
             _v = VFFSL(SL,"tstrings",True)['search_imdb'] # u"$tstrings['search_imdb']" on line 99, col 111
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['search_imdb']")) # from line 99, col 111.
-            write(u'''">IMDb</a>
-''')
-        write(u'''\t\t\t</td>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['search_imdb']")) # from line 99, col 111.
+            write('''">IMDb</a>
+''')
+        write('''\t\t\t</td>
 \t\t\t<td>
 \t\t\t</td>
 \t\t\t</div>
@@ -351,8 +352,8 @@
 <script>
 var theevent = ''')
         _v = VFFSL(SL,"dumps",False)(VFFSL(SL,"event",True)) # u'$dumps($event)' on line 111, col 16
-        if _v is not None: write(_filter(_v, rawExpr=u'$dumps($event)')) # from line 111, col 16.
-        write(u''';
+        if _v is not None: write(_filter(_v, rawExpr='$dumps($event)')) # from line 111, col 16.
+        write(''';
 if (picons[theevent[\'channel\']])
 \t$(\'#station\').html(\'<img src="\'+picons[theevent[\'channel\']]+\'" width="80" />\');
 </script>
--- ./plugin/controllers/views/ajax/eventdescription.py	(original)
+++ ./plugin/controllers/views/ajax/eventdescription.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -82,11 +83,11 @@
         ########################################
         ## START - generated method body
         
-        write(u'''<p>
+        write('''<p>
 \t''')
         _v = VFFSL(SL,"description",True) # u'$description' on line 2, col 2
-        if _v is not None: write(_filter(_v, rawExpr=u'$description')) # from line 2, col 2.
-        write(u'''
+        if _v is not None: write(_filter(_v, rawExpr='$description')) # from line 2, col 2.
+        write('''
 </p>
 ''')
         
--- ./plugin/controllers/views/ajax/message.py	(original)
+++ ./plugin/controllers/views/ajax/message.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -60,7 +61,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -70,7 +71,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,47 +84,47 @@
         ########################################
         ## START - generated method body
         
-        write(u'''<div style="height: 240px; width:500px">
+        write('''<div style="height: 240px; width:500px">
 \t<div class="sendMessageContainer">
 \t\t<table style="width: 99%;" align="center">
 \t\t\t<tbody>
 \t\t\t<tr>
 \t\t\t\t<td>''')
         _v = VFFSL(SL,"tstrings",True)['text'] # u"$tstrings['text']" on line 7, col 9
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['text']")) # from line 7, col 9.
-        write(u'''</td>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['text']")) # from line 7, col 9.
+        write('''</td>
 \t\t\t\t<td><textarea rows="3" cols="30" id="messageText"></textarea></td>
 \t\t\t</tr>
 \t\t\t<tr>
 \t\t\t\t<td>''')
         _v = VFFSL(SL,"tstrings",True)['display_duration_s'] # u"$tstrings['display_duration_s']" on line 11, col 9
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['display_duration_s']")) # from line 11, col 9.
-        write(u'''</td>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['display_duration_s']")) # from line 11, col 9.
+        write('''</td>
 \t\t\t\t<td><input type="text" value="30" id="messageTimeout"></td>
 \t\t\t</tr>
 \t\t\t<tr>
 \t\t\t\t<td>''')
         _v = VFFSL(SL,"tstrings",True)['type'] # u"$tstrings['type']" on line 15, col 9
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['type']")) # from line 15, col 9.
-        write(u'''</td>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['type']")) # from line 15, col 9.
+        write('''</td>
 \t\t\t\t<td>
 \t\t\t\t\t<select id="messageType">
 \t\t\t\t\t\t<option value="1">''')
         _v = VFFSL(SL,"tstrings",True)['info'] # u"$tstrings['info']" on line 18, col 25
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['info']")) # from line 18, col 25.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['info']")) # from line 18, col 25.
+        write('''</option>
 \t\t\t\t\t\t<option value="2">''')
         _v = VFFSL(SL,"tstrings",True)['warning'] # u"$tstrings['warning']" on line 19, col 25
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['warning']")) # from line 19, col 25.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['warning']")) # from line 19, col 25.
+        write('''</option>
 \t\t\t\t\t\t<option value="3">''')
         _v = VFFSL(SL,"tstrings",True)['error'] # u"$tstrings['error']" on line 20, col 25
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['error']")) # from line 20, col 25.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['error']")) # from line 20, col 25.
+        write('''</option>
 \t\t\t\t\t\t<option value="0">''')
         _v = VFFSL(SL,"tstrings",True)['yes_no'] # u"$tstrings['yes_no']" on line 21, col 25
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['yes_no']")) # from line 21, col 25.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['yes_no']")) # from line 21, col 25.
+        write('''</option>
 \t\t\t\t\t</select>
 \t\t\t\t</td>
 \t\t\t</tr>
--- ./plugin/controllers/views/ajax/movies.py	(original)
+++ ./plugin/controllers/views/ajax/movies.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -62,7 +63,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -72,7 +73,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -85,7 +86,7 @@
         ########################################
         ## START - generated method body
         
-        write(u'''<div id="content_main" class="ui-widget-content" style="min-height: 500px;">
+        write('''<div id="content_main" class="ui-widget-content" style="min-height: 500px;">
 \t<div id="tvcontentmain">
 \t\t<div id="toolbar-header" class="ui-widget-header">
 \t\t<div style=display:inline-block;float:left;>
@@ -98,239 +99,239 @@
         sorttypes = ['name','named','date','dated']
         sortimg = ['fa-sort-alpha-asc','fa-sort-alpha-desc','fa-sort-numeric-asc','fa-sort-numeric-desc']
         for title in VFFSL(SL,"sortnames",True): # generated from line 15, col 4
-            write(u'''\t\t\t\t<option value="''')
+            write('''\t\t\t\t<option value="''')
             _v = VFFSL(SL,"sorttypes",True)[VFFSL(SL,"count",True)] # u'$sorttypes[$count]' on line 16, col 20
-            if _v is not None: write(_filter(_v, rawExpr=u'$sorttypes[$count]')) # from line 16, col 20.
-            write(u'''"
+            if _v is not None: write(_filter(_v, rawExpr='$sorttypes[$count]')) # from line 16, col 20.
+            write('''"
 ''')
             if VFFSL(SL,"sorttypes",True)[VFFSL(SL,"count",True)] == VFFSL(SL,"sort",True): # generated from line 17, col 5
-                write(u'''\t\t\t\t\tselected="selected"
-''')
-            write(u'''\t\t\t\t data-class="''')
+                write('''\t\t\t\t\tselected="selected"
+''')
+            write('''\t\t\t\t data-class="''')
             _v = VFFSL(SL,"sortimg",True)[VFFSL(SL,"count",True)] # u'$sortimg[$count]' on line 20, col 18
-            if _v is not None: write(_filter(_v, rawExpr=u'$sortimg[$count]')) # from line 20, col 18.
-            write(u'''">''')
+            if _v is not None: write(_filter(_v, rawExpr='$sortimg[$count]')) # from line 20, col 18.
+            write('''">''')
             _v = VFFSL(SL,"title",True) # u'$title' on line 20, col 36
-            if _v is not None: write(_filter(_v, rawExpr=u'$title')) # from line 20, col 36.
-            write(u'''</option>
+            if _v is not None: write(_filter(_v, rawExpr='$title')) # from line 20, col 36.
+            write('''</option>
 ''')
             count += 1
-        write(u'''\t\t</select>
+        write('''\t\t</select>
 \t\t</div>
 \t\t<span id="toolbar">
 ''')
         path = ''
-        write(u'''\t\t<span id="moviebuttons">
+        write('''\t\t<span id="moviebuttons">
 \t\t\t<!-- <button onclick="load_maincontent_spin(\'ajax/movies?dirname=/\'); return false">''')
         _v = VFFSL(SL,"tstrings",True)['Root'] # u"$tstrings['Root']" on line 28, col 88
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['Root']")) # from line 28, col 88.
-        write(u'''</button>-->
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['Root']")) # from line 28, col 88.
+        write('''</button>-->
 ''')
         for dir in VFN(VFFSL(SL,"directory",True)[0:-1],"split",False)("/")[1:-1]: # generated from line 29, col 4
             path += '/' + VFFSL(SL,"dir",True)
-            write(u'''\t\t\t\t<button onclick="load_maincontent_spin(\'ajax/movies?dirname=\'+escape(\'''')
+            write('''\t\t\t\t<button onclick="load_maincontent_spin(\'ajax/movies?dirname=\'+escape(\'''')
             _v = VFFSL(SL,"path",True) # u'$path' on line 31, col 75
-            if _v is not None: write(_filter(_v, rawExpr=u'$path')) # from line 31, col 75.
-            write(u'''\'));">''')
+            if _v is not None: write(_filter(_v, rawExpr='$path')) # from line 31, col 75.
+            write('''\'));">''')
             _v = VFFSL(SL,"dir",True) # u'$dir' on line 31, col 86
-            if _v is not None: write(_filter(_v, rawExpr=u'$dir')) # from line 31, col 86.
-            write(u'''</button>
+            if _v is not None: write(_filter(_v, rawExpr='$dir')) # from line 31, col 86.
+            write('''</button>
 ''')
         if VFFSL(SL,"directory",True) != '/': # generated from line 33, col 4
-            write(u'''\t\t\t\t<button class="ui-state-active"><span style="font-weight: bold;">
+            write('''\t\t\t\t<button class="ui-state-active"><span style="font-weight: bold;">
 ''')
             _v = VFN(VFFSL(SL,"directory",True)[0:-1],"split",False)("/")[-1]
             if _v is not None: write(_filter(_v))
-            write(u'''\t\t\t\t</span></button>
-''')
-        write(u'''\t\t</span>
+            write('''\t\t\t\t</span></button>
+''')
+        write('''\t\t</span>
 
 ''')
         if VFFSL(SL,"len",False)(VFFSL(SL,"bookmarks",True)): # generated from line 40, col 3
-            write(u'''\t\t\t<select id="directory">
+            write('''\t\t\t<select id="directory">
 \t\t\t<option>Subdirs:</option>
 ''')
             for bookmark in VFFSL(SL,"bookmarks",True): # generated from line 43, col 4
-                write(u'''\t\t\t\t<option value="''')
+                write('''\t\t\t\t<option value="''')
                 _v = VFFSL(SL,"directory",True) # u'$directory' on line 44, col 20
-                if _v is not None: write(_filter(_v, rawExpr=u'$directory')) # from line 44, col 20.
+                if _v is not None: write(_filter(_v, rawExpr='$directory')) # from line 44, col 20.
                 _v = VFFSL(SL,"bookmark",True) # u'$bookmark' on line 44, col 30
-                if _v is not None: write(_filter(_v, rawExpr=u'$bookmark')) # from line 44, col 30.
-                write(u'''">''')
+                if _v is not None: write(_filter(_v, rawExpr='$bookmark')) # from line 44, col 30.
+                write('''">''')
                 _v = VFFSL(SL,"bookmark",True) # u'$bookmark' on line 44, col 41
-                if _v is not None: write(_filter(_v, rawExpr=u'$bookmark')) # from line 44, col 41.
-                write(u'''</option>
-''')
-            write(u'''\t\t\t</select>
-''')
-        write(u'''\t\t</span>
+                if _v is not None: write(_filter(_v, rawExpr='$bookmark')) # from line 44, col 41.
+                write('''</option>
+''')
+            write('''\t\t\t</select>
+''')
+        write('''\t\t</span>
 \t\t</div>
 \t\t<div id="movies">
 ''')
         count = 0
         for movie in VFFSL(SL,"movies",True): # generated from line 52, col 3
-            write(u'''\t\t\t<div class="tm_row ui-widget-content ui-state-default" id="''')
+            write('''\t\t\t<div class="tm_row ui-widget-content ui-state-default" id="''')
             _v = VFFSL(SL,"count",True) # u'$count' on line 53, col 63
-            if _v is not None: write(_filter(_v, rawExpr=u'$count')) # from line 53, col 63.
-            write(u'''" data-title="''')
+            if _v is not None: write(_filter(_v, rawExpr='$count')) # from line 53, col 63.
+            write('''" data-title="''')
             _v = VFN(VFFSL(SL,"movie.eventname",True),"replace",False)("\"", r"'") # u'$movie.eventname.replace("\\"", r"\'")' on line 53, col 83
-            if _v is not None: write(_filter(_v, rawExpr=u'$movie.eventname.replace("\\"", r"\'")')) # from line 53, col 83.
-            write(u'''" data-start="''')
+            if _v is not None: write(_filter(_v, rawExpr='$movie.eventname.replace("\\"", r"\'")')) # from line 53, col 83.
+            write('''" data-start="''')
             _v = VFFSL(SL,"movie.recordingtime",True) # u'$movie.recordingtime' on line 53, col 133
-            if _v is not None: write(_filter(_v, rawExpr=u'$movie.recordingtime')) # from line 53, col 133.
-            write(u'''">
+            if _v is not None: write(_filter(_v, rawExpr='$movie.recordingtime')) # from line 53, col 133.
+            write('''">
 \t\t\t\t<div class="m_buttons tm_buttons">
 \t\t\t\t\t\t<div>
 \t\t\t\t\t\t<a href=\'#\' onClick="playRecording(\'''')
             _v = VFFSL(SL,"quote",False)(VFFSL(SL,"movie.serviceref",True)) # u'$quote($movie.serviceref)' on line 56, col 43
-            if _v is not None: write(_filter(_v, rawExpr=u'$quote($movie.serviceref)')) # from line 56, col 43.
-            write(u'''\');" title="''')
+            if _v is not None: write(_filter(_v, rawExpr='$quote($movie.serviceref)')) # from line 56, col 43.
+            write('''\');" title="''')
             _v = VFFSL(SL,"tstrings",True)['playback'] # u"$tstrings['playback']" on line 56, col 80
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['playback']")) # from line 56, col 80.
-            write(u'''"><div><i class="fa fa-play"></i></div></a>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['playback']")) # from line 56, col 80.
+            write('''"><div><i class="fa fa-play"></i></div></a>
 ''')
             if VFFSL(SL,"transcoding",True): # generated from line 57, col 7
-                write(u'''\t\t\t\t\t\t<a href="#" onclick="jumper80(\'''')
+                write('''\t\t\t\t\t\t<a href="#" onclick="jumper80(\'''')
                 _v = VFFSL(SL,"quote",False)(VFFSL(SL,"movie.filename",True)) # u'$quote($movie.filename)' on line 58, col 38
-                if _v is not None: write(_filter(_v, rawExpr=u'$quote($movie.filename)')) # from line 58, col 38.
-                write(u'''\');" title="''')
+                if _v is not None: write(_filter(_v, rawExpr='$quote($movie.filename)')) # from line 58, col 38.
+                write('''\');" title="''')
                 _v = VFFSL(SL,"tstrings",True)['stream'] # u"$tstrings['stream']" on line 58, col 73
-                if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['stream']")) # from line 58, col 73.
-                write(u''': ''')
+                if _v is not None: write(_filter(_v, rawExpr="$tstrings['stream']")) # from line 58, col 73.
+                write(''': ''')
                 _v = VFFSL(SL,"movie.eventname",True) # u'$movie.eventname' on line 58, col 94
-                if _v is not None: write(_filter(_v, rawExpr=u'$movie.eventname')) # from line 58, col 94.
-                write(u'''"><div><i class="fa fa-desktop"></i></div></a>
+                if _v is not None: write(_filter(_v, rawExpr='$movie.eventname')) # from line 58, col 94.
+                write('''"><div><i class="fa fa-desktop"></i></div></a>
 \t\t\t\t\t\t<a href="#" onclick="jumper8003(\'''')
                 _v = VFFSL(SL,"quote",False)(VFFSL(SL,"movie.filename",True)) # u'$quote($movie.filename)' on line 59, col 40
-                if _v is not None: write(_filter(_v, rawExpr=u'$quote($movie.filename)')) # from line 59, col 40.
-                write(u'''\');" title="''')
+                if _v is not None: write(_filter(_v, rawExpr='$quote($movie.filename)')) # from line 59, col 40.
+                write('''\');" title="''')
                 _v = VFFSL(SL,"tstrings",True)['stream'] # u"$tstrings['stream']" on line 59, col 75
-                if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['stream']")) # from line 59, col 75.
-                write(u''' (''')
+                if _v is not None: write(_filter(_v, rawExpr="$tstrings['stream']")) # from line 59, col 75.
+                write(''' (''')
                 _v = VFFSL(SL,"tstrings",True)['transcoded'] # u"$tstrings['transcoded']" on line 59, col 96
-                if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['transcoded']")) # from line 59, col 96.
-                write(u'''): ''')
+                if _v is not None: write(_filter(_v, rawExpr="$tstrings['transcoded']")) # from line 59, col 96.
+                write('''): ''')
                 _v = VFFSL(SL,"movie.eventname",True) # u'$movie.eventname' on line 59, col 122
-                if _v is not None: write(_filter(_v, rawExpr=u'$movie.eventname')) # from line 59, col 122.
-                write(u'''"><div><i class="fa fa-mobile"></i></div></a>
+                if _v is not None: write(_filter(_v, rawExpr='$movie.eventname')) # from line 59, col 122.
+                write('''"><div><i class="fa fa-mobile"></i></div></a>
 ''')
             else: # generated from line 60, col 7
-                write(u'''\t\t\t\t\t\t<a target="_blank" href=\'web/ts.m3u?file=''')
+                write('''\t\t\t\t\t\t<a target="_blank" href=\'web/ts.m3u?file=''')
                 _v = VFFSL(SL,"quote",False)(VFFSL(SL,"movie.filename",True)) # u'$quote($movie.filename)' on line 61, col 48
-                if _v is not None: write(_filter(_v, rawExpr=u'$quote($movie.filename)')) # from line 61, col 48.
-                write(u'''\' title="''')
+                if _v is not None: write(_filter(_v, rawExpr='$quote($movie.filename)')) # from line 61, col 48.
+                write('''\' title="''')
                 _v = VFFSL(SL,"tstrings",True)['stream'] # u"$tstrings['stream']" on line 61, col 80
-                if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['stream']")) # from line 61, col 80.
-                write(u''' ''')
+                if _v is not None: write(_filter(_v, rawExpr="$tstrings['stream']")) # from line 61, col 80.
+                write(''' ''')
                 _v = VFFSL(SL,"movie.eventname",True) # u'$movie.eventname' on line 61, col 100
-                if _v is not None: write(_filter(_v, rawExpr=u'$movie.eventname')) # from line 61, col 100.
-                write(u'''"><div><i class="fa fa-desktop"></i></div></a>
-''')
-            write(u'''\t\t\t\t\t\t<br><br>
+                if _v is not None: write(_filter(_v, rawExpr='$movie.eventname')) # from line 61, col 100.
+                write('''"><div><i class="fa fa-desktop"></i></div></a>
+''')
+            write('''\t\t\t\t\t\t<br><br>
 ''')
             w = VFFSL(SL,"movie.lastseen",True)
             if VFFSL(SL,"w",True) > 0: # generated from line 65, col 7
                 w = VFFSL(SL,"w",True) * 70 / 100
                 size = str(VFFSL(SL,"w",True)) + '%'
-                write(u'''\t\t\t\t\t\t\t<div class="ui-progressbar ui-corner-all ui-widget ui-widget-content">
+                write('''\t\t\t\t\t\t\t<div class="ui-progressbar ui-corner-all ui-widget ui-widget-content">
 \t\t\t\t\t\t\t\t<div class="ui-progressbar-value ui-corner-left ui-widget-header" style="width: ''')
                 _v = VFFSL(SL,"size",True) # u'$size' on line 69, col 89
-                if _v is not None: write(_filter(_v, rawExpr=u'$size')) # from line 69, col 89.
-                write(u''';"></div>
+                if _v is not None: write(_filter(_v, rawExpr='$size')) # from line 69, col 89.
+                write(''';"></div>
 \t\t\t\t\t\t\t</div>
 ''')
-            write(u'''\t\t\t\t\t\t<br>
+            write('''\t\t\t\t\t\t<br>
 ''')
             eventname_escaped = VFN(VFFSL(SL,"movie.eventname",True),"replace",False)("'", r"\'")
-            write(u"""\t\t\t\t\t\t<a href='/file?action=download&file=""")
+            write("""\t\t\t\t\t\t<a href='/file?action=download&file=""")
             _v = VFFSL(SL,"quote",False)(VFFSL(SL,"movie.filename",True)) # u'$quote($movie.filename)' on line 74, col 43
-            if _v is not None: write(_filter(_v, rawExpr=u'$quote($movie.filename)')) # from line 74, col 43.
-            write(u'''\' title="''')
+            if _v is not None: write(_filter(_v, rawExpr='$quote($movie.filename)')) # from line 74, col 43.
+            write('''\' title="''')
             _v = VFFSL(SL,"tstrings",True)['download'] # u"$tstrings['download']" on line 74, col 75
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['download']")) # from line 74, col 75.
-            write(u''' ''')
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['download']")) # from line 74, col 75.
+            write(''' ''')
             _v = VFFSL(SL,"movie.eventname",True) # u'$movie.eventname' on line 74, col 97
-            if _v is not None: write(_filter(_v, rawExpr=u'$movie.eventname')) # from line 74, col 97.
-            write(u'''"><div><i class="fa fa-save"></i></div></a>
+            if _v is not None: write(_filter(_v, rawExpr='$movie.eventname')) # from line 74, col 97.
+            write('''"><div><i class="fa fa-save"></i></div></a>
 \t\t\t\t\t\t<a href=\'#\' onClick="renameMovie(\'''')
             _v = VFFSL(SL,"quote",False)(VFFSL(SL,"movie.serviceref",True)) # u'$quote($movie.serviceref)' on line 75, col 41
-            if _v is not None: write(_filter(_v, rawExpr=u'$quote($movie.serviceref)')) # from line 75, col 41.
-            write(u"""','""")
+            if _v is not None: write(_filter(_v, rawExpr='$quote($movie.serviceref)')) # from line 75, col 41.
+            write("""','""")
             _v = VFFSL(SL,"eventname_escaped",True) # u'$eventname_escaped' on line 75, col 69
-            if _v is not None: write(_filter(_v, rawExpr=u'$eventname_escaped')) # from line 75, col 69.
-            write(u'''\');" title="''')
+            if _v is not None: write(_filter(_v, rawExpr='$eventname_escaped')) # from line 75, col 69.
+            write('''\');" title="''')
             _v = VFFSL(SL,"tstrings",True)['rename_recording'] # u"$tstrings['rename_recording']" on line 75, col 99
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['rename_recording']")) # from line 75, col 99.
-            write(u'''"><div><i class="fa fa-edit"></i></div></a>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['rename_recording']")) # from line 75, col 99.
+            write('''"><div><i class="fa fa-edit"></i></div></a>
 \t\t\t\t\t\t<a href=\'#\' onClick="deleteMovie(\'''')
             _v = VFFSL(SL,"quote",False)(VFFSL(SL,"movie.serviceref",True)) # u'$quote($movie.serviceref)' on line 76, col 41
-            if _v is not None: write(_filter(_v, rawExpr=u'$quote($movie.serviceref)')) # from line 76, col 41.
-            write(u"""', '""")
+            if _v is not None: write(_filter(_v, rawExpr='$quote($movie.serviceref)')) # from line 76, col 41.
+            write("""', '""")
             _v = VFFSL(SL,"count",True) # u'$count' on line 76, col 70
-            if _v is not None: write(_filter(_v, rawExpr=u'$count')) # from line 76, col 70.
-            write(u"""', '""")
+            if _v is not None: write(_filter(_v, rawExpr='$count')) # from line 76, col 70.
+            write("""', '""")
             _v = VFFSL(SL,"eventname_escaped",True) # u'$eventname_escaped' on line 76, col 80
-            if _v is not None: write(_filter(_v, rawExpr=u'$eventname_escaped')) # from line 76, col 80.
-            write(u'''\'); return false;" title="''')
+            if _v is not None: write(_filter(_v, rawExpr='$eventname_escaped')) # from line 76, col 80.
+            write('''\'); return false;" title="''')
             _v = VFFSL(SL,"tstrings",True)['delete_recording'] # u"$tstrings['delete_recording']" on line 76, col 124
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['delete_recording']")) # from line 76, col 124.
-            write(u'''"><div><i class="fa fa-trash-o"></i></div></a>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['delete_recording']")) # from line 76, col 124.
+            write('''"><div><i class="fa fa-trash-o"></i></div></a>
 
 \t\t\t\t\t\t</div>
 \t\t\t\t</div>
 \t\t\t\t<div class="tm_text">
 ''')
             if VFFSL(SL,"movie.eventname",True) != "": # generated from line 81, col 6
-                write(u'''\t\t\t\t\t\t<div>
+                write('''\t\t\t\t\t\t<div>
 ''')
                 da = VFFSL(SL,"tstrings",True)[("day_" + (time.strftime("%w", time.localtime(VFFSL(SL,"movie.recordingtime",True)))))]
-                write(u'''\t\t\t\t\t\t\t<span class="tm_title">''')
+                write('''\t\t\t\t\t\t\t<span class="tm_title">''')
                 _v = VFFSL(SL,"movie.eventname",True) # u'$movie.eventname' on line 84, col 31
-                if _v is not None: write(_filter(_v, rawExpr=u'$movie.eventname')) # from line 84, col 31.
-                write(u'''</span><br /> ''')
+                if _v is not None: write(_filter(_v, rawExpr='$movie.eventname')) # from line 84, col 31.
+                write('''</span><br /> ''')
                 _v = VFFSL(SL,"movie.servicename",True) # u'$movie.servicename' on line 84, col 61
-                if _v is not None: write(_filter(_v, rawExpr=u'$movie.servicename')) # from line 84, col 61.
-                write(u''' / ''')
+                if _v is not None: write(_filter(_v, rawExpr='$movie.servicename')) # from line 84, col 61.
+                write(''' / ''')
                 _v = VFFSL(SL,"da",True) # u'$da' on line 84, col 82
-                if _v is not None: write(_filter(_v, rawExpr=u'$da')) # from line 84, col 82.
-                write(u''' ''')
+                if _v is not None: write(_filter(_v, rawExpr='$da')) # from line 84, col 82.
+                write(''' ''')
                 _v = VFFSL(SL,"movie.begintime",True) # u'$movie.begintime' on line 84, col 86
-                if _v is not None: write(_filter(_v, rawExpr=u'$movie.begintime')) # from line 84, col 86.
-                write(u'''<br /> ''')
+                if _v is not None: write(_filter(_v, rawExpr='$movie.begintime')) # from line 84, col 86.
+                write('''<br /> ''')
                 _v = VFFSL(SL,"movie.length",True) # u'$movie.length' on line 84, col 109
-                if _v is not None: write(_filter(_v, rawExpr=u'$movie.length')) # from line 84, col 109.
-                write(u''' min. / ''')
+                if _v is not None: write(_filter(_v, rawExpr='$movie.length')) # from line 84, col 109.
+                write(''' min. / ''')
                 _v = VFFSL(SL,"movie.filesize_readable",True) # u'$movie.filesize_readable' on line 84, col 130
-                if _v is not None: write(_filter(_v, rawExpr=u'$movie.filesize_readable')) # from line 84, col 130.
-                write(u'''
+                if _v is not None: write(_filter(_v, rawExpr='$movie.filesize_readable')) # from line 84, col 130.
+                write('''
 \t\t\t\t\t\t</div>
 \t\t\t\t\t\t<div>
 \t\t\t\t\t\t\t<span class="tm_desc" style="font-weight: bold;">''')
                 _v = VFFSL(SL,"movie.description",True) # u'$movie.description' on line 87, col 57
-                if _v is not None: write(_filter(_v, rawExpr=u'$movie.description')) # from line 87, col 57.
-                write(u'''</span>
+                if _v is not None: write(_filter(_v, rawExpr='$movie.description')) # from line 87, col 57.
+                write('''</span>
 \t\t\t\t\t\t</div>
 \t\t\t\t\t\t<div>
 \t\t\t\t\t\t\t<span class="tm_desc">''')
                 _v = VFFSL(SL,"movie.descriptionExtended",True) # u'$movie.descriptionExtended' on line 90, col 30
-                if _v is not None: write(_filter(_v, rawExpr=u'$movie.descriptionExtended')) # from line 90, col 30.
-                write(u'''</span>
+                if _v is not None: write(_filter(_v, rawExpr='$movie.descriptionExtended')) # from line 90, col 30.
+                write('''</span>
 \t\t\t\t\t\t</div>
 ''')
             else: # generated from line 92, col 6
-                write(u'''\t\t\t\t\t\t<div>
+                write('''\t\t\t\t\t\t<div>
 \t\t\t\t\t\t\t<span class="tm_title">''')
                 _v = VFFSL(SL,"movie.filename",True) # u'$movie.filename' on line 94, col 31
-                if _v is not None: write(_filter(_v, rawExpr=u'$movie.filename')) # from line 94, col 31.
-                write(u'''</span>
+                if _v is not None: write(_filter(_v, rawExpr='$movie.filename')) # from line 94, col 31.
+                write('''</span>
 \t\t\t\t\t\t</div>
 ''')
-            write(u'''\t\t\t\t</div>
+            write('''\t\t\t\t</div>
 ''')
             count += 1
-            write(u'''\t\t\t</div>
-''')
-        write(u'''\t\t</div>
+            write('''\t\t\t</div>
+''')
+        write('''\t\t</div>
 \t</div>
 </div>
 
@@ -340,20 +341,20 @@
 \t$(\'#moviebuttons\').buttonset();
 \tMLHelper.Load(\'''')
         _v = VFFSL(SL,"sort",True) # u'$sort' on line 109, col 17
-        if _v is not None: write(_filter(_v, rawExpr=u'$sort')) # from line 109, col 17.
-        write(u"""');
+        if _v is not None: write(_filter(_v, rawExpr='$sort')) # from line 109, col 17.
+        write("""');
 \tsetTMHover();
 });
 
 """)
         if VFFSL(SL,"len",False)(VFFSL(SL,"bookmarks",True)): # generated from line 113, col 1
-            write(u'''$("#directory").selectmenu({change: function(event, ui) {
+            write('''$("#directory").selectmenu({change: function(event, ui) {
 \tload_maincontent_spin(\'ajax/movies?dirname=\'+escape(ui.item.value))
 }
 });
 
 ''')
-        write(u'''
+        write('''
 </script>
 ''')
         
--- ./plugin/controllers/views/ajax/multiepg.py	(original)
+++ ./plugin/controllers/views/ajax/multiepg.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -65,7 +66,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -75,7 +76,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -88,7 +89,7 @@
         ########################################
         ## START - generated method body
         
-        write(u'''<style>
+        write('''<style>
 \ttable { font-family: Verdana; font-size: 11px; }
 \ttr { vertical-align: top }
 \t.float { float:left }
@@ -113,64 +114,64 @@
 <div id="navepg">
 ''')
         for slot in list(range(0,7)): # generated from line 30, col 1
-            write(u'''\t<div class="float plus ui-state-default ''')
+            write('''\t<div class="float plus ui-state-default ''')
             if VFFSL(SL,"slot",True)==VFFSL(SL,"day",True) : # generated from line 31, col 42
                 _v =  'ui-state-active' 
                 if _v is not None: write(_filter(_v))
             else:
                 _v =  '' 
                 if _v is not None: write(_filter(_v))
-            write(u'''" data-day="''')
+            write('''" data-day="''')
             _v = VFFSL(SL,"slot",True) # u'$(slot)' on line 31, col 102
-            if _v is not None: write(_filter(_v, rawExpr=u'$(slot)')) # from line 31, col 102.
-            write(u'''">''')
+            if _v is not None: write(_filter(_v, rawExpr='$(slot)')) # from line 31, col 102.
+            write('''">''')
             _v = VFFSL(SL,"tstrings",True)[("day_" + (time.strftime("%w", time.localtime(time.time()+86400*slot))))] # u'$tstrings[("day_" + (time.strftime("%w", time.localtime(time.time()+86400*slot))))]' on line 31, col 111
-            if _v is not None: write(_filter(_v, rawExpr=u'$tstrings[("day_" + (time.strftime("%w", time.localtime(time.time()+86400*slot))))]')) # from line 31, col 111.
-            write(u'''</div>
+            if _v is not None: write(_filter(_v, rawExpr='$tstrings[("day_" + (time.strftime("%w", time.localtime(time.time()+86400*slot))))]')) # from line 31, col 111.
+            write('''</div>
 ''')
         if VFFSL(SL,"mode",True) == 2: # generated from line 33, col 1
-            write(u'''<div class="float plus ui-state-default lbl">&nbsp;''')
+            write('''<div class="float plus ui-state-default lbl">&nbsp;''')
             _v = VFFSL(SL,"tstrings",True)['prime_times'] # u"$tstrings['prime_times']" on line 34, col 52
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['prime_times']")) # from line 34, col 52.
-            write(u''':&nbsp;</div>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['prime_times']")) # from line 34, col 52.
+            write(''':&nbsp;</div>
 <div id="pt0" class="float plus ui-state-default" data-day="201">06:00</div>
 <div id="pt1" class="float plus ui-state-default" data-day="202">12:00</div>
 <div id="pt2" class="float plus ui-state-default" data-day="203">20:00</div>
 ''')
             if VFFSL(SL,"day",True) == 0: # generated from line 38, col 1
-                write(u'''<div id="pt3" class="float">&nbsp;</div>
+                write('''<div id="pt3" class="float">&nbsp;</div>
 <div id="pt4" class="float plus ui-state-default" data-day="200">''')
                 _v = VFFSL(SL,"tstrings",True)['now'] # u"$tstrings['now']" on line 40, col 66
-                if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['now']")) # from line 40, col 66.
-                write(u'''</div>
+                if _v is not None: write(_filter(_v, rawExpr="$tstrings['now']")) # from line 40, col 66.
+                write('''</div>
 ''')
         else: # generated from line 42, col 1
-            write(u'''<div class="float plus ui-state-default lbl">&nbsp;''')
+            write('''<div class="float plus ui-state-default lbl">&nbsp;''')
             _v = VFFSL(SL,"tstrings",True)['cw'] # u"$tstrings['cw']" on line 43, col 52
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['cw']")) # from line 43, col 52.
-            write(u''':&nbsp;</div>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['cw']")) # from line 43, col 52.
+            write(''':&nbsp;</div>
 ''')
             for wk in list(range(0,3)): # generated from line 44, col 1
                 w = VFFSL(SL,"wk",True) + 1000
-                write(u'''\t<div class="float plus ui-state-default ''')
+                write('''\t<div class="float plus ui-state-default ''')
                 if VFFSL(SL,"wk",True)==VFFSL(SL,"week",True) : # generated from line 46, col 42
                     _v =  'ui-state-active' 
                     if _v is not None: write(_filter(_v))
                 else:
                     _v =  '' 
                     if _v is not None: write(_filter(_v))
-                write(u'''" data-day="''')
+                write('''" data-day="''')
                 _v = VFFSL(SL,"w",True) # u'$(w)' on line 46, col 101
-                if _v is not None: write(_filter(_v, rawExpr=u'$(w)')) # from line 46, col 101.
-                write(u'''">''')
+                if _v is not None: write(_filter(_v, rawExpr='$(w)')) # from line 46, col 101.
+                write('''">''')
                 _v = VFN(VFFSL(SL,"time",True),"strftime",False)("%V",time.localtime(time.time()+604800*wk)) # u'$time.strftime("%V",time.localtime(time.time()+604800*wk))' on line 46, col 107
-                if _v is not None: write(_filter(_v, rawExpr=u'$time.strftime("%V",time.localtime(time.time()+604800*wk))')) # from line 46, col 107.
-                write(u'''</div>
-''')
-        write(u'''<div class="float plus ui-state-default lbl">&nbsp;''')
+                if _v is not None: write(_filter(_v, rawExpr='$time.strftime("%V",time.localtime(time.time()+604800*wk))')) # from line 46, col 107.
+                write('''</div>
+''')
+        write('''<div class="float plus ui-state-default lbl">&nbsp;''')
         _v = VFFSL(SL,"tstrings",True)['display_mode'] # u"$tstrings['display_mode']" on line 49, col 52
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['display_mode']")) # from line 49, col 52.
-        write(u''':&nbsp;</div>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['display_mode']")) # from line 49, col 52.
+        write(''':&nbsp;</div>
 <div class="float plus ui-state-default ''')
         if VFFSL(SL,"mode",True)==1 : # generated from line 50, col 41
             _v =  'ui-state-active' 
@@ -178,10 +179,10 @@
         else:
             _v =  '' 
             if _v is not None: write(_filter(_v))
-        write(u'''" data-day="101">''')
+        write('''" data-day="101">''')
         _v = VFFSL(SL,"tstrings",True)['tv_guide'] # u"$tstrings['tv_guide']" on line 50, col 103
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['tv_guide']")) # from line 50, col 103.
-        write(u'''</div>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['tv_guide']")) # from line 50, col 103.
+        write('''</div>
 <div class="float plus ui-state-default ''')
         if VFFSL(SL,"mode",True)==2 : # generated from line 51, col 41
             _v =  'ui-state-active' 
@@ -189,47 +190,47 @@
         else:
             _v =  '' 
             if _v is not None: write(_filter(_v))
-        write(u'''" data-day="102">''')
+        write('''" data-day="102">''')
         _v = VFFSL(SL,"tstrings",True)['timeline'] # u"$tstrings['timeline']" on line 51, col 103
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['timeline']")) # from line 51, col 103.
-        write(u'''</div>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['timeline']")) # from line 51, col 103.
+        write('''</div>
 ''')
         if VFFSL(SL,"mode",True) == 1: # generated from line 52, col 1
-            write(u'''<div class="float plus ui-state-default lbl">&nbsp;''')
+            write('''<div class="float plus ui-state-default lbl">&nbsp;''')
             _v = VFFSL(SL,"tstrings",True)['date'] # u"$tstrings['date']" on line 53, col 52
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['date']")) # from line 53, col 52.
-            write(u''':&nbsp;''')
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['date']")) # from line 53, col 52.
+            write(''':&nbsp;''')
             _v = VFN(VFFSL(SL,"time",True),"strftime",False)("%x", time.localtime(time.time()+86400*VFFSL(SL,"day",True)+604800*VFFSL(SL,"week",True))) # u'$time.strftime("%x", time.localtime(time.time()+86400*$day+604800*$week))' on line 53, col 76
-            if _v is not None: write(_filter(_v, rawExpr=u'$time.strftime("%x", time.localtime(time.time()+86400*$day+604800*$week))')) # from line 53, col 76.
-            write(u'''</div>
-''')
-        write(u'''<div id="compressmepg" onclick="CompressMEPG();"><i id="compressmepgi" class="fa fa-compress link" aria-hidden="true"></i></div>
+            if _v is not None: write(_filter(_v, rawExpr='$time.strftime("%x", time.localtime(time.time()+86400*$day+604800*$week))')) # from line 53, col 76.
+            write('''</div>
+''')
+        write('''<div id="compressmepg" onclick="CompressMEPG();"><i id="compressmepgi" class="fa fa-compress link" aria-hidden="true"></i></div>
 <div id="refreshmepg2" onclick="RefreshMEPG();"><i id="refreshmepgi" class="fa fa-refresh link" aria-hidden="true"></i></div>
 \t<br clear="all">
 
 ''')
         for bq in VFFSL(SL,"bouquets",True): # generated from line 59, col 1
-            write(u'''\t<div class="float bq ui-state-default ''')
+            write('''\t<div class="float bq ui-state-default ''')
             if VFFSL(SL,"bq",True)[0]==VFFSL(SL,"bref",True) : # generated from line 60, col 40
                 _v =  'ui-state-active' 
                 if _v is not None: write(_filter(_v))
             else:
                 _v =  '' 
                 if _v is not None: write(_filter(_v))
-            write(u'''" data-ref="''')
+            write('''" data-ref="''')
             _v = VFFSL(SL,"quote",False)(VFFSL(SL,"bq",True)[0]) # u'$quote($bq[0])' on line 60, col 102
-            if _v is not None: write(_filter(_v, rawExpr=u'$quote($bq[0])')) # from line 60, col 102.
-            write(u'''">''')
+            if _v is not None: write(_filter(_v, rawExpr='$quote($bq[0])')) # from line 60, col 102.
+            write('''">''')
             _v = VFFSL(SL,"bq",True)[1] # u'$bq[1]' on line 60, col 118
-            if _v is not None: write(_filter(_v, rawExpr=u'$bq[1]')) # from line 60, col 118.
-            write(u'''</div>
-''')
-        write(u'''<br clear="all">
+            if _v is not None: write(_filter(_v, rawExpr='$bq[1]')) # from line 60, col 118.
+            write('''</div>
+''')
+        write('''<br clear="all">
 </div>
 
 ''')
         if VFFSL(SL,"mode",True) == 2: # generated from line 65, col 1
-            write(u'''
+            write('''
 <style>
 .picon { display: inline-block; margin:0; max-width: 100px;}
 .picon > img { max-height: 30px;}
@@ -246,34 +247,34 @@
 
 ''')
             now = VFFSL(SL,"mktime",False)(VFFSL(SL,"localtime",False)())
-            write(u'''
+            write('''
 ''')
             if VFFSL(SL,"day",True) == 0: # generated from line 83, col 1
                 first = VFFSL(SL,"now",True) - 3600
             else: # generated from line 85, col 1
                 first = VFFSL(SL,"now",True) + (VFFSL(SL,"day",True) * 3600 * 24)
-            write(u'''
+            write('''
 ''')
             s = VFFSL(SL,"strftime",False)("%S",VFFSL(SL,"localtime",False)(VFFSL(SL,"first",True)))
             m = VFFSL(SL,"strftime",False)("%M",VFFSL(SL,"localtime",False)(VFFSL(SL,"first",True)))
             offset = VFFSL(SL,"int",False)(VFFSL(SL,"m",True)) * 60
             offset = VFFSL(SL,"offset",True) + VFFSL(SL,"int",False)(VFFSL(SL,"s",True))
-            write(u'''
+            write('''
 ''')
             if VFFSL(SL,"day",True) > 0: # generated from line 94, col 1
                 h = VFFSL(SL,"strftime",False)("%H",VFFSL(SL,"localtime",False)(VFFSL(SL,"first",True)))
                 offset = VFFSL(SL,"offset",True) + VFFSL(SL,"int",False)(VFFSL(SL,"h",True)) * 60 * 60
                 offset = VFFSL(SL,"offset",True) + 3600
-            write(u'''
+            write('''
 ''')
             first = VFFSL(SL,"first",True) - VFFSL(SL,"offset",True)
-            write(u'''
-''')
-        write(u'''
+            write('''
+''')
+        write('''
 ''')
         if VFFSL(SL,"mode",True) == 1: # generated from line 104, col 1
             renderEventBlock = VFFSL(SL,"renderEvtBlock",False)()
-            write(u'''<div class="wrapper">
+            write('''<div class="wrapper">
 <table border="0" cellpadding="0" cellspacing="0" width="100%" id="tbl1">
 <thead>
 <tr>
@@ -284,62 +285,62 @@
                 if VFFSL(SL,"evl",True): # generated from line 113, col 2
                     ev = VFFSL(SL,"evl",True)[0]
                     ref = "data-ref='" + VFFSL(SL,"ev.ref",True) + "'"
-                write(u'''\t<td class="border"><div class="service ui-widget-header" ''')
+                write('''\t<td class="border"><div class="service ui-widget-header" ''')
                 _v = VFFSL(SL,"ref",True) # u'$ref' on line 117, col 59
-                if _v is not None: write(_filter(_v, rawExpr=u'$ref')) # from line 117, col 59.
-                write(u'''><img src="''')
+                if _v is not None: write(_filter(_v, rawExpr='$ref')) # from line 117, col 59.
+                write('''><img src="''')
                 _v = VFFSL(SL,"picons",True)[VFFSL(SL,"sname",True)] # u'$(picons[$sname])' on line 117, col 74
-                if _v is not None: write(_filter(_v, rawExpr=u'$(picons[$sname])')) # from line 117, col 74.
-                write(u'''" /> ''')
+                if _v is not None: write(_filter(_v, rawExpr='$(picons[$sname])')) # from line 117, col 74.
+                write('''" /> ''')
                 _v = VFFSL(SL,"sname",True) # u'$sname' on line 117, col 96
-                if _v is not None: write(_filter(_v, rawExpr=u'$sname')) # from line 117, col 96.
-                write(u'''</div></td>
-''')
-            write(u'''</tr>
+                if _v is not None: write(_filter(_v, rawExpr='$sname')) # from line 117, col 96.
+                write('''</div></td>
+''')
+            write('''</tr>
 </thead>
 <tbody id="tbl1body">
 ''')
             for slot in list(range(0,12)): # generated from line 122, col 2
-                write(u'''\t<tr class="''')
+                write('''\t<tr class="''')
                 _v = VFFSL(SL,"slot",True)%2 and 'ui-widget-content' or 'ui-widget-content ui-state-hover' # u"$(slot%2 and 'ui-widget-content' or 'ui-widget-content ui-state-hover')" on line 123, col 13
-                if _v is not None: write(_filter(_v, rawExpr=u"$(slot%2 and 'ui-widget-content' or 'ui-widget-content ui-state-hover')")) # from line 123, col 13.
-                write(u''' nobg">
+                if _v is not None: write(_filter(_v, rawExpr="$(slot%2 and 'ui-widget-content' or 'ui-widget-content ui-state-hover')")) # from line 123, col 13.
+                write(''' nobg">
 ''')
                 for sname, eventlist in six.iteritems(VFFSL(SL,"events",True)): # generated from line 124, col 3
-                    write(u'''\t\t<td class="border">
+                    write('''\t\t<td class="border">
 ''')
                     for event in VFFSL(SL,"eventlist",True)[VFFSL(SL,"slot",True)]: # generated from line 126, col 4
-                        write(u'''\t\t\t\t''')
+                        write('''\t\t\t\t''')
                         _v = VFN(VFFSL(SL,"renderEventBlock",True),"render",False)(VFFSL(SL,"event",True)) # u'$renderEventBlock.render($event)' on line 127, col 5
-                        if _v is not None: write(_filter(_v, rawExpr=u'$renderEventBlock.render($event)')) # from line 127, col 5.
-                        write(u'''
+                        if _v is not None: write(_filter(_v, rawExpr='$renderEventBlock.render($event)')) # from line 127, col 5.
+                        write('''
 ''')
                     if len(VFFSL(SL,"eventlist",True)[VFFSL(SL,"slot",True)]) == 0: # generated from line 129, col 4
-                        write(u'''\t\t\t<div class="event"></div>
-''')
-                    write(u'''\t\t</td>
-''')
-                write(u'''\t</tr>
-''')
-            write(u'''</tbody>
+                        write('''\t\t\t<div class="event"></div>
+''')
+                    write('''\t\t</td>
+''')
+                write('''\t</tr>
+''')
+            write('''</tbody>
 <tfoot>
 <tr>
 ''')
             for sname, eventlist in six.iteritems(VFFSL(SL,"events",True)): # generated from line 139, col 2
-                write(u'''\t<td class="border"><div class="service ui-widget-header"><img src="''')
+                write('''\t<td class="border"><div class="service ui-widget-header"><img src="''')
                 _v = VFFSL(SL,"picons",True)[VFFSL(SL,"sname",True)] # u'$(picons[$sname])' on line 140, col 69
-                if _v is not None: write(_filter(_v, rawExpr=u'$(picons[$sname])')) # from line 140, col 69.
-                write(u'''" /> ''')
+                if _v is not None: write(_filter(_v, rawExpr='$(picons[$sname])')) # from line 140, col 69.
+                write('''" /> ''')
                 _v = VFFSL(SL,"sname",True) # u'$sname' on line 140, col 91
-                if _v is not None: write(_filter(_v, rawExpr=u'$sname')) # from line 140, col 91.
-                write(u'''</div></td>
-''')
-            write(u'''</tr>
+                if _v is not None: write(_filter(_v, rawExpr='$sname')) # from line 140, col 91.
+                write('''</div></td>
+''')
+            write('''</tr>
 </tfoot>
 </table>
 ''')
         else: # generated from line 145, col 1
-            write(u'''<div class="wrapper">
+            write('''<div class="wrapper">
 <div id="tbl1body" style="position: relative; width: 100%;">
 \t<div id="tblinner" style="height: auto;width: 100%; white-space: nowrap;">
 \t<div class="timetable">
@@ -359,54 +360,54 @@
 \t\t\t<ol cass="eventlist">
 ''')
             pad = 141
-            write(u'''\t\t\t\t<li class="event" style="width:''')
+            write('''\t\t\t\t<li class="event" style="width:''')
             _v = VFFSL(SL,"pad",True) # u'${pad}' on line 165, col 36
-            if _v is not None: write(_filter(_v, rawExpr=u'${pad}')) # from line 165, col 36.
-            write(u'''px;">
+            if _v is not None: write(_filter(_v, rawExpr='${pad}')) # from line 165, col 36.
+            write('''px;">
 \t\t\t\t</li>
 ''')
             for slot in list(range(0,50)): # generated from line 167, col 5
                 t = VFFSL(SL,"first",True) + (VFFSL(SL,"slot",True) * 3600)
-                write(u'''\t\t\t\t\t<li class="event" style="width:600px;" data-dt="''')
+                write('''\t\t\t\t\t<li class="event" style="width:600px;" data-dt="''')
                 _v = VFFSL(SL,"strftime",False)("%H:%M", VFFSL(SL,"localtime",False)(VFFSL(SL,"t",True))) # u'$strftime("%H:%M", $localtime($t))' on line 169, col 54
-                if _v is not None: write(_filter(_v, rawExpr=u'$strftime("%H:%M", $localtime($t))')) # from line 169, col 54.
-                write(u'''">
+                if _v is not None: write(_filter(_v, rawExpr='$strftime("%H:%M", $localtime($t))')) # from line 169, col 54.
+                write('''">
 \t\t\t\t\t\t<span class="ui-widget-header nobg">
 \t\t\t\t\t\t\t<span class="ename">''')
                 _v = VFFSL(SL,"tstrings",True)[("day_" + (VFFSL(SL,"strftime",False)("%w",VFFSL(SL,"localtime",False)(VFFSL(SL,"t",True)))))] # u'$tstrings[("day_" + ($strftime("%w",$localtime($t))))]' on line 171, col 28
-                if _v is not None: write(_filter(_v, rawExpr=u'$tstrings[("day_" + ($strftime("%w",$localtime($t))))]')) # from line 171, col 28.
-                write(u''', ''')
+                if _v is not None: write(_filter(_v, rawExpr='$tstrings[("day_" + ($strftime("%w",$localtime($t))))]')) # from line 171, col 28.
+                write(''', ''')
                 _v = VFFSL(SL,"strftime",False)('%d.%m.', VFFSL(SL,"localtime",False)(VFFSL(SL,"t",True))) # u"$strftime('%d.%m.', $localtime($t))" on line 171, col 84
-                if _v is not None: write(_filter(_v, rawExpr=u"$strftime('%d.%m.', $localtime($t))")) # from line 171, col 84.
-                write(u'''</span>
+                if _v is not None: write(_filter(_v, rawExpr="$strftime('%d.%m.', $localtime($t))")) # from line 171, col 84.
+                write('''</span>
 \t\t\t\t\t\t\t<span class="etime">''')
                 _v = VFFSL(SL,"strftime",False)("%H:%M", VFFSL(SL,"localtime",False)(VFFSL(SL,"t",True))) # u'$strftime("%H:%M", $localtime($t))' on line 172, col 28
-                if _v is not None: write(_filter(_v, rawExpr=u'$strftime("%H:%M", $localtime($t))')) # from line 172, col 28.
-                write(u'''</span>
+                if _v is not None: write(_filter(_v, rawExpr='$strftime("%H:%M", $localtime($t))')) # from line 172, col 28.
+                write('''</span>
 \t\t\t\t\t\t</span>
 \t\t\t\t\t</li>
 ''')
-            write(u'''\t\t\t</ol>
+            write('''\t\t\t</ol>
 \t\t</li>
 \t</ol>
 
 ''')
             for sname, eventlist in six.iteritems(VFFSL(SL,"events",True)): # generated from line 180, col 2
-                write(u'''\t\t<ol class="channel-listing">
+                write('''\t\t<ol class="channel-listing">
 \t\t\t<li>
 \t\t\t\t<span class="ui-widget-header">
 \t\t\t\t\t<div>
 \t\t\t\t\t\t<h2 class="picon" ><img src="''')
                 _v = VFFSL(SL,"picons",True)[VFFSL(SL,"sname",True)] # u'$(picons[$sname])' on line 185, col 36
-                if _v is not None: write(_filter(_v, rawExpr=u'$(picons[$sname])')) # from line 185, col 36.
-                write(u'''" title="''')
+                if _v is not None: write(_filter(_v, rawExpr='$(picons[$sname])')) # from line 185, col 36.
+                write('''" title="''')
                 _v = VFFSL(SL,"sname",True) # u'$sname' on line 185, col 62
-                if _v is not None: write(_filter(_v, rawExpr=u'$sname')) # from line 185, col 62.
-                write(u'''" /></h2>
+                if _v is not None: write(_filter(_v, rawExpr='$sname')) # from line 185, col 62.
+                write('''" /></h2>
 \t\t\t\t\t\t<span>''')
                 _v = VFFSL(SL,"sname",True) # u'$sname' on line 186, col 13
-                if _v is not None: write(_filter(_v, rawExpr=u'$sname')) # from line 186, col 13.
-                write(u'''</span>
+                if _v is not None: write(_filter(_v, rawExpr='$sname')) # from line 186, col 13.
+                write('''</span>
 \t\t\t\t\t</div>
 \t\t\t\t</span>
 \t\t\t\t<ol cass="eventlist">
@@ -418,82 +419,82 @@
                     if VFFSL(SL,"c",True) == 0: # generated from line 194, col 6
                         ref = quote(event['ref'], safe=' ~@#$&()*!+=:;,.?/\'')
                         pad = 141 + (VFFSL(SL,"event.begin_timestamp",True) - VFFSL(SL,"first",True)) / 6
-                        write(u'''\t\t\t\t\t\t<li class="event" style=;width:''')
+                        write('''\t\t\t\t\t\t<li class="event" style=;width:''')
                         _v = VFFSL(SL,"pad",True) # u'${pad}' on line 197, col 38
-                        if _v is not None: write(_filter(_v, rawExpr=u'${pad}')) # from line 197, col 38.
-                        write(u'''px;">
+                        if _v is not None: write(_filter(_v, rawExpr='${pad}')) # from line 197, col 38.
+                        write('''px;">
 \t\t\t\t\t\t</li>
 ''')
                     end = VFFSL(SL,"event.begin_timestamp",True) + VFFSL(SL,"event.duration",True)
                     iscurr = ""
                     if VFFSL(SL,"event.begin_timestamp",True) < VFFSL(SL,"now",True) and VFFSL(SL,"end",True) > VFFSL(SL,"now",True): # generated from line 202, col 6
                         iscurr = " ui-state-hover"
-                    write(u'''\t\t\t\t\t<li class="event" data-ref="''')
+                    write('''\t\t\t\t\t<li class="event" data-ref="''')
                     _v = VFFSL(SL,"ref",True) # u'$ref' on line 205, col 34
-                    if _v is not None: write(_filter(_v, rawExpr=u'$ref')) # from line 205, col 34.
-                    write(u'''" data-id="''')
+                    if _v is not None: write(_filter(_v, rawExpr='$ref')) # from line 205, col 34.
+                    write('''" data-id="''')
                     _v = VFFSL(SL,"event.id",True) # u'${event.id}' on line 205, col 49
-                    if _v is not None: write(_filter(_v, rawExpr=u'${event.id}')) # from line 205, col 49.
-                    write(u'''" style="width:''')
+                    if _v is not None: write(_filter(_v, rawExpr='${event.id}')) # from line 205, col 49.
+                    write('''" style="width:''')
                     _v = VFFSL(SL,"event.duration",True)/6 # u'${event.duration/6}' on line 205, col 75
-                    if _v is not None: write(_filter(_v, rawExpr=u'${event.duration/6}')) # from line 205, col 75.
-                    write(u'''px;" >
+                    if _v is not None: write(_filter(_v, rawExpr='${event.duration/6}')) # from line 205, col 75.
+                    write('''px;" >
 \t\t\t\t\t\t<a href="#" class="ui-widget-content ''')
                     _v = VFFSL(SL,"iscurr",True) # u'${iscurr}' on line 206, col 44
-                    if _v is not None: write(_filter(_v, rawExpr=u'${iscurr}')) # from line 206, col 44.
-                    write(u'''" title="''')
+                    if _v is not None: write(_filter(_v, rawExpr='${iscurr}')) # from line 206, col 44.
+                    write('''" title="''')
                     _v = VFFSL(SL,"event",True)['title'] # u"$event['title']" on line 206, col 62
-                    if _v is not None: write(_filter(_v, rawExpr=u"$event['title']")) # from line 206, col 62.
-                    write(u'''">
+                    if _v is not None: write(_filter(_v, rawExpr="$event['title']")) # from line 206, col 62.
+                    write('''">
 \t\t\t\t\t\t<span class="ename">''')
                     _v = VFFSL(SL,"event",True)['title'] # u"$event['title']" on line 207, col 27
-                    if _v is not None: write(_filter(_v, rawExpr=u"$event['title']")) # from line 207, col 27.
-                    write(u'''</span>
+                    if _v is not None: write(_filter(_v, rawExpr="$event['title']")) # from line 207, col 27.
+                    write('''</span>
 \t\t\t\t\t\t<span class="etime">''')
                     _v = VFFSL(SL,"strftime",False)("%H:%M", VFFSL(SL,"localtime",False)(VFFSL(SL,"event",True)['begin_timestamp'])) # u'$strftime("%H:%M", $localtime($event[\'begin_timestamp\']))' on line 208, col 27
-                    if _v is not None: write(_filter(_v, rawExpr=u'$strftime("%H:%M", $localtime($event[\'begin_timestamp\']))')) # from line 208, col 27.
-                    write(u'''</span>
+                    if _v is not None: write(_filter(_v, rawExpr='$strftime("%H:%M", $localtime($event[\'begin_timestamp\']))')) # from line 208, col 27.
+                    write('''</span>
 ''')
                     if VFFSL(SL,"event",True)['timerStatus'] != '': # generated from line 209, col 7
-                        write(u'''\t\t\t\t\t\t<span class="etimer ''')
+                        write('''\t\t\t\t\t\t<span class="etimer ''')
                         _v = VFFSL(SL,"event",True)['timerStatus'] # u"$event['timerStatus']" on line 210, col 27
-                        if _v is not None: write(_filter(_v, rawExpr=u"$event['timerStatus']")) # from line 210, col 27.
-                        write(u'''">''')
+                        if _v is not None: write(_filter(_v, rawExpr="$event['timerStatus']")) # from line 210, col 27.
+                        write('''">''')
                         _v = VFFSL(SL,"tstrings",True)['timer'] # u"$tstrings['timer']" on line 210, col 50
-                        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['timer']")) # from line 210, col 50.
-                        write(u'''</span>
-''')
-                    write(u'''\t\t\t\t\t\t</a>
+                        if _v is not None: write(_filter(_v, rawExpr="$tstrings['timer']")) # from line 210, col 50.
+                        write('''</span>
+''')
+                    write('''\t\t\t\t\t\t</a>
 \t\t\t\t\t</li>
 ''')
                     c = VFFSL(SL,"c",True) + 1
-                write(u'''\t\t\t\t</ol>
+                write('''\t\t\t\t</ol>
 \t\t\t</li>
 \t\t</ol>
 ''')
-            write(u'''</div>
-''')
-        write(u'''</div>
+            write('''</div>
+''')
+        write('''</div>
 <div id="eventdescription"></div>
 
 <script>
 ''')
         if VFFSL(SL,"mode",True) == 2: # generated from line 226, col 1
-            write(u'''var opena = ''')
+            write('''var opena = ''')
             _v = VFFSL(SL,"first",True) # u'$first' on line 227, col 13
-            if _v is not None: write(_filter(_v, rawExpr=u'$first')) # from line 227, col 13.
-            write(u''';
+            if _v is not None: write(_filter(_v, rawExpr='$first')) # from line 227, col 13.
+            write(''';
 var openb = ''')
             _v = VFFSL(SL,"now",True) # u'$now' on line 228, col 13
-            if _v is not None: write(_filter(_v, rawExpr=u'$now')) # from line 228, col 13.
-            write(u''';
+            if _v is not None: write(_filter(_v, rawExpr='$now')) # from line 228, col 13.
+            write(''';
 var pos = (openb - opena);
 if (pos>0)
 \tpos = pos / 6;
 
 ''')
             if VFFSL(SL,"day",True) == 0: # generated from line 233, col 1
-                write(u'''
+                write('''
 $(".timetable-now").css(\'left\',151+pos);
 
 setTimeout(function() {
@@ -507,14 +508,14 @@
 $(".timetable-now").css(\'height\',$("#tblinner").height());
 ''')
             else: # generated from line 246, col 1
-                write(u'''$(".timetable-now").css(\'height\',\'0\');
-''')
-            write(u'''
-''')
-        write(u'''var picons = ''')
+                write('''$(".timetable-now").css(\'height\',\'0\');
+''')
+            write('''
+''')
+        write('''var picons = ''')
         _v = VFFSL(SL,"dumps",False)(VFFSL(SL,"picons",True)) # u'$dumps($picons)' on line 251, col 14
-        if _v is not None: write(_filter(_v, rawExpr=u'$dumps($picons)')) # from line 251, col 14.
-        write(u''';
+        if _v is not None: write(_filter(_v, rawExpr='$dumps($picons)')) # from line 251, col 14.
+        write(''';
 var reloadTimers = false;
 function getScrollBarWidth () {
 \tvar $outer = $(\'<div>\').css({visibility: \'hidden\', width: 100, overflow: \'scroll\'}).appendTo(\'body\'),
@@ -531,12 +532,12 @@
 \t
 ''')
         if VFFSL(SL,"mode",True) == 1: # generated from line 266, col 1
-            write(u'''\t$("#tbl1body").height( ($("#tvcontent").height() - $("#navepg").height() - 2*$("#tbl1 thead").height() - addScrollBarWidth - 2) + "px");
+            write('''\t$("#tbl1body").height( ($("#tvcontent").height() - $("#navepg").height() - 2*$("#tbl1 thead").height() - addScrollBarWidth - 2) + "px");
 ''')
         else: # generated from line 268, col 1
-            write(u'''\t$("#tbl1body").height( ($("#tvcontent").height() - $("#navepg").height() - 20 - addScrollBarWidth - 2) + "px");
-''')
-        write(u'''\tif (!$(\'#toolbar-header\').is(\':visible\')) {
+            write('''\t$("#tbl1body").height( ($("#tvcontent").height() - $("#navepg").height() - 20 - addScrollBarWidth - 2) + "px");
+''')
+        write('''\tif (!$(\'#toolbar-header\').is(\':visible\')) {
 \t\tvar dh = $(window).height();
 \t\t$("#tvcontentmain").height(dh-80);
 \t\t$("#tbl1body").height(dh-215);
@@ -548,12 +549,12 @@
 \tvar id = $(this).data("ref");
 \tvar epgmode = "''')
         _v = VFFSL(SL,"epgmode",True) # u'$epgmode' on line 281, col 17
-        if _v is not None: write(_filter(_v, rawExpr=u'$epgmode')) # from line 281, col 17.
-        write(u'''";
+        if _v is not None: write(_filter(_v, rawExpr='$epgmode')) # from line 281, col 17.
+        write('''";
 \t$("#tvcontent").html(loadspinner).load(\'ajax/multiepg?bref=\'+id +\'&day=''')
         _v = VFFSL(SL,"day",True) # u'$day' on line 282, col 74
-        if _v is not None: write(_filter(_v, rawExpr=u'$day')) # from line 282, col 74.
-        write(u'''&epgmode=\' + epgmode);
+        if _v is not None: write(_filter(_v, rawExpr='$day')) # from line 282, col 74.
+        write('''&epgmode=\' + epgmode);
 \tSetLSValue("lastmbq_"+epgmode,id);
 });
 $(".event").click(function() {
@@ -567,30 +568,30 @@
 });
 ''')
         if VFFSL(SL,"mode",True) == 1: # generated from line 294, col 1
-            write(u'''$(".service").click(function() {
+            write('''$(".service").click(function() {
 \tvar ref = $(this).data("ref");
 \tif (ref != undefined) {
 \t\tzapChannel(ref, \'\');
 \t}
 });
 ''')
-        write(u'''$(".plus").click(function() {
+        write('''$(".plus").click(function() {
 \tvar day = $(this).data("day");
 \tvar epgmode = "''')
         _v = VFFSL(SL,"epgmode",True) # u'$epgmode' on line 304, col 17
-        if _v is not None: write(_filter(_v, rawExpr=u'$epgmode')) # from line 304, col 17.
-        write(u'''";
+        if _v is not None: write(_filter(_v, rawExpr='$epgmode')) # from line 304, col 17.
+        write('''";
 \tif (day != undefined) {
 \t\tif (day > 999)
 \t\t{
 \t\t\tvar w = day - 1000;
 \t\t\t$("#tvcontent").html(loadspinner).load(\'ajax/multiepg?bref=''')
         _v = VFFSL(SL,"quote",False)(VFFSL(SL,"bref",True)) # u'${quote($bref)}' on line 309, col 64
-        if _v is not None: write(_filter(_v, rawExpr=u'${quote($bref)}')) # from line 309, col 64.
-        write(u"""&day='+""")
+        if _v is not None: write(_filter(_v, rawExpr='${quote($bref)}')) # from line 309, col 64.
+        write("""&day='+""")
         _v = VFFSL(SL,"day",True) # u'$day' on line 309, col 86
-        if _v is not None: write(_filter(_v, rawExpr=u'$day')) # from line 309, col 86.
-        write(u'''+\'&epgmode=\'+epgmode+\'&week=\'+w);
+        if _v is not None: write(_filter(_v, rawExpr='$day')) # from line 309, col 86.
+        write('''+\'&epgmode=\'+epgmode+\'&week=\'+w);
 \t\t}
 \t\telse if (day > 199)
 \t\t{
@@ -625,22 +626,22 @@
 \t\t\tvar mode = day - 100;
 \t\t\tif (mode != ''')
         _v = VFFSL(SL,"mode",True) # u'$mode' on line 342, col 16
-        if _v is not None: write(_filter(_v, rawExpr=u'$mode')) # from line 342, col 16.
-        write(u''') {
+        if _v is not None: write(_filter(_v, rawExpr='$mode')) # from line 342, col 16.
+        write(''') {
 \t\t\t
 \t\t\t\t$.ajax({
 \t\t\t\turl: \'api/setwebconfig?mepgmode=\' + mode,
 \t\t\t\t\tsuccess: function(data) {
 \t\t\t\t\t\t$("#tvcontent").html(loadspinner).load(\'ajax/multiepg?bref=''')
         _v = VFFSL(SL,"quote",False)(VFFSL(SL,"bref",True)) # u'${quote($bref)}' on line 347, col 67
-        if _v is not None: write(_filter(_v, rawExpr=u'${quote($bref)}')) # from line 347, col 67.
-        write(u'''&day=''')
+        if _v is not None: write(_filter(_v, rawExpr='${quote($bref)}')) # from line 347, col 67.
+        write('''&day=''')
         _v = VFFSL(SL,"day",True) # u'$day' on line 347, col 87
-        if _v is not None: write(_filter(_v, rawExpr=u'$day')) # from line 347, col 87.
-        write(u"""&epgmode='+epgmode+'&week='+""")
+        if _v is not None: write(_filter(_v, rawExpr='$day')) # from line 347, col 87.
+        write("""&epgmode='+epgmode+'&week='+""")
         _v = VFFSL(SL,"week",True) # u'$week' on line 347, col 119
-        if _v is not None: write(_filter(_v, rawExpr=u'$week')) # from line 347, col 119.
-        write(u''');
+        if _v is not None: write(_filter(_v, rawExpr='$week')) # from line 347, col 119.
+        write(''');
 \t\t\t\t\t}
 \t\t\t\t});
 \t\t\t}
@@ -648,11 +649,11 @@
 \t\telse {
 \t\t\t$("#tvcontent").html(loadspinner).load(\'ajax/multiepg?bref=''')
         _v = VFFSL(SL,"quote",False)(VFFSL(SL,"bref",True)) # u'${quote($bref)}' on line 353, col 64
-        if _v is not None: write(_filter(_v, rawExpr=u'${quote($bref)}')) # from line 353, col 64.
-        write(u"""&day='+day+'&epgmode='+epgmode+'&week='+""")
+        if _v is not None: write(_filter(_v, rawExpr='${quote($bref)}')) # from line 353, col 64.
+        write("""&day='+day+'&epgmode='+epgmode+'&week='+""")
         _v = VFFSL(SL,"week",True) # u'$week' on line 353, col 119
-        if _v is not None: write(_filter(_v, rawExpr=u'$week')) # from line 353, col 119.
-        write(u''');
+        if _v is not None: write(_filter(_v, rawExpr='$week')) # from line 353, col 119.
+        write(''');
 \t\t}
 \t} else {
 \t\tepgmode = $(this).data("tvradio");
@@ -684,7 +685,7 @@
 });
 ''')
         if VFFSL(SL,"mode",True) == 2: # generated from line 383, col 1
-            write(u"""$(function() {
+            write("""$(function() {
 
 \tif(GetLSValue('MultiEPGScrollStyle','0')=='0') {
 \t\t$('#tblinner').css('overflow-y','hidden');
@@ -698,7 +699,7 @@
 
 });
 """)
-        write(u'''</script>
+        write('''</script>
 ''')
         
         ########################################
--- ./plugin/controllers/views/ajax/powerstate.py	(original)
+++ ./plugin/controllers/views/ajax/powerstate.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -60,7 +61,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -70,7 +71,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,33 +84,33 @@
         ########################################
         ## START - generated method body
         
-        write(u'''<div style="height: 425px; width:500px">
+        write('''<div style="height: 425px; width:500px">
 \t<div class="powerStateButtons">
 \t\t<ul>
 \t\t\t<li class="ui-button" onclick="handle_power_state_dialog(new_power_state = 0); return false">''')
         _v = VFFSL(SL,"tstrings",True)['standby_toggle'] # u"$tstrings['standby_toggle']" on line 5, col 97
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['standby_toggle']")) # from line 5, col 97.
-        write(u'''</li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['standby_toggle']")) # from line 5, col 97.
+        write('''</li>
 \t\t\t<li class="ui-button" onclick="handle_power_state_dialog(new_power_state = 1); return false">''')
         _v = VFFSL(SL,"tstrings",True)['deep_standby'] # u"$tstrings['deep_standby']" on line 6, col 97
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['deep_standby']")) # from line 6, col 97.
-        write(u'''</li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['deep_standby']")) # from line 6, col 97.
+        write('''</li>
 \t\t\t<li class="ui-button" onclick="handle_power_state_dialog(new_power_state = 2); return false">''')
         _v = VFFSL(SL,"tstrings",True)['reboot_box'] # u"$tstrings['reboot_box']" on line 7, col 97
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['reboot_box']")) # from line 7, col 97.
-        write(u'''</li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['reboot_box']")) # from line 7, col 97.
+        write('''</li>
 \t\t\t<li class="ui-button" onclick="handle_power_state_dialog(new_power_state = 3); return false">''')
         _v = VFFSL(SL,"tstrings",True)['restart_gui'] # u"$tstrings['restart_gui']" on line 8, col 97
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['restart_gui']")) # from line 8, col 97.
-        write(u'''</li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['restart_gui']")) # from line 8, col 97.
+        write('''</li>
 \t\t\t<li class="ui-button" onclick="handle_power_state_dialog(new_power_state = 4); return false">''')
         _v = VFFSL(SL,"tstrings",True)['wake_up'] # u"$tstrings['wake_up']" on line 9, col 97
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['wake_up']")) # from line 9, col 97.
-        write(u'''</li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['wake_up']")) # from line 9, col 97.
+        write('''</li>
 \t\t\t<li class="ui-button" onclick="handle_power_state_dialog(new_power_state = 5); return false">''')
         _v = VFFSL(SL,"tstrings",True)['standby'] # u"$tstrings['standby']" on line 10, col 97
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['standby']")) # from line 10, col 97.
-        write(u'''</li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['standby']")) # from line 10, col 97.
+        write('''</li>
 \t\t</ul>
 \t</div>
 </div>
--- ./plugin/controllers/views/ajax/providers.py	(original)
+++ ./plugin/controllers/views/ajax/providers.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -61,7 +62,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -71,7 +72,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -84,30 +85,30 @@
         ########################################
         ## START - generated method body
         
-        write(u'''<script>
+        write('''<script>
 $(function() { InitAccordeon("#accordionP");});
 </script>
 <div id="accordionP">
 ''')
         for provider in VFFSL(SL,"providers",True): # generated from line 7, col 1
-            write(u'''\t<h1><a href="#" id="ajax/channels?id=''')
+            write('''\t<h1><a href="#" id="ajax/channels?id=''')
             _v = VFFSL(SL,"quote",False)(VFFSL(SL,"provider",True)[0]) # u'$quote($provider[0])' on line 8, col 39
-            if _v is not None: write(_filter(_v, rawExpr=u'$quote($provider[0])')) # from line 8, col 39.
-            write(u'''&stype=''')
+            if _v is not None: write(_filter(_v, rawExpr='$quote($provider[0])')) # from line 8, col 39.
+            write('''&stype=''')
             _v = VFFSL(SL,"stype",True) # u'$stype' on line 8, col 66
-            if _v is not None: write(_filter(_v, rawExpr=u'$stype')) # from line 8, col 66.
-            write(u'''">''')
+            if _v is not None: write(_filter(_v, rawExpr='$stype')) # from line 8, col 66.
+            write('''">''')
             _v = VFFSL(SL,"provider",True)[1] # u'$provider[1]' on line 8, col 74
-            if _v is not None: write(_filter(_v, rawExpr=u'$provider[1]')) # from line 8, col 74.
-            write(u'''</a></h1>
+            if _v is not None: write(_filter(_v, rawExpr='$provider[1]')) # from line 8, col 74.
+            write('''</a></h1>
 \t<div>
 ''')
             _v = VFFSL(SL,"tstrings",True)['loading'] # u"$tstrings['loading']" on line 10, col 1
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['loading']")) # from line 10, col 1.
-            write(u''' ...
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['loading']")) # from line 10, col 1.
+            write(''' ...
 \t</div>
 ''')
-        write(u'''</div>
+        write('''</div>
 ''')
         
         ########################################
--- ./plugin/controllers/views/ajax/radio.py	(original)
+++ ./plugin/controllers/views/ajax/radio.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -60,7 +61,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -70,7 +71,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,32 +84,32 @@
         ########################################
         ## START - generated method body
         
-        write(u'''<div id="content_main" class="ui-widget-content"><div id="tvcontentmain"><div id="toolbar-header" class="ui-widget-header">
+        write('''<div id="content_main" class="ui-widget-content"><div id="tvcontentmain"><div id="toolbar-header" class="ui-widget-header">
 <span id="toolbar"><span id="tvbutton">
 <input type="radio" id="btn0" name="radiobutton" /><label for="btn0">''')
         _v = VFFSL(SL,"tstrings",True)['current'] # u"$tstrings['current']" on line 4, col 70
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['current']")) # from line 4, col 70.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['current']")) # from line 4, col 70.
+        write('''</label>
 <input type="radio" id="btn1" name="radiobutton" checked="checked" /><label for="btn1">''')
         _v = VFFSL(SL,"tstrings",True)['bouquets'] # u"$tstrings['bouquets']" on line 5, col 88
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['bouquets']")) # from line 5, col 88.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['bouquets']")) # from line 5, col 88.
+        write('''</label>
 <input type="radio" id="btn2" name="radiobutton" /><label for="btn2">''')
         _v = VFFSL(SL,"tstrings",True)['providers'] # u"$tstrings['providers']" on line 6, col 70
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['providers']")) # from line 6, col 70.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['providers']")) # from line 6, col 70.
+        write('''</label>
 <input type="radio" id="btn3" name="radiobutton" /><label for="btn3">''')
         _v = VFFSL(SL,"tstrings",True)['satellites'] # u"$tstrings['satellites']" on line 7, col 70
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['satellites']")) # from line 7, col 70.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['satellites']")) # from line 7, col 70.
+        write('''</label>
 <input type="radio" id="btn4" name="radiobutton" /><label for="btn4">''')
         _v = VFFSL(SL,"tstrings",True)['all_channels'] # u"$tstrings['all_channels']" on line 8, col 70
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['all_channels']")) # from line 8, col 70.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['all_channels']")) # from line 8, col 70.
+        write('''</label>
 <input type="radio" id="btn5" name="radiobutton" /><label for="btn5">''')
         _v = VFFSL(SL,"tstrings",True)['epg'] # u"$tstrings['epg']" on line 9, col 70
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['epg']")) # from line 9, col 70.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['epg']")) # from line 9, col 70.
+        write('''</label>
 </span></span>
 <div id="expandmepg" onclick="ExpandMEPG();"><i id="expandmepgi" class="fa fa-expand link" aria-hidden="true"></i></div>
 <div id="refreshmepg" onclick="RefreshMEPG(\'radio\');"><i id="refreshmepgi" class="fa fa-refresh link" aria-hidden="true"></i></div>
--- ./plugin/controllers/views/ajax/satellites.py	(original)
+++ ./plugin/controllers/views/ajax/satellites.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -61,7 +62,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -71,7 +72,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -84,30 +85,30 @@
         ########################################
         ## START - generated method body
         
-        write(u'''<script>
+        write('''<script>
 $(function() { InitAccordeon("#accordionS");});
 </script>
 <div id="accordionS">
 ''')
         for satellite in VFFSL(SL,"satellites",True): # generated from line 7, col 1
-            write(u'''\t<h1><a href="#" id="ajax/channels?id=''')
+            write('''\t<h1><a href="#" id="ajax/channels?id=''')
             _v = VFFSL(SL,"quote",False)(VFFSL(SL,"satellite.service",True)) # u'$quote($satellite.service)' on line 8, col 39
-            if _v is not None: write(_filter(_v, rawExpr=u'$quote($satellite.service)')) # from line 8, col 39.
-            write(u'''&stype=''')
+            if _v is not None: write(_filter(_v, rawExpr='$quote($satellite.service)')) # from line 8, col 39.
+            write('''&stype=''')
             _v = VFFSL(SL,"stype",True) # u'$stype' on line 8, col 72
-            if _v is not None: write(_filter(_v, rawExpr=u'$stype')) # from line 8, col 72.
-            write(u'''">''')
+            if _v is not None: write(_filter(_v, rawExpr='$stype')) # from line 8, col 72.
+            write('''">''')
             _v = VFFSL(SL,"satellite.name",True) # u'$satellite.name' on line 8, col 80
-            if _v is not None: write(_filter(_v, rawExpr=u'$satellite.name')) # from line 8, col 80.
-            write(u'''</a></h1>
+            if _v is not None: write(_filter(_v, rawExpr='$satellite.name')) # from line 8, col 80.
+            write('''</a></h1>
 <div>
 ''')
             _v = VFFSL(SL,"tstrings",True)['loading'] # u"$tstrings['loading']" on line 10, col 1
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['loading']")) # from line 10, col 1.
-            write(u''' ...
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['loading']")) # from line 10, col 1.
+            write(''' ...
 \t</div>
 ''')
-        write(u'''</div>
+        write('''</div>
 ''')
         
         ########################################
--- ./plugin/controllers/views/ajax/screenshot.py	(original)
+++ ./plugin/controllers/views/ajax/screenshot.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -61,7 +62,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -71,7 +72,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -84,52 +85,52 @@
         ########################################
         ## START - generated method body
         
-        write(u'''<div id="content_main" style="min-height: 533px;">
+        write('''<div id="content_main" style="min-height: 533px;">
 \t<div id="info">
 \t\t<h3 class="ui-widget-header">''')
         _v = VFFSL(SL,"tstrings",True)['screenshot'] # u"$tstrings['screenshot']" on line 5, col 32
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['screenshot']")) # from line 5, col 32.
-        write(u'''</h3>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['screenshot']")) # from line 5, col 32.
+        write('''</h3>
 \t\t<div id="toolbar-header" class="ui-widget-header">
 \t\t\t<span id="toolbar">
 \t\t\t\t<span id="screenshotbutton">
 \t\t\t\t\t<input type="radio" id="screenshotbutton0" name="screenshotbutton" checked="checked" /><label for="screenshotbutton0">''')
         _v = VFFSL(SL,"tstrings",True)['screenshot'] # u"$tstrings['screenshot']" on line 9, col 124
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['screenshot']")) # from line 9, col 124.
-        write(u''' (''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['screenshot']")) # from line 9, col 124.
+        write(''' (''')
         _v = VFFSL(SL,"tstrings",True)['all'] # u"$tstrings['all']" on line 9, col 149
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['all']")) # from line 9, col 149.
-        write(u''')</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['all']")) # from line 9, col 149.
+        write(''')</label>
 \t\t\t\t\t<input type="radio" id="screenshotbutton1" name="screenshotbutton" /><label for="screenshotbutton1">''')
         _v = VFFSL(SL,"tstrings",True)['screenshot'] # u"$tstrings['screenshot']" on line 10, col 106
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['screenshot']")) # from line 10, col 106.
-        write(u''' (''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['screenshot']")) # from line 10, col 106.
+        write(''' (''')
         _v = VFFSL(SL,"tstrings",True)['video'] # u"$tstrings['video']" on line 10, col 131
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['video']")) # from line 10, col 131.
-        write(u''')</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['video']")) # from line 10, col 131.
+        write(''')</label>
 \t\t\t\t\t<input type="radio" id="screenshotbutton2" name="screenshotbutton" /><label for="screenshotbutton2">''')
         _v = VFFSL(SL,"tstrings",True)['screenshot'] # u"$tstrings['screenshot']" on line 11, col 106
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['screenshot']")) # from line 11, col 106.
-        write(u''' (''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['screenshot']")) # from line 11, col 106.
+        write(''' (''')
         _v = VFFSL(SL,"tstrings",True)['osd'] # u"$tstrings['osd']" on line 11, col 131
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['osd']")) # from line 11, col 131.
-        write(u''')</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['osd']")) # from line 11, col 131.
+        write(''')</label>
 \t\t\t\t\t<input type="radio" id="screenshotbutton3" name="screenshotbutton" style="display: none;"/><label for="screenshotbutton3" style="display: none;">''')
         _v = VFFSL(SL,"tstrings",True)['pip'] # u"$tstrings['pip']" on line 12, col 151
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['pip']")) # from line 12, col 151.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['pip']")) # from line 12, col 151.
+        write('''</label>
 \t\t\t\t\t<input type="radio" id="screenshotbutton4" name="screenshotbutton" style="display: none;"/><label for="screenshotbutton4" style="display: none;">''')
         _v = VFFSL(SL,"tstrings",True)['lcd'] # u"$tstrings['lcd']" on line 13, col 151
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['lcd']")) # from line 13, col 151.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['lcd']")) # from line 13, col 151.
+        write('''</label>
 \t\t\t\t</span>
 \t\t\t</span>
 \t\t</div>
 \t\t<div class="screenshotContainer">
 \t\t\t<img id="screenshotimage" src="" alt="''')
         _v = VFFSL(SL,"tstrings",True)['loading'] # u"$tstrings['loading']" on line 18, col 42
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['loading']")) # from line 18, col 42.
-        write(u''' ..." width="350px">
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['loading']")) # from line 18, col 42.
+        write(''' ..." width="350px">
 \t\t\t<div id="screenshotspinnerl" style="top: 50%;left: 50%;margin-left: 50px;margin-top: 50px;;position:absolute;font-size:50px">
 \t\t\t\t<div id="screenshotspinner" class=\'fa fa-spin\' style="display: none;"></div>
 \t\t\t</div>
@@ -137,22 +138,22 @@
 \t\t<div id="screenShotRefresh" style="margin-top: 15px; margin-left: auto; margin-right: auto; width: 720px; text-align: center;">
 \t\t\t<input type="checkbox" id="ssr_hd" value="0">''')
         _v = VFFSL(SL,"tstrings",True)['high_resolution'] # u"$tstrings['high_resolution']" on line 24, col 49
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['high_resolution']")) # from line 24, col 49.
-        write(u'''
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['high_resolution']")) # from line 24, col 49.
+        write('''
 \t\t\t<input type="checkbox" id="ssr_s" value="0">''')
         _v = VFFSL(SL,"tstrings",True)['refresh_auto'] # u"$tstrings['refresh_auto']" on line 25, col 48
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['refresh_auto']")) # from line 25, col 48.
-        write(u'''
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['refresh_auto']")) # from line 25, col 48.
+        write('''
 \t\t\t<input type="text" size="2" id="ssr_i" value="30">''')
         _v = VFFSL(SL,"tstrings",True)['seconds'] # u"$tstrings['seconds']" on line 26, col 54
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['seconds']")) # from line 26, col 54.
-        write(u'''
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['seconds']")) # from line 26, col 54.
+        write('''
 \t\t\t<br>
 \t\t\t<span id="screenshotrefreshbutton">
 \t\t\t\t<button onclick="grabScreenshot(\'auto\'); return false">''')
         _v = VFFSL(SL,"tstrings",True)['refresh'] # u"$tstrings['refresh']" on line 29, col 60
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['refresh']")) # from line 29, col 60.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['refresh']")) # from line 29, col 60.
+        write('''</button>
 \t\t\t</span>
 \t\t</div>
 \t</div>
@@ -161,12 +162,12 @@
 <script type="text/javascript">
 var lcd = "''')
         _v = VFFSL(SL,"getInfo",True)['lcd'] # u"$getInfo['lcd']" on line 36, col 12
-        if _v is not None: write(_filter(_v, rawExpr=u"$getInfo['lcd']")) # from line 36, col 12.
-        write(u'''";
+        if _v is not None: write(_filter(_v, rawExpr="$getInfo['lcd']")) # from line 36, col 12.
+        write('''";
 var pip = "''')
         _v = VFFSL(SL,"getPipStatus",False)() # u'$getPipStatus()' on line 37, col 12
-        if _v is not None: write(_filter(_v, rawExpr=u'$getPipStatus()')) # from line 37, col 12.
-        write(u'''";
+        if _v is not None: write(_filter(_v, rawExpr='$getPipStatus()')) # from line 37, col 12.
+        write('''";
 $(function() {SSHelper.setup()});
 
 function buttonsSwitcher(pipval){
--- ./plugin/controllers/views/ajax/settings.py	(original)
+++ ./plugin/controllers/views/ajax/settings.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -60,7 +61,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -70,7 +71,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,7 +84,7 @@
         ########################################
         ## START - generated method body
         
-        write(u'''<style>
+        write('''<style>
 #packagelist {padding:0;}
 #packagelist li.installed {font-weight:bold;}
 #packagelist li {list-style-type:none;margin:4px 0;}
@@ -100,35 +101,35 @@
 \t\t\t<div style="display:table-cell;width:220px;">
 \t\t\t\t<h3 class="ui-widget-header">''')
         _v = VFFSL(SL,"tstrings",True)['settings'] # u"$tstrings['settings']" on line 17, col 34
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['settings']")) # from line 17, col 34.
-        write(u'''</h3>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['settings']")) # from line 17, col 34.
+        write('''</h3>
 \t\t\t\t<ol class="sellist" id="slist">
 \t\t\t\t<li id=\'themesbtn\' data-id="owsettings" class="ui-selected">''')
         _v = VFFSL(SL,"tstrings",True)['tstr_ow_settings'] # u"$tstrings['tstr_ow_settings']" on line 19, col 65
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['tstr_ow_settings']")) # from line 19, col 65.
-        write(u'''</li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['tstr_ow_settings']")) # from line 19, col 65.
+        write('''</li>
 \t\t\t\t<li id=\'bookmarksbtn\' data-id="bookmarks" class="ui-selected">''')
         _v = VFFSL(SL,"tstrings",True)['bookmarks'] # u"$tstrings['bookmarks']" on line 20, col 67
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['bookmarks']")) # from line 20, col 67.
-        write(u'''</li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['bookmarks']")) # from line 20, col 67.
+        write('''</li>
 \t\t\t\t<li id=\'pkgbtn\' data-id="packages" class="ui-selected">''')
         _v = VFFSL(SL,"tstrings",True)['packages'] # u"$tstrings['packages']" on line 21, col 60
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['packages']")) # from line 21, col 60.
-        write(u'''</li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['packages']")) # from line 21, col 60.
+        write('''</li>
 ''')
         for sec in VFFSL(SL,"configsections",True): # generated from line 22, col 5
-            write(u"""\t\t\t\t\t<li id='""")
+            write("""\t\t\t\t\t<li id='""")
             _v = VFFSL(SL,"sec",True)["key"] # u'$sec["key"]' on line 23, col 14
-            if _v is not None: write(_filter(_v, rawExpr=u'$sec["key"]')) # from line 23, col 14.
-            write(u"""' data-id='ajax/config?section=""")
+            if _v is not None: write(_filter(_v, rawExpr='$sec["key"]')) # from line 23, col 14.
+            write("""' data-id='ajax/config?section=""")
             _v = VFFSL(SL,"sec",True)["key"] # u'$sec["key"]' on line 23, col 56
-            if _v is not None: write(_filter(_v, rawExpr=u'$sec["key"]')) # from line 23, col 56.
-            write(u"""'>""")
+            if _v is not None: write(_filter(_v, rawExpr='$sec["key"]')) # from line 23, col 56.
+            write("""'>""")
             _v = VFFSL(SL,"sec",True)["description"] # u'$sec["description"]' on line 23, col 69
-            if _v is not None: write(_filter(_v, rawExpr=u'$sec["description"]')) # from line 23, col 69.
-            write(u'''</li>
-''')
-        write(u'''\t\t\t\t</ol>
+            if _v is not None: write(_filter(_v, rawExpr='$sec["description"]')) # from line 23, col 69.
+            write('''</li>
+''')
+        write('''\t\t\t\t</ol>
 \t\t\t</div>
 \t\t\t<div class="ui-widget-header" style="display:table-cell;background: none;border-bottom:none;border-top:none;border-left:none;width:1px;"></div>
 \t\t\t<div style="display:table-cell;">
@@ -139,91 +140,91 @@
 \t\t\t<div id="content_main2">
 \t\t\t\t<h3 class="ui-widget-header">''')
         _v = VFFSL(SL,"tstrings",True)['tstr_ow_browser_settings'] # u"$tstrings['tstr_ow_browser_settings']" on line 34, col 34
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['tstr_ow_browser_settings']")) # from line 34, col 34.
-        write(u'''</h3>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['tstr_ow_browser_settings']")) # from line 34, col 34.
+        write('''</h3>
 \t\t\t\t<table id="configuration">
 \t\t\t\t<tr><td>''')
         _v = VFFSL(SL,"tstrings",True)['tstr_theme'] # u"$tstrings['tstr_theme']" on line 36, col 13
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['tstr_theme']")) # from line 36, col 13.
-        write(u'''</td><td>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['tstr_theme']")) # from line 36, col 13.
+        write('''</td><td>
 \t\t\t\t<select name="selectheme" id="selectheme" style="min-width: 150px;margin: 5px;border:none;font-size: 1em;">
 ''')
         for stheme in VFFSL(SL,"themes",True): # generated from line 38, col 5
             if VFFSL(SL,"stheme",True) == VFFSL(SL,"theme",True): # generated from line 39, col 6
-                write(u'''\t\t\t\t\t\t<option selected="selected">''')
+                write('''\t\t\t\t\t\t<option selected="selected">''')
                 _v = VFFSL(SL,"stheme",True) # u'$stheme' on line 40, col 35
-                if _v is not None: write(_filter(_v, rawExpr=u'$stheme')) # from line 40, col 35.
-                write(u'''</option>
+                if _v is not None: write(_filter(_v, rawExpr='$stheme')) # from line 40, col 35.
+                write('''</option>
 ''')
             else: # generated from line 41, col 6
-                write(u'''\t\t\t\t\t\t<option>''')
+                write('''\t\t\t\t\t\t<option>''')
                 _v = VFFSL(SL,"stheme",True) # u'$stheme' on line 42, col 15
-                if _v is not None: write(_filter(_v, rawExpr=u'$stheme')) # from line 42, col 15.
-                write(u'''</option>
-''')
-        write(u'''\t\t\t\t</select>
+                if _v is not None: write(_filter(_v, rawExpr='$stheme')) # from line 42, col 15.
+                write('''</option>
+''')
+        write('''\t\t\t\t</select>
 \t\t\t\t</td></tr>
 \t\t\t\t<tr><td>''')
         _v = VFFSL(SL,"tstrings",True)['zapbeforestream'] # u"$tstrings['zapbeforestream']" on line 47, col 13
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['zapbeforestream']")) # from line 47, col 13.
-        write(u'''</td><td>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['zapbeforestream']")) # from line 47, col 13.
+        write('''</td><td>
 ''')
         if VFFSL(SL,"zapstream",True): # generated from line 48, col 5
-            write(u'''\t\t\t\t<input type="checkbox" name="zapstream" checked="checked"/>
+            write('''\t\t\t\t<input type="checkbox" name="zapstream" checked="checked"/>
 ''')
         else: # generated from line 50, col 5
-            write(u'''\t\t\t\t<input type="checkbox" name="zapstream"/>
-''')
-        write(u'''\t\t\t\t</td></tr>
+            write('''\t\t\t\t<input type="checkbox" name="zapstream"/>
+''')
+        write('''\t\t\t\t</td></tr>
 \t\t\t\t<tr><td>''')
         _v = VFFSL(SL,"tstrings",True)['tstr_show_picon_in_channel_list'] # u"$tstrings['tstr_show_picon_in_channel_list']" on line 54, col 13
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['tstr_show_picon_in_channel_list']")) # from line 54, col 13.
-        write(u'''</td><td>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['tstr_show_picon_in_channel_list']")) # from line 54, col 13.
+        write('''</td><td>
 ''')
         if VFFSL(SL,"showchannelpicon",True): # generated from line 55, col 5
-            write(u'''\t\t\t\t<input type="checkbox" name="showchannelpicon" checked="checked"/>
+            write('''\t\t\t\t<input type="checkbox" name="showchannelpicon" checked="checked"/>
 ''')
         else: # generated from line 57, col 5
-            write(u'''\t\t\t\t<input type="checkbox" name="showchannelpicon"/>
-''')
-        write(u'''\t\t\t\t</td></tr>
+            write('''\t\t\t\t<input type="checkbox" name="showchannelpicon"/>
+''')
+        write('''\t\t\t\t</td></tr>
 \t\t\t\t<tr><td>''')
         _v = VFFSL(SL,"tstrings",True)['show_details_in_channel_list'] # u"$tstrings['show_details_in_channel_list']" on line 61, col 13
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['show_details_in_channel_list']")) # from line 61, col 13.
-        write(u'''</td><td>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['show_details_in_channel_list']")) # from line 61, col 13.
+        write('''</td><td>
 ''')
         if VFFSL(SL,"showchanneldetails",True): # generated from line 62, col 5
-            write(u'''\t\t\t\t<input type="checkbox" name="showchanneldetails" checked="checked"/>
+            write('''\t\t\t\t<input type="checkbox" name="showchanneldetails" checked="checked"/>
 ''')
         else: # generated from line 64, col 5
-            write(u'''\t\t\t\t<input type="checkbox" name="showchanneldetails"/>
-''')
-        write(u'''\t\t\t\t</td></tr>
+            write('''\t\t\t\t<input type="checkbox" name="showchanneldetails"/>
+''')
+        write('''\t\t\t\t</td></tr>
 \t\t\t\t<tr><td>''')
         _v = VFFSL(SL,"tstrings",True)['tstr_moviedb'] # u"$tstrings['tstr_moviedb']" on line 68, col 13
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['tstr_moviedb']")) # from line 68, col 13.
-        write(u'''</td><td>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['tstr_moviedb']")) # from line 68, col 13.
+        write('''</td><td>
 \t\t\t\t<select name="selectmoviedb" id="selectmoviedb" style="min-width: 150px;margin: 5px;border:none;font-size: 1em;">
 ''')
         for smoviedb in VFFSL(SL,"moviedbs",True): # generated from line 70, col 5
             if VFFSL(SL,"smoviedb",True) == VFFSL(SL,"moviedb",True): # generated from line 71, col 6
-                write(u'''\t\t\t\t\t\t<option selected="selected">''')
+                write('''\t\t\t\t\t\t<option selected="selected">''')
                 _v = VFFSL(SL,"smoviedb",True) # u'$smoviedb' on line 72, col 35
-                if _v is not None: write(_filter(_v, rawExpr=u'$smoviedb')) # from line 72, col 35.
-                write(u'''</option>
+                if _v is not None: write(_filter(_v, rawExpr='$smoviedb')) # from line 72, col 35.
+                write('''</option>
 ''')
             else: # generated from line 73, col 6
-                write(u'''\t\t\t\t\t\t<option>''')
+                write('''\t\t\t\t\t\t<option>''')
                 _v = VFFSL(SL,"smoviedb",True) # u'$smoviedb' on line 74, col 15
-                if _v is not None: write(_filter(_v, rawExpr=u'$smoviedb')) # from line 74, col 15.
-                write(u'''</option>
-''')
-        write(u'''\t\t\t\t</select>
+                if _v is not None: write(_filter(_v, rawExpr='$smoviedb')) # from line 74, col 15.
+                write('''</option>
+''')
+        write('''\t\t\t\t</select>
 \t\t\t\t</td></tr>
 \t\t\t\t<tr><td>''')
         _v = VFFSL(SL,"tstrings",True)['tstr_spinner'] # u"$tstrings['tstr_spinner']" on line 79, col 13
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['tstr_spinner']")) # from line 79, col 13.
-        write(u'''</td><td>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['tstr_spinner']")) # from line 79, col 13.
+        write('''</td><td>
 \t\t\t\t<span class="spinner">
 \t\t\t\t<fieldset style="border:none;" id="fsspinner">
 \t\t\t\t<label for="fa-spinner"><i class="fa fa-spinner"></i></label>
@@ -245,8 +246,8 @@
 \t\t\t\t</td></tr>
 \t\t\t\t<tr><td>''')
         _v = VFFSL(SL,"tstrings",True)['playlistformat'] # u"$tstrings['playlistformat']" on line 99, col 13
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['playlistformat']")) # from line 99, col 13.
-        write(u'''</td><td>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['playlistformat']")) # from line 99, col 13.
+        write('''</td><td>
 \t\t\t\t<span class="pl">
 \t\t\t\t<fieldset style="border:none;" id="fspl">
 \t\t\t\t<label for="m3u">M3U</label>
@@ -258,52 +259,52 @@
 \t\t\t\t</td></tr>
 ''')
         if VFFSL(SL,"getVar",False)("responsivedesign", "") != "": # generated from line 109, col 5
-            write(u'''\t\t\t\t\t<tr><td>''')
+            write('''\t\t\t\t\t<tr><td>''')
             _v = VFFSL(SL,"tstrings",True)['newdesign'] # u"$tstrings['newdesign']" on line 110, col 14
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['newdesign']")) # from line 110, col 14.
-            write(u'''</td><td>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['newdesign']")) # from line 110, col 14.
+            write('''</td><td>
 ''')
             if VFFSL(SL,"responsivedesign",True): # generated from line 111, col 6
-                write(u'''\t\t\t\t\t<input type="checkbox" name="responsivedesign" checked="checked"/>
+                write('''\t\t\t\t\t<input type="checkbox" name="responsivedesign" checked="checked"/>
 ''')
             else: # generated from line 113, col 6
-                write(u'''\t\t\t\t\t<input type="checkbox" name="responsivedesign"/>
-''')
-            write(u'''\t\t\t\t\t</td></tr>
-''')
-        write(u'''\t\t\t\t</table>
+                write('''\t\t\t\t\t<input type="checkbox" name="responsivedesign"/>
+''')
+            write('''\t\t\t\t\t</td></tr>
+''')
+        write('''\t\t\t\t</table>
 \t\t\t</div>
 \t\t</div>
 \t\t<div id=\'packages\' style="display:none;">
 \t\t\t<div id="content_main2">
 \t\t\t\t<h3 class="ui-widget-header">''')
         _v = VFFSL(SL,"tstrings",True)['packages'] # u"$tstrings['packages']" on line 123, col 34
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['packages']")) # from line 123, col 34.
-        write(u'''</h3>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['packages']")) # from line 123, col 34.
+        write('''</h3>
 \t\t\t\t<div>
 \t\t\t\t\t<span id="tb2">
 \t\t\t\t\t<input class="pkgbtn" type="radio" id="pkgbtn1" name="tb2" checked="checked" /><label for="pkgbtn1">''')
         _v = VFFSL(SL,"tstrings",True)['update'] # u"$tstrings['update']" on line 126, col 106
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['update']")) # from line 126, col 106.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['update']")) # from line 126, col 106.
+        write('''</label>
 \t\t\t\t\t<input class="pkgbtn" type="radio" id="pkgbtn2" name="tb2" /><label for="pkgbtn2">''')
         _v = VFFSL(SL,"tstrings",True)['installed'] # u"$tstrings['installed']" on line 127, col 88
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['installed']")) # from line 127, col 88.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['installed']")) # from line 127, col 88.
+        write('''</label>
 \t\t\t\t\t<input class="pkgbtn" type="radio" id="pkgbtn3" name="tb2" /><label for="pkgbtn3">''')
         _v = VFFSL(SL,"tstrings",True)['all'] # u"$tstrings['all']" on line 128, col 88
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['all']")) # from line 128, col 88.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['all']")) # from line 128, col 88.
+        write('''</label>
 \t\t\t\t\t<input class="pkgbtn" type="radio" id="pkgbtn4" name="tb2" /><label for="pkgbtn4">''')
         _v = VFFSL(SL,"tstrings",True)['more'] # u"$tstrings['more']" on line 129, col 88
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['more']")) # from line 129, col 88.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['more']")) # from line 129, col 88.
+        write('''</label>
 \t\t\t\t\t</span>
 \t\t\t\t\t<div id="searchpkd"><label for="searchpk">Search:</label><input id="searchpk" value="..." class=\'ui-widget ui-widget-content ui-corner-all\'>
 \t\t\t\t\t<label for="showdetails">''')
         _v = VFFSL(SL,"tstrings",True)['showdetails'] # u"$tstrings['showdetails']" on line 132, col 31
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['showdetails']")) # from line 132, col 31.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['showdetails']")) # from line 132, col 31.
+        write('''</label>
 \t\t\t\t\t<input type="checkbox" name="showdetails" checked="checked"/>
 \t\t\t\t\t</div>
 \t\t\t\t</div>
@@ -311,24 +312,24 @@
 \t\t\t\t\t<br><br>
 \t\t\t\t\t<button id="updatefeed">''')
         _v = VFFSL(SL,"tstrings",True)['update_feed'] # u"$tstrings['update_feed']" on line 138, col 30
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['update_feed']")) # from line 138, col 30.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['update_feed']")) # from line 138, col 30.
+        write('''</button>
 \t\t\t\t\t<br><br>
 \t\t\t\t\t<button id="upgrade">''')
         _v = VFFSL(SL,"tstrings",True)['upgrade_packages'] # u"$tstrings['upgrade_packages']" on line 140, col 27
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['upgrade_packages']")) # from line 140, col 27.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['upgrade_packages']")) # from line 140, col 27.
+        write('''</button>
 \t\t\t\t\t<br><br>
 \t\t\t\t\t<div id="pkgupload">
 \t\t\t\t\t\t<button id="selectfile">''')
         _v = VFFSL(SL,"tstrings",True)['select_ipk_upload'] # u"$tstrings['select_ipk_upload']" on line 143, col 31
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['select_ipk_upload']")) # from line 143, col 31.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['select_ipk_upload']")) # from line 143, col 31.
+        write('''</button>
 \t\t\t\t\t\t<br><br>
 \t\t\t\t\t\t''')
         _v = VFFSL(SL,"tstrings",True)['uploaded_files'] # u"$tstrings['uploaded_files']" on line 145, col 7
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['uploaded_files']")) # from line 145, col 7.
-        write(u''':<br>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['uploaded_files']")) # from line 145, col 7.
+        write(''':<br>
 \t\t\t\t\t\t<ul id=\'tmpfiles\'></ul>
 \t\t\t\t\t\t<br><br>
 \t\t\t\t\t\t<form id="uploadpkg" style="display:none" action"uploadpkg"="" method="post" enctype="multipart/form-data" encoding="multipart/form-data">
@@ -348,24 +349,24 @@
 \t\t\t<div id="content_main2">
 \t\t\t\t<h3 class="ui-widget-header">''')
         _v = VFFSL(SL,"tstrings",True)['bookmarks'] # u"$tstrings['bookmarks']" on line 163, col 34
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['bookmarks']")) # from line 163, col 34.
-        write(u'''</h3>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['bookmarks']")) # from line 163, col 34.
+        write('''</h3>
 \t\t\t\t<table id="configuration">
 \t\t\t\t<tr><td>''')
         _v = VFFSL(SL,"tstrings",True)['bookmark'] # u"$tstrings['bookmark']" on line 165, col 13
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['bookmark']")) # from line 165, col 13.
-        write(u'''</td><td>&nbsp;</td></tr>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['bookmark']")) # from line 165, col 13.
+        write('''</td><td>&nbsp;</td></tr>
 ''')
         for location in VFFSL(SL,"locations",True): # generated from line 166, col 5
-            write(u'''\t\t\t\t\t<tr><td>''')
+            write('''\t\t\t\t\t<tr><td>''')
             _v = VFFSL(SL,"location",True) # u'$location' on line 167, col 14
-            if _v is not None: write(_filter(_v, rawExpr=u'$location')) # from line 167, col 14.
-            write(u'''</td><td><a href=\'#\' onClick="deleteBookmark(\'''')
+            if _v is not None: write(_filter(_v, rawExpr='$location')) # from line 167, col 14.
+            write('''</td><td><a href=\'#\' onClick="deleteBookmark(\'''')
             _v = VFFSL(SL,"location",True) # u'$location' on line 167, col 69
-            if _v is not None: write(_filter(_v, rawExpr=u'$location')) # from line 167, col 69.
-            write(u'''\'); return false;" title=""><div><i class="fa fa-trash-o"></i></div></a></td></tr>
-''')
-        write(u'''\t\t\t\t<tr><td><input type="text" id="addbookmarktext" value=""></td><td><a href=\'#\' onClick="addBookmark(); return false;" title=""><div><i class="fa fa-plus"></i></div></a></td></tr>
+            if _v is not None: write(_filter(_v, rawExpr='$location')) # from line 167, col 69.
+            write('''\'); return false;" title=""><div><i class="fa fa-trash-o"></i></div></a></td></tr>
+''')
+        write('''\t\t\t\t<tr><td><input type="text" id="addbookmarktext" value=""></td><td><a href=\'#\' onClick="addBookmark(); return false;" title=""><div><i class="fa fa-plus"></i></div></a></td></tr>
 \t\t\t\t</table>
 \t\t\t</div>
 \t\t</div>
@@ -376,24 +377,24 @@
 <script type="text/javascript">
 var str_db = "''')
         _v = VFFSL(SL,"tstrings",True)['delete_bookmark'] # u"$tstrings['delete_bookmark']" on line 178, col 15
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['delete_bookmark']")) # from line 178, col 15.
-        write(u'''";
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['delete_bookmark']")) # from line 178, col 15.
+        write('''";
 var str_upl = "''')
         _v = VFFSL(SL,"tstrings",True)['upload_package'] # u"$tstrings['upload_package']" on line 179, col 16
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['upload_package']")) # from line 179, col 16.
-        write(u'''";
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['upload_package']")) # from line 179, col 16.
+        write('''";
 var str_rmp = "''')
         _v = VFFSL(SL,"tstrings",True)['remove_package'] # u"$tstrings['remove_package']" on line 180, col 16
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['remove_package']")) # from line 180, col 16.
-        write(u'''";
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['remove_package']")) # from line 180, col 16.
+        write('''";
 var str_up = "''')
         _v = VFFSL(SL,"tstrings",True)['update_package'] # u"$tstrings['update_package']" on line 181, col 15
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['update_package']")) # from line 181, col 15.
-        write(u'''";
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['update_package']")) # from line 181, col 15.
+        write('''";
 var str_ip = "''')
         _v = VFFSL(SL,"tstrings",True)['install_package'] # u"$tstrings['install_package']" on line 182, col 15
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['install_package']")) # from line 182, col 15.
-        write(u'''";
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['install_package']")) # from line 182, col 15.
+        write('''";
 
 // TODO minimize js
 
@@ -785,15 +786,15 @@
 });
 ''')
         if VFFSL(SL,"allowipkupload",True): # generated from line 574, col 1
-            write(u'''var noupload=true;
+            write('''var noupload=true;
 ''')
         else: # generated from line 576, col 1
-            write(u'''$(function() {
+            write('''$(function() {
 \t$("#pkgupload").remove();
 });
 var noupload=false;
 ''')
-        write(u'''</script>
+        write('''</script>
 ''')
         
         ########################################
--- ./plugin/controllers/views/ajax/terminal.py	(original)
+++ ./plugin/controllers/views/ajax/terminal.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,13 +84,13 @@
         ## START - generated method body
         
         _orig_filter_25168692 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<head>
+        write('''<head>
 \t<style>
 \t\tp {
 \t\t\tfont-size:\t1.1em;
--- ./plugin/controllers/views/ajax/timers.py	(original)
+++ ./plugin/controllers/views/ajax/timers.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -62,7 +63,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -72,7 +73,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -86,13 +87,13 @@
         ## START - generated method body
         
         _orig_filter_78886051 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<div id="content_main" class="ui-widget-content" style="min-height: 500px;">
+        write('''<div id="content_main" class="ui-widget-content" style="min-height: 500px;">
 \t<div id="tvcontentmain">
 \t\t<div id="toolbar-header" class="ui-widget-header">
 \t\t<div style=display:inline-block;float:left;>
@@ -106,42 +107,42 @@
         sortimg = ['fa-sort-alpha-asc','fa-sort-alpha-desc','fa-sort-numeric-asc','fa-sort-numeric-desc']
         sort = VFFSL(SL,"getVar",False)('sort', 'dated')
         for title in VFFSL(SL,"sortnames",True): # generated from line 17, col 4
-            write(u'''\t\t\t\t<option value="''')
+            write('''\t\t\t\t<option value="''')
             _v = VFFSL(SL,"sorttypes",True)[VFFSL(SL,"count",True)] # u'$sorttypes[$count]' on line 18, col 20
-            if _v is not None: write(_filter(_v, rawExpr=u'$sorttypes[$count]')) # from line 18, col 20.
-            write(u'''"
+            if _v is not None: write(_filter(_v, rawExpr='$sorttypes[$count]')) # from line 18, col 20.
+            write('''"
 ''')
             if VFFSL(SL,"sorttypes",True)[VFFSL(SL,"count",True)] == VFFSL(SL,"sort",True): # generated from line 19, col 5
-                write(u'''\t\t\t\t\tselected="selected"
-''')
-            write(u'''\t\t\t\t data-class="''')
+                write('''\t\t\t\t\tselected="selected"
+''')
+            write('''\t\t\t\t data-class="''')
             _v = VFFSL(SL,"sortimg",True)[VFFSL(SL,"count",True)] # u'$sortimg[$count]' on line 22, col 18
-            if _v is not None: write(_filter(_v, rawExpr=u'$sortimg[$count]')) # from line 22, col 18.
-            write(u'''">''')
+            if _v is not None: write(_filter(_v, rawExpr='$sortimg[$count]')) # from line 22, col 18.
+            write('''">''')
             _v = VFFSL(SL,"title",True) # u'$title' on line 22, col 36
-            if _v is not None: write(_filter(_v, rawExpr=u'$title')) # from line 22, col 36.
-            write(u'''</option>
+            if _v is not None: write(_filter(_v, rawExpr='$title')) # from line 22, col 36.
+            write('''</option>
 ''')
             count += 1
-        write(u'''\t\t</select>
+        write('''\t\t</select>
 \t\t</div>
 \t\t\t<span id="toolbar">
 \t\t\t\t<span id="timerbuttons">
 \t\t\t\t\t<button id="timerbutton0" onclick="addTimer(); return false">''')
         _v = VFFSL(SL,"tstrings",True)['add_timer'] # u"$tstrings['add_timer']" on line 29, col 67
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['add_timer']")) # from line 29, col 67.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['add_timer']")) # from line 29, col 67.
+        write('''</button>
 \t\t\t\t\t<button id="timerbutton1" onclick="cleanupTimer(); return false">''')
         _v = VFFSL(SL,"tstrings",True)['cleanup_timer'] # u"$tstrings['cleanup_timer']" on line 30, col 71
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['cleanup_timer']")) # from line 30, col 71.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['cleanup_timer']")) # from line 30, col 71.
+        write('''</button>
 \t\t\t\t\t<button id="timerbutton2" onclick="lastcontenturl=\'\';load_maincontent(\'ajax/timers?sort=''')
         _v = VFFSL(SL,"sort",True) # u'$sort' on line 31, col 94
-        if _v is not None: write(_filter(_v, rawExpr=u'$sort')) # from line 31, col 94.
-        write(u'''\'); return false;">''')
+        if _v is not None: write(_filter(_v, rawExpr='$sort')) # from line 31, col 94.
+        write('''\'); return false;">''')
         _v = VFFSL(SL,"tstrings",True)['refresh_timer'] # u"$tstrings['refresh_timer']" on line 31, col 118
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['refresh_timer']")) # from line 31, col 118.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['refresh_timer']")) # from line 31, col 118.
+        write('''</button>
 \t\t\t\t</span>
 \t\t\t</span>
 \t\t</div>
@@ -149,89 +150,89 @@
 \t\t<div id="timers">
 ''')
         for timer in VFFSL(SL,"timers",True): # generated from line 37, col 3
-            write(u'''\t\t\t<div class="tm_row ui-widget-content ui-state-default" id="''')
+            write('''\t\t\t<div class="tm_row ui-widget-content ui-state-default" id="''')
             _v = VFFSL(SL,"timer.begin",True) # u'$timer.begin' on line 38, col 63
-            if _v is not None: write(_filter(_v, rawExpr=u'$timer.begin')) # from line 38, col 63.
-            write(u'''-''')
+            if _v is not None: write(_filter(_v, rawExpr='$timer.begin')) # from line 38, col 63.
+            write('''-''')
             _v = VFFSL(SL,"timer.end",True) # u'$timer.end' on line 38, col 76
-            if _v is not None: write(_filter(_v, rawExpr=u'$timer.end')) # from line 38, col 76.
-            write(u'''">
+            if _v is not None: write(_filter(_v, rawExpr='$timer.end')) # from line 38, col 76.
+            write('''">
 \t\t\t\t<div class="t_buttons tm_buttons">
 \t\t\t\t\t\t<div>
 ''')
             sref = quote(VFFSL(SL,"timer.serviceref",True), safe=' ~@#$&()*!+=:;,.?/\'')
             tname = quote(VFFSL(SL,"timer.name",True))
-            write(u'''\t\t\t\t\t\t<a href=\'#\' onClick="editTimer(\'''')
+            write('''\t\t\t\t\t\t<a href=\'#\' onClick="editTimer(\'''')
             _v = VFFSL(SL,"sref",True) # u'$sref' on line 43, col 39
-            if _v is not None: write(_filter(_v, rawExpr=u'$sref')) # from line 43, col 39.
-            write(u"""', '""")
+            if _v is not None: write(_filter(_v, rawExpr='$sref')) # from line 43, col 39.
+            write("""', '""")
             _v = VFFSL(SL,"timer.begin",True) # u'$timer.begin' on line 43, col 48
-            if _v is not None: write(_filter(_v, rawExpr=u'$timer.begin')) # from line 43, col 48.
-            write(u"""', '""")
+            if _v is not None: write(_filter(_v, rawExpr='$timer.begin')) # from line 43, col 48.
+            write("""', '""")
             _v = VFFSL(SL,"timer.end",True) # u'$timer.end' on line 43, col 64
-            if _v is not None: write(_filter(_v, rawExpr=u'$timer.end')) # from line 43, col 64.
-            write(u'''\');" title="''')
+            if _v is not None: write(_filter(_v, rawExpr='$timer.end')) # from line 43, col 64.
+            write('''\');" title="''')
             _v = VFFSL(SL,"tstrings",True)['edit_timer'] # u"$tstrings['edit_timer']" on line 43, col 86
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['edit_timer']")) # from line 43, col 86.
-            write(u'''"><div><i class="fa fa-edit"></i></div></a>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['edit_timer']")) # from line 43, col 86.
+            write('''"><div><i class="fa fa-edit"></i></div></a>
 \t\t\t\t\t\t<a href=\'#\' onClick="deleteTimer(\'''')
             _v = VFFSL(SL,"sref",True) # u'$sref' on line 44, col 41
-            if _v is not None: write(_filter(_v, rawExpr=u'$sref')) # from line 44, col 41.
-            write(u"""', '""")
+            if _v is not None: write(_filter(_v, rawExpr='$sref')) # from line 44, col 41.
+            write("""', '""")
             _v = VFFSL(SL,"timer.begin",True) # u'$timer.begin' on line 44, col 50
-            if _v is not None: write(_filter(_v, rawExpr=u'$timer.begin')) # from line 44, col 50.
-            write(u"""', '""")
+            if _v is not None: write(_filter(_v, rawExpr='$timer.begin')) # from line 44, col 50.
+            write("""', '""")
             _v = VFFSL(SL,"timer.end",True) # u'$timer.end' on line 44, col 66
-            if _v is not None: write(_filter(_v, rawExpr=u'$timer.end')) # from line 44, col 66.
-            write(u"""', '""")
+            if _v is not None: write(_filter(_v, rawExpr='$timer.end')) # from line 44, col 66.
+            write("""', '""")
             _v = VFFSL(SL,"tname",True) # u'$tname' on line 44, col 80
-            if _v is not None: write(_filter(_v, rawExpr=u'$tname')) # from line 44, col 80.
-            write(u'''\');" title="''')
+            if _v is not None: write(_filter(_v, rawExpr='$tname')) # from line 44, col 80.
+            write('''\');" title="''')
             _v = VFFSL(SL,"tstrings",True)['delete_timer'] # u"$tstrings['delete_timer']" on line 44, col 98
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['delete_timer']")) # from line 44, col 98.
-            write(u'''"><div><i class="fa fa-trash-o"></i></div></a>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['delete_timer']")) # from line 44, col 98.
+            write('''"><div><i class="fa fa-trash-o"></i></div></a>
 \t\t\t\t\t\t<a href=\'#\' onClick="toggleTimerStatus(\'''')
             _v = VFFSL(SL,"sref",True) # u'$sref' on line 45, col 47
-            if _v is not None: write(_filter(_v, rawExpr=u'$sref')) # from line 45, col 47.
-            write(u"""', '""")
+            if _v is not None: write(_filter(_v, rawExpr='$sref')) # from line 45, col 47.
+            write("""', '""")
             _v = VFFSL(SL,"timer.begin",True) # u'$timer.begin' on line 45, col 56
-            if _v is not None: write(_filter(_v, rawExpr=u'$timer.begin')) # from line 45, col 56.
-            write(u"""', '""")
+            if _v is not None: write(_filter(_v, rawExpr='$timer.begin')) # from line 45, col 56.
+            write("""', '""")
             _v = VFFSL(SL,"timer.end",True) # u'$timer.end' on line 45, col 72
-            if _v is not None: write(_filter(_v, rawExpr=u'$timer.end')) # from line 45, col 72.
-            write(u'''\');" 
+            if _v is not None: write(_filter(_v, rawExpr='$timer.end')) # from line 45, col 72.
+            write('''\');" 
 ''')
             if VFFSL(SL,"timer.disabled",True): # generated from line 46, col 7
-                write(u'''\t\t\t\t\t\ttitle="''')
+                write('''\t\t\t\t\t\ttitle="''')
                 _v = VFFSL(SL,"tstrings",True)['enable_timer'] # u"$tstrings['enable_timer']" on line 47, col 14
-                if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['enable_timer']")) # from line 47, col 14.
-                write(u'''"><div id=\'img-''')
+                if _v is not None: write(_filter(_v, rawExpr="$tstrings['enable_timer']")) # from line 47, col 14.
+                write('''"><div id=\'img-''')
                 _v = VFFSL(SL,"timer.begin",True) # u'$timer.begin' on line 47, col 54
-                if _v is not None: write(_filter(_v, rawExpr=u'$timer.begin')) # from line 47, col 54.
-                write(u'''-''')
+                if _v is not None: write(_filter(_v, rawExpr='$timer.begin')) # from line 47, col 54.
+                write('''-''')
                 _v = VFFSL(SL,"timer.end",True) # u'$timer.end' on line 47, col 67
-                if _v is not None: write(_filter(_v, rawExpr=u'$timer.end')) # from line 47, col 67.
-                write(u'''\'><i data-ref="''')
+                if _v is not None: write(_filter(_v, rawExpr='$timer.end')) # from line 47, col 67.
+                write('''\'><i data-ref="''')
                 _v = VFFSL(SL,"sref",True) # u'$sref' on line 47, col 92
-                if _v is not None: write(_filter(_v, rawExpr=u'$sref')) # from line 47, col 92.
-                write(u'''" class="fa fa-square-o">
+                if _v is not None: write(_filter(_v, rawExpr='$sref')) # from line 47, col 92.
+                write('''" class="fa fa-square-o">
 ''')
             else: # generated from line 48, col 7
-                write(u'''\t\t\t\t\t\ttitle="''')
+                write('''\t\t\t\t\t\ttitle="''')
                 _v = VFFSL(SL,"tstrings",True)['disable_timer'] # u"$tstrings['disable_timer']" on line 49, col 14
-                if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['disable_timer']")) # from line 49, col 14.
-                write(u'''"><div id=\'img-''')
+                if _v is not None: write(_filter(_v, rawExpr="$tstrings['disable_timer']")) # from line 49, col 14.
+                write('''"><div id=\'img-''')
                 _v = VFFSL(SL,"timer.begin",True) # u'$timer.begin' on line 49, col 55
-                if _v is not None: write(_filter(_v, rawExpr=u'$timer.begin')) # from line 49, col 55.
-                write(u'''-''')
+                if _v is not None: write(_filter(_v, rawExpr='$timer.begin')) # from line 49, col 55.
+                write('''-''')
                 _v = VFFSL(SL,"timer.end",True) # u'$timer.end' on line 49, col 68
-                if _v is not None: write(_filter(_v, rawExpr=u'$timer.end')) # from line 49, col 68.
-                write(u'''\'><i data-ref="''')
+                if _v is not None: write(_filter(_v, rawExpr='$timer.end')) # from line 49, col 68.
+                write('''\'><i data-ref="''')
                 _v = VFFSL(SL,"sref",True) # u'$sref' on line 49, col 93
-                if _v is not None: write(_filter(_v, rawExpr=u'$sref')) # from line 49, col 93.
-                write(u'''" class="fa fa-check-square-o">
-''')
-            write(u'''\t\t\t\t\t\t</i></div></a>
+                if _v is not None: write(_filter(_v, rawExpr='$sref')) # from line 49, col 93.
+                write('''" class="fa fa-check-square-o">
+''')
+            write('''\t\t\t\t\t\t</i></div></a>
 \t\t\t\t\t\t</div>
 \t\t\t\t\t</div>
 \t\t\t\t<div class="tm_text">
@@ -239,89 +240,89 @@
 \t\t\t\t\t\t<div class="tm_title">
 \t\t\t\t\t\t\t''')
             _v = VFFSL(SL,"timer.name",True) # u'$timer.name' on line 57, col 8
-            if _v is not None: write(_filter(_v, rawExpr=u'$timer.name')) # from line 57, col 8.
-            write(u'''
+            if _v is not None: write(_filter(_v, rawExpr='$timer.name')) # from line 57, col 8.
+            write('''
 \t\t\t\t\t\t</div>
 \t\t\t\t\t\t''')
             _v = VFFSL(SL,"tstrings",True)[("day_" + (time.strftime("%w", time.localtime(VFFSL(SL,"timer.begin",True)))))] # u'$tstrings[("day_" + (time.strftime("%w", time.localtime($timer.begin))))]' on line 59, col 7
-            if _v is not None: write(_filter(_v, rawExpr=u'$tstrings[("day_" + (time.strftime("%w", time.localtime($timer.begin))))]')) # from line 59, col 7.
-            write(u'''
+            if _v is not None: write(_filter(_v, rawExpr='$tstrings[("day_" + (time.strftime("%w", time.localtime($timer.begin))))]')) # from line 59, col 7.
+            write('''
 \t\t\t\t\t\t''')
             _v = VFFSL(SL,"timer.realbegin",True) # u'$timer.realbegin' on line 60, col 7
-            if _v is not None: write(_filter(_v, rawExpr=u'$timer.realbegin')) # from line 60, col 7.
-            write(u''' - ''')
+            if _v is not None: write(_filter(_v, rawExpr='$timer.realbegin')) # from line 60, col 7.
+            write(''' - ''')
             _v = VFFSL(SL,"timer.realend",True) # u'$timer.realend' on line 60, col 26
-            if _v is not None: write(_filter(_v, rawExpr=u'$timer.realend')) # from line 60, col 26.
-            write(u'''
+            if _v is not None: write(_filter(_v, rawExpr='$timer.realend')) # from line 60, col 26.
+            write('''
 ''')
             if VFFSL(SL,"timer.repeated",True) != 0: # generated from line 61, col 7
-                write(u'''\t\t\t\t\t\t\t<div>
+                write('''\t\t\t\t\t\t\t<div>
 \t\t\t\t\t\t\t\t''')
                 _v = VFFSL(SL,"tstrings",True)['every_timer'] # u"$tstrings['every_timer']" on line 63, col 9
-                if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['every_timer']")) # from line 63, col 9.
-                write(u'''
+                if _v is not None: write(_filter(_v, rawExpr="$tstrings['every_timer']")) # from line 63, col 9.
+                write('''
 ''')
                 flags = VFFSL(SL,"timer.repeated",True)
                 timerDays = []
                 for day in [VFFSL(SL,"tstrings",True)['monday'],VFFSL(SL,"tstrings",True)['tuesday'],VFFSL(SL,"tstrings",True)['wednesday'],VFFSL(SL,"tstrings",True)['thursday'],VFFSL(SL,"tstrings",True)['friday'],VFFSL(SL,"tstrings",True)['saturday'],VFFSL(SL,"tstrings",True)['sunday']]: # generated from line 66, col 8
                     if VFFSL(SL,"flags",True)&1: # generated from line 67, col 9
-                        write(u'''\t\t\t\t\t\t\t\t\t''')
+                        write('''\t\t\t\t\t\t\t\t\t''')
                         _v = VFN(VFFSL(SL,"timerDays",True),"append",False)(VFFSL(SL,"day",True)) # u'$timerDays.append($day)' on line 68, col 10
-                        if _v is not None: write(_filter(_v, rawExpr=u'$timerDays.append($day)')) # from line 68, col 10.
-                        write(u'''
+                        if _v is not None: write(_filter(_v, rawExpr='$timerDays.append($day)')) # from line 68, col 10.
+                        write('''
 ''')
                     flags = VFFSL(SL,"flags",True) >> 1
                 _v = ', '.join(VFFSL(SL,"timerDays",True))
                 if _v is not None: write(_filter(_v))
-                write(u'''\t\t\t\t\t\t\t</div>
-''')
-            write(u'''\t\t\t\t\t\t<div style="font-weight: bold;">
+                write('''\t\t\t\t\t\t\t</div>
+''')
+            write('''\t\t\t\t\t\t<div style="font-weight: bold;">
 \t\t\t\t\t\t\t''')
             _v = VFFSL(SL,"timer.servicename",True) # u'$timer.servicename' on line 76, col 8
-            if _v is not None: write(_filter(_v, rawExpr=u'$timer.servicename')) # from line 76, col 8.
-            write(u'''
+            if _v is not None: write(_filter(_v, rawExpr='$timer.servicename')) # from line 76, col 8.
+            write('''
 \t\t\t\t\t\t</div>
 \t\t\t\t\t</div>
 \t\t\t\t\t<div>
 \t\t\t\t\t\t''')
             _v = VFFSL(SL,"timer.description",True) # u'$timer.description' on line 80, col 7
-            if _v is not None: write(_filter(_v, rawExpr=u'$timer.description')) # from line 80, col 7.
-            write(u'''
+            if _v is not None: write(_filter(_v, rawExpr='$timer.description')) # from line 80, col 7.
+            write('''
 \t\t\t\t\t</div>
 \t\t\t\t\t<div>
 \t\t\t\t\t\t<span class="tm_desc" style="font-weight: bold;">
 ''')
             if VFFSL(SL,"timer.disabled",True): # generated from line 84, col 8
-                write(u'''\t\t\t\t\t\t\t\t''')
+                write('''\t\t\t\t\t\t\t\t''')
                 _v = VFFSL(SL,"tstrings",True)['disabled'] # u"$tstrings['disabled']" on line 85, col 9
-                if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['disabled']")) # from line 85, col 9.
-                write(u'''
+                if _v is not None: write(_filter(_v, rawExpr="$tstrings['disabled']")) # from line 85, col 9.
+                write('''
 ''')
             elif VFFSL(SL,"timer.state",True) == 0: # generated from line 86, col 8
-                write(u'''\t\t\t\t\t\t\t\t''')
+                write('''\t\t\t\t\t\t\t\t''')
                 _v = VFFSL(SL,"tstrings",True)['waiting'] # u"$tstrings['waiting']" on line 87, col 9
-                if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['waiting']")) # from line 87, col 9.
-                write(u'''
+                if _v is not None: write(_filter(_v, rawExpr="$tstrings['waiting']")) # from line 87, col 9.
+                write('''
 ''')
             elif VFFSL(SL,"timer.state",True) == 2: # generated from line 88, col 8
-                write(u'''\t\t\t\t\t\t\t\t''')
+                write('''\t\t\t\t\t\t\t\t''')
                 _v = VFFSL(SL,"tstrings",True)['running'] # u"$tstrings['running']" on line 89, col 9
-                if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['running']")) # from line 89, col 9.
-                write(u'''
+                if _v is not None: write(_filter(_v, rawExpr="$tstrings['running']")) # from line 89, col 9.
+                write('''
 ''')
             elif VFFSL(SL,"timer.state",True) == 3: # generated from line 90, col 8
-                write(u'''\t\t\t\t\t\t\t\t''')
+                write('''\t\t\t\t\t\t\t\t''')
                 _v = VFFSL(SL,"tstrings",True)['finished'] # u"$tstrings['finished']" on line 91, col 9
-                if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['finished']")) # from line 91, col 9.
-                write(u'''
-''')
-            write(u'''\t\t\t\t\t\t</span>
+                if _v is not None: write(_filter(_v, rawExpr="$tstrings['finished']")) # from line 91, col 9.
+                write('''
+''')
+            write('''\t\t\t\t\t\t</span>
 \t\t\t\t\t</div>
 \t\t\t\t</div>
 \t\t\t\t<div style="clear: both;"></div>
 \t\t\t</div>
 ''')
-        write(u'''\t\t</div>
+        write('''\t\t</div>
 \t</div>
 </div>
 <script type="text/javascript">
--- ./plugin/controllers/views/ajax/tv.py	(original)
+++ ./plugin/controllers/views/ajax/tv.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -60,7 +61,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -70,7 +71,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,32 +84,32 @@
         ########################################
         ## START - generated method body
         
-        write(u'''<div id="content_main" class="ui-widget-content"><div id="tvcontentmain"><div id="toolbar-header" class="ui-widget-header">
+        write('''<div id="content_main" class="ui-widget-content"><div id="tvcontentmain"><div id="toolbar-header" class="ui-widget-header">
 <span id="toolbar"><span id="tvbutton">
 <input type="radio" id="btn0" name="tvbutton" /><label for="btn0">''')
         _v = VFFSL(SL,"tstrings",True)['current'] # u"$tstrings['current']" on line 4, col 67
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['current']")) # from line 4, col 67.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['current']")) # from line 4, col 67.
+        write('''</label>
 <input type="radio" id="btn1" name="tvbutton" checked="checked" /><label for="btn1">''')
         _v = VFFSL(SL,"tstrings",True)['bouquets'] # u"$tstrings['bouquets']" on line 5, col 85
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['bouquets']")) # from line 5, col 85.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['bouquets']")) # from line 5, col 85.
+        write('''</label>
 <input type="radio" id="btn2" name="tvbutton" /><label for="btn2">''')
         _v = VFFSL(SL,"tstrings",True)['providers'] # u"$tstrings['providers']" on line 6, col 67
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['providers']")) # from line 6, col 67.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['providers']")) # from line 6, col 67.
+        write('''</label>
 <input type="radio" id="btn3" name="tvbutton" /><label for="btn3">''')
         _v = VFFSL(SL,"tstrings",True)['satellites'] # u"$tstrings['satellites']" on line 7, col 67
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['satellites']")) # from line 7, col 67.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['satellites']")) # from line 7, col 67.
+        write('''</label>
 <input type="radio" id="btn4" name="tvbutton" /><label for="btn4">''')
         _v = VFFSL(SL,"tstrings",True)['all_channels'] # u"$tstrings['all_channels']" on line 8, col 67
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['all_channels']")) # from line 8, col 67.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['all_channels']")) # from line 8, col 67.
+        write('''</label>
 <input type="radio" id="btn5" name="tvbutton" /><label for="btn5">''')
         _v = VFFSL(SL,"tstrings",True)['epg'] # u"$tstrings['epg']" on line 9, col 67
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['epg']")) # from line 9, col 67.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['epg']")) # from line 9, col 67.
+        write('''</label>
 </span></span>
 <div id="expandmepg" onclick="ExpandMEPG();"><i id="expandmepgi" class="fa fa-expand link" aria-hidden="true"></i></div>
 <div id="refreshmepg" onclick="RefreshMEPG(\'tv\');"><i id="refreshmepgi" class="fa fa-refresh link" aria-hidden="true"></i></div>
--- ./plugin/controllers/views/ajax/tvradio.py	(original)
+++ ./plugin/controllers/views/ajax/tvradio.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -60,7 +61,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -70,7 +71,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,44 +84,44 @@
         ########################################
         ## START - generated method body
         
-        write(u'''<div id="content_main" class="ui-widget-content"><div id="tvcontentmain"><div id="toolbar-header" class="ui-widget-header">
+        write('''<div id="content_main" class="ui-widget-content"><div id="tvcontentmain"><div id="toolbar-header" class="ui-widget-header">
 <span id="toolbar"><span id="tvrbtn">
 <input type="radio" id="btn0" name="tvrbtn" /><label for="btn0">''')
         _v = VFFSL(SL,"tstrings",True)['current'] # u"$tstrings['current']" on line 4, col 65
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['current']")) # from line 4, col 65.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['current']")) # from line 4, col 65.
+        write('''</label>
 <input type="radio" id="btn1" name="tvrbtn" checked="checked" /><label for="btn1">''')
         _v = VFFSL(SL,"tstrings",True)['bouquets'] # u"$tstrings['bouquets']" on line 5, col 83
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['bouquets']")) # from line 5, col 83.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['bouquets']")) # from line 5, col 83.
+        write('''</label>
 <input type="radio" id="btn2" name="tvrbtn" /><label for="btn2">''')
         _v = VFFSL(SL,"tstrings",True)['providers'] # u"$tstrings['providers']" on line 6, col 65
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['providers']")) # from line 6, col 65.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['providers']")) # from line 6, col 65.
+        write('''</label>
 <input type="radio" id="btn3" name="tvrbtn" /><label for="btn3">''')
         _v = VFFSL(SL,"tstrings",True)['satellites'] # u"$tstrings['satellites']" on line 7, col 65
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['satellites']")) # from line 7, col 65.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['satellites']")) # from line 7, col 65.
+        write('''</label>
 <input type="radio" id="btn4" name="tvrbtn" /><label for="btn4">''')
         _v = VFFSL(SL,"tstrings",True)['all_channels'] # u"$tstrings['all_channels']" on line 8, col 65
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['all_channels']")) # from line 8, col 65.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['all_channels']")) # from line 8, col 65.
+        write('''</label>
 <input type="radio" id="btn5" name="tvrbtn" /><label for="btn5">''')
         _v = VFFSL(SL,"tstrings",True)['epg'] # u"$tstrings['epg']" on line 9, col 65
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['epg']")) # from line 9, col 65.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['epg']")) # from line 9, col 65.
+        write('''</label>
 </span></span>
 <div id="expandmepg" onclick="ExpandMEPG();"><i id="expandmepgi" class="fa fa-expand link" aria-hidden="true"></i></div>
 <div id="refreshmepg" onclick="RefreshMEPG(\'''')
         _v = VFFSL(SL,"epgmode",True) # u'$epgmode' on line 12, col 45
-        if _v is not None: write(_filter(_v, rawExpr=u'$epgmode')) # from line 12, col 45.
-        write(u'''\');"><i id="refreshmepgi" class="fa fa-refresh link" aria-hidden="true"></i></div>
+        if _v is not None: write(_filter(_v, rawExpr='$epgmode')) # from line 12, col 45.
+        write('''\');"><i id="refreshmepgi" class="fa fa-refresh link" aria-hidden="true"></i></div>
 </div><div id="tvcontent"></div></div></div>
 <script type="text/javascript">
 $(function() { InitTVRatio(\'''')
         _v = VFFSL(SL,"epgmode",True) # u'$epgmode' on line 15, col 30
-        if _v is not None: write(_filter(_v, rawExpr=u'$epgmode')) # from line 15, col 30.
-        write(u"""');});
+        if _v is not None: write(_filter(_v, rawExpr='$epgmode')) # from line 15, col 30.
+        write("""');});
 </script>
 """)
         
--- ./plugin/controllers/views/ajax/webtv.py	(original)
+++ ./plugin/controllers/views/ajax/webtv.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -60,7 +61,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -70,7 +71,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -84,13 +85,13 @@
         ## START - generated method body
         
         _orig_filter_46043640 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<style>
+        write('''<style>
 #streamchannels-menu {max-height: 300px;}
 </style>
 <div id="content_main" style="min-height: 550px;background-image:none;" class="ui-widget-content">
@@ -106,10 +107,10 @@
 \t\t\t\t</div>
 ''')
         if VFFSL(SL,"vxgenabled",True): # generated from line 17, col 5
-            write(u'''\t\t\t\t<div id="vxgPlayer" style="margin:0 auto 0 auto;width:640px;height:500px;display:none;">
-\t\t\t\t</div>
-''')
-        write(u'''\t\t\t\t<div style="display:table;margin:10 auto 10 auto;">
+            write('''\t\t\t\t<div id="vxgPlayer" style="margin:0 auto 0 auto;width:640px;height:500px;display:none;">
+\t\t\t\t</div>
+''')
+        write('''\t\t\t\t<div style="display:table;margin:10 auto 10 auto;">
 \t\t\t\t\t<span id="plbuttons" style="margin-right:10px;">
 \t\t\t\t\t<input type="radio" id="plbtn_vlc" name="rplbutton" /><label id="lplbtn_vlc" for="plbtn_vlc">VLC</label>
 \t\t\t\t\t<input type="radio" id="plbtn_vxg" name="rplbutton" /><label id="lplbtn_vxg" for="plbtn_vxg">VXG</label>
@@ -135,8 +136,8 @@
 \t\t\t\t\t\t\t<label id="wtranscodingl" for="wtranscoding">Transcoding</label>
 \t\t\t\t\t\t\t<input type="checkbox" data-port="''')
         _v = VFFSL(SL,"transcoder_port",True) # u'$transcoder_port' on line 45, col 42
-        if _v is not None: write(_filter(_v, rawExpr=u'$transcoder_port')) # from line 45, col 42.
-        write(u'''" name="wtranscoding" id="wtranscoding">
+        if _v is not None: write(_filter(_v, rawExpr='$transcoder_port')) # from line 45, col 42.
+        write('''" name="wtranscoding" id="wtranscoding">
 \t\t\t\t\t\t\t<button id="btnstop" style="margin-left:5px;">Stop</button>
 \t\t\t\t\t\t\t<button id="btnplay" style="margin-left:5px;">Play</button>
 \t\t\t\t\t\t</div>
@@ -147,12 +148,12 @@
 \t\t\t\t\t<span id="srcbuttons" style="margin-right:10px;">
 \t\t\t\t\t<input type="radio" id="sbtn0" name="srcbutton" checked="checked" /><label for="sbtn0">''')
         _v = VFFSL(SL,"tstrings",True)['channels'] # u"$tstrings['channels']" on line 54, col 93
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['channels']")) # from line 54, col 93.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['channels']")) # from line 54, col 93.
+        write('''</label>
 \t\t\t\t\t<input type="radio" id="sbtn1" name="srcbutton" /><label for="sbtn1">''')
         _v = VFFSL(SL,"tstrings",True)['movies'] # u"$tstrings['movies']" on line 55, col 75
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['movies']")) # from line 55, col 75.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['movies']")) # from line 55, col 75.
+        write('''</label>
 \t\t\t\t\t</span>
 \t\t\t\t\t<span style="display:inline-block;">
 \t\t\t\t\t<select name="streamchannels" id="streamchannels" tabindex="16"></select>
@@ -166,19 +167,19 @@
         sorttypes = ['name','named','date','dated']
         sortimg = ['fa-sort-alpha-asc','fa-sort-alpha-desc','fa-sort-numeric-asc','fa-sort-numeric-desc']
         for title in VFFSL(SL,"sortnames",True): # generated from line 67, col 6
-            write(u'''\t\t\t\t\t\t<option value="''')
+            write('''\t\t\t\t\t\t<option value="''')
             _v = VFFSL(SL,"sorttypes",True)[VFFSL(SL,"count",True)] # u'$sorttypes[$count]' on line 68, col 22
-            if _v is not None: write(_filter(_v, rawExpr=u'$sorttypes[$count]')) # from line 68, col 22.
-            write(u'''" data-class="''')
+            if _v is not None: write(_filter(_v, rawExpr='$sorttypes[$count]')) # from line 68, col 22.
+            write('''" data-class="''')
             _v = VFFSL(SL,"sortimg",True)[VFFSL(SL,"count",True)] # u'$sortimg[$count]' on line 68, col 54
-            if _v is not None: write(_filter(_v, rawExpr=u'$sortimg[$count]')) # from line 68, col 54.
-            write(u'''">''')
+            if _v is not None: write(_filter(_v, rawExpr='$sortimg[$count]')) # from line 68, col 54.
+            write('''">''')
             _v = VFFSL(SL,"title",True) # u'$title' on line 68, col 72
-            if _v is not None: write(_filter(_v, rawExpr=u'$title')) # from line 68, col 72.
-            write(u'''</option>
+            if _v is not None: write(_filter(_v, rawExpr='$title')) # from line 68, col 72.
+            write('''</option>
 ''')
             count += 1
-        write(u'''\t\t\t\t\t</select>
+        write('''\t\t\t\t\t</select>
 \t\t\t\t\t</span>
 \t\t\t\t\t</div>
 \t\t\t\t</div>
@@ -187,22 +188,22 @@
 \t\t</div>
 ''')
         if VFFSL(SL,"vxgenabled",True): # generated from line 78, col 1
-            write(u'''<script type="text/javascript" src="/vxg/vxgplayer-1.8.51.min.js"></script>
-''')
-        write(u'''<script type="text/javascript" src="/webtv/webtv.js"></script>
+            write('''<script type="text/javascript" src="/vxg/vxgplayer-1.8.51.min.js"></script>
+''')
+        write('''<script type="text/javascript" src="/webtv/webtv.js"></script>
 <script type="text/javascript">
 $(function() { var playerObj=new PlayerObj(); playerObj.setup((\'''')
         _v = VFFSL(SL,"vxgenabled",True) # u'$vxgenabled' on line 83, col 66
-        if _v is not None: write(_filter(_v, rawExpr=u'$vxgenabled')) # from line 83, col 66.
-        write(u"""' === 'True'),'""")
+        if _v is not None: write(_filter(_v, rawExpr='$vxgenabled')) # from line 83, col 66.
+        write("""' === 'True'),'""")
         _v = VFFSL(SL,"auth",True) # u'$auth' on line 83, col 92
-        if _v is not None: write(_filter(_v, rawExpr=u'$auth')) # from line 83, col 92.
-        write(u'''\')});
+        if _v is not None: write(_filter(_v, rawExpr='$auth')) # from line 83, col 92.
+        write('''\')});
 </script>
 <link rel="stylesheet" type="text/css" href="/css/chosen.min.css" />
 ''')
         if VFFSL(SL,"vxgenabled",True): # generated from line 86, col 1
-            write(u'''<link rel="stylesheet" type="text/css" href="/vxg/vxgplayer-1.8.51.min.css" />
+            write('''<link rel="stylesheet" type="text/css" href="/vxg/vxgplayer-1.8.51.min.css" />
 <style>
 .vxgplayer-error { margin-left:0px;}
 </style>
--- ./plugin/controllers/views/bouqueteditor/web/getprotectionsettings.py	(original)
+++ ./plugin/controllers/views/bouqueteditor/web/getprotectionsettings.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,31 +84,31 @@
         ## START - generated method body
         
         _orig_filter_97733406 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2protection>
 \t<e2serviceprotection>
 \t\t<e2serviceprotectionconfigured>''')
         _v = VFFSL(SL,"ps.Configured",True) # u'$ps.Configured' on line 5, col 34
-        if _v is not None: write(_filter(_v, rawExpr=u'$ps.Configured')) # from line 5, col 34.
-        write(u'''</e2serviceprotectionconfigured>
+        if _v is not None: write(_filter(_v, rawExpr='$ps.Configured')) # from line 5, col 34.
+        write('''</e2serviceprotectionconfigured>
 \t\t<e2serviceprotectiontype>''')
         _v = VFFSL(SL,"ps.Type",True) # u'$ps.Type' on line 6, col 28
-        if _v is not None: write(_filter(_v, rawExpr=u'$ps.Type')) # from line 6, col 28.
-        write(u'''</e2serviceprotectiontype>
+        if _v is not None: write(_filter(_v, rawExpr='$ps.Type')) # from line 6, col 28.
+        write('''</e2serviceprotectiontype>
 \t\t<e2serviceprotectionsetuppinactive>''')
         _v = VFFSL(SL,"ps.SetupPinActive",True) # u'$ps.SetupPinActive' on line 7, col 38
-        if _v is not None: write(_filter(_v, rawExpr=u'$ps.SetupPinActive')) # from line 7, col 38.
-        write(u'''</e2serviceprotectionsetuppinactive>
+        if _v is not None: write(_filter(_v, rawExpr='$ps.SetupPinActive')) # from line 7, col 38.
+        write('''</e2serviceprotectionsetuppinactive>
 \t\t<e2serviceprotectionsetuppin>''')
         _v = VFFSL(SL,"ps.SetupPin",True) # u'$ps.SetupPin' on line 8, col 32
-        if _v is not None: write(_filter(_v, rawExpr=u'$ps.SetupPin')) # from line 8, col 32.
-        write(u'''</e2serviceprotectionsetuppin>
+        if _v is not None: write(_filter(_v, rawExpr='$ps.SetupPin')) # from line 8, col 32.
+        write('''</e2serviceprotectionsetuppin>
 \t</e2serviceprotection>
 </e2protection>
 ''')
--- ./plugin/controllers/views/bouqueteditor/web/getservices.py	(original)
+++ ./plugin/controllers/views/bouqueteditor/web/getservices.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,54 +84,54 @@
         ## START - generated method body
         
         _orig_filter_40725966 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2servicelist>
 ''')
         for service in VFFSL(SL,"services",True): # generated from line 4, col 2
-            write(u'''\t<e2service>
+            write('''\t<e2service>
 \t\t<e2servicereference>''')
             _v = VFFSL(SL,"service.servicereference",True) # u'$service.servicereference' on line 6, col 23
-            if _v is not None: write(_filter(_v, rawExpr=u'$service.servicereference')) # from line 6, col 23.
-            write(u'''</e2servicereference>
+            if _v is not None: write(_filter(_v, rawExpr='$service.servicereference')) # from line 6, col 23.
+            write('''</e2servicereference>
 \t\t<e2servicename>''')
             _v = VFFSL(SL,"service.servicename",True) # u'$service.servicename' on line 7, col 18
-            if _v is not None: write(_filter(_v, rawExpr=u'$service.servicename')) # from line 7, col 18.
-            write(u'''</e2servicename>
+            if _v is not None: write(_filter(_v, rawExpr='$service.servicename')) # from line 7, col 18.
+            write('''</e2servicename>
 \t\t<e2serviceisgroup>''')
             _v = VFFSL(SL,"service.isgroup",True) # u'$service.isgroup' on line 8, col 21
-            if _v is not None: write(_filter(_v, rawExpr=u'$service.isgroup')) # from line 8, col 21.
-            write(u'''</e2serviceisgroup>
+            if _v is not None: write(_filter(_v, rawExpr='$service.isgroup')) # from line 8, col 21.
+            write('''</e2serviceisgroup>
 \t\t<e2serviceismarker>''')
             _v = VFFSL(SL,"service.ismarker",True) # u'$service.ismarker' on line 9, col 22
-            if _v is not None: write(_filter(_v, rawExpr=u'$service.ismarker')) # from line 9, col 22.
-            write(u'''</e2serviceismarker>
+            if _v is not None: write(_filter(_v, rawExpr='$service.ismarker')) # from line 9, col 22.
+            write('''</e2serviceismarker>
 \t\t<e2serviceisprotected>''')
             _v = VFFSL(SL,"service.isprotected",True) # u'$service.isprotected' on line 10, col 25
-            if _v is not None: write(_filter(_v, rawExpr=u'$service.isprotected')) # from line 10, col 25.
-            write(u'''</e2serviceisprotected>
+            if _v is not None: write(_filter(_v, rawExpr='$service.isprotected')) # from line 10, col 25.
+            write('''</e2serviceisprotected>
 ''')
             if VFFSL(SL,"service.isgroup",True) == 1: # generated from line 11, col 3
                 for gservice in VFFSL(SL,"service.members",True): # generated from line 12, col 4
-                    write(u'''\t\t\t<e2servicemember>
+                    write('''\t\t\t<e2servicemember>
 \t\t\t\t<e2servicereference>''')
                     _v = VFFSL(SL,"gservice.servicereference",True) # u'$gservice.servicereference' on line 14, col 25
-                    if _v is not None: write(_filter(_v, rawExpr=u'$gservice.servicereference')) # from line 14, col 25.
-                    write(u'''</e2servicereference>
+                    if _v is not None: write(_filter(_v, rawExpr='$gservice.servicereference')) # from line 14, col 25.
+                    write('''</e2servicereference>
 \t\t\t\t<e2servicename>''')
                     _v = VFFSL(SL,"gservice.servicename",True) # u'$gservice.servicename' on line 15, col 20
-                    if _v is not None: write(_filter(_v, rawExpr=u'$gservice.servicename')) # from line 15, col 20.
-                    write(u'''</e2servicename>
+                    if _v is not None: write(_filter(_v, rawExpr='$gservice.servicename')) # from line 15, col 20.
+                    write('''</e2servicename>
 \t\t\t</e2servicemember>
 ''')
-            write(u'''\t</e2service>
+            write('''\t</e2service>
 ''')
-        write(u'''</e2servicelist>
+        write('''</e2servicelist>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_40725966
         
--- ./plugin/controllers/views/mobile/about.py	(original)
+++ ./plugin/controllers/views/mobile/about.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -60,7 +61,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -70,7 +71,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,30 +84,30 @@
         ########################################
         ## START - generated method body
         
-        write(u'''<body>
+        write('''<body>
 \t<div data-role="page">
 \t\t<div id="header">
 \t\t\t<div class="button" onClick="history.back()">''')
         _v = VFFSL(SL,"tstrings",True)['back'] # u"$tstrings['back']" on line 5, col 49
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['back']")) # from line 5, col 49.
-        write(u'''</div>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['back']")) # from line 5, col 49.
+        write('''</div>
 \t\t\t<h1><a style="color:#FFF;text-decoration:none;" href=\'/mobile\'>OpenWebif</a></h1>
 \t\t</div>
 \t\t<div id="contentContainer">
 \t\t\t<div id="mainContent" style="text-align: center;">
 \t\t\t\t<h3>''')
         _v = VFFSL(SL,"tstrings",True)['openwebif_header'] # u"$tstrings['openwebif_header']" on line 10, col 9
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['openwebif_header']")) # from line 10, col 9.
-        write(u'''</h3>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['openwebif_header']")) # from line 10, col 9.
+        write('''</h3>
 \t\t\t\t<h3>''')
         _v = VFFSL(SL,"tstrings",True)['site_source'] # u"$tstrings['site_source']" on line 11, col 9
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['site_source']")) # from line 11, col 9.
-        write(u''': <a href="https://github.com/E2OpenPlugins/e2openplugin-OpenWebif">Github</a></h3>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['site_source']")) # from line 11, col 9.
+        write(''': <a href="https://github.com/E2OpenPlugins/e2openplugin-OpenWebif">Github</a></h3>
 \t\t\t\t<br>
 \t\t\t\t<h1>''')
         _v = VFFSL(SL,"tstrings",True)['authors'] # u"$tstrings['authors']" on line 13, col 9
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['authors']")) # from line 13, col 9.
-        write(u'''</h1>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['authors']")) # from line 13, col 9.
+        write('''</h1>
 \t\t\t\t<div style="margin:15 0;">
 \t\t\t\t\tmeo aka bacicciosat<br>
 \t\t\t\t\tskaman<br>
@@ -115,16 +116,16 @@
 \t\t\t\t</div>
 \t\t\t\t<h1>''')
         _v = VFFSL(SL,"tstrings",True)['javalib'] # u"$tstrings['javalib']" on line 20, col 9
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['javalib']")) # from line 20, col 9.
-        write(u'''</h1>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['javalib']")) # from line 20, col 9.
+        write('''</h1>
 \t\t\t\t<div style="margin:15 0;">
 \t\t\t\t\t<a href="http://jqueryui.com/">jQuery UI</a><br>
 \t\t\t\t\t<a href="http://jquerymobile.com/">jQuery Mobile</a>
 \t\t\t\t</div>
 \t\t\t\t<h1>''')
         _v = VFFSL(SL,"tstrings",True)['template_engine'] # u"$tstrings['template_engine']" on line 25, col 9
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['template_engine']")) # from line 25, col 9.
-        write(u'''</h1>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['template_engine']")) # from line 25, col 9.
+        write('''</h1>
 \t\t\t\t<div style="margin:15 0;">
 \t\t\t\t\t<a href="http://www.cheetahtemplate.org/">Cheetah</a>
 \t\t\t\t</div>
@@ -162,13 +163,13 @@
 \t\t\t\t</div>
 \t\t\t\t<h1>''')
         _v = VFFSL(SL,"tstrings",True)['license'] # u"$tstrings['license']" on line 61, col 9
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['license']")) # from line 61, col 9.
-        write(u'''</h1>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['license']")) # from line 61, col 9.
+        write('''</h1>
 \t\t\t\t<div style="margin:15 0;">
 \t\t\t\t''')
         _v = VFFSL(SL,"tstrings",True)['license_text'] # u"$tstrings['license_text']" on line 63, col 5
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['license_text']")) # from line 63, col 5.
-        write(u'''
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['license_text']")) # from line 63, col 5.
+        write('''
 \t\t\t\t</div>
 \t\t\t</div>
 \t\t</div>
@@ -176,8 +177,8 @@
 \t\t\t<p>OpenWebif Mobile</p>
 \t\t\t<a onclick="document.location.href=\'/index?mode=fullpage\';return false;" href="#">''')
         _v = VFFSL(SL,"tstrings",True)['show_full_openwebif'] # u"$tstrings['show_full_openwebif']" on line 69, col 86
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['show_full_openwebif']")) # from line 69, col 86.
-        write(u'''</a>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['show_full_openwebif']")) # from line 69, col 86.
+        write('''</a>
 \t\t</div>
 \t</div>
  </body>
--- ./plugin/controllers/views/mobile/bouquets.py	(original)
+++ ./plugin/controllers/views/mobile/bouquets.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -61,7 +62,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -71,7 +72,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -84,39 +85,39 @@
         ########################################
         ## START - generated method body
         
-        write(u'''<body>
+        write('''<body>
 \t<div data-role="page">
 \t\t<div id="header">
 \t\t\t<div class="button" onClick="history.back()">''')
         _v = VFFSL(SL,"tstrings",True)['back'] # u"$tstrings['back']" on line 5, col 49
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['back']")) # from line 5, col 49.
-        write(u'''</div>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['back']")) # from line 5, col 49.
+        write('''</div>
 \t\t\t<h1><a style="color:#FFF;text-decoration:none;" href=\'/mobile\'>OpenWebif</a></h1>
 \t\t</div>
 \t\t<div id="contentContainer">
 \t\t\t<ul data-role="listview" data-inset="true" data-theme="d">
 \t\t\t\t<li data-role="list-divider" role="heading" data-theme="b">''')
         _v = VFFSL(SL,"tstrings",True)['bouquets'] # u"$tstrings['bouquets']" on line 10, col 64
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['bouquets']")) # from line 10, col 64.
-        write(u'''</li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['bouquets']")) # from line 10, col 64.
+        write('''</li>
 ''')
         for bouquet in VFFSL(SL,"bouquets",True): # generated from line 12, col 5
-            write(u'''\t\t\t\t<li><a href="/mobile/channels?id=''')
+            write('''\t\t\t\t<li><a href="/mobile/channels?id=''')
             _v = VFFSL(SL,"quote",False)(VFFSL(SL,"bouquet",True)[0]) # u'$quote($bouquet[0])' on line 13, col 38
-            if _v is not None: write(_filter(_v, rawExpr=u'$quote($bouquet[0])')) # from line 13, col 38.
-            write(u'''">''')
+            if _v is not None: write(_filter(_v, rawExpr='$quote($bouquet[0])')) # from line 13, col 38.
+            write('''">''')
             _v = VFFSL(SL,"bouquet",True)[1] # u'$bouquet[1]' on line 13, col 59
-            if _v is not None: write(_filter(_v, rawExpr=u'$bouquet[1]')) # from line 13, col 59.
-            write(u'''</a></li>
+            if _v is not None: write(_filter(_v, rawExpr='$bouquet[1]')) # from line 13, col 59.
+            write('''</a></li>
 ''')
-        write(u'''\t\t\t</ul>
+        write('''\t\t\t</ul>
 \t\t</div>
 \t\t<div id="footer">
 \t\t\t<p>OpenWebif Mobile</p>
 \t\t\t<a onclick="document.location.href=\'/index?mode=fullpage\';return false;" href="#">''')
         _v = VFFSL(SL,"tstrings",True)['show_full_openwebif'] # u"$tstrings['show_full_openwebif']" on line 19, col 86
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['show_full_openwebif']")) # from line 19, col 86.
-        write(u'''</a>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['show_full_openwebif']")) # from line 19, col 86.
+        write('''</a>
 \t\t</div>
 \t</div>
 </body>
--- ./plugin/controllers/views/mobile/channelinfo.py	(original)
+++ ./plugin/controllers/views/mobile/channelinfo.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -61,7 +62,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -71,7 +72,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -84,135 +85,135 @@
         ########################################
         ## START - generated method body
         
-        write(u'''<body>
+        write('''<body>
 \t<div data-role="page">
 \t\t<div id="header">
 \t\t\t<div class="button" onClick="history.back()">''')
         _v = VFFSL(SL,"tstrings",True)['back'] # u"$tstrings['back']" on line 6, col 49
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['back']")) # from line 6, col 49.
-        write(u'''</div>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['back']")) # from line 6, col 49.
+        write('''</div>
 \t\t\t<h1><a style="color:#FFF;text-decoration:none;" href=\'/mobile\'>OpenWebif</a></h1>
 ''')
         link = quote(VFFSL(SL,"channelinfo.sref",True), safe=' ~@#$&()*!+=:;,.?/\'')
-        write(u'''\t\t\t<div class="button" style="right:5px;left:auto;" onClick="zapChannel(\'''')
+        write('''\t\t\t<div class="button" style="right:5px;left:auto;" onClick="zapChannel(\'''')
         _v = VFFSL(SL,"link",True) # u'$link' on line 9, col 74
-        if _v is not None: write(_filter(_v, rawExpr=u'$link')) # from line 9, col 74.
-        write(u'''\');return false;">''')
+        if _v is not None: write(_filter(_v, rawExpr='$link')) # from line 9, col 74.
+        write('''\');return false;">''')
         _v = VFFSL(SL,"tstrings",True)['zap'] # u"$tstrings['zap']" on line 9, col 97
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['zap']")) # from line 9, col 97.
-        write(u'''</div>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['zap']")) # from line 9, col 97.
+        write('''</div>
 \t\t</div>
 \t\t<div id="mainContent" class="ui-corner-all">
 \t\t\t<table width="100%" border="0" cellspacing="1" cellpadding="5">
 \t\t\t\t\t\t<tr>
 \t\t\t\t\t\t\t<th colspan="3" class="ui-btn-up-b" style="text-align: left;">''')
         _v = VFFSL(SL,"tstrings",True)['service'] # u"$tstrings['service']" on line 14, col 70
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['service']")) # from line 14, col 70.
-        write(u'''</th>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['service']")) # from line 14, col 70.
+        write('''</th>
 \t\t\t\t\t\t</tr>
 \t\t\t\t\t\t<tr style="background-color:  #f0f7fc;">
 \t\t\t\t\t\t\t<td width="200"><img src="''')
         _v = VFFSL(SL,"channelinfo.picon",True) # u'$channelinfo.picon' on line 17, col 34
-        if _v is not None: write(_filter(_v, rawExpr=u'$channelinfo.picon')) # from line 17, col 34.
-        write(u'''" border="0" alt="" style="max-width:100px"></td>
+        if _v is not None: write(_filter(_v, rawExpr='$channelinfo.picon')) # from line 17, col 34.
+        write('''" border="0" alt="" style="max-width:100px"></td>
 \t\t\t\t\t\t\t<td width="100%" valign="top">
 \t\t\t\t\t\t\t<strong>''')
         _v = VFFSL(SL,"channelinfo.sname",True) # u'$channelinfo.sname' on line 19, col 16
-        if _v is not None: write(_filter(_v, rawExpr=u'$channelinfo.sname')) # from line 19, col 16.
-        write(u'''</strong><br />
+        if _v is not None: write(_filter(_v, rawExpr='$channelinfo.sname')) # from line 19, col 16.
+        write('''</strong><br />
 ''')
         if VFFSL(SL,"channelinfo.title",True): # generated from line 20, col 8
-            write(u'''\t\t\t\t\t\t\t\t''')
+            write('''\t\t\t\t\t\t\t\t''')
             _v = VFFSL(SL,"channelinfo.title",True) # u'$channelinfo.title' on line 21, col 9
-            if _v is not None: write(_filter(_v, rawExpr=u'$channelinfo.title')) # from line 21, col 9.
-            write(u'''<br />
+            if _v is not None: write(_filter(_v, rawExpr='$channelinfo.title')) # from line 21, col 9.
+            write('''<br />
 \t\t\t\t\t\t\t\t''')
             _v = VFFSL(SL,"channelinfo.begin",True) # u'$channelinfo.begin' on line 22, col 9
-            if _v is not None: write(_filter(_v, rawExpr=u'$channelinfo.begin')) # from line 22, col 9.
-            write(u'''-''')
+            if _v is not None: write(_filter(_v, rawExpr='$channelinfo.begin')) # from line 22, col 9.
+            write('''-''')
             _v = VFFSL(SL,"channelinfo.end",True) # u'$channelinfo.end' on line 22, col 28
-            if _v is not None: write(_filter(_v, rawExpr=u'$channelinfo.end')) # from line 22, col 28.
-            write(u''' (''')
+            if _v is not None: write(_filter(_v, rawExpr='$channelinfo.end')) # from line 22, col 28.
+            write(''' (''')
             _v = VFFSL(SL,"channelinfo.duration",True) # u'$channelinfo.duration' on line 22, col 46
-            if _v is not None: write(_filter(_v, rawExpr=u'$channelinfo.duration')) # from line 22, col 46.
-            write(u''' min)<br />
-''')
-        write(u'''\t\t\t\t\t\t\t</td>
+            if _v is not None: write(_filter(_v, rawExpr='$channelinfo.duration')) # from line 22, col 46.
+            write(''' min)<br />
+''')
+        write('''\t\t\t\t\t\t\t</td>
 \t\t\t\t\t\t</tr>
 \t\t\t\t\t\t<tr>
 \t\t\t\t\t\t\t<th colspan="2" class="ui-btn-up-b" style="text-align: left;">''')
         _v = VFFSL(SL,"tstrings",True)['current_event'] # u"$tstrings['current_event']" on line 27, col 70
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['current_event']")) # from line 27, col 70.
-        write(u'''</th>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['current_event']")) # from line 27, col 70.
+        write('''</th>
 \t\t\t\t\t\t</tr>
 ''')
         if 'shortdesc' in VFFSL(SL,"channelinfo",True): # generated from line 29, col 7
-            write(u'''\t\t\t\t\t\t<tr style="background-color:  #f0f7fc;">
+            write('''\t\t\t\t\t\t<tr style="background-color:  #f0f7fc;">
 \t\t\t\t\t\t\t<td colspan="2">''')
             _v = VFFSL(SL,"channelinfo.shortdesc",True) # u'$channelinfo.shortdesc' on line 31, col 24
-            if _v is not None: write(_filter(_v, rawExpr=u'$channelinfo.shortdesc')) # from line 31, col 24.
-            write(u'''</td>
+            if _v is not None: write(_filter(_v, rawExpr='$channelinfo.shortdesc')) # from line 31, col 24.
+            write('''</td>
 \t\t\t\t\t\t</tr>
 ''')
         if 'longdesc' in VFFSL(SL,"channelinfo",True): # generated from line 34, col 7
-            write(u'''\t\t\t\t\t\t<tr style="background-color:  #f0f7fc;">
+            write('''\t\t\t\t\t\t<tr style="background-color:  #f0f7fc;">
 \t\t\t\t\t\t\t<td colspan="2">''')
             _v = VFFSL(SL,"channelinfo.longdesc",True) # u'$channelinfo.longdesc' on line 36, col 24
-            if _v is not None: write(_filter(_v, rawExpr=u'$channelinfo.longdesc')) # from line 36, col 24.
-            write(u'''</td>
-\t\t\t\t\t\t</tr>
-''')
-        write(u'''\t\t\t</table>
+            if _v is not None: write(_filter(_v, rawExpr='$channelinfo.longdesc')) # from line 36, col 24.
+            write('''</td>
+\t\t\t\t\t\t</tr>
+''')
+        write('''\t\t\t</table>
 \t\t</div>
 ''')
         if VFFSL(SL,"channelepg",True): # generated from line 41, col 3
-            write(u'''\t\t<div id="contentContainer">
+            write('''\t\t<div id="contentContainer">
 \t\t\t<ul data-role="listview" data-inset="true" data-theme="d">
 \t\t\t\t<li data-role="list-divider" role="heading" data-theme="b">''')
             _v = VFFSL(SL,"tstrings",True)['upcoming_events'] # u"$tstrings['upcoming_events']" on line 44, col 64
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['upcoming_events']")) # from line 44, col 64.
-            write(u'''</li>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['upcoming_events']")) # from line 44, col 64.
+            write('''</li>
 ''')
             date = ""
             for event in VFFSL(SL,"channelepg",True): # generated from line 46, col 5
                 if VFFSL(SL,"date",True) != VFFSL(SL,"event.date",True): # generated from line 47, col 6
-                    write(u'''\t\t\t\t\t\t<li data-role="list-divider" role="heading" data-theme="b">''')
+                    write('''\t\t\t\t\t\t<li data-role="list-divider" role="heading" data-theme="b">''')
                     _v = VFFSL(SL,"event.date",True) # u'$event.date' on line 48, col 66
-                    if _v is not None: write(_filter(_v, rawExpr=u'$event.date')) # from line 48, col 66.
-                    write(u'''</li>
+                    if _v is not None: write(_filter(_v, rawExpr='$event.date')) # from line 48, col 66.
+                    write('''</li>
 ''')
                     date = VFFSL(SL,"event.date",True)
-                write(u'''\t\t\t\t<li style="padding: 3px;">
+                write('''\t\t\t\t<li style="padding: 3px;">
 \t\t\t\t\t<a href="/mobile/eventview?eventid=''')
                 _v = VFFSL(SL,"event.id",True) # u'$event.id' on line 52, col 41
-                if _v is not None: write(_filter(_v, rawExpr=u'$event.id')) # from line 52, col 41.
-                write(u'''&eventref=''')
+                if _v is not None: write(_filter(_v, rawExpr='$event.id')) # from line 52, col 41.
+                write('''&eventref=''')
                 _v = VFFSL(SL,"event.sref",True) # u'$event.sref' on line 52, col 60
-                if _v is not None: write(_filter(_v, rawExpr=u'$event.sref')) # from line 52, col 60.
-                write(u'''" style="padding: 3px;">
+                if _v is not None: write(_filter(_v, rawExpr='$event.sref')) # from line 52, col 60.
+                write('''" style="padding: 3px;">
 \t\t\t\t\t\t<h3>''')
                 _v = VFFSL(SL,"event.title",True) # u'$event.title' on line 53, col 11
-                if _v is not None: write(_filter(_v, rawExpr=u'$event.title')) # from line 53, col 11.
-                write(u'''</h3>
+                if _v is not None: write(_filter(_v, rawExpr='$event.title')) # from line 53, col 11.
+                write('''</h3>
 \t\t\t\t\t\t<p>''')
                 _v = VFFSL(SL,"event.begin",True) # u'$event.begin' on line 54, col 10
-                if _v is not None: write(_filter(_v, rawExpr=u'$event.begin')) # from line 54, col 10.
-                write(u''' - ''')
+                if _v is not None: write(_filter(_v, rawExpr='$event.begin')) # from line 54, col 10.
+                write(''' - ''')
                 _v = VFFSL(SL,"event.end",True) # u'$event.end' on line 54, col 25
-                if _v is not None: write(_filter(_v, rawExpr=u'$event.end')) # from line 54, col 25.
-                write(u'''</p>
+                if _v is not None: write(_filter(_v, rawExpr='$event.end')) # from line 54, col 25.
+                write('''</p>
 \t\t\t\t\t</a>
 \t\t\t\t</li>
 ''')
-            write(u'''\t\t\t</ul>
-\t\t</div>
-''')
-        write(u'''\t\t<div id="footer">
+            write('''\t\t\t</ul>
+\t\t</div>
+''')
+        write('''\t\t<div id="footer">
 \t\t\t<p>OpenWebif Mobile</p>
 \t\t\t<a onclick="document.location.href=\'/index?mode=fullpage\';return false;" href="#">''')
         _v = VFFSL(SL,"tstrings",True)['show_full_openwebif'] # u"$tstrings['show_full_openwebif']" on line 63, col 86
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['show_full_openwebif']")) # from line 63, col 86.
-        write(u"""</a>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['show_full_openwebif']")) # from line 63, col 86.
+        write("""</a>
 \t\t</div>
 <script>
 function zapChannel(sref) {
--- ./plugin/controllers/views/mobile/channels.py	(original)
+++ ./plugin/controllers/views/mobile/channels.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -60,7 +61,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -70,7 +71,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,57 +84,57 @@
         ########################################
         ## START - generated method body
         
-        write(u'''<body>
+        write('''<body>
 \t<div data-role="page" id="chpage">
 \t\t<div id="header">
 \t\t\t<div class="button" onClick="history.back()">''')
         _v = VFFSL(SL,"tstrings",True)['back'] # u"$tstrings['back']" on line 5, col 49
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['back']")) # from line 5, col 49.
-        write(u'''</div>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['back']")) # from line 5, col 49.
+        write('''</div>
 \t\t\t<h1><a style="color:#FFF;text-decoration:none;" href=\'/mobile\'>OpenWebif</a></h1>
 \t\t</div>
 \t\t<div id="contentContainer">
 \t\t\t<ul data-role="listview" data-inset="true" data-theme="d">
 \t\t\t\t<li data-role="list-divider" role="heading" data-theme="b">''')
         _v = VFFSL(SL,"tstrings",True)['channels'] # u"$tstrings['channels']" on line 10, col 64
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['channels']")) # from line 10, col 64.
-        write(u'''</li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['channels']")) # from line 10, col 64.
+        write('''</li>
 ''')
         for channel in VFFSL(SL,"channels",True): # generated from line 11, col 5
-            write(u'''\t\t\t\t<li>
+            write('''\t\t\t\t<li>
 \t\t\t\t<a href="/mobile/channelinfo?sref=''')
             _v = VFFSL(SL,"channel.ref",True) # u'$channel.ref' on line 13, col 39
-            if _v is not None: write(_filter(_v, rawExpr=u'$channel.ref')) # from line 13, col 39.
-            write(u'''" style="padding: 3px;">
+            if _v is not None: write(_filter(_v, rawExpr='$channel.ref')) # from line 13, col 39.
+            write('''" style="padding: 3px;">
 \t\t\t\t<h3>''')
             _v = VFFSL(SL,"channel.name",True) # u'$channel.name' on line 14, col 9
-            if _v is not None: write(_filter(_v, rawExpr=u'$channel.name')) # from line 14, col 9.
-            write(u'''</h3>
+            if _v is not None: write(_filter(_v, rawExpr='$channel.name')) # from line 14, col 9.
+            write('''</h3>
 ''')
             if 'now_title' in VFFSL(SL,"channel",True): # generated from line 15, col 5
-                write(u'''\t\t\t\t<p>''')
+                write('''\t\t\t\t<p>''')
                 _v = VFFSL(SL,"channel.now_title",True) # u'$channel.now_title' on line 16, col 8
-                if _v is not None: write(_filter(_v, rawExpr=u'$channel.now_title')) # from line 16, col 8.
-                write(u'''</p>
-''')
-            write(u'''\t\t\t\t</a>
+                if _v is not None: write(_filter(_v, rawExpr='$channel.now_title')) # from line 16, col 8.
+                write('''</p>
+''')
+            write('''\t\t\t\t</a>
 \t\t\t\t<a href="#" onclick="dlg(\'''')
             _v = VFFSL(SL,"channel.ref",True) # u'$channel.ref' on line 19, col 31
-            if _v is not None: write(_filter(_v, rawExpr=u'$channel.ref')) # from line 19, col 31.
-            write(u"""', '""")
+            if _v is not None: write(_filter(_v, rawExpr='$channel.ref')) # from line 19, col 31.
+            write("""', '""")
             _v = VFFSL(SL,"channel.name",True) # u'$channel.name' on line 19, col 47
-            if _v is not None: write(_filter(_v, rawExpr=u'$channel.name')) # from line 19, col 47.
-            write(u'''\');return false;" aria-expanded="false" class="ui-btn ui-btn-icon-notext ui-icon-gear ui-btn-a" title="...more"></a>
+            if _v is not None: write(_filter(_v, rawExpr='$channel.name')) # from line 19, col 47.
+            write('''\');return false;" aria-expanded="false" class="ui-btn ui-btn-icon-notext ui-icon-gear ui-btn-a" title="...more"></a>
 \t\t\t\t</li>
 ''')
-        write(u'''\t\t\t</ul>
+        write('''\t\t\t</ul>
 \t\t</div>
 \t\t<div id="footer">
 \t\t\t<p>OpenWebif Mobile</p>
 \t\t\t<a onclick="document.location.href=\'/index?mode=fullpage\';return false;" href="#">''')
         _v = VFFSL(SL,"tstrings",True)['show_full_openwebif'] # u"$tstrings['show_full_openwebif']" on line 26, col 86
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['show_full_openwebif']")) # from line 26, col 86.
-        write(u'''</a>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['show_full_openwebif']")) # from line 26, col 86.
+        write('''</a>
 \t\t</div>
 
 \t<div data-role="popup" id="stream" data-theme="b">
@@ -141,23 +142,23 @@
 \t\t\t<span class="title">Stream</span>
 \t\t\t<a href="#home" onclick="zapChannel();" data-role="button" data-theme="a">''')
         _v = VFFSL(SL,"tstrings",True)['zap'] # u"$tstrings['zap']" on line 32, col 78
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['zap']")) # from line 32, col 78.
-        write(u'''</a>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['zap']")) # from line 32, col 78.
+        write('''</a>
 \t\t\t<a href="#home" onclick="jumper(\'etc\');" data-role="button" data-theme="a">''')
         _v = VFFSL(SL,"tstrings",True)['stream'] # u"$tstrings['stream']" on line 33, col 79
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['stream']")) # from line 33, col 79.
-        write(u'''</a>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['stream']")) # from line 33, col 79.
+        write('''</a>
 ''')
         if VFFSL(SL,"transcoding",True): # generated from line 34, col 4
-            write(u'''\t\t\t<a href="#home" onclick="jumper(\'phone\');" data-role="button" data-theme="a">''')
+            write('''\t\t\t<a href="#home" onclick="jumper(\'phone\');" data-role="button" data-theme="a">''')
             _v = VFFSL(SL,"tstrings",True)['stream'] # u"$tstrings['stream']" on line 35, col 81
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['stream']")) # from line 35, col 81.
-            write(u''' (''')
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['stream']")) # from line 35, col 81.
+            write(''' (''')
             _v = VFFSL(SL,"tstrings",True)['transcoded'] # u"$tstrings['transcoded']" on line 35, col 102
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['transcoded']")) # from line 35, col 102.
-            write(u''')</a>
-''')
-        write(u'''\t\t\t<a href="#home" data-role="button" data-theme="d" data-rel="back">Cancel</a>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['transcoded']")) # from line 35, col 102.
+            write(''')</a>
+''')
+        write('''\t\t\t<a href="#home" data-role="button" data-theme="d" data-rel="back">Cancel</a>
 \t\t</div>
 \t</div>
 
--- ./plugin/controllers/views/mobile/control.py	(original)
+++ ./plugin/controllers/views/mobile/control.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -60,7 +61,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -70,7 +71,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,21 +84,21 @@
         ########################################
         ## START - generated method body
         
-        write(u'''<body>
+        write('''<body>
 \t<div data-role="page" id="mainPage">
 \t\t<div id="header">
 \t\t\t<div class="button" onClick="history.back()">''')
         _v = VFFSL(SL,"tstrings",True)['back'] # u"$tstrings['back']" on line 5, col 49
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['back']")) # from line 5, col 49.
-        write(u'''</div>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['back']")) # from line 5, col 49.
+        write('''</div>
 \t\t\t<h1><a style="color:#FFF;text-decoration:none;" href=\'/mobile\'>OpenWebif</a></h1>
 \t\t</div>
 \t\t<div id="contentContainer">
 \t\t\t<ul data-role="listview" data-inset="true" data-theme="d">
 \t\t\t\t<li data-role="list-divider" role="heading" data-theme="b">''')
         _v = VFFSL(SL,"tstrings",True)['volumecontrol'] # u"$tstrings['volumecontrol']" on line 10, col 64
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['volumecontrol']")) # from line 10, col 64.
-        write(u'''</li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['volumecontrol']")) # from line 10, col 64.
+        write('''</li>
 \t\t\t\t<li>
 \t\t\t\t\t<table width="100%">
 \t\t\t\t\t\t<tr>
@@ -111,51 +112,51 @@
 \t\t\t<ul data-role="listview" data-inset="true" data-theme="d">
 \t\t\t\t<li data-role="list-divider" role="heading" data-theme="b">''')
         _v = VFFSL(SL,"tstrings",True)['instant_record'] # u"$tstrings['instant_record']" on line 22, col 64
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['instant_record']")) # from line 22, col 64.
-        write(u'''</li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['instant_record']")) # from line 22, col 64.
+        write('''</li>
 \t\t\t\t<li><a href="#" onClick="startInstantRecord()">''')
         _v = VFFSL(SL,"tstrings",True)['start_instant_record'] # u"$tstrings['start_instant_record']" on line 23, col 52
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['start_instant_record']")) # from line 23, col 52.
-        write(u'''</a></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['start_instant_record']")) # from line 23, col 52.
+        write('''</a></li>
 \t\t\t</ul>
 \t\t\t<br><br>
 \t\t\t<ul data-role="listview" data-inset="true" data-theme="d">
 \t\t\t\t<li data-role="list-divider" role="heading" data-theme="b">''')
         _v = VFFSL(SL,"tstrings",True)['powercontrol'] # u"$tstrings['powercontrol']" on line 27, col 64
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['powercontrol']")) # from line 27, col 64.
-        write(u'''</li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['powercontrol']")) # from line 27, col 64.
+        write('''</li>
 \t\t\t\t<li><a href="#" onClick="jQuery.ajax(\'/api/powerstate?newstate=0\'); return false">''')
         _v = VFFSL(SL,"tstrings",True)['standby_toggle'] # u"$tstrings['standby_toggle']" on line 28, col 87
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['standby_toggle']")) # from line 28, col 87.
-        write(u'''</a></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['standby_toggle']")) # from line 28, col 87.
+        write('''</a></li>
 \t\t\t\t<li><a href="#" onClick="jQuery.ajax(\'/api/powerstate?newstate=1\'); return false">''')
         _v = VFFSL(SL,"tstrings",True)['deep_standby'] # u"$tstrings['deep_standby']" on line 29, col 87
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['deep_standby']")) # from line 29, col 87.
-        write(u'''</a></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['deep_standby']")) # from line 29, col 87.
+        write('''</a></li>
 \t\t\t\t<li><a href="#" onClick="jQuery.ajax(\'/api/powerstate?newstate=2\'); return false">''')
         _v = VFFSL(SL,"tstrings",True)['reboot_box'] # u"$tstrings['reboot_box']" on line 30, col 87
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['reboot_box']")) # from line 30, col 87.
-        write(u'''</a></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['reboot_box']")) # from line 30, col 87.
+        write('''</a></li>
 \t\t\t\t<li><a href="#" onClick="jQuery.ajax(\'/api/powerstate?newstate=3\'); return false">''')
         _v = VFFSL(SL,"tstrings",True)['restart_gui'] # u"$tstrings['restart_gui']" on line 31, col 87
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['restart_gui']")) # from line 31, col 87.
-        write(u'''</a></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['restart_gui']")) # from line 31, col 87.
+        write('''</a></li>
 \t\t\t\t<li><a href="#" onClick="jQuery.ajax(\'/api/powerstate?newstate=4\'); return false">''')
         _v = VFFSL(SL,"tstrings",True)['wake_up'] # u"$tstrings['wake_up']" on line 32, col 87
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['wake_up']")) # from line 32, col 87.
-        write(u'''</a></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['wake_up']")) # from line 32, col 87.
+        write('''</a></li>
 \t\t\t\t<li><a href="#" onClick="jQuery.ajax(\'/api/powerstate?newstate=5\'); return false">''')
         _v = VFFSL(SL,"tstrings",True)['standby'] # u"$tstrings['standby']" on line 33, col 87
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['standby']")) # from line 33, col 87.
-        write(u'''</a></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['standby']")) # from line 33, col 87.
+        write('''</a></li>
 \t\t\t</ul>
 \t\t</div>
 \t\t<div id="footer">
 \t\t\t<p>OpenWebif Mobile</p>
 \t\t\t<a onclick="document.location.href=\'/index?mode=fullpage\';return false;" href="#">''')
         _v = VFFSL(SL,"tstrings",True)['show_full_openwebif'] # u"$tstrings['show_full_openwebif']" on line 38, col 86
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['show_full_openwebif']")) # from line 38, col 86.
-        write(u'''</a>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['show_full_openwebif']")) # from line 38, col 86.
+        write('''</a>
 \t\t</div>
 \t<script>
 \tfunction getStatusInfo() {
@@ -180,8 +181,8 @@
 \tfunction startInstantRecord(vol) {
 \t\tcheck = confirm("''')
         _v = VFFSL(SL,"tstrings",True)['ask_instant_record'] # u"$tstrings['ask_instant_record']" on line 61, col 20
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ask_instant_record']")) # from line 61, col 20.
-        write(u'''");
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['ask_instant_record']")) # from line 61, col 20.
+        write('''");
 \t\tif (check == true) {
 \t\t\tjQuery.ajax(\'/api/recordnow\');
 \t\t}
--- ./plugin/controllers/views/mobile/eventview.py	(original)
+++ ./plugin/controllers/views/mobile/eventview.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -61,7 +62,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -71,7 +72,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -84,97 +85,97 @@
         ########################################
         ## START - generated method body
         
-        write(u'''<body>
+        write('''<body>
 \t<div data-role="page">
 \t\t<div id="header">
 \t\t<div class="button" onClick="history.back()">''')
         _v = VFFSL(SL,"tstrings",True)['back'] # u"$tstrings['back']" on line 6, col 48
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['back']")) # from line 6, col 48.
-        write(u'''</div>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['back']")) # from line 6, col 48.
+        write('''</div>
 \t\t<h1><a style="color:#FFF;text-decoration:none;" href=\'/mobile\'>OpenWebif</a></h1>
 ''')
         sref = quote(VFFSL(SL,"event.sref",True), safe=' ~@#$&()*!+=:;,.?/\'')
-        write(u'''\t\t<div class="button" style="right:5px;left:auto;" onclick="addTimerEvent(\'''')
+        write('''\t\t<div class="button" style="right:5px;left:auto;" onclick="addTimerEvent(\'''')
         _v = VFFSL(SL,"sref",True) # u'$sref' on line 9, col 76
-        if _v is not None: write(_filter(_v, rawExpr=u'$sref')) # from line 9, col 76.
-        write(u"""',""")
+        if _v is not None: write(_filter(_v, rawExpr='$sref')) # from line 9, col 76.
+        write("""',""")
         _v = VFFSL(SL,"event.id",True) # u'$event.id' on line 9, col 83
-        if _v is not None: write(_filter(_v, rawExpr=u'$event.id')) # from line 9, col 83.
-        write(u''');return false;">''')
+        if _v is not None: write(_filter(_v, rawExpr='$event.id')) # from line 9, col 83.
+        write(''');return false;">''')
         _v = VFFSL(SL,"tstrings",True)['add_timer'] # u"$tstrings['add_timer']" on line 9, col 109
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['add_timer']")) # from line 9, col 109.
-        write(u'''</div>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['add_timer']")) # from line 9, col 109.
+        write('''</div>
 \t</div>
 \t\t<div id="mainContent" class="ui-corner-all">
 \t\t\t<table width="100%" border="0" cellspacing="1" cellpadding="5">
 \t\t\t\t\t\t\t<tr>
 \t\t\t\t\t\t\t\t<th colspan="3" class="ui-btn-up-b" style="text-align: left;">''')
         _v = VFFSL(SL,"tstrings",True)['service'] # u"$tstrings['service']" on line 14, col 71
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['service']")) # from line 14, col 71.
-        write(u'''</th>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['service']")) # from line 14, col 71.
+        write('''</th>
 \t\t\t\t\t\t\t</tr>
 \t\t\t\t\t\t\t<tr style="background-color:  #f0f7fc;">
 \t\t\t\t\t\t\t\t<td width="200"><img src="''')
         _v = VFFSL(SL,"event",True)['picon'] # u"$event['picon']" on line 17, col 35
-        if _v is not None: write(_filter(_v, rawExpr=u"$event['picon']")) # from line 17, col 35.
-        write(u'''" border="0" alt=""></td>
+        if _v is not None: write(_filter(_v, rawExpr="$event['picon']")) # from line 17, col 35.
+        write('''" border="0" alt=""></td>
 \t\t\t\t\t\t\t\t<td width="100%" valign="top">
 \t\t\t\t\t\t\t\t<strong>''')
         _v = VFFSL(SL,"event",True)['channel'] # u"$event['channel']" on line 19, col 17
-        if _v is not None: write(_filter(_v, rawExpr=u"$event['channel']")) # from line 19, col 17.
-        write(u'''</strong><br />
+        if _v is not None: write(_filter(_v, rawExpr="$event['channel']")) # from line 19, col 17.
+        write('''</strong><br />
 \t\t\t\t\t\t\t\t\t''')
         _v = VFFSL(SL,"event",True)['title'] # u"$event['title']" on line 20, col 10
-        if _v is not None: write(_filter(_v, rawExpr=u"$event['title']")) # from line 20, col 10.
-        write(u'''<br />
+        if _v is not None: write(_filter(_v, rawExpr="$event['title']")) # from line 20, col 10.
+        write('''<br />
 \t\t\t\t\t\t\t\t\t''')
         _v = VFFSL(SL,"tstrings",True)[("day_" + (time.strftime("%w", time.localtime(VFFSL(SL,"event",True)['start']))))] # u'$tstrings[("day_" + (time.strftime("%w", time.localtime($event[\'start\']))))]' on line 21, col 10
-        if _v is not None: write(_filter(_v, rawExpr=u'$tstrings[("day_" + (time.strftime("%w", time.localtime($event[\'start\']))))]')) # from line 21, col 10.
-        write(u''', ''')
+        if _v is not None: write(_filter(_v, rawExpr='$tstrings[("day_" + (time.strftime("%w", time.localtime($event[\'start\']))))]')) # from line 21, col 10.
+        write(''', ''')
         _v = VFN(VFFSL(SL,"time",True),"strftime",False)("%d.%m.%Y", time.localtime(VFFSL(SL,"event",True)['start'])) # u'$time.strftime("%d.%m.%Y", time.localtime($event[\'start\']))' on line 21, col 88
-        if _v is not None: write(_filter(_v, rawExpr=u'$time.strftime("%d.%m.%Y", time.localtime($event[\'start\']))')) # from line 21, col 88.
-        write(u''' / ''')
+        if _v is not None: write(_filter(_v, rawExpr='$time.strftime("%d.%m.%Y", time.localtime($event[\'start\']))')) # from line 21, col 88.
+        write(''' / ''')
         _v = VFFSL(SL,"event",True)['begin'] # u"$event['begin']" on line 21, col 150
-        if _v is not None: write(_filter(_v, rawExpr=u"$event['begin']")) # from line 21, col 150.
-        write(u''' - ''')
+        if _v is not None: write(_filter(_v, rawExpr="$event['begin']")) # from line 21, col 150.
+        write(''' - ''')
         _v = VFFSL(SL,"event",True)['end'] # u"$event['end']" on line 21, col 168
-        if _v is not None: write(_filter(_v, rawExpr=u"$event['end']")) # from line 21, col 168.
-        write(u''' ( ''')
+        if _v is not None: write(_filter(_v, rawExpr="$event['end']")) # from line 21, col 168.
+        write(''' ( ''')
         _v = VFFSL(SL,"event",True)['duration'] # u"$event['duration']" on line 21, col 184
-        if _v is not None: write(_filter(_v, rawExpr=u"$event['duration']")) # from line 21, col 184.
-        write(u''' min )<br />
+        if _v is not None: write(_filter(_v, rawExpr="$event['duration']")) # from line 21, col 184.
+        write(''' min )<br />
 \t\t\t\t\t\t\t\t</td>
 \t\t\t\t\t\t\t</tr>
 \t\t\t\t\t\t\t<tr>
 \t\t\t\t\t\t\t\t<th colspan="2" class="ui-btn-up-b" style="text-align: left;">''')
         _v = VFFSL(SL,"tstrings",True)['description'] # u"$tstrings['description']" on line 25, col 71
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['description']")) # from line 25, col 71.
-        write(u'''</th>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['description']")) # from line 25, col 71.
+        write('''</th>
 \t\t\t\t\t\t\t</tr>
 \t\t\t\t\t\t\t<tr style="background-color:  #f0f7fc;">
 \t\t\t\t\t\t\t\t<td colspan="2">''')
         _v = VFFSL(SL,"event",True)['shortdesc'] # u"$event['shortdesc']" on line 28, col 25
-        if _v is not None: write(_filter(_v, rawExpr=u"$event['shortdesc']")) # from line 28, col 25.
-        write(u'''</td>
+        if _v is not None: write(_filter(_v, rawExpr="$event['shortdesc']")) # from line 28, col 25.
+        write('''</td>
 \t\t\t\t\t\t\t</tr>
 \t\t\t\t\t\t\t<tr style="background-color:  #f0f7fc;">
 \t\t\t\t\t\t\t\t<td colspan="2">''')
         _v = VFFSL(SL,"event",True)['longdesc'] # u"$event['longdesc']" on line 31, col 25
-        if _v is not None: write(_filter(_v, rawExpr=u"$event['longdesc']")) # from line 31, col 25.
-        write(u'''</td>
+        if _v is not None: write(_filter(_v, rawExpr="$event['longdesc']")) # from line 31, col 25.
+        write('''</td>
 \t\t\t\t\t\t\t</tr>
 \t\t\t\t</table>
 \t\t\t\t<button onClick="location=\'/mobile/timerlist\'">''')
         _v = VFFSL(SL,"tstrings",True)['timer_list'] # u"$tstrings['timer_list']" on line 34, col 52
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['timer_list']")) # from line 34, col 52.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['timer_list']")) # from line 34, col 52.
+        write('''</button>
 \t\t</div>
 \t\t<div id="footer">
 \t\t<p>OpenWebif Mobile</p>
 \t\t<a onclick="document.location.href=\'/index?mode=fullpage\';return false;" href="#">''')
         _v = VFFSL(SL,"tstrings",True)['show_full_openwebif'] # u"$tstrings['show_full_openwebif']" on line 38, col 85
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['show_full_openwebif']")) # from line 38, col 85.
-        write(u'''</a>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['show_full_openwebif']")) # from line 38, col 85.
+        write('''</a>
 \t\t</div>
 <script type="text/javascript">
 function addTimerEvent(sRef, eventId) {
@@ -191,8 +192,8 @@
 \t\t\t\telse
 \t\t\t\t\talert( result.result ? "''')
         _v = VFFSL(SL,"tstrings",True)['tstr_timer_added'] # u"$tstrings['tstr_timer_added']" on line 53, col 30
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['tstr_timer_added']")) # from line 53, col 30.
-        write(u'''" : result.message );
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['tstr_timer_added']")) # from line 53, col 30.
+        write('''" : result.message );
 \t\t\t} else
 \t\t\t\talert( "Error Creating Timer" );
 \t\t}
--- ./plugin/controllers/views/mobile/head.py	(original)
+++ ./plugin/controllers/views/mobile/head.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -82,7 +83,7 @@
         ########################################
         ## START - generated method body
         
-        write(u'''<html>
+        write('''<html>
 <head>
 <title>OpenWebif</title>
 <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
--- ./plugin/controllers/views/mobile/index.py	(original)
+++ ./plugin/controllers/views/mobile/index.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -61,7 +62,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -71,7 +72,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -84,7 +85,7 @@
         ########################################
         ## START - generated method body
         
-        write(u'''<body>
+        write('''<body>
 \t<div data-role="page">
 \t\t<div id="header">
 \t\t\t<h1>OpenWebif</h1>
@@ -94,54 +95,54 @@
 \t\t\t\t<li data-role="list-divider" role="heading" data-theme="b">Index</li>
 \t\t\t\t<li><a href="/mobile/control">''')
         _v = VFFSL(SL,"tstrings",True)['control'] # u"$tstrings['control']" on line 11, col 35
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['control']")) # from line 11, col 35.
-        write(u'''</a></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['control']")) # from line 11, col 35.
+        write('''</a></li>
 \t\t\t\t<li><a href="/mobile/remote">''')
         _v = VFFSL(SL,"tstrings",True)['remote'] # u"$tstrings['remote']" on line 12, col 34
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['remote']")) # from line 12, col 34.
-        write(u'''</a></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['remote']")) # from line 12, col 34.
+        write('''</a></li>
 \t\t\t\t<li><a href="/mobile/bouquets">''')
         _v = VFFSL(SL,"tstrings",True)['bouquets'] # u"$tstrings['bouquets']" on line 13, col 36
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['bouquets']")) # from line 13, col 36.
-        write(u''' (''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['bouquets']")) # from line 13, col 36.
+        write(''' (''')
         _v = VFFSL(SL,"tstrings",True)['tv'] # u"$tstrings['tv']" on line 13, col 59
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['tv']")) # from line 13, col 59.
-        write(u''')</a></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['tv']")) # from line 13, col 59.
+        write(''')</a></li>
 \t\t\t\t<li><a href="/mobile/bouquets?stype=radio">''')
         _v = VFFSL(SL,"tstrings",True)['bouquets'] # u"$tstrings['bouquets']" on line 14, col 48
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['bouquets']")) # from line 14, col 48.
-        write(u''' (''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['bouquets']")) # from line 14, col 48.
+        write(''' (''')
         _v = VFFSL(SL,"tstrings",True)['radio'] # u"$tstrings['radio']" on line 14, col 71
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['radio']")) # from line 14, col 71.
-        write(u''')</a></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['radio']")) # from line 14, col 71.
+        write(''')</a></li>
 \t\t\t\t<li><a href="/mobile/timerlist">''')
         _v = VFFSL(SL,"tstrings",True)['timer_list'] # u"$tstrings['timer_list']" on line 15, col 37
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['timer_list']")) # from line 15, col 37.
-        write(u'''</a></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['timer_list']")) # from line 15, col 37.
+        write('''</a></li>
 \t\t\t\t<li><a href="/mobile/screenshot">''')
         _v = VFFSL(SL,"tstrings",True)['screenshot'] # u"$tstrings['screenshot']" on line 16, col 38
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['screenshot']")) # from line 16, col 38.
-        write(u'''</a></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['screenshot']")) # from line 16, col 38.
+        write('''</a></li>
 \t\t\t\t<li><a href="/mobile/movies">''')
         _v = VFFSL(SL,"tstrings",True)['movies'] # u"$tstrings['movies']" on line 17, col 34
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['movies']")) # from line 17, col 34.
-        write(u'''</a></a></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['movies']")) # from line 17, col 34.
+        write('''</a></a></li>
 \t\t\t\t<li><a href="/mobile/satfinder">''')
         _v = VFFSL(SL,"tstrings",True)['satfinder'] # u"$tstrings['satfinder']" on line 18, col 37
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['satfinder']")) # from line 18, col 37.
-        write(u'''</a></a></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['satfinder']")) # from line 18, col 37.
+        write('''</a></a></li>
 \t\t\t\t<li><a href="/mobile/about">''')
         _v = VFFSL(SL,"tstrings",True)['about'] # u"$tstrings['about']" on line 19, col 33
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['about']")) # from line 19, col 33.
-        write(u'''</a></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['about']")) # from line 19, col 33.
+        write('''</a></li>
 \t\t\t</ul>
 \t\t</div>
 \t\t<div id="footer">
 \t\t\t<p>OpenWebif Mobile</p>
 \t\t\t<a onclick="document.location.href=\'/index?mode=fullpage\';return false;" href="#">''')
         _v = VFFSL(SL,"tstrings",True)['show_full_openwebif'] # u"$tstrings['show_full_openwebif']" on line 24, col 86
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['show_full_openwebif']")) # from line 24, col 86.
-        write(u'''</a>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['show_full_openwebif']")) # from line 24, col 86.
+        write('''</a>
 \t\t</div>
 \t\t
 \t</div>
--- ./plugin/controllers/views/mobile/movies.py	(original)
+++ ./plugin/controllers/views/mobile/movies.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -61,7 +62,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -71,7 +72,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -84,83 +85,83 @@
         ########################################
         ## START - generated method body
         
-        write(u'''<body>
+        write('''<body>
 \t<div data-role="page">
 \t\t<div id="header">
 \t\t\t<div class="button" onClick="history.back()">''')
         _v = VFFSL(SL,"tstrings",True)['back'] # u"$tstrings['back']" on line 6, col 49
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['back']")) # from line 6, col 49.
-        write(u'''</div>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['back']")) # from line 6, col 49.
+        write('''</div>
 \t\t\t<h1><a style="color:#FFF;text-decoration:none;" href=\'/mobile\'>OpenWebif</a></h1>
 \t\t\t<h2>''')
         _v = VFFSL(SL,"tstrings",True)['movies'] # u"$tstrings['movies']" on line 8, col 8
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['movies']")) # from line 8, col 8.
-        write(u'''</h2>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['movies']")) # from line 8, col 8.
+        write('''</h2>
 \t\t</div>
 \t\t<div data-role="fieldcontain">
 \t\t\t<select name="select-choice-1" id="select-choice-moviedir" onChange="window.location.href=\'/mobile/movies?dirname=\'+escape(options[selectedIndex].value);">
 \t\t\t\t<option value="''')
         _v = VFFSL(SL,"directory",True) # u'$directory' on line 12, col 20
-        if _v is not None: write(_filter(_v, rawExpr=u'$directory')) # from line 12, col 20.
-        write(u'''">''')
+        if _v is not None: write(_filter(_v, rawExpr='$directory')) # from line 12, col 20.
+        write('''">''')
         _v = VFFSL(SL,"directory",True) # u'$directory' on line 12, col 32
-        if _v is not None: write(_filter(_v, rawExpr=u'$directory')) # from line 12, col 32.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr='$directory')) # from line 12, col 32.
+        write('''</option>
 ''')
         for bookmark in VFFSL(SL,"bookmarks",True): # generated from line 13, col 5
-            write(u'''\t\t\t\t<option value="''')
+            write('''\t\t\t\t<option value="''')
             _v = VFFSL(SL,"directory",True) # u'$directory' on line 14, col 20
-            if _v is not None: write(_filter(_v, rawExpr=u'$directory')) # from line 14, col 20.
+            if _v is not None: write(_filter(_v, rawExpr='$directory')) # from line 14, col 20.
             _v = VFFSL(SL,"bookmark",True) # u'$bookmark' on line 14, col 30
-            if _v is not None: write(_filter(_v, rawExpr=u'$bookmark')) # from line 14, col 30.
-            write(u'''">''')
+            if _v is not None: write(_filter(_v, rawExpr='$bookmark')) # from line 14, col 30.
+            write('''">''')
             _v = VFFSL(SL,"bookmark",True) # u'$bookmark' on line 14, col 41
-            if _v is not None: write(_filter(_v, rawExpr=u'$bookmark')) # from line 14, col 41.
-            write(u'''</option>
-''')
-        write(u'''\t\t\t</select>
+            if _v is not None: write(_filter(_v, rawExpr='$bookmark')) # from line 14, col 41.
+            write('''</option>
+''')
+        write('''\t\t\t</select>
 \t\t</div>
 \t\t<div id="contentContainer">
 \t\t\t<ul data-role="listview" data-inset="true" data-theme="d">
 \t\t\t\t<li data-role="list-divider" role="heading" data-theme="b">''')
         _v = VFFSL(SL,"tstrings",True)['movies'] # u"$tstrings['movies']" on line 20, col 64
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['movies']")) # from line 20, col 64.
-        write(u'''</li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['movies']")) # from line 20, col 64.
+        write('''</li>
 ''')
         for movie in VFFSL(SL,"movies",True): # generated from line 21, col 5
-            write(u'''\t\t\t\t<li data-icon="false">
+            write('''\t\t\t\t<li data-icon="false">
 \t\t\t\t<a href="#" onclick="dlg(\'''')
             _v = VFFSL(SL,"quote",False)(VFFSL(SL,"movie.serviceref",True)) # u'$quote($movie.serviceref)' on line 23, col 31
-            if _v is not None: write(_filter(_v, rawExpr=u'$quote($movie.serviceref)')) # from line 23, col 31.
-            write(u"""', '""")
+            if _v is not None: write(_filter(_v, rawExpr='$quote($movie.serviceref)')) # from line 23, col 31.
+            write("""', '""")
             _v = VFFSL(SL,"quote",False)(VFFSL(SL,"movie.filename",True)) # u'$quote($movie.filename)' on line 23, col 60
-            if _v is not None: write(_filter(_v, rawExpr=u'$quote($movie.filename)')) # from line 23, col 60.
-            write(u'''\');return false;" style="padding: 3px;">
+            if _v is not None: write(_filter(_v, rawExpr='$quote($movie.filename)')) # from line 23, col 60.
+            write('''\');return false;" style="padding: 3px;">
 ''')
             if VFFSL(SL,"movie.eventname",True) != "": # generated from line 24, col 5
-                write(u'''\t\t\t\t<h3>''')
+                write('''\t\t\t\t<h3>''')
                 _v = VFFSL(SL,"movie.eventname",True) # u'$movie.eventname' on line 25, col 9
-                if _v is not None: write(_filter(_v, rawExpr=u'$movie.eventname')) # from line 25, col 9.
-                write(u'''</h3>
+                if _v is not None: write(_filter(_v, rawExpr='$movie.eventname')) # from line 25, col 9.
+                write('''</h3>
 ''')
             else: # generated from line 26, col 5
-                write(u'''\t\t\t\t<h3>''')
+                write('''\t\t\t\t<h3>''')
                 _v = VFFSL(SL,"movie.filename",True) # u'$movie.filename' on line 27, col 9
-                if _v is not None: write(_filter(_v, rawExpr=u'$movie.filename')) # from line 27, col 9.
-                write(u'''</h3>
-''')
-            write(u'''\t\t\t\t<p>...</p>
+                if _v is not None: write(_filter(_v, rawExpr='$movie.filename')) # from line 27, col 9.
+                write('''</h3>
+''')
+            write('''\t\t\t\t<p>...</p>
 \t\t\t\t</a>
 \t\t\t\t</li>
 ''')
-        write(u'''\t\t\t</ul>
+        write('''\t\t\t</ul>
 \t\t</div>
 \t\t<div id="footer">
 \t\t\t<p>OpenWebif Mobile</p>
 \t\t\t<a onclick="document.location.href=\'/index?mode=fullpage\';return false;" href="#">''')
         _v = VFFSL(SL,"tstrings",True)['show_full_openwebif'] # u"$tstrings['show_full_openwebif']" on line 37, col 86
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['show_full_openwebif']")) # from line 37, col 86.
-        write(u'''</a>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['show_full_openwebif']")) # from line 37, col 86.
+        write('''</a>
 \t\t</div>
 
 \t<div data-role="popup" id="stream" data-theme="b">
@@ -168,23 +169,23 @@
 \t\t\t<span class="title">Stream</span>
 \t\t\t<a href="#home" onclick="playRecording();" data-role="button" data-theme="a">''')
         _v = VFFSL(SL,"tstrings",True)['playback'] # u"$tstrings['playback']" on line 43, col 81
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['playback']")) # from line 43, col 81.
-        write(u'''</a>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['playback']")) # from line 43, col 81.
+        write('''</a>
 \t\t\t<a href="#home" onclick="jumper(\'etc\');" data-role="button" data-theme="a">''')
         _v = VFFSL(SL,"tstrings",True)['stream'] # u"$tstrings['stream']" on line 44, col 79
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['stream']")) # from line 44, col 79.
-        write(u'''</a>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['stream']")) # from line 44, col 79.
+        write('''</a>
 ''')
         if VFFSL(SL,"transcoding",True): # generated from line 45, col 4
-            write(u'''\t\t\t<a href="#home" onclick="jumper(\'phone\');" data-role="button" data-theme="a">''')
+            write('''\t\t\t<a href="#home" onclick="jumper(\'phone\');" data-role="button" data-theme="a">''')
             _v = VFFSL(SL,"tstrings",True)['stream'] # u"$tstrings['stream']" on line 46, col 81
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['stream']")) # from line 46, col 81.
-            write(u''' (''')
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['stream']")) # from line 46, col 81.
+            write(''' (''')
             _v = VFFSL(SL,"tstrings",True)['transcoded'] # u"$tstrings['transcoded']" on line 46, col 102
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['transcoded']")) # from line 46, col 102.
-            write(u''')</a>
-''')
-        write(u'''\t\t\t<a href="#home" data-role="button" data-theme="d" data-rel="back">Cancel</a>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['transcoded']")) # from line 46, col 102.
+            write(''')</a>
+''')
+        write('''\t\t\t<a href="#home" data-role="button" data-theme="d" data-rel="back">Cancel</a>
 \t\t</div>
 \t</div>
 \t
--- ./plugin/controllers/views/mobile/remote.py	(original)
+++ ./plugin/controllers/views/mobile/remote.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -60,7 +61,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -70,7 +71,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,21 +84,21 @@
         ########################################
         ## START - generated method body
         
-        write(u'''<body>
+        write('''<body>
 \t<div data-role="page" id="mainPage">
 \t\t<div id="header">
 \t\t\t<div class="button" onClick="history.back()">''')
         _v = VFFSL(SL,"tstrings",True)['back'] # u"$tstrings['back']" on line 5, col 49
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['back']")) # from line 5, col 49.
-        write(u'''</div>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['back']")) # from line 5, col 49.
+        write('''</div>
 \t\t\t<h1><a style="color:#FFF;text-decoration:none;" href=\'/mobile\'>OpenWebif</a></h1>
 \t\t</div>
 \t\t<div id="contentContainer">
 \t\t\t<ul data-role="listview" data-inset="true" data-theme="d">
 \t\t\t\t<li data-role="list-divider" role="heading" data-theme="b">''')
         _v = VFFSL(SL,"tstrings",True)['remote'] # u"$tstrings['remote']" on line 10, col 64
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['remote']")) # from line 10, col 64.
-        write(u'''</li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['remote']")) # from line 10, col 64.
+        write('''</li>
 \t\t\t\t<li><div id="remote_container" style="width:100%; text-align:center"></div></li>
 \t\t\t</ul>
 \t\t</div>
@@ -106,8 +107,8 @@
 \t\t\t<p>OpenWebif Mobile</p>
 \t\t\t<a onclick="document.location.href=\'/index?mode=fullpage\';return false;" href="#">''')
         _v = VFFSL(SL,"tstrings",True)['show_full_openwebif'] # u"$tstrings['show_full_openwebif']" on line 17, col 86
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['show_full_openwebif']")) # from line 17, col 86.
-        write(u'''</a>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['show_full_openwebif']")) # from line 17, col 86.
+        write('''</a>
 \t\t</div>
 \t<script>
 \tvar shiftbutton = false;
@@ -127,8 +128,8 @@
 \t\t});
 \t\tjQuery("#remote_container").load("/static/remotes/''')
         _v = VFFSL(SL,"remote",True) # u'${remote}' on line 35, col 53
-        if _v is not None: write(_filter(_v, rawExpr=u'${remote}')) # from line 35, col 53.
-        write(u'''.html");
+        if _v is not None: write(_filter(_v, rawExpr='${remote}')) # from line 35, col 53.
+        write('''.html");
 \t});
 \t</script>
 \t</div>
--- ./plugin/controllers/views/mobile/satfinder.py	(original)
+++ ./plugin/controllers/views/mobile/satfinder.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -60,7 +61,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -70,7 +71,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,13 +84,13 @@
         ########################################
         ## START - generated method body
         
-        write(u'''<body>
+        write('''<body>
 \t<div data-role="page" id="mainPage">
 \t\t<div id="header">
 \t\t\t<div class="button" onClick="history.back()">''')
         _v = VFFSL(SL,"tstrings",True)['back'] # u"$tstrings['back']" on line 5, col 49
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['back']")) # from line 5, col 49.
-        write(u'''</div>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['back']")) # from line 5, col 49.
+        write('''</div>
 \t\t\t<h1><a style="color:#FFF;text-decoration:none;" href=\'/mobile\'>OpenWebif</a></h1>
 \t\t</div>
 \t\t<div id="contentContainer">
@@ -99,8 +100,8 @@
 \t\t\t\t<tr>
 \t\t\t\t\t<td style="width: 30px;">''')
         _v = VFFSL(SL,"tstrings",True)['snr'] # u"$tstrings['snr']" on line 13, col 31
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['snr']")) # from line 13, col 31.
-        write(u''':</td>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['snr']")) # from line 13, col 31.
+        write(''':</td>
 \t\t\t\t\t<td>
 \t\t\t\t\t\t<div class="ui-btn-down-d ui-btn-corner-all" style="height: 22px;">
 \t\t\t\t\t\t\t<div name="snrslider" id="snrslider" class="ui-btn-up-b ui-btn-corner-all ui-shadow" style="width: 0%; height: 20px; text-align: center;">0</div>
@@ -110,8 +111,8 @@
 \t\t\t\t<tr>
 \t\t\t\t\t<td style="width: 30px;">''')
         _v = VFFSL(SL,"tstrings",True)['agc'] # u"$tstrings['agc']" on line 21, col 31
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['agc']")) # from line 21, col 31.
-        write(u''':</td>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['agc']")) # from line 21, col 31.
+        write(''':</td>
 \t\t\t\t\t<td>
 \t\t\t\t\t\t<div class="ui-btn-down-d ui-btn-corner-all" style="height: 22px;">
 \t\t\t\t\t\t\t<div name="agcslider" id="agcslider" class="ui-btn-up-b ui-btn-corner-all ui-shadow" style="width: 0%; height: 20px; text-align: center;">0</div>
@@ -121,8 +122,8 @@
 \t\t\t\t<tr>
 \t\t\t\t\t<td style="width: 30px;">''')
         _v = VFFSL(SL,"tstrings",True)['ber'] # u"$tstrings['ber']" on line 29, col 31
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ber']")) # from line 29, col 31.
-        write(u''':</td>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['ber']")) # from line 29, col 31.
+        write(''':</td>
 \t\t\t\t\t<td>
 \t\t\t\t\t\t<div class="ui-btn-down-d ui-btn-corner-all" style="height: 22px;">
 \t\t\t\t\t\t\t<div name="berslider" id="berslider" style="width: 100%; height: 20px; text-align: center;">0</div>
@@ -138,8 +139,8 @@
 \t\t\t<p>OpenWebif Mobile</p>
 \t\t\t<a onclick="document.location.href=\'/index?mode=fullpage\';return false;" href="#">''')
         _v = VFFSL(SL,"tstrings",True)['show_full_openwebif'] # u"$tstrings['show_full_openwebif']" on line 43, col 86
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['show_full_openwebif']")) # from line 43, col 86.
-        write(u'''</a>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['show_full_openwebif']")) # from line 43, col 86.
+        write('''</a>
 \t\t</div>
 
 \t<script>
--- ./plugin/controllers/views/mobile/screenshot.py	(original)
+++ ./plugin/controllers/views/mobile/screenshot.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -60,7 +61,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -70,7 +71,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,46 +84,46 @@
         ########################################
         ## START - generated method body
         
-        write(u'''<body>
+        write('''<body>
 \t<div data-role="page">
 \t\t<div id="header">
 \t\t\t<div class="button" onClick="history.back()">''')
         _v = VFFSL(SL,"tstrings",True)['back'] # u"$tstrings['back']" on line 5, col 49
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['back']")) # from line 5, col 49.
-        write(u'''</div>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['back']")) # from line 5, col 49.
+        write('''</div>
 \t\t\t<h1><a style="color:#FFF;text-decoration:none;" href=\'/mobile\'>OpenWebif</a></h1>
 \t\t</div>
 \t\t<div>
 \t\t\t<fieldset data-type="horizontal" data-role="controlgroup" style="width: 275px; margin: auto; margin-top: 15px;">
 \t\t\t\t<div onClick="jQuery(\'#screenshot\').attr(\'src\',\'/grab?r=275&mode=all#\' + new Date().getTime()); return false;"><input type="radio" id="radio-view-a" name="radio-view"><label for="radio-view-a" data-theme="c">''')
         _v = VFFSL(SL,"tstrings",True)['all'] # u"$tstrings['all']" on line 10, col 213
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['all']")) # from line 10, col 213.
-        write(u'''</label></div>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['all']")) # from line 10, col 213.
+        write('''</label></div>
 \t\t\t\t<div onClick="jQuery(\'#screenshot\').attr(\'src\',\'/grab?r=275&mode=video#\' + new Date().getTime()); return false;"><input type="radio" id="radio-view-b" name="radio-view"><label for="radio-view-b" data-theme="c">''')
         _v = VFFSL(SL,"tstrings",True)['video'] # u"$tstrings['video']" on line 11, col 215
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['video']")) # from line 11, col 215.
-        write(u'''</label></div>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['video']")) # from line 11, col 215.
+        write('''</label></div>
 \t\t\t\t<div onClick="jQuery(\'#screenshot\').attr(\'src\',\'/grab?r=275&mode=osd#\' + new Date().getTime()); return false;"><input type="radio" id="radio-view-c" name="radio-view"><label for="radio-view-c" data-theme="c">''')
         _v = VFFSL(SL,"tstrings",True)['osd'] # u"$tstrings['osd']" on line 12, col 213
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['osd']")) # from line 12, col 213.
-        write(u'''</label></div>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['osd']")) # from line 12, col 213.
+        write('''</label></div>
 \t\t\t</fieldset>
 \t\t\t<div id="mainContent">
 \t\t\t\t<img id="screenshot" src="/grab?r=275&mode=all" width="275" height="154" alt="''')
         _v = VFFSL(SL,"tstrings",True)['screenshot'] # u"$tstrings['screenshot']" on line 15, col 83
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['screenshot']")) # from line 15, col 83.
-        write(u'''">
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['screenshot']")) # from line 15, col 83.
+        write('''">
 \t\t\t</div>
 \t\t\t<a href="#" onClick="location.reload(true)" data-role="button">''')
         _v = VFFSL(SL,"tstrings",True)['refresh'] # u"$tstrings['refresh']" on line 17, col 67
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['refresh']")) # from line 17, col 67.
-        write(u'''</a>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['refresh']")) # from line 17, col 67.
+        write('''</a>
 \t\t\t<div id="footer">
 \t\t\t\t<p>OpenWebif Mobile</p>
 \t\t\t\t<a onclick="document.location.href=\'/index?mode=fullpage\';return false;" href="#">''')
         _v = VFFSL(SL,"tstrings",True)['show_full_openwebif'] # u"$tstrings['show_full_openwebif']" on line 20, col 87
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['show_full_openwebif']")) # from line 20, col 87.
-        write(u'''</a>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['show_full_openwebif']")) # from line 20, col 87.
+        write('''</a>
 \t\t\t</div>
 \t\t</div>
 \t</div>
--- ./plugin/controllers/views/mobile/timerlist.py	(original)
+++ ./plugin/controllers/views/mobile/timerlist.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -63,7 +64,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -73,7 +74,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -86,13 +87,13 @@
         ########################################
         ## START - generated method body
         
-        write(u'''<body>
+        write('''<body>
 \t<div data-role="page">
 \t\t<div id="header">
 \t\t\t<div class="button" onClick="history.back()">''')
         _v = VFFSL(SL,"tstrings",True)['back'] # u"$tstrings['back']" on line 8, col 49
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['back']")) # from line 8, col 49.
-        write(u'''</div>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['back']")) # from line 8, col 49.
+        write('''</div>
 \t\t\t<!-- <div class="button-bold">+</div> -->
 \t\t\t<h1><a style="color:#FFF;text-decoration:none;" href=\'/mobile\'>OpenWebif</a></h1>
 \t\t</div>
@@ -101,8 +102,8 @@
 \t\t\t\t<div data-role="collapsible" data-disabled="true" data-collapsed-icon="false" data-theme="b">
 \t\t\t\t\t<h2>''')
         _v = VFFSL(SL,"tstrings",True)['timer_list'] # u"$tstrings['timer_list']" on line 15, col 10
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['timer_list']")) # from line 15, col 10.
-        write(u'''</h2>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['timer_list']")) # from line 15, col 10.
+        write('''</h2>
 \t\t\t\t</div>
 ''')
         oldstartdate = ""
@@ -113,84 +114,84 @@
             endtime = datetime.datetime.fromtimestamp(VFFSL(SL,"timer.end",True)).strftime("%H:%M")
             if VFFSL(SL,"startdate",True) != VFFSL(SL,"oldstartdate",True): # generated from line 23, col 5
                 if VFFSL(SL,"oldstartdate",True) != "": # generated from line 24, col 5
-                    write(u'''\t\t\t\t\t</ul>
+                    write('''\t\t\t\t\t</ul>
 \t\t\t\t</div>
 \t\t\t\t<div data-role="collapsible">
 ''')
                 else: # generated from line 28, col 5
-                    write(u'''\t\t\t\t<div data-role="collapsible" data-collapsed="false">
-''')
-                write(u'''\t\t\t\t\t<h2>''')
+                    write('''\t\t\t\t<div data-role="collapsible" data-collapsed="false">
+''')
+                write('''\t\t\t\t\t<h2>''')
                 _v = VFFSL(SL,"startdate",True) # u'$startdate' on line 31, col 10
-                if _v is not None: write(_filter(_v, rawExpr=u'$startdate')) # from line 31, col 10.
-                write(u'''</h2>
+                if _v is not None: write(_filter(_v, rawExpr='$startdate')) # from line 31, col 10.
+                write('''</h2>
 ''')
                 oldstartdate = VFFSL(SL,"startdate",True)
-                write(u'''\t\t\t\t\t<ul data-role="listview" data-inset="false" data-theme="a">
-''')
-            write(u'''\t\t\t\t\t<li>
+                write('''\t\t\t\t\t<ul data-role="listview" data-inset="false" data-theme="a">
+''')
+            write('''\t\t\t\t\t<li>
 ''')
             sref = quote(VFFSL(SL,"timer.serviceref",True), safe=' ~@#$&()*!+=:;,.?/\'')
             name = quote(VFFSL(SL,"timer.name",True), safe=' ~@#$&()*!+=:;,.?/\'').replace("'","\\'")
-            write(u'''\t\t\t\t\t\t<a href="#">
+            write('''\t\t\t\t\t\t<a href="#">
 \t\t\t\t\t\t\t<h2>''')
             _v = VFFSL(SL,"timer.name",True) # u'$timer.name' on line 39, col 12
-            if _v is not None: write(_filter(_v, rawExpr=u'$timer.name')) # from line 39, col 12.
-            write(u'''</h2>
+            if _v is not None: write(_filter(_v, rawExpr='$timer.name')) # from line 39, col 12.
+            write('''</h2>
 \t\t\t\t\t\t\t<p><strong>''')
             _v = VFFSL(SL,"timer.servicename",True) # u'$timer.servicename' on line 40, col 19
-            if _v is not None: write(_filter(_v, rawExpr=u'$timer.servicename')) # from line 40, col 19.
-            write(u''' - ''')
+            if _v is not None: write(_filter(_v, rawExpr='$timer.servicename')) # from line 40, col 19.
+            write(''' - ''')
             _v = VFFSL(SL,"starttime",True) # u'$starttime' on line 40, col 40
-            if _v is not None: write(_filter(_v, rawExpr=u'$starttime')) # from line 40, col 40.
-            write(u''' - ''')
+            if _v is not None: write(_filter(_v, rawExpr='$starttime')) # from line 40, col 40.
+            write(''' - ''')
             _v = VFFSL(SL,"endtime",True) # u'$endtime' on line 40, col 53
-            if _v is not None: write(_filter(_v, rawExpr=u'$endtime')) # from line 40, col 53.
-            write(u''' (''')
+            if _v is not None: write(_filter(_v, rawExpr='$endtime')) # from line 40, col 53.
+            write(''' (''')
             _v = VFFSL(SL,"duration",True) # u'$duration' on line 40, col 63
-            if _v is not None: write(_filter(_v, rawExpr=u'$duration')) # from line 40, col 63.
-            write(u''' min)</strong></p>
+            if _v is not None: write(_filter(_v, rawExpr='$duration')) # from line 40, col 63.
+            write(''' min)</strong></p>
 \t\t\t\t\t\t\t<p>''')
             _v = VFFSL(SL,"timer.description",True) # u'$timer.description' on line 41, col 11
-            if _v is not None: write(_filter(_v, rawExpr=u'$timer.description')) # from line 41, col 11.
-            write(u'''</p>
+            if _v is not None: write(_filter(_v, rawExpr='$timer.description')) # from line 41, col 11.
+            write('''</p>
 \t\t\t\t\t\t</a>
 \t\t\t\t\t\t<a href="#" onClick="deleteTimer(\'''')
             _v = VFFSL(SL,"sref",True) # u'$sref' on line 43, col 41
-            if _v is not None: write(_filter(_v, rawExpr=u'$sref')) # from line 43, col 41.
-            write(u"""', '""")
+            if _v is not None: write(_filter(_v, rawExpr='$sref')) # from line 43, col 41.
+            write("""', '""")
             _v = VFFSL(SL,"timer.begin",True) # u'$timer.begin' on line 43, col 50
-            if _v is not None: write(_filter(_v, rawExpr=u'$timer.begin')) # from line 43, col 50.
-            write(u"""', '""")
+            if _v is not None: write(_filter(_v, rawExpr='$timer.begin')) # from line 43, col 50.
+            write("""', '""")
             _v = VFFSL(SL,"timer.end",True) # u'$timer.end' on line 43, col 66
-            if _v is not None: write(_filter(_v, rawExpr=u'$timer.end')) # from line 43, col 66.
-            write(u"""', '""")
+            if _v is not None: write(_filter(_v, rawExpr='$timer.end')) # from line 43, col 66.
+            write("""', '""")
             _v = VFFSL(SL,"name",True) # u'$name' on line 43, col 80
-            if _v is not None: write(_filter(_v, rawExpr=u'$name')) # from line 43, col 80.
-            write(u'''\');" aria-expanded="false" class="ui-btn ui-btn-icon-notext ui-icon-delete ui-btn-a" title="delete"></a>
+            if _v is not None: write(_filter(_v, rawExpr='$name')) # from line 43, col 80.
+            write('''\');" aria-expanded="false" class="ui-btn ui-btn-icon-notext ui-icon-delete ui-btn-a" title="delete"></a>
 \t\t\t\t\t</li>
 ''')
-        write(u'''\t\t\t\t</ul>
+        write('''\t\t\t\t</ul>
 \t\t\t</div>
 \t\t\t<button onClick="document.location.reload(true)">''')
         _v = VFFSL(SL,"tstrings",True)['refresh'] # u"$tstrings['refresh']" on line 48, col 53
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['refresh']")) # from line 48, col 53.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['refresh']")) # from line 48, col 53.
+        write('''</button>
 \t\t</div>
 \t\t<div id="footer">
 \t\t\t<p>OpenWebif Mobile</p>
 \t\t\t<a onclick="document.location.href=\'/index?mode=fullpage\';return false;" href="#">''')
         _v = VFFSL(SL,"tstrings",True)['show_full_openwebif'] # u"$tstrings['show_full_openwebif']" on line 52, col 86
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['show_full_openwebif']")) # from line 52, col 86.
-        write(u'''</a>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['show_full_openwebif']")) # from line 52, col 86.
+        write('''</a>
 \t\t</div>
 \t<script>
 \tfunction deleteTimer(sRef, begin, end, title) {
 \t\tvar t = decodeURIComponent(title);
 \t\tif (confirm("''')
         _v = VFFSL(SL,"tstrings",True)['delete_timer_question'] # u"$tstrings['delete_timer_question']" on line 57, col 16
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['delete_timer_question']")) # from line 57, col 16.
-        write(u'''" + ": " + t) === true) {
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['delete_timer_question']")) # from line 57, col 16.
+        write('''" + ": " + t) === true) {
 \t\t\t$.ajax({ url: "/api/timerdelete?sRef=" + sRef + "&begin=" + begin + "&end=" + end, cache: false, async: false}).done(function() {
 \t\t\t\tlocation.reload(true);
 \t\t\t});
--- ./plugin/controllers/views/responsive/index.py	(original)
+++ ./plugin/controllers/views/responsive/index.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -60,7 +61,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -70,7 +71,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,7 +84,7 @@
         ########################################
         ## START - generated method body
         
-        write(u'''<div class="page-loader-wrapper">
+        write('''<div class="page-loader-wrapper">
 \t<div class="loader">
 \t\t<div class="preloader">
 \t\t\t<div class="spinner-layer pl-red">
@@ -97,8 +98,8 @@
 \t\t</div>
 \t\t<p>''')
         _v = VFFSL(SL,"tstrings",True)['loading'] # u"$tstrings['loading']" on line 14, col 6
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['loading']")) # from line 14, col 6.
-        write(u'''...</p>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['loading']")) # from line 14, col 6.
+        write('''...</p>
 \t</div>
 </div>
 ''')
--- ./plugin/controllers/views/responsive/main.py	(original)
+++ ./plugin/controllers/views/responsive/main.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -62,7 +63,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -72,7 +73,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -85,7 +86,7 @@
         ########################################
         ## START - generated method body
         
-        write(u'''
+        write('''
 <!DOCTYPE html>
 <html lang="en">
 <head>
@@ -95,12 +96,12 @@
 \t<script type="text/javascript" src="/js/chosen.1.8.2.min.js"></script>
 \t<script type="text/javascript">initJsTranslation(''')
         _v = VFFSL(SL,"dumps",False)(VFFSL(SL,"tstrings",True)) # u'$dumps($tstrings)' on line 12, col 51
-        if _v is not None: write(_filter(_v, rawExpr=u'$dumps($tstrings)')) # from line 12, col 51.
-        write(u''')</script>
+        if _v is not None: write(_filter(_v, rawExpr='$dumps($tstrings)')) # from line 12, col 51.
+        write(''')</script>
 \t<title>''')
         _v = VFFSL(SL,"boxname",True) # u'$boxname' on line 13, col 9
-        if _v is not None: write(_filter(_v, rawExpr=u'$boxname')) # from line 13, col 9.
-        write(u''' - OpenWebif</title>
+        if _v is not None: write(_filter(_v, rawExpr='$boxname')) # from line 13, col 9.
+        write(''' - OpenWebif</title>
 \t<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
 \t<meta http-equiv="X-UA-Compatible" content="IE=edge">
 \t<meta charset="UTF-8">
@@ -124,8 +125,8 @@
 
 <body class="theme-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 35, col 20
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 35, col 20.
-        write(u'''">
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 35, col 20.
+        write('''">
 \t<!-- Overlay For Sidebars -->
 \t<div class="overlay"></div>
 \t<div class="search-bar search-bar-epg">
@@ -136,11 +137,11 @@
 \t\t</div>
 \t\t<input type="text" id="epgsearchtext" placeholder="''')
         _v = VFFSL(SL,"tstrings",True)['start_typing'] # u"$tstrings['start_typing']" on line 44, col 54
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['start_typing']")) # from line 44, col 54.
-        write(u''' ( ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['start_typing']")) # from line 44, col 54.
+        write(''' ( ''')
         _v = VFFSL(SL,"tstrings",True)['epgsearch'] # u"$tstrings['epgsearch']" on line 44, col 82
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['epgsearch']")) # from line 44, col 82.
-        write(u''' ) ...">
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['epgsearch']")) # from line 44, col 82.
+        write(''' ) ...">
 \t\t<div class="close-search">
 \t\t\t<span class="start-search">
 \t\t\t\t<i class="material-icons">search</i>
@@ -150,7 +151,7 @@
 \t</div>
 ''')
         if VFFSL(SL,"vti",True) == "1": # generated from line 52, col 2
-            write(u'''\t<div class="search-bar search-bar-movie">
+            write('''\t<div class="search-bar search-bar-movie">
 \t\t<div class="search-icon">
 \t\t\t<div class="start-search">
 \t\t\t\t<i class="material-icons">search</i>
@@ -158,11 +159,11 @@
 \t\t</div>
 \t\t<input type="text" id="moviesearchtext" placeholder="''')
             _v = VFFSL(SL,"tstrings",True)['start_typing'] # u"$tstrings['start_typing']" on line 59, col 56
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['start_typing']")) # from line 59, col 56.
-            write(u''' ( ''')
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['start_typing']")) # from line 59, col 56.
+            write(''' ( ''')
             _v = VFFSL(SL,"tstrings",True)['moviesearch'] # u"$tstrings['moviesearch']" on line 59, col 84
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['moviesearch']")) # from line 59, col 84.
-            write(u''' ) ...">
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['moviesearch']")) # from line 59, col 84.
+            write(''' ) ...">
 \t\t<div class="close-search">
 \t\t\t<span class="start-search">
 \t\t\t\t<i class="material-icons">search</i>
@@ -171,7 +172,7 @@
 \t\t</div>
 \t</div>
 ''')
-        write(u'''\t<span id="topmenuheader">
+        write('''\t<span id="topmenuheader">
 \t\t<nav class="navbar">
 \t\t\t<div class="container-fluid">
 \t\t\t\t<div class="navbar-header">
@@ -191,32 +192,32 @@
 \t\t\t\t\t\t<!-- Call Search -->
 \t\t\t\t\t\t<li><a href="javascript:void(0);" class="js-search-epg" data-close="true" title="''')
         _v = VFFSL(SL,"tstrings",True)['epgsearch'] # u"$tstrings['epgsearch']" on line 86, col 88
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['epgsearch']")) # from line 86, col 88.
-        write(u'''" ><i class="material-icons">search</i></a></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['epgsearch']")) # from line 86, col 88.
+        write('''" ><i class="material-icons">search</i></a></li>
 ''')
         if VFFSL(SL,"vti",True) == "1": # generated from line 87, col 7
-            write(u'''\t\t\t\t\t\t<li><a href="javascript:void(0);" class="js-search-movie" data-close="true" title="''')
+            write('''\t\t\t\t\t\t<li><a href="javascript:void(0);" class="js-search-movie" data-close="true" title="''')
             _v = VFFSL(SL,"tstrings",True)['moviesearch'] # u"$tstrings['moviesearch']" on line 88, col 90
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['moviesearch']")) # from line 88, col 90.
-            write(u'''"><i class="material-icons">youtube_searched_for</i></a></li>
-''')
-        write(u'''\t\t\t\t\t\t<!-- #END# Call Search -->
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['moviesearch']")) # from line 88, col 90.
+            write('''"><i class="material-icons">youtube_searched_for</i></a></li>
+''')
+        write('''\t\t\t\t\t\t<!-- #END# Call Search -->
 \t\t\t\t\t\t<li class="dropdown" id="responsive_rec_info"></li>
 \t\t\t\t\t\t<li class="dropdown" id="responsive_stream_info"></li>
 \t\t\t\t\t\t<li class="dropdown"><a href=\'javascript:void(0);\' data-toggle="modal" data-target="#SendMessageModal" title="''')
         _v = VFFSL(SL,"tstrings",True)['sendamessage'] # u"$tstrings['sendamessage']" on line 93, col 117
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['sendamessage']")) # from line 93, col 117.
-        write(u'''"><i class="material-icons">message</i></a></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['sendamessage']")) # from line 93, col 117.
+        write('''"><i class="material-icons">message</i></a></li>
 \t\t\t\t\t\t<li class="dropdown"><a href=\'#\' onclick="load_maincontent(\'ajax/screenshot\');return false;" title="''')
         _v = VFFSL(SL,"tstrings",True)['grabscreenshot'] # u"$tstrings['grabscreenshot']" on line 94, col 107
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['grabscreenshot']")) # from line 94, col 107.
-        write(u'''"><i class="material-icons">photo_camera</i></a></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['grabscreenshot']")) # from line 94, col 107.
+        write('''"><i class="material-icons">photo_camera</i></a></li>
 \t\t\t\t\t\t<!-- #END# Notifications -->
 \t\t\t\t\t\t<li id="osd_power_status"></li>
 \t\t\t\t\t\t<li class="dropdown"><a href=\'javascript:void(0);\' data-toggle="modal" data-target="#PowerModal" title="''')
         _v = VFN(VFFSL(SL,"tstrings",True)['powercontrol'],"replace",False)(' ','&nbsp;') # u"$tstrings['powercontrol'].replace(' ','&nbsp;')" on line 97, col 111
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['powercontrol'].replace(' ','&nbsp;')")) # from line 97, col 111.
-        write(u'''"><i class="material-icons">settings_power</i></a></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['powercontrol'].replace(' ','&nbsp;')")) # from line 97, col 111.
+        write('''"><i class="material-icons">settings_power</i></a></li>
 \t\t\t\t\t\t<!-- #END# Tasks -->
 \t\t\t\t\t\t<li><a href="javascript:void(0);" class="js-right-sidebar" data-close="true"><i class="material-icons">more_vert</i></a></li>
 \t\t\t\t\t</ul>
@@ -233,34 +234,34 @@
 ''')
         if not VFFSL(SL,"showname",True): # generated from line 111, col 7
             boxname = VFFSL(SL,"tstrings",True)['box_info']
-        write(u'''\t\t\t\t\t\t<li class="header" id="leftsidemenuheader">''')
+        write('''\t\t\t\t\t\t<li class="header" id="leftsidemenuheader">''')
         _v = VFFSL(SL,"boxname",True) # u'$boxname' on line 114, col 50
-        if _v is not None: write(_filter(_v, rawExpr=u'$boxname')) # from line 114, col 50.
-        write(u'''</li>
+        if _v is not None: write(_filter(_v, rawExpr='$boxname')) # from line 114, col 50.
+        write('''</li>
 \t\t\t\t\t\t<li class="active" style="display:none;"></li>
 \t\t\t\t\t\t<li>
 \t\t\t\t\t\t\t<a href="javascript:void(0);" class="menu-toggle">
 \t\t\t\t\t\t\t\t<i class="material-icons">dialpad</i>
 \t\t\t\t\t\t\t\t<span>''')
         _v = VFFSL(SL,"tstrings",True)['remote'] # u"$tstrings['remote']" on line 119, col 15
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['remote']")) # from line 119, col 15.
-        write(u'''</span>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['remote']")) # from line 119, col 15.
+        write('''</span>
 \t\t\t\t\t\t\t</a>
 \t\t\t\t\t\t\t<ul class="ml-menu noselect">
 \t\t\t\t\t\t\t\t<li class="collapse">
 \t\t\t\t\t\t\t\t\t<a href=\'#\' title=''')
         _v = VFN(VFFSL(SL,"tstrings",True)['showfullremote'],"replace",False)(" ","&nbsp;") # u'$tstrings[\'showfullremote\'].replace(" ","&nbsp;")' on line 123, col 28
-        if _v is not None: write(_filter(_v, rawExpr=u'$tstrings[\'showfullremote\'].replace(" ","&nbsp;")')) # from line 123, col 28.
-        write(u''' onclick="toggleFullRemote();return false;">Full</a>
+        if _v is not None: write(_filter(_v, rawExpr='$tstrings[\'showfullremote\'].replace(" ","&nbsp;")')) # from line 123, col 28.
+        write(''' onclick="toggleFullRemote();return false;">Full</a>
 \t\t\t\t\t\t\t\t</li>
 ''')
         if VFFSL(SL,"RemoteControlView",True) == 'checked': # generated from line 125, col 10
-            write(u'''\t\t\t\t\t\t\t\t\t<span style="display:None;" id="symbolRemoteView">
+            write('''\t\t\t\t\t\t\t\t\t<span style="display:None;" id="symbolRemoteView">
 ''')
         else: # generated from line 127, col 10
-            write(u'''\t\t\t\t\t\t\t\t\t<span id="symbolRemoteView">
-''')
-        write(u'''\t\t\t\t\t\t\t\t\t<li class="align-right" style="margin-top:-30px;">
+            write('''\t\t\t\t\t\t\t\t\t<span id="symbolRemoteView">
+''')
+        write('''\t\t\t\t\t\t\t\t\t<li class="align-right" style="margin-top:-30px;">
 \t\t\t\t\t\t\t\t\t\t<span data-toggle="collapse" data-target="#rcunumbers" aria-expanded="false" aria-controls="collapseExample" style="cursor:pointer;"><i class="material-icons material-icons-centered">expand_more</i></span>
 \t\t\t\t\t\t\t\t\t</li>
 \t\t\t\t\t\t\t\t\t<li class="collapse" id="rcunumbers">
@@ -571,16 +572,16 @@
 \t\t\t\t\t\t\t\t</span>
 ''')
         if VFFSL(SL,"RemoteControlView",True) == 'checked': # generated from line 439, col 9
-            write(u'''\t\t\t\t\t\t\t\t\t<li id="fullRemoteView">
+            write('''\t\t\t\t\t\t\t\t\t<li id="fullRemoteView">
 \t\t\t\t\t\t\t\t\t\t<div id="remote_container" style="width:100%; text-align:center;"></div>
 \t\t\t\t\t\t\t\t\t<li>
 ''')
         else: # generated from line 443, col 9
-            write(u'''\t\t\t\t\t\t\t\t\t<li id="fullRemoteView" style="display:None;">
+            write('''\t\t\t\t\t\t\t\t\t<li id="fullRemoteView" style="display:None;">
 \t\t\t\t\t\t\t\t\t\t<div id="remote_container" style="width:100%; text-align:center;"></div>
 \t\t\t\t\t\t\t\t\t<li>
 ''')
-        write(u'''\t\t\t\t\t\t\t\t<li>
+        write('''\t\t\t\t\t\t\t\t<li>
 \t\t\t\t\t\t\t\t\t<table class="rcu-table">
 \t\t\t\t\t\t\t\t\t\t<tr>
 \t\t\t\t\t\t\t\t\t\t\t<td colspan="2"><p></p>
@@ -590,22 +591,22 @@
 \t\t\t\t\t\t\t\t\t\t\t<td>
 \t\t\t\t\t\t\t\t\t\t\t\t<span style="cursor:pointer;" title="Enable/Disable Screenhot on key press or ''')
         _v = VFFSL(SL,"tstrings",True)['grabscreenshot'] # u"$tstrings['grabscreenshot']" on line 456, col 91
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['grabscreenshot']")) # from line 456, col 91.
-        write(u'''" onclick="load_maincontent(\'ajax/screenshot\');return false;">''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['grabscreenshot']")) # from line 456, col 91.
+        write('''" onclick="load_maincontent(\'ajax/screenshot\');return false;">''')
         _v = VFFSL(SL,"tstrings",True)['grabscreenshot'] # u"$tstrings['grabscreenshot']" on line 456, col 180
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['grabscreenshot']")) # from line 456, col 180.
-        write(u"""</span>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['grabscreenshot']")) # from line 456, col 180.
+        write("""</span>
 \t\t\t\t\t\t\t\t\t\t\t</td>
 \t\t\t\t\t\t\t\t\t\t\t<td>
 \t\t\t\t\t\t\t\t\t\t\t\t<div class='switch'>
 \t\t\t\t\t\t\t\t\t\t\t\t\t<span class='m-r-10 font-12'></span>
 \t\t\t\t\t\t\t\t\t\t\t\t\t<label><input """)
         _v = VFFSL(SL,"ScreenshotOnRCU",True) # u'$ScreenshotOnRCU' on line 461, col 28
-        if _v is not None: write(_filter(_v, rawExpr=u'$ScreenshotOnRCU')) # from line 461, col 28.
-        write(u''' type=\'checkbox\' class="remotegrabscreen" id=\'remotegrabscreen1\' name="remotegrabscreen1" ><span class=\'lever switch-col-''')
+        if _v is not None: write(_filter(_v, rawExpr='$ScreenshotOnRCU')) # from line 461, col 28.
+        write(''' type=\'checkbox\' class="remotegrabscreen" id=\'remotegrabscreen1\' name="remotegrabscreen1" ><span class=\'lever switch-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 461, col 165
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 461, col 165.
-        write(u'''\'></span></label>
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 461, col 165.
+        write('''\'></span></label>
 \t\t\t\t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t\t\t</td>
 \t\t\t\t\t\t\t\t\t\t</tr>
@@ -613,8 +614,8 @@
 \t\t\t\t\t\t\t\t\t\t\t<td colspan="2">
 \t\t\t\t\t\t\t\t\t\t\t\t<h6>''')
         _v = VFFSL(SL,"tstrings",True)['shiftforlong'] # u"$tstrings['shiftforlong']" on line 467, col 17
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['shiftforlong']")) # from line 467, col 17.
-        write(u'''</h6>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['shiftforlong']")) # from line 467, col 17.
+        write('''</h6>
 \t\t\t\t\t\t\t\t\t\t\t</td>
 \t\t\t\t\t\t\t\t\t\t</tr>
 \t\t\t\t\t\t\t\t\t</table>
@@ -626,8 +627,8 @@
 \t\t\t\t\t\t\t\t<i class="material-icons">tv</i>
 \t\t\t\t\t\t\t\t<span>''')
         _v = VFFSL(SL,"tstrings",True)['television'] # u"$tstrings['television']" on line 477, col 15
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['television']")) # from line 477, col 15.
-        write(u'''</span>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['television']")) # from line 477, col 15.
+        write('''</span>
 \t\t\t\t\t\t\t</a>
 \t\t\t\t\t\t</li>
 \t\t\t\t\t\t<li>
@@ -635,8 +636,8 @@
 \t\t\t\t\t\t\t\t<i class="material-icons">radio</i>
 \t\t\t\t\t\t\t\t<span>''')
         _v = VFFSL(SL,"tstrings",True)['radio'] # u"$tstrings['radio']" on line 483, col 15
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['radio']")) # from line 483, col 15.
-        write(u'''</span>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['radio']")) # from line 483, col 15.
+        write('''</span>
 \t\t\t\t\t\t\t</a>
 \t\t\t\t\t\t</li>
 \t\t\t\t\t\t<li>
@@ -644,8 +645,8 @@
 \t\t\t\t\t\t\t\t<i class="material-icons">today</i>
 \t\t\t\t\t\t\t\t<span>''')
         _v = VFFSL(SL,"tstrings",True)['epg'] # u"$tstrings['epg']" on line 489, col 15
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['epg']")) # from line 489, col 15.
-        write(u'''</span>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['epg']")) # from line 489, col 15.
+        write('''</span>
 \t\t\t\t\t\t\t</a>
 \t\t\t\t\t\t</li>
 \t\t\t\t\t\t<li>
@@ -653,8 +654,8 @@
 \t\t\t\t\t\t\t\t<i class="material-icons">movie</i>
 \t\t\t\t\t\t\t\t<span>''')
         _v = VFFSL(SL,"tstrings",True)['movies'] # u"$tstrings['movies']" on line 495, col 15
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['movies']")) # from line 495, col 15.
-        write(u'''</span>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['movies']")) # from line 495, col 15.
+        write('''</span>
 \t\t\t\t\t\t\t</a>
 \t\t\t\t\t\t</li>
 \t\t\t\t\t\t<li>
@@ -662,30 +663,30 @@
 \t\t\t\t\t\t\t\t<i class="material-icons">alarm</i>
 \t\t\t\t\t\t\t\t<span>''')
         _v = VFFSL(SL,"tstrings",True)['timers'] # u"$tstrings['timers']" on line 501, col 15
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['timers']")) # from line 501, col 15.
-        write(u'''</span>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['timers']")) # from line 501, col 15.
+        write('''</span>
 \t\t\t\t\t\t\t</a>
 \t\t\t\t\t\t</li>
 ''')
         for extra in VFFSL(SL,"extras",True): # generated from line 504, col 7
             if VFFSL(SL,"extra",True)["key"] in ("ajax/at",): # generated from line 505, col 8
-                write(u'''\t\t\t\t\t\t\t\t<li>
+                write('''\t\t\t\t\t\t\t\t<li>
 \t\t\t\t\t\t\t\t\t<a href=\'javascript:void(0);\' data-close="true" onclick="load_maincontent(\'ajax/at\'); return false;" >
 \t\t\t\t\t\t\t\t\t\t<i class="material-icons">history</i>
 \t\t\t\t\t\t\t\t\t\t<span>''')
                 _v = VFFSL(SL,"extra",True)["description"] # u'$extra["description"]' on line 509, col 17
-                if _v is not None: write(_filter(_v, rawExpr=u'$extra["description"]')) # from line 509, col 17.
-                write(u'''</span>
+                if _v is not None: write(_filter(_v, rawExpr='$extra["description"]')) # from line 509, col 17.
+                write('''</span>
 \t\t\t\t\t\t\t\t\t</a>
 \t\t\t\t\t\t\t\t</li>
 ''')
-        write(u'''\t\t\t\t\t\t<li>
+        write('''\t\t\t\t\t\t<li>
 \t\t\t\t\t\t\t<a href=\'javascript:void(0);\' data-close="true" onclick="load_maincontent(\'ajax/settings\'); return false;" >
 \t\t\t\t\t\t\t\t<i class="material-icons">settings</i>
 \t\t\t\t\t\t\t\t<span>''')
         _v = VFFSL(SL,"tstrings",True)['settings'] # u"$tstrings['settings']" on line 517, col 15
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['settings']")) # from line 517, col 15.
-        write(u'''</span>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['settings']")) # from line 517, col 15.
+        write('''</span>
 \t\t\t\t\t\t\t</a>
 \t\t\t\t\t\t</li>
 \t\t\t\t\t\t<li>
@@ -693,8 +694,8 @@
 \t\t\t\t\t\t\t\t<i class="material-icons">view_list</i>
 \t\t\t\t\t\t\t\t<span>''')
         _v = VFFSL(SL,"tstrings",True)['Bouquet_Editor'] # u"$tstrings['Bouquet_Editor']" on line 523, col 15
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['Bouquet_Editor']")) # from line 523, col 15.
-        write(u'''</span>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['Bouquet_Editor']")) # from line 523, col 15.
+        write('''</span>
 \t\t\t\t\t\t\t</a>
 \t\t\t\t\t\t</li>
 \t\t\t\t\t\t<li>
@@ -702,8 +703,8 @@
 \t\t\t\t\t\t\t\t<i class="material-icons">wifi</i>
 \t\t\t\t\t\t\t\t<span>''')
         _v = VFFSL(SL,"tstrings",True)['satfinder'] # u"$tstrings['satfinder']" on line 529, col 15
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['satfinder']")) # from line 529, col 15.
-        write(u'''</span>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['satfinder']")) # from line 529, col 15.
+        write('''</span>
 \t\t\t\t\t\t\t</a>
 \t\t\t\t\t\t</li>
 \t\t\t\t\t\t<li>
@@ -711,8 +712,8 @@
 \t\t\t\t\t\t\t\t<i class="material-icons">info</i>
 \t\t\t\t\t\t\t\t<span>''')
         _v = VFFSL(SL,"tstrings",True)['box_info'] # u"$tstrings['box_info']" on line 535, col 15
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['box_info']")) # from line 535, col 15.
-        write(u'''</span>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['box_info']")) # from line 535, col 15.
+        write('''</span>
 \t\t\t\t\t\t\t</a>
 \t\t\t\t\t\t</li>
 \t\t\t\t\t\t<li>
@@ -720,49 +721,49 @@
 \t\t\t\t\t\t\t\t<i class="material-icons">widgets</i>
 \t\t\t\t\t\t\t\t<span>''')
         _v = VFFSL(SL,"tstrings",True)['extras'] # u"$tstrings['extras']" on line 541, col 15
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['extras']")) # from line 541, col 15.
-        write(u'''</span>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['extras']")) # from line 541, col 15.
+        write('''</span>
 \t\t\t\t\t\t\t</a>
 \t\t\t\t\t\t\t<ul class="ml-menu">
 ''')
         if VFFSL(SL,"webtv",True): # generated from line 544, col 8
-            write(u'''\t\t\t\t\t\t\t\t<li><a href=\'#\' data-close="true" onclick="load_maincontent(\'ajax/webtv\'); return false;">''')
+            write('''\t\t\t\t\t\t\t\t<li><a href=\'#\' data-close="true" onclick="load_maincontent(\'ajax/webtv\'); return false;">''')
             _v = VFFSL(SL,"tstrings",True)['webtv'] # u"$tstrings['webtv']" on line 545, col 99
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['webtv']")) # from line 545, col 99.
-            write(u'''</a></li>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['webtv']")) # from line 545, col 99.
+            write('''</a></li>
 ''')
         for extra in VFFSL(SL,"extras",True): # generated from line 547, col 8
             target_url = VFFSL(SL,"extra",True)["key"];
             if VFFSL(SL,"target_url",True) not in ('ajax/at','ajax/bqe','ajax/settings'): # generated from line 549, col 9
                 if 'nw' in VFFSL(SL,"extra",True): # generated from line 550, col 10
                     if VFFSL(SL,"extra",True)["nw"] == "1": # generated from line 551, col 11
-                        write(u'''\t\t\t\t\t\t\t\t\t\t<li><a href="''')
+                        write('''\t\t\t\t\t\t\t\t\t\t<li><a href="''')
                         _v = VFFSL(SL,"target_url",True) # u'$target_url' on line 552, col 24
-                        if _v is not None: write(_filter(_v, rawExpr=u'$target_url')) # from line 552, col 24.
-                        write(u'''" target=\'_blank\'>''')
+                        if _v is not None: write(_filter(_v, rawExpr='$target_url')) # from line 552, col 24.
+                        write('''" target=\'_blank\'>''')
                         _v = VFFSL(SL,"extra",True)["description"] # u'$extra["description"]' on line 552, col 53
-                        if _v is not None: write(_filter(_v, rawExpr=u'$extra["description"]')) # from line 552, col 53.
-                        write(u'''</a></li>
+                        if _v is not None: write(_filter(_v, rawExpr='$extra["description"]')) # from line 552, col 53.
+                        write('''</a></li>
 ''')
                     else: # generated from line 553, col 11
-                        write(u'''\t\t\t\t\t\t\t\t\t\t<li><a class="lmc pop" href="''')
+                        write('''\t\t\t\t\t\t\t\t\t\t<li><a class="lmc pop" href="''')
                         _v = VFFSL(SL,"target_url",True) # u'$target_url' on line 554, col 40
-                        if _v is not None: write(_filter(_v, rawExpr=u'$target_url')) # from line 554, col 40.
-                        write(u'''">''')
+                        if _v is not None: write(_filter(_v, rawExpr='$target_url')) # from line 554, col 40.
+                        write('''">''')
                         _v = VFFSL(SL,"extra",True)["description"] # u'$extra["description"]' on line 554, col 53
-                        if _v is not None: write(_filter(_v, rawExpr=u'$extra["description"]')) # from line 554, col 53.
-                        write(u'''</a></li>
+                        if _v is not None: write(_filter(_v, rawExpr='$extra["description"]')) # from line 554, col 53.
+                        write('''</a></li>
 ''')
                 else: # generated from line 556, col 10
-                    write(u'''\t\t\t\t\t\t\t\t\t\t<li><a href=\'javascript:void(0);\' data-close="true" onclick="load_maincontent(\'''')
+                    write('''\t\t\t\t\t\t\t\t\t\t<li><a href=\'javascript:void(0);\' data-close="true" onclick="load_maincontent(\'''')
                     _v = VFFSL(SL,"target_url",True) # u'$target_url' on line 557, col 90
-                    if _v is not None: write(_filter(_v, rawExpr=u'$target_url')) # from line 557, col 90.
-                    write(u'''\'); return false;" >''')
+                    if _v is not None: write(_filter(_v, rawExpr='$target_url')) # from line 557, col 90.
+                    write('''\'); return false;" >''')
                     _v = VFFSL(SL,"extra",True)["description"] # u'$extra["description"]' on line 557, col 121
-                    if _v is not None: write(_filter(_v, rawExpr=u'$extra["description"]')) # from line 557, col 121.
-                    write(u'''</a></li>
-''')
-        write(u'''\t\t\t\t\t\t\t</ul>
+                    if _v is not None: write(_filter(_v, rawExpr='$extra["description"]')) # from line 557, col 121.
+                    write('''</a></li>
+''')
+        write('''\t\t\t\t\t\t\t</ul>
 \t\t\t\t\t\t</li>
 \t\t\t\t\t</ul>
 \t\t\t\t</div>
@@ -782,12 +783,12 @@
 \t\t\t<aside id="rightsidebar" class="right-sidebar">
 \t\t\t\t<ul class="nav nav-tabs tab-nav-right tab-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 579, col 51
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 579, col 51.
-        write(u'''" role="tablist">
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 579, col 51.
+        write('''" role="tablist">
 \t\t\t\t\t<li role="presentation" class="active"><a href="#settings" data-toggle="tab">''')
         _v = VFFSL(SL,"tstrings",True)['settings'] # u"$tstrings['settings']" on line 580, col 83
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['settings']")) # from line 580, col 83.
-        write(u'''</a></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['settings']")) # from line 580, col 83.
+        write('''</a></li>
 \t\t\t\t\t<li role="presentation"><a href="#skins" data-toggle="tab">SKINS</a></li>
 \t\t\t\t</ul>
 \t\t\t\t<div class="tab-content">
@@ -795,140 +796,140 @@
 \t\t\t\t\t\t<div class="demo-settings">
 \t\t\t\t\t\t\t<p>''')
         _v = VFFSL(SL,"tstrings",True)['epgsearch'] # u"$tstrings['epgsearch']" on line 586, col 11
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['epgsearch']")) # from line 586, col 11.
-        write(u'''</p>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['epgsearch']")) # from line 586, col 11.
+        write('''</p>
 \t\t\t\t\t\t\t<ul class="setting-list">
 \t\t\t\t\t\t\t\t<li>
 \t\t\t\t\t\t\t\t\t<span>''')
         _v = VFFSL(SL,"tstrings",True)['epgsearchextended'] # u"$tstrings['epgsearchextended']" on line 589, col 16
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['epgsearchextended']")) # from line 589, col 16.
-        write(u'''</span>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['epgsearchextended']")) # from line 589, col 16.
+        write('''</span>
 \t\t\t\t\t\t\t\t\t<div class="switch">
 \t\t\t\t\t\t\t\t\t\t<label><input type="checkbox" id="myepgbtn0" ''')
         _v = VFFSL(SL,"EPGSearchFull",True) # u'$EPGSearchFull' on line 591, col 56
-        if _v is not None: write(_filter(_v, rawExpr=u'$EPGSearchFull')) # from line 591, col 56.
-        write(u'''><span class="lever switch-col-''')
+        if _v is not None: write(_filter(_v, rawExpr='$EPGSearchFull')) # from line 591, col 56.
+        write('''><span class="lever switch-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 591, col 101
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 591, col 101.
-        write(u''' vtiwebconfig"></span></label>
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 591, col 101.
+        write(''' vtiwebconfig"></span></label>
 \t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t</li>
 \t\t\t\t\t\t\t\t<li>
 \t\t\t\t\t\t\t\t\t<span>''')
         _v = VFFSL(SL,"tstrings",True)['epgsearchbouquetsonly'] # u"$tstrings['epgsearchbouquetsonly']" on line 595, col 16
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['epgsearchbouquetsonly']")) # from line 595, col 16.
-        write(u'''</span>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['epgsearchbouquetsonly']")) # from line 595, col 16.
+        write('''</span>
 \t\t\t\t\t\t\t\t\t<div class="switch">
 \t\t\t\t\t\t\t\t\t\t<label><input type="checkbox" id="myepgbtn1" ''')
         _v = VFFSL(SL,"EPGSearchBQonly",True) # u'$EPGSearchBQonly' on line 597, col 56
-        if _v is not None: write(_filter(_v, rawExpr=u'$EPGSearchBQonly')) # from line 597, col 56.
-        write(u'''><span class="lever switch-col-''')
+        if _v is not None: write(_filter(_v, rawExpr='$EPGSearchBQonly')) # from line 597, col 56.
+        write('''><span class="lever switch-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 597, col 103
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 597, col 103.
-        write(u''' vtiwebconfig"></span></label>
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 597, col 103.
+        write(''' vtiwebconfig"></span></label>
 \t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t</li>
 \t\t\t\t\t\t\t</ul>
 \t\t\t\t\t\t<p>''')
         _v = VFFSL(SL,"tstrings",True)['moviesearch'] # u"$tstrings['moviesearch']" on line 601, col 10
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['moviesearch']")) # from line 601, col 10.
-        write(u'''</p>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['moviesearch']")) # from line 601, col 10.
+        write('''</p>
 \t\t\t\t\t\t\t<ul class="setting-list">
 \t\t\t\t\t\t\t\t<li>
 \t\t\t\t\t\t\t\t\t<span>''')
         _v = VFFSL(SL,"tstrings",True)['inc_shortdesc'] # u"$tstrings['inc_shortdesc']" on line 604, col 16
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['inc_shortdesc']")) # from line 604, col 16.
-        write(u'''</span>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['inc_shortdesc']")) # from line 604, col 16.
+        write('''</span>
 \t\t\t\t\t\t\t\t\t<div class="switch">
 \t\t\t\t\t\t\t\t\t\t<label><input type="checkbox" id="mymoviesearchbtn0" ''')
         _v = VFFSL(SL,"MovieSearchShort",True) # u'$MovieSearchShort' on line 606, col 64
-        if _v is not None: write(_filter(_v, rawExpr=u'$MovieSearchShort')) # from line 606, col 64.
-        write(u'''><span class="lever switch-col-''')
+        if _v is not None: write(_filter(_v, rawExpr='$MovieSearchShort')) # from line 606, col 64.
+        write('''><span class="lever switch-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 606, col 112
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 606, col 112.
-        write(u''' vtiwebconfig"></span></label>
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 606, col 112.
+        write(''' vtiwebconfig"></span></label>
 \t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t</li>
 \t\t\t\t\t\t\t\t<li>
 \t\t\t\t\t\t\t\t\t<span>''')
         _v = VFFSL(SL,"tstrings",True)['inc_extdesc'] # u"$tstrings['inc_extdesc']" on line 610, col 16
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['inc_extdesc']")) # from line 610, col 16.
-        write(u'''</span>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['inc_extdesc']")) # from line 610, col 16.
+        write('''</span>
 \t\t\t\t\t\t\t\t\t<div class="switch">
 \t\t\t\t\t\t\t\t\t\t<label><input type="checkbox" id="mymoviesearchbtn1" ''')
         _v = VFFSL(SL,"MovieSearchExtended",True) # u'$MovieSearchExtended' on line 612, col 64
-        if _v is not None: write(_filter(_v, rawExpr=u'$MovieSearchExtended')) # from line 612, col 64.
-        write(u'''><span class="lever switch-col-''')
+        if _v is not None: write(_filter(_v, rawExpr='$MovieSearchExtended')) # from line 612, col 64.
+        write('''><span class="lever switch-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 612, col 115
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 612, col 115.
-        write(u''' vtiwebconfig"></span></label>
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 612, col 115.
+        write(''' vtiwebconfig"></span></label>
 \t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t</li>
 \t\t\t\t\t\t\t</ul>
 \t\t\t\t\t\t\t
 \t\t\t\t\t\t\t<p>''')
         _v = VFFSL(SL,"tstrings",True)['common_settings'] # u"$tstrings['common_settings']" on line 617, col 11
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['common_settings']")) # from line 617, col 11.
-        write(u'''</p>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['common_settings']")) # from line 617, col 11.
+        write('''</p>
 \t\t\t\t\t\t\t<ul class="setting-list">
 \t\t\t\t\t\t\t\t<li>
 \t\t\t\t\t\t\t\t\t<span>''')
         _v = VFFSL(SL,"tstrings",True)['showfullremoteshort'] # u"$tstrings['showfullremoteshort']" on line 620, col 16
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['showfullremoteshort']")) # from line 620, col 16.
-        write(u'''</span>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['showfullremoteshort']")) # from line 620, col 16.
+        write('''</span>
 \t\t\t\t\t\t\t\t\t<div class="switch">
 \t\t\t\t\t\t\t\t\t\t<label><input type="checkbox" id="remotecontrolview" ''')
         _v = VFFSL(SL,"RemoteControlView",True) # u'$RemoteControlView' on line 622, col 64
-        if _v is not None: write(_filter(_v, rawExpr=u'$RemoteControlView')) # from line 622, col 64.
-        write(u''' ><span class="lever switch-col-''')
+        if _v is not None: write(_filter(_v, rawExpr='$RemoteControlView')) # from line 622, col 64.
+        write(''' ><span class="lever switch-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 622, col 114
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 622, col 114.
-        write(u''' vtiwebconfig"></span></label>
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 622, col 114.
+        write(''' vtiwebconfig"></span></label>
 \t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t</li>
 \t\t\t\t\t\t\t\t<li>
 \t\t\t\t\t\t\t\t\t<span>''')
         _v = VFFSL(SL,"tstrings",True)['min_movie_list'] # u"$tstrings['min_movie_list']" on line 626, col 16
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['min_movie_list']")) # from line 626, col 16.
-        write(u'''</span>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['min_movie_list']")) # from line 626, col 16.
+        write('''</span>
 \t\t\t\t\t\t\t\t\t<div class="switch">
 \t\t\t\t\t\t\t\t\t\t<label><input type="checkbox" id="minmovielist" ''')
         _v = VFFSL(SL,"MinMovieList",True) # u'$MinMovieList' on line 628, col 59
-        if _v is not None: write(_filter(_v, rawExpr=u'$MinMovieList')) # from line 628, col 59.
-        write(u'''><span class="lever switch-col-''')
+        if _v is not None: write(_filter(_v, rawExpr='$MinMovieList')) # from line 628, col 59.
+        write('''><span class="lever switch-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 628, col 103
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 628, col 103.
-        write(u''' vtiwebconfig"></span></label>
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 628, col 103.
+        write(''' vtiwebconfig"></span></label>
 \t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t</li>
 \t\t\t\t\t\t\t\t<li>
 \t\t\t\t\t\t\t\t\t<span>''')
         _v = VFFSL(SL,"tstrings",True)['min_timer_list'] # u"$tstrings['min_timer_list']" on line 632, col 16
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['min_timer_list']")) # from line 632, col 16.
-        write(u'''</span>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['min_timer_list']")) # from line 632, col 16.
+        write('''</span>
 \t\t\t\t\t\t\t\t\t<div class="switch">
 \t\t\t\t\t\t\t\t\t\t<label><input type="checkbox" id="mintimerlist" ''')
         _v = VFFSL(SL,"MinTimerList",True) # u'$MinTimerList' on line 634, col 59
-        if _v is not None: write(_filter(_v, rawExpr=u'$MinTimerList')) # from line 634, col 59.
-        write(u'''><span class="lever switch-col-''')
+        if _v is not None: write(_filter(_v, rawExpr='$MinTimerList')) # from line 634, col 59.
+        write('''><span class="lever switch-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 634, col 103
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 634, col 103.
-        write(u''' vtiwebconfig"></span></label>
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 634, col 103.
+        write(''' vtiwebconfig"></span></label>
 \t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t</li>
 \t\t\t\t\t\t\t\t<li>
 \t\t\t\t\t\t\t\t\t<span>''')
         _v = VFFSL(SL,"tstrings",True)['min_epg_list'] # u"$tstrings['min_epg_list']" on line 638, col 16
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['min_epg_list']")) # from line 638, col 16.
-        write(u'''</span>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['min_epg_list']")) # from line 638, col 16.
+        write('''</span>
 \t\t\t\t\t\t\t\t\t<div class="switch">
 \t\t\t\t\t\t\t\t\t\t<label><input type="checkbox" id="minepglist" ''')
         _v = VFFSL(SL,"MinEPGList",True) # u'$MinEPGList' on line 640, col 57
-        if _v is not None: write(_filter(_v, rawExpr=u'$MinEPGList')) # from line 640, col 57.
-        write(u''' ><span class="lever switch-col-''')
+        if _v is not None: write(_filter(_v, rawExpr='$MinEPGList')) # from line 640, col 57.
+        write(''' ><span class="lever switch-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 640, col 100
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 640, col 100.
-        write(u''' vtiwebconfig"></span></label>
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 640, col 100.
+        write(''' vtiwebconfig"></span></label>
 \t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t</li>
 \t\t\t\t\t\t\t\t<li>
@@ -936,8 +937,8 @@
 \t\t\t\t\t\t\t\t\t<div class="switch">
 \t\t\t\t\t\t\t\t\t\t<label><input type="checkbox" id="plformat"><span class="lever switch-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 646, col 85
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 646, col 85.
-        write(u''' vtiwebconfig"></span></label>
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 646, col 85.
+        write(''' vtiwebconfig"></span></label>
 \t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t</li>
 \t\t\t\t\t\t\t\t<li>
@@ -945,8 +946,8 @@
 \t\t\t\t\t\t\t\t\t<div class="switch">
 \t\t\t\t\t\t\t\t\t\t<label><input type="checkbox" id="noresposive"><span class="lever switch-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 652, col 88
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 652, col 88.
-        write(u''' vtiwebconfig"></span></label>
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 652, col 88.
+        write(''' vtiwebconfig"></span></label>
 \t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t</li>
 \t\t\t\t\t\t\t</ul>
@@ -1047,8 +1048,8 @@
 \t\t\t<div class="row clearfix">
 \t\t\t\t<div id="content_container">''')
         _v = VFFSL(SL,"content",True) # u'$content' on line 751, col 33
-        if _v is not None: write(_filter(_v, rawExpr=u'$content')) # from line 751, col 33.
-        write(u'''</div>
+        if _v is not None: write(_filter(_v, rawExpr='$content')) # from line 751, col 33.
+        write('''</div>
 \t\t\t</div>
 \t\t\t<span id="mainfooter">
 \t\t\t\t<div class="row clearfix">
@@ -1057,47 +1058,47 @@
 \t\t\t\t\t\t\t<div class="body text-center">
 \t\t\t\t\t\t\t\t<div id="footer"><a class="theme-link-color theme-link-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 758, col 68
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 758, col 68.
-        write(u'''" href="https://github.com/E2OpenPlugins">E2OpenPlugins</a> | <a class="theme-link-color theme-link-col-''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 758, col 68.
+        write('''" href="https://github.com/E2OpenPlugins">E2OpenPlugins</a> | <a class="theme-link-color theme-link-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 758, col 182
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 758, col 182.
-        write(u'''" href="http://www.opena.tv">openATV</a> | <a class="theme-link-color theme-link-col-''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 758, col 182.
+        write('''" href="http://www.opena.tv">openATV</a> | <a class="theme-link-color theme-link-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 758, col 277
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 758, col 277.
-        write(u'''" href="http://www.vuplus-community.net">Black Hole</a> | <a class="theme-link-color theme-link-col-''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 758, col 277.
+        write('''" href="http://www.vuplus-community.net">Black Hole</a> | <a class="theme-link-color theme-link-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 758, col 387
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 758, col 387.
-        write(u'''" href="http://www.droidsat.org">OpenDroid</a> | <a class="theme-link-color theme-link-col-''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 758, col 387.
+        write('''" href="http://www.droidsat.org">OpenDroid</a> | <a class="theme-link-color theme-link-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 758, col 488
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 758, col 488.
-        write(u'''" href="http://www.egami-image.com">EGAMI</a> | <a class="theme-link-color theme-link-col-''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 758, col 488.
+        write('''" href="http://www.egami-image.com">EGAMI</a> | <a class="theme-link-color theme-link-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 758, col 588
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 758, col 588.
-        write(u'''" href="http://www.hdfreaks.cc">OpenHDF</a> | <a class="theme-link-color theme-link-col-''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 758, col 588.
+        write('''" href="http://www.hdfreaks.cc">OpenHDF</a> | <a class="theme-link-color theme-link-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 758, col 686
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 758, col 686.
-        write(u'''" href="http://images.teamblue.tech">teamBlue</a> | <a class="theme-link-color theme-link-col-''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 758, col 686.
+        write('''" href="http://images.teamblue.tech">teamBlue</a> | <a class="theme-link-color theme-link-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 758, col 790
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 758, col 790.
-        write(u'''" href="http://openpli.org">OpenPli</a> | <a class="theme-link-color theme-link-col-''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 758, col 790.
+        write('''" href="http://openpli.org">OpenPli</a> | <a class="theme-link-color theme-link-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 758, col 884
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 758, col 884.
-        write(u'''" href="http://forum.sifteam.eu">Sif</a> | <a class="theme-link-color theme-link-col-''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 758, col 884.
+        write('''" href="http://forum.sifteam.eu">Sif</a> | <a class="theme-link-color theme-link-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 758, col 979
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 758, col 979.
-        write(u'''" href="http://openspa.info">OpenSpa</a> | <a class="theme-link-color theme-link-col-''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 758, col 979.
+        write('''" href="http://openspa.info">OpenSpa</a> | <a class="theme-link-color theme-link-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 758, col 1074
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 758, col 1074.
-        write(u'''" href="http://www.world-of-satellite.com">OpenViX</a> | <b><a class="theme-link-color theme-link-col-''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 758, col 1074.
+        write('''" href="http://www.world-of-satellite.com">OpenViX</a> | <b><a class="theme-link-color theme-link-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 758, col 1186
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 758, col 1186.
-        write(u'''" href="http://www.vuplus-support.org">VTi</a></b> | <a class="theme-link-color theme-link-col-''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 758, col 1186.
+        write('''" href="http://www.vuplus-support.org">VTi</a></b> | <a class="theme-link-color theme-link-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 758, col 1291
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 758, col 1291.
-        write(u'''" href="#" onclick="load_maincontent(\'ajax/about\'); return false">''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 758, col 1291.
+        write('''" href="#" onclick="load_maincontent(\'ajax/about\'); return false">''')
         _v = VFFSL(SL,"tstrings",True)['about'] # u"$tstrings['about']" on line 758, col 1367
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['about']")) # from line 758, col 1367.
-        write(u'''</a></div>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['about']")) # from line 758, col 1367.
+        write('''</a></div>
 \t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t</div>
 \t\t\t\t\t</div>
@@ -1121,8 +1122,8 @@
 \t\t\t<div class="modal-footer">
 \t\t\t\t<button type="button" class="btn waves-effect btn-default" data-dismiss="modal">''')
         _v = VFFSL(SL,"tstrings",True)['close'] # u"$tstrings['close']" on line 780, col 85
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['close']")) # from line 780, col 85.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['close']")) # from line 780, col 85.
+        write('''</button>
 \t\t\t</div>
 \t\t</div>
 \t</div>
@@ -1132,8 +1133,8 @@
 \t\t<div class="modal-content">
 \t\t\t<div class="modal-header vti-colored-card bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 788, col 49
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 788, col 49.
-        write(u'''">
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 788, col 49.
+        write('''">
 \t\t\t\t<button type="button" class="close" data-dismiss="modal">&times;</button>
 \t\t\t\t<span class="modal-title"><i class="material-icons material-icons-centered">wifi_tethering</i>&nbsp;Streams</span>
 \t\t\t</div>
@@ -1145,8 +1146,8 @@
 \t\t\t<div class="modal-footer">
 \t\t\t\t<button type="button" class="btn waves-effect btn-default" data-dismiss="modal">''')
         _v = VFFSL(SL,"tstrings",True)['close'] # u"$tstrings['close']" on line 798, col 85
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['close']")) # from line 798, col 85.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['close']")) # from line 798, col 85.
+        write('''</button>
 \t\t\t</div>
 \t\t</div>
 \t</div>
@@ -1156,13 +1157,13 @@
 \t\t<div class="modal-content">
 \t\t\t<div class="modal-header vti-colored-card bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 806, col 49
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 806, col 49.
-        write(u'''">
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 806, col 49.
+        write('''">
 \t\t\t\t<button type="button" class="close" data-dismiss="modal">&times;</button>
 \t\t\t\t<h4 class="modal-title"><i class="material-icons material-icons-centered">alarm</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['timers'] # u"$tstrings['timers']" on line 808, col 94
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['timers']")) # from line 808, col 94.
-        write(u'''</span></h4>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['timers']")) # from line 808, col 94.
+        write('''</span></h4>
 \t\t\t</div>
 \t\t\t\t<div class="modal-body" style="max-height: calc(100vh - 180px); overflow-y: auto;">
 \t\t\t\t\t<ul>
@@ -1172,16 +1173,16 @@
 \t\t\t<div class="modal-footer">
 \t\t\t\t<button type="button" class="btn waves-effect btn-default" data-dismiss="modal">''')
         _v = VFFSL(SL,"tstrings",True)['close'] # u"$tstrings['close']" on line 816, col 85
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['close']")) # from line 816, col 85.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['close']")) # from line 816, col 85.
+        write('''</button>
 \t\t\t</div>
 \t\t</div>
 \t</div>
 </div>
 <div id="editTimerForm" title="''')
         _v = VFFSL(SL,"tstrings",True)['edit_timer'] # u"$tstrings['edit_timer']" on line 821, col 32
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['edit_timer']")) # from line 821, col 32.
-        write(u'''"></div>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['edit_timer']")) # from line 821, col 32.
+        write('''"></div>
 <div id="EPGModal" class="modal fade" role="dialog">
 \t<div class="modal-dialog modal-lg">
 \t\t<div class="modal-content">
@@ -1189,8 +1190,8 @@
 \t\t\t\t<button type="button" class="close" data-dismiss="modal">&times;</button>
 \t\t\t\t<h4 class="modal-title"><i class="material-icons material-icons-centered">today</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['epg'] # u"$tstrings['epg']" on line 827, col 94
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['epg']")) # from line 827, col 94.
-        write(u'''</span></h4>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['epg']")) # from line 827, col 94.
+        write('''</span></h4>
 \t\t\t</div>
 \t\t\t<div class="modal-body" style="max-height: calc(100vh - 180px); overflow-y: auto;">
 \t\t\t\t<div id="epgmodalcontent"></div>
@@ -1198,8 +1199,8 @@
 \t\t\t<div class="modal-footer">
 \t\t\t\t<button type="button" class="btn waves-effect btn-default" data-dismiss="modal">''')
         _v = VFFSL(SL,"tstrings",True)['close'] # u"$tstrings['close']" on line 833, col 85
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['close']")) # from line 833, col 85.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['close']")) # from line 833, col 85.
+        write('''</button>
 \t\t\t</div>
 \t\t</div>
 \t</div>
@@ -1216,8 +1217,8 @@
 \t\t\t<div class="modal-footer">
 \t\t\t\t<button type="button" class="btn waves-effect btn-default" data-dismiss="modal">''')
         _v = VFFSL(SL,"tstrings",True)['close'] # u"$tstrings['close']" on line 848, col 85
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['close']")) # from line 848, col 85.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['close']")) # from line 848, col 85.
+        write('''</button>
 \t\t\t</div>
 \t\t</div>
 \t</div>
@@ -1235,15 +1236,15 @@
 \t\t\t<div class="modal-footer">
 \t\t\t\t<button type="button" class="btn waves-effect btn-default" data-dismiss="modal">''')
         _v = VFFSL(SL,"tstrings",True)['close'] # u"$tstrings['close']" on line 864, col 85
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['close']")) # from line 864, col 85.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['close']")) # from line 864, col 85.
+        write('''</button>
 \t\t\t\t<button type="button" class="btn waves-effect responsivebtn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 865, col 68
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 865, col 68.
-        write(u'''" data-dismiss="modal" onClick="btn_saveTimer(); return false;">''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 865, col 68.
+        write('''" data-dismiss="modal" onClick="btn_saveTimer(); return false;">''')
         _v = VFFSL(SL,"tstrings",True)['save'] # u"$tstrings['save']" on line 865, col 142
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['save']")) # from line 865, col 142.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['save']")) # from line 865, col 142.
+        write('''</button>
 \t\t\t</div>
 \t\t</div>
 \t</div>
@@ -1255,8 +1256,8 @@
 \t\t\t\t<button type="button" class="close" data-dismiss="modal">&times;</button>
 \t\t\t\t<h4 class="modal-title"><i class="material-icons material-icons-centered">settings_power</i><span>''')
         _v = VFN(VFFSL(SL,"tstrings",True)['powercontrol'],"replace",False)(" ","&nbsp;") # u'$tstrings[\'powercontrol\'].replace(" ","&nbsp;")' on line 875, col 103
-        if _v is not None: write(_filter(_v, rawExpr=u'$tstrings[\'powercontrol\'].replace(" ","&nbsp;")')) # from line 875, col 103.
-        write(u'''</span></h4>
+        if _v is not None: write(_filter(_v, rawExpr='$tstrings[\'powercontrol\'].replace(" ","&nbsp;")')) # from line 875, col 103.
+        write('''</span></h4>
 \t\t\t</div>
 \t\t\t<div class="modal-body" style="max-height: calc(100vh - 180px); overflow-y: auto;">
 \t\t\t\t<hr/>
@@ -1264,17 +1265,17 @@
 \t\t\t\t\t<div class="col-xs-12 align-center">
 \t\t\t\t\t\t<button type="button" class="btn waves-effect responsivebtn responsivebtnpower bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 881, col 89
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 881, col 89.
-        write(u'''" class="theme-link-color theme-link-col-''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 881, col 89.
+        write('''" class="theme-link-color theme-link-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 881, col 140
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 881, col 140.
-        write(u'''" data-dismiss="modal" href="#" onclick="handle_power_state_dialog(new_power_state = 0); return false">
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 881, col 140.
+        write('''" data-dismiss="modal" href="#" onclick="handle_power_state_dialog(new_power_state = 0); return false">
 \t\t\t\t\t\t\t<h4>
 \t\t\t\t\t\t\t\t<i class="material-icons">power_settings_new</i>
 \t\t\t\t\t\t\t\t<span>''')
         _v = VFFSL(SL,"tstrings",True)['standby_toggle'] # u"$tstrings['standby_toggle']" on line 884, col 15
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['standby_toggle']")) # from line 884, col 15.
-        write(u'''</span>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['standby_toggle']")) # from line 884, col 15.
+        write('''</span>
 \t\t\t\t\t\t\t</h4>
 \t\t\t\t\t\t</button>
 \t\t\t\t\t</div>
@@ -1284,17 +1285,17 @@
 \t\t\t\t\t<div class="col-xs-12 align-center">
 \t\t\t\t\t\t<button type="button" class="btn waves-effect responsivebtn responsivebtnpower bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 892, col 89
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 892, col 89.
-        write(u'''" class="theme-link-color theme-link-col-''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 892, col 89.
+        write('''" class="theme-link-color theme-link-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 892, col 140
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 892, col 140.
-        write(u'''" data-dismiss="modal" href="#" onclick="handle_power_state_dialog(new_power_state = 1); return false">
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 892, col 140.
+        write('''" data-dismiss="modal" href="#" onclick="handle_power_state_dialog(new_power_state = 1); return false">
 \t\t\t\t\t\t\t<h4>
 \t\t\t\t\t\t\t\t<i class="material-icons">vertical_align_bottom</i>
 \t\t\t\t\t\t\t\t<span>''')
         _v = VFFSL(SL,"tstrings",True)['deep_standby'] # u"$tstrings['deep_standby']" on line 895, col 15
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['deep_standby']")) # from line 895, col 15.
-        write(u'''</span>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['deep_standby']")) # from line 895, col 15.
+        write('''</span>
 \t\t\t\t\t\t\t</h4>
 \t\t\t\t\t\t</button>
 \t\t\t\t\t</div>
@@ -1304,14 +1305,14 @@
 \t\t\t\t\t<div class="col-xs-12 align-center">
 \t\t\t\t\t\t<button type="button" class="btn waves-effect responsivebtn responsivebtnpower bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 903, col 89
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 903, col 89.
-        write(u'''" data-dismiss="modal" href="#" onclick="handle_power_state_dialog(new_power_state = 2); return false">
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 903, col 89.
+        write('''" data-dismiss="modal" href="#" onclick="handle_power_state_dialog(new_power_state = 2); return false">
 \t\t\t\t\t\t\t<h4>
 \t\t\t\t\t\t\t\t<i class="material-icons">loop</i>
 \t\t\t\t\t\t\t\t<span>''')
         _v = VFFSL(SL,"tstrings",True)['reboot_box'] # u"$tstrings['reboot_box']" on line 906, col 15
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['reboot_box']")) # from line 906, col 15.
-        write(u'''</span>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['reboot_box']")) # from line 906, col 15.
+        write('''</span>
 \t\t\t\t\t\t\t</h4>
 \t\t\t\t\t\t</button>
 \t\t\t\t\t</div>
@@ -1321,17 +1322,17 @@
 \t\t\t\t\t<div class="col-xs-12 align-center">
 \t\t\t\t\t\t<button type="button" class="btn waves-effect responsivebtn responsivebtnpower bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 914, col 89
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 914, col 89.
-        write(u'''" class="theme-link-color theme-link-col-''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 914, col 89.
+        write('''" class="theme-link-color theme-link-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 914, col 140
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 914, col 140.
-        write(u'''" data-dismiss="modal" href="#" onclick="handle_power_state_dialog(new_power_state = 3); return false">
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 914, col 140.
+        write('''" data-dismiss="modal" href="#" onclick="handle_power_state_dialog(new_power_state = 3); return false">
 \t\t\t\t\t\t\t<h4>
 \t\t\t\t\t\t\t\t<i class="material-icons">settings_backup_restore</i>
 \t\t\t\t\t\t\t\t<span>''')
         _v = VFFSL(SL,"tstrings",True)['restart_gui'] # u"$tstrings['restart_gui']" on line 917, col 15
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['restart_gui']")) # from line 917, col 15.
-        write(u'''</span>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['restart_gui']")) # from line 917, col 15.
+        write('''</span>
 \t\t\t\t\t\t\t</h4>
 \t\t\t\t\t\t</button>
 \t\t\t\t\t</div>
@@ -1340,8 +1341,8 @@
 \t\t\t<div class="modal-footer">
 \t\t\t\t<button type="button" class="btn btn-default waves-effect" data-dismiss="modal" onClick="closeMessageModal(); return false;">''')
         _v = VFFSL(SL,"tstrings",True)['close'] # u"$tstrings['close']" on line 924, col 130
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['close']")) # from line 924, col 130.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['close']")) # from line 924, col 130.
+        write('''</button>
 \t\t\t</div>
 \t\t</div>
 \t</div>
@@ -1360,8 +1361,8 @@
 \t\t\t\t\t\t\t\t<div class="col-xs-12 col-sm-6">
 \t\t\t\t\t\t\t\t\t<h2><i class="material-icons material-icons-centered">message</i>''')
         _v = VFN(VFFSL(SL,"tstrings",True)['sendamessage'],"replace",False)(" ","&nbsp;") # u'$tstrings[\'sendamessage\'].replace(" ","&nbsp;")' on line 941, col 75
-        if _v is not None: write(_filter(_v, rawExpr=u'$tstrings[\'sendamessage\'].replace(" ","&nbsp;")')) # from line 941, col 75.
-        write(u'''</h2>
+        if _v is not None: write(_filter(_v, rawExpr='$tstrings[\'sendamessage\'].replace(" ","&nbsp;")')) # from line 941, col 75.
+        write('''</h2>
 \t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t</div>
@@ -1371,15 +1372,15 @@
 \t\t\t\t\t\t\t\t\t<div class="col-xs-12 col-sm-3 align-right">
 \t\t\t\t\t\t\t\t\t\t\t<label>''')
         _v = VFFSL(SL,"tstrings",True)['text'] # u"$tstrings['text']" on line 949, col 19
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['text']")) # from line 949, col 19.
-        write(u''':&nbsp;</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['text']")) # from line 949, col 19.
+        write(''':&nbsp;</label>
 \t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t<div class="col-xs-12 col-sm-9">
 \t\t\t\t\t\t\t\t\t\t<div class="form-line">
 \t\t\t\t\t\t\t\t\t\t\t<textarea class="form-control no-resize auto-growth active" rows="1" placeholder="''')
         _v = VFFSL(SL,"tstrings",True)['text'] # u"$tstrings['text']" on line 953, col 94
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['text']")) # from line 953, col 94.
-        write(u'''" id="messageText"></textarea>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['text']")) # from line 953, col 94.
+        write('''" id="messageText"></textarea>
 \t\t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t</div>
@@ -1387,8 +1388,8 @@
 \t\t\t\t\t\t\t\t\t<div class="col-xs-12 col-sm-3 align-right">
 \t\t\t\t\t\t\t\t\t\t\t<label>''')
         _v = VFFSL(SL,"tstrings",True)['display_duration_s'] # u"$tstrings['display_duration_s']" on line 959, col 19
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['display_duration_s']")) # from line 959, col 19.
-        write(u''':&nbsp;</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['display_duration_s']")) # from line 959, col 19.
+        write(''':&nbsp;</label>
 \t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t<div class="col-xs-12 col-sm-9">
 \t\t\t\t\t\t\t\t\t\t<div class="form-line">
@@ -1400,27 +1401,27 @@
 \t\t\t\t\t\t\t\t\t<div class="col-xs-12 col-sm-3 align-right">
 \t\t\t\t\t\t\t\t\t\t\t<label>''')
         _v = VFFSL(SL,"tstrings",True)['type'] # u"$tstrings['type']" on line 969, col 19
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['type']")) # from line 969, col 19.
-        write(u''':&nbsp;</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['type']")) # from line 969, col 19.
+        write(''':&nbsp;</label>
 \t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t<div class="col-xs-12 col-sm-9">
 \t\t\t\t\t\t\t\t\t\t<select id="messageType" class="form-control">
 \t\t\t\t\t\t\t\t\t\t\t<option value="1">''')
         _v = VFFSL(SL,"tstrings",True)['info'] # u"$tstrings['info']" on line 973, col 30
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['info']")) # from line 973, col 30.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['info']")) # from line 973, col 30.
+        write('''</option>
 \t\t\t\t\t\t\t\t\t\t\t<option value="2">''')
         _v = VFFSL(SL,"tstrings",True)['warning'] # u"$tstrings['warning']" on line 974, col 30
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['warning']")) # from line 974, col 30.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['warning']")) # from line 974, col 30.
+        write('''</option>
 \t\t\t\t\t\t\t\t\t\t\t<option value="3">''')
         _v = VFFSL(SL,"tstrings",True)['error'] # u"$tstrings['error']" on line 975, col 30
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['error']")) # from line 975, col 30.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['error']")) # from line 975, col 30.
+        write('''</option>
 \t\t\t\t\t\t\t\t\t\t\t<option value="0">''')
         _v = VFFSL(SL,"tstrings",True)['yes_no'] # u"$tstrings['yes_no']" on line 976, col 30
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['yes_no']")) # from line 976, col 30.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['yes_no']")) # from line 976, col 30.
+        write('''</option>
 \t\t\t\t\t\t\t\t\t\t</select>
 \t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t</div>
@@ -1437,15 +1438,15 @@
 \t\t\t<div class="modal-footer">
 \t\t\t\t<button type="button" class="btn btn-default waves-effect" data-dismiss="modal" onClick="closeMessageModal(); return false;">''')
         _v = VFFSL(SL,"tstrings",True)['close'] # u"$tstrings['close']" on line 991, col 130
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['close']")) # from line 991, col 130.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['close']")) # from line 991, col 130.
+        write('''</button>
 \t\t\t\t<button type="button" class="btn waves-effect responsivebtn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 992, col 68
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 992, col 68.
-        write(u'''"  onClick="sendModalMessage(); return false;">''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 992, col 68.
+        write('''"  onClick="sendModalMessage(); return false;">''')
         _v = VFN(VFFSL(SL,"tstrings",True)['sendamessage'],"replace",False)(" ","&nbsp;") # u'$tstrings[\'sendamessage\'].replace(" ","&nbsp;")' on line 992, col 125
-        if _v is not None: write(_filter(_v, rawExpr=u'$tstrings[\'sendamessage\'].replace(" ","&nbsp;")')) # from line 992, col 125.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr='$tstrings[\'sendamessage\'].replace(" ","&nbsp;")')) # from line 992, col 125.
+        write('''</button>
 \t\t\t</div>
 \t\t</div>
 \t</div>
@@ -1466,8 +1467,8 @@
 \t$(document).ready(function() {
 \t\t$("#remote_container").load("static/remotes/''')
         _v = VFFSL(SL,"remote",True) # u'${remote}' on line 1011, col 48
-        if _v is not None: write(_filter(_v, rawExpr=u'${remote}')) # from line 1011, col 48.
-        write(u'''.html");
+        if _v is not None: write(_filter(_v, rawExpr='${remote}')) # from line 1011, col 48.
+        write('''.html");
 \t\tdirectlink();
 \t});
 \tSetLSValue(\'TimerListOffset\',0);
@@ -1486,8 +1487,8 @@
 <script src="themes/absb/js/vti-responsive.js"></script>
 <script type="text/javascript">initJsTranslationAddon(''')
         _v = VFFSL(SL,"dumps",False)(VFFSL(SL,"tstrings",True)) # u'$dumps($tstrings)' on line 1028, col 55
-        if _v is not None: write(_filter(_v, rawExpr=u'$dumps($tstrings)')) # from line 1028, col 55.
-        write(u''')</script>
+        if _v is not None: write(_filter(_v, rawExpr='$dumps($tstrings)')) # from line 1028, col 55.
+        write(''')</script>
 
 <script type="text/javascript">
 \t$(document).ready(function() {
--- ./plugin/controllers/views/responsive/ajax/about.py	(original)
+++ ./plugin/controllers/views/responsive/ajax/about.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -60,7 +61,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -70,7 +71,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,15 +84,15 @@
         ########################################
         ## START - generated method body
         
-        write(u'''<div class="col-xs-12">
+        write('''<div class="col-xs-12">
 \t<div class="card">
 \t\t<div class="header">
 \t\t\t<div class="row clearfix">
 \t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t<h2><i class="material-icons material-icons-centered">announcement</i>''')
         _v = VFFSL(SL,"tstrings",True)['about'] # u"$tstrings['about']" on line 7, col 76
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['about']")) # from line 7, col 76.
-        write(u'''</h2>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['about']")) # from line 7, col 76.
+        write('''</h2>
 \t\t\t\t</div>
 \t\t\t</div>
 \t\t</div>
@@ -101,27 +102,27 @@
 \t\t\t\t\t<h2>OpenWebif</h2>
 \t\t\t\t\t<h3>''')
         _v = VFFSL(SL,"tstrings",True)['openwebif_header'] # u"$tstrings['openwebif_header']" on line 15, col 10
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['openwebif_header']")) # from line 15, col 10.
-        write(u'''</h3>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['openwebif_header']")) # from line 15, col 10.
+        write('''</h3>
 \t\t\t\t\t<h3>''')
         _v = VFFSL(SL,"tstrings",True)['version'] # u"$tstrings['version']" on line 16, col 10
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['version']")) # from line 16, col 10.
-        write(u''': ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['version']")) # from line 16, col 10.
+        write(''': ''')
         _v = VFFSL(SL,"info.owiver",True) # u'$info.owiver' on line 16, col 32
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.owiver')) # from line 16, col 32.
-        write(u'''</h3>
+        if _v is not None: write(_filter(_v, rawExpr='$info.owiver')) # from line 16, col 32.
+        write('''</h3>
 \t\t\t\t\t<h3>''')
         _v = VFFSL(SL,"tstrings",True)['site_source'] # u"$tstrings['site_source']" on line 17, col 10
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['site_source']")) # from line 17, col 10.
-        write(u''': <a href=\'https://github.com/E2OpenPlugins/e2openplugin-OpenWebif\' target="_blank" >Github</a></h3>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['site_source']")) # from line 17, col 10.
+        write(''': <a href=\'https://github.com/E2OpenPlugins/e2openplugin-OpenWebif\' target="_blank" >Github</a></h3>
 \t\t\t\t\t<hr/>
 \t\t\t\t\t\t<img class="img-responsive center-block" src="images/about.jpg" alt="about" style="display:none;" id="ajpg">
 \t\t\t\t\t\t<img class="img-responsive center-block" src="themes/about.png" alt="about" onerror=\'$(this).hide();$("#ajpg").show();\'>
 \t\t\t\t\t<hr/>
 \t\t\t\t\t<h3>''')
         _v = VFFSL(SL,"tstrings",True)['authors'] # u"$tstrings['authors']" on line 22, col 10
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['authors']")) # from line 22, col 10.
-        write(u'''</h3>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['authors']")) # from line 22, col 10.
+        write('''</h3>
 \t\t\t\t\t<div class="info">
 \t\t\t\t\tmeo aka bacicciosat<br/>
 \t\t\t\t\tskaman<br/>
@@ -134,29 +135,29 @@
 \t\t\t\t\t</div>
 \t\t\t\t\t<h3>''')
         _v = VFFSL(SL,"tstrings",True)['contributors'] # u"$tstrings['contributors']" on line 33, col 10
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['contributors']")) # from line 33, col 10.
-        write(u'''</h3>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['contributors']")) # from line 33, col 10.
+        write('''</h3>
 \t\t\t\t\t<div class="info">
 \t\t\t\t\tArmy (Graphics)<br/>
 \t\t\t\t\tMilo, Cimarast<br/>
 \t\t\t\t\t\tHSA (''')
         _v = VFFSL(SL,"tstrings",True)['translation_spanish'] # u"$tstrings['translation_spanish']" on line 37, col 12
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['translation_spanish']")) # from line 37, col 12.
-        write(u''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['translation_spanish']")) # from line 37, col 12.
+        write(''')
 \t\t\t\t\t</div>
 \t\t\t\t\t<hr/>
 \t\t\t\t\t<h3>''')
         _v = VFFSL(SL,"tstrings",True)['javalib'] # u"$tstrings['javalib']" on line 40, col 10
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['javalib']")) # from line 40, col 10.
-        write(u'''</h3>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['javalib']")) # from line 40, col 10.
+        write('''</h3>
 \t\t\t\t\t<div class="info">
 \t\t\t\t\t\t<a href=\'http://jqueryui.com/\' target="_blank" >Jquery UI</a>
 \t\t\t\t\t</div>
 \t\t\t\t\t<hr/>
 \t\t\t\t\t<h3>''')
         _v = VFFSL(SL,"tstrings",True)['template_engine'] # u"$tstrings['template_engine']" on line 45, col 10
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['template_engine']")) # from line 45, col 10.
-        write(u'''</h3>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['template_engine']")) # from line 45, col 10.
+        write('''</h3>
 \t\t\t\t\t<div class="info">
 \t\t\t\t\t\t<a href=\'http://www.cheetahtemplate.org/\' target="_blank" >Cheetah</a>
 \t\t\t\t\t</div>
@@ -169,13 +170,13 @@
 \t\t\t\t\t<hr/>
 \t\t\t\t\t<h3>''')
         _v = VFFSL(SL,"tstrings",True)['license'] # u"$tstrings['license']" on line 56, col 10
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['license']")) # from line 56, col 10.
-        write(u'''</h3>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['license']")) # from line 56, col 10.
+        write('''</h3>
 \t\t\t\t\t<code class="info center-block" style="white-space: word-wrap; margin: 0 100px;">
 \t\t\t\t\t\t''')
         _v = VFFSL(SL,"tstrings",True)['license_text'] # u"$tstrings['license_text']" on line 58, col 7
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['license_text']")) # from line 58, col 7.
-        write(u'''</br>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['license_text']")) # from line 58, col 7.
+        write('''</br>
 \t\t\t\t\t\tFor full source code please download package vti-openwebif-src.ipk
 \t\t\t\t\t</code>
 \t\t\t\t</div>
--- ./plugin/controllers/views/responsive/ajax/at.py	(original)
+++ ./plugin/controllers/views/responsive/ajax/at.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -61,7 +62,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -71,7 +72,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -85,13 +86,13 @@
         ## START - generated method body
         
         _orig_filter_36361057 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''
+        write('''
 <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
 \t<div class="card">
 \t\t<div class="header">
@@ -99,8 +100,8 @@
 \t\t\t\t<div class="col-xs-12 col-sm-8 col-md-9">
 \t\t\t\t\t<h2 id="configtitle"><i class="material-icons material-icons-centered">history</i>''')
         _v = VFFSL(SL,"tstrings",True)['at_at_edit'] # u"$tstrings['at_at_edit']" on line 10, col 88
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_at_edit']")) # from line 10, col 88.
-        write(u'''<span id=\'at_name\'></span></h2>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_at_edit']")) # from line 10, col 88.
+        write('''<span id=\'at_name\'></span></h2>
 \t\t\t\t</div>
 \t\t\t\t<div class="col-xs-12 hidden-sm hidden-md hidden-lg hidden-xl">
 \t\t\t\t\t<div class="row vti-vspace-20"></div>
@@ -119,83 +120,83 @@
 \t\t\t\t\t\t\t\t<div class="col-xs-12 align-center">
 \t\t\t\t\t\t\t\t\t<button onClick="addAT(); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 27, col 71
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 27, col 71.
-        write(u''' waves-effect" ><i class="material-icons">add</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 27, col 71.
+        write(''' waves-effect" ><i class="material-icons">add</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_add'] # u"$tstrings['at_add']" on line 27, col 136
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_add']")) # from line 27, col 136.
-        write(u'''</span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_add']")) # from line 27, col 136.
+        write('''</span></button>
 \t\t\t\t\t\t\t\t\t<button onClick="delAT(); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 28, col 71
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 28, col 71.
-        write(u''' waves-effect" ><i class="material-icons">delete</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 28, col 71.
+        write(''' waves-effect" ><i class="material-icons">delete</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_del'] # u"$tstrings['at_del']" on line 28, col 139
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_del']")) # from line 28, col 139.
-        write(u'''</span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_del']")) # from line 28, col 139.
+        write('''</span></button>
 \t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t<div class="row">
 \t\t\t\t\t\t\t\t<div class="col-xs-12 align-center">
 \t\t\t\t\t\t\t\t\t<button onClick="reloadAT(); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 33, col 74
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 33, col 74.
-        write(u''' waves-effect" ><i class="material-icons">autorenew</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 33, col 74.
+        write(''' waves-effect" ><i class="material-icons">autorenew</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_reload'] # u"$tstrings['at_reload']" on line 33, col 145
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_reload']")) # from line 33, col 145.
-        write(u'''</span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_reload']")) # from line 33, col 145.
+        write('''</span></button>
 \t\t\t\t\t\t\t\t\t<button onClick="saveAT(); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 34, col 72
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 34, col 72.
-        write(u''' waves-effect" ><i class="material-icons">save</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 34, col 72.
+        write(''' waves-effect" ><i class="material-icons">save</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_save'] # u"$tstrings['at_save']" on line 34, col 138
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_save']")) # from line 34, col 138.
-        write(u'''</span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_save']")) # from line 34, col 138.
+        write('''</span></button>
 \t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t<div class="row">
 \t\t\t\t\t\t\t\t<div class="col-xs-12 align-center">
 \t\t\t\t\t\t\t\t\t<button onClick="parseAT(); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 39, col 73
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 39, col 73.
-        write(u''' waves-effect" ><i class="material-icons">code</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 39, col 73.
+        write(''' waves-effect" ><i class="material-icons">code</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_parse'] # u"$tstrings['at_parse']" on line 39, col 139
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_parse']")) # from line 39, col 139.
-        write(u'''</span></span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_parse']")) # from line 39, col 139.
+        write('''</span></span></button>
 \t\t\t\t\t\t\t\t\t<button onClick="test_simulateAT(true); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 40, col 85
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 40, col 85.
-        write(u''' waves-effect" data-toggle="modal" data-target="#ATTimerModal" ><i class="material-icons">view_list</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 40, col 85.
+        write(''' waves-effect" data-toggle="modal" data-target="#ATTimerModal" ><i class="material-icons">view_list</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_simulate'] # u"$tstrings['at_simulate']" on line 40, col 204
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_simulate']")) # from line 40, col 204.
-        write(u'''</span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_simulate']")) # from line 40, col 204.
+        write('''</span></button>
 \t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t<div class="row">
 \t\t\t\t\t\t\t\t<div class="col-xs-12 align-center">
 \t\t\t\t\t\t\t\t\t<button onClick="test_simulateAT(false); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 45, col 86
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 45, col 86.
-        write(u''' waves-effect" data-toggle="modal" data-target="#ATTimerModal" ><i class="material-icons">extension</i><span>Test</span></button>
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 45, col 86.
+        write(''' waves-effect" data-toggle="modal" data-target="#ATTimerModal" ><i class="material-icons">extension</i><span>Test</span></button>
 \t\t\t\t\t\t\t\t\t<button onClick="listTimers(); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 46, col 76
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 46, col 76.
-        write(u''' waves-effect" data-toggle="modal" data-target="#ATTimerList" ><i class="material-icons">alarm</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 46, col 76.
+        write(''' waves-effect" data-toggle="modal" data-target="#ATTimerList" ><i class="material-icons">alarm</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_timers'] # u"$tstrings['at_timers']" on line 46, col 190
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_timers']")) # from line 46, col 190.
-        write(u'''</span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_timers']")) # from line 46, col 190.
+        write('''</span></button>
 \t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t<div class="row">
 \t\t\t\t\t\t\t\t<div class="col-xs-12 align-center">
 \t\t\t\t\t\t\t\t\t<button onClick="getAutoTimerSettings(); return false;" data-toggle="modal" data-target="#ATSettings" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 51, col 132
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 51, col 132.
-        write(u''' waves-effect"  data-title="''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 51, col 132.
+        write(''' waves-effect"  data-title="''')
         _v = VFFSL(SL,"tstrings",True)['ats_auto_timer_settings'] # u"$tstrings['ats_auto_timer_settings']" on line 51, col 170
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_auto_timer_settings']")) # from line 51, col 170.
-        write(u'''"><i class="material-icons">settings</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['ats_auto_timer_settings']")) # from line 51, col 170.
+        write('''"><i class="material-icons">settings</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_settings'] # u"$tstrings['at_settings']" on line 51, col 252
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_settings']")) # from line 51, col 252.
-        write(u'''</span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_settings']")) # from line 51, col 252.
+        write('''</span></button>
 \t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t</div>
@@ -204,75 +205,75 @@
 \t\t\t\t\t\t\t\t<div class="col-xs-12 align-center">
 \t\t\t\t\t\t\t\t\t<button onClick="addAT(); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 58, col 71
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 58, col 71.
-        write(u''' waves-effect" ><i class="material-icons">add</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 58, col 71.
+        write(''' waves-effect" ><i class="material-icons">add</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_add'] # u"$tstrings['at_add']" on line 58, col 136
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_add']")) # from line 58, col 136.
-        write(u'''</span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_add']")) # from line 58, col 136.
+        write('''</span></button>
 \t\t\t\t\t\t\t\t\t<button onClick="delAT(); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 59, col 71
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 59, col 71.
-        write(u''' waves-effect" ><i class="material-icons">delete</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 59, col 71.
+        write(''' waves-effect" ><i class="material-icons">delete</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_del'] # u"$tstrings['at_del']" on line 59, col 139
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_del']")) # from line 59, col 139.
-        write(u'''</span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_del']")) # from line 59, col 139.
+        write('''</span></button>
 \t\t\t\t\t\t\t\t\t<button onClick="reloadAT(); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 60, col 74
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 60, col 74.
-        write(u''' waves-effect" ><i class="material-icons">autorenew</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 60, col 74.
+        write(''' waves-effect" ><i class="material-icons">autorenew</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_reload'] # u"$tstrings['at_reload']" on line 60, col 145
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_reload']")) # from line 60, col 145.
-        write(u'''</span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_reload']")) # from line 60, col 145.
+        write('''</span></button>
 \t\t\t\t\t\t\t\t\t<button onClick="saveAT(); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 61, col 72
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 61, col 72.
-        write(u''' waves-effect" ><i class="material-icons">save</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 61, col 72.
+        write(''' waves-effect" ><i class="material-icons">save</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_save'] # u"$tstrings['at_save']" on line 61, col 138
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_save']")) # from line 61, col 138.
-        write(u'''</span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_save']")) # from line 61, col 138.
+        write('''</span></button>
 \t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t<div class="row">
 \t\t\t\t\t\t\t\t<div class="col-xs-12 align-center">
 \t\t\t\t\t\t\t\t\t<button onClick="parseAT(); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 66, col 73
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 66, col 73.
-        write(u''' waves-effect" ><i class="material-icons">code</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 66, col 73.
+        write(''' waves-effect" ><i class="material-icons">code</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_parse'] # u"$tstrings['at_parse']" on line 66, col 139
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_parse']")) # from line 66, col 139.
-        write(u'''</span></span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_parse']")) # from line 66, col 139.
+        write('''</span></span></button>
 \t\t\t\t\t\t\t\t\t<button onClick="test_simulateAT(true); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 67, col 85
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 67, col 85.
-        write(u''' waves-effect" data-toggle="modal" data-target="#ATTimerModal" ><i class="material-icons">view_list</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 67, col 85.
+        write(''' waves-effect" data-toggle="modal" data-target="#ATTimerModal" ><i class="material-icons">view_list</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_simulate'] # u"$tstrings['at_simulate']" on line 67, col 204
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_simulate']")) # from line 67, col 204.
-        write(u'''</span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_simulate']")) # from line 67, col 204.
+        write('''</span></button>
 \t\t\t\t\t\t\t\t\t<button onClick="test_simulateAT(false); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 68, col 86
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 68, col 86.
-        write(u''' waves-effect" data-toggle="modal" data-target="#ATTimerModal" ><i class="material-icons">extension</i><span>Test</span></button>
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 68, col 86.
+        write(''' waves-effect" data-toggle="modal" data-target="#ATTimerModal" ><i class="material-icons">extension</i><span>Test</span></button>
 \t\t\t\t\t\t\t\t\t<button onClick="listTimers(); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 69, col 76
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 69, col 76.
-        write(u''' waves-effect" data-toggle="modal" data-target="#ATTimerList" ><i class="material-icons">alarm</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 69, col 76.
+        write(''' waves-effect" data-toggle="modal" data-target="#ATTimerList" ><i class="material-icons">alarm</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_timers'] # u"$tstrings['at_timers']" on line 69, col 190
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_timers']")) # from line 69, col 190.
-        write(u'''</span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_timers']")) # from line 69, col 190.
+        write('''</span></button>
 \t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t<div class="row">
 \t\t\t\t\t\t\t\t<div class="col-xs-12 align-center">
 \t\t\t\t\t\t\t\t\t<button onClick="getAutoTimerSettings(); return false;" data-toggle="modal" data-target="#ATSettings" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 74, col 132
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 74, col 132.
-        write(u''' waves-effect"  data-title="''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 74, col 132.
+        write(''' waves-effect"  data-title="''')
         _v = VFFSL(SL,"tstrings",True)['ats_auto_timer_settings'] # u"$tstrings['ats_auto_timer_settings']" on line 74, col 170
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_auto_timer_settings']")) # from line 74, col 170.
-        write(u'''"><i class="material-icons">settings</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['ats_auto_timer_settings']")) # from line 74, col 170.
+        write('''"><i class="material-icons">settings</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_settings'] # u"$tstrings['at_settings']" on line 74, col 252
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_settings']")) # from line 74, col 252.
-        write(u'''</span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_settings']")) # from line 74, col 252.
+        write('''</span></button>
 \t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t</div>
@@ -281,71 +282,71 @@
 \t\t\t\t\t\t\t\t<div class="col-xs-12 align-center">
 \t\t\t\t\t\t\t\t\t<button onClick="addAT(); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 81, col 71
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 81, col 71.
-        write(u''' waves-effect" ><i class="material-icons">add</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 81, col 71.
+        write(''' waves-effect" ><i class="material-icons">add</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_add'] # u"$tstrings['at_add']" on line 81, col 136
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_add']")) # from line 81, col 136.
-        write(u'''</span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_add']")) # from line 81, col 136.
+        write('''</span></button>
 \t\t\t\t\t\t\t\t\t<button onClick="delAT(); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 82, col 71
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 82, col 71.
-        write(u''' waves-effect" ><i class="material-icons">delete</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 82, col 71.
+        write(''' waves-effect" ><i class="material-icons">delete</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_del'] # u"$tstrings['at_del']" on line 82, col 139
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_del']")) # from line 82, col 139.
-        write(u'''</span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_del']")) # from line 82, col 139.
+        write('''</span></button>
 \t\t\t\t\t\t\t\t\t<button onClick="reloadAT(); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 83, col 74
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 83, col 74.
-        write(u''' waves-effect" ><i class="material-icons">autorenew</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 83, col 74.
+        write(''' waves-effect" ><i class="material-icons">autorenew</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_reload'] # u"$tstrings['at_reload']" on line 83, col 145
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_reload']")) # from line 83, col 145.
-        write(u'''</span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_reload']")) # from line 83, col 145.
+        write('''</span></button>
 \t\t\t\t\t\t\t\t\t<button onClick="saveAT(); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 84, col 72
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 84, col 72.
-        write(u''' waves-effect" ><i class="material-icons">save</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 84, col 72.
+        write(''' waves-effect" ><i class="material-icons">save</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_save'] # u"$tstrings['at_save']" on line 84, col 138
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_save']")) # from line 84, col 138.
-        write(u'''</span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_save']")) # from line 84, col 138.
+        write('''</span></button>
 \t\t\t\t\t\t\t\t\t<button onClick="parseAT(); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 85, col 73
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 85, col 73.
-        write(u''' waves-effect" ><i class="material-icons">code</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 85, col 73.
+        write(''' waves-effect" ><i class="material-icons">code</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_parse'] # u"$tstrings['at_parse']" on line 85, col 139
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_parse']")) # from line 85, col 139.
-        write(u'''</span></span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_parse']")) # from line 85, col 139.
+        write('''</span></span></button>
 \t\t\t\t\t\t\t\t\t<button onClick="test_simulateAT(true); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 86, col 85
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 86, col 85.
-        write(u''' waves-effect" data-toggle="modal" data-target="#ATTimerModal" ><i class="material-icons">view_list</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 86, col 85.
+        write(''' waves-effect" data-toggle="modal" data-target="#ATTimerModal" ><i class="material-icons">view_list</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_simulate'] # u"$tstrings['at_simulate']" on line 86, col 204
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_simulate']")) # from line 86, col 204.
-        write(u'''</span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_simulate']")) # from line 86, col 204.
+        write('''</span></button>
 \t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t<div class="row">
 \t\t\t\t\t\t\t\t<div class="col-xs-12 align-center">
 \t\t\t\t\t\t\t\t\t<button onClick="test_simulateAT(false); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 91, col 86
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 91, col 86.
-        write(u''' waves-effect" data-toggle="modal" data-target="#ATTimerModal" ><i class="material-icons">extension</i><span>Test</span></button>
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 91, col 86.
+        write(''' waves-effect" data-toggle="modal" data-target="#ATTimerModal" ><i class="material-icons">extension</i><span>Test</span></button>
 \t\t\t\t\t\t\t\t\t<button onClick="listTimers(); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 92, col 76
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 92, col 76.
-        write(u''' waves-effect" data-toggle="modal" data-target="#ATTimerList" ><i class="material-icons">alarm</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 92, col 76.
+        write(''' waves-effect" data-toggle="modal" data-target="#ATTimerList" ><i class="material-icons">alarm</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_timers'] # u"$tstrings['at_timers']" on line 92, col 190
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_timers']")) # from line 92, col 190.
-        write(u'''</span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_timers']")) # from line 92, col 190.
+        write('''</span></button>
 \t\t\t\t\t\t\t\t\t<button onClick="getAutoTimerSettings(); return false;" data-toggle="modal" data-target="#ATSettings" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 93, col 132
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 93, col 132.
-        write(u''' waves-effect"  data-title="''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 93, col 132.
+        write(''' waves-effect"  data-title="''')
         _v = VFFSL(SL,"tstrings",True)['ats_auto_timer_settings'] # u"$tstrings['ats_auto_timer_settings']" on line 93, col 170
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_auto_timer_settings']")) # from line 93, col 170.
-        write(u'''"><i class="material-icons">settings</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['ats_auto_timer_settings']")) # from line 93, col 170.
+        write('''"><i class="material-icons">settings</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_settings'] # u"$tstrings['at_settings']" on line 93, col 252
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_settings']")) # from line 93, col 252.
-        write(u'''</span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_settings']")) # from line 93, col 252.
+        write('''</span></button>
 \t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t</div>
@@ -354,67 +355,67 @@
 \t\t\t\t\t\t\t\t<div class="col-xs-12 align-center">
 \t\t\t\t\t\t\t\t\t<button onClick="addAT(); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 100, col 71
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 100, col 71.
-        write(u''' waves-effect" ><i class="material-icons">add</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 100, col 71.
+        write(''' waves-effect" ><i class="material-icons">add</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_add'] # u"$tstrings['at_add']" on line 100, col 136
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_add']")) # from line 100, col 136.
-        write(u'''</span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_add']")) # from line 100, col 136.
+        write('''</span></button>
 \t\t\t\t\t\t\t\t\t<button onClick="delAT(); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 101, col 71
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 101, col 71.
-        write(u''' waves-effect" ><i class="material-icons">delete</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 101, col 71.
+        write(''' waves-effect" ><i class="material-icons">delete</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_del'] # u"$tstrings['at_del']" on line 101, col 139
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_del']")) # from line 101, col 139.
-        write(u'''</span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_del']")) # from line 101, col 139.
+        write('''</span></button>
 \t\t\t\t\t\t\t\t\t<button onClick="reloadAT(); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 102, col 74
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 102, col 74.
-        write(u''' waves-effect" ><i class="material-icons">autorenew</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 102, col 74.
+        write(''' waves-effect" ><i class="material-icons">autorenew</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_reload'] # u"$tstrings['at_reload']" on line 102, col 145
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_reload']")) # from line 102, col 145.
-        write(u'''</span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_reload']")) # from line 102, col 145.
+        write('''</span></button>
 \t\t\t\t\t\t\t\t\t<button onClick="saveAT(); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 103, col 72
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 103, col 72.
-        write(u''' waves-effect" ><i class="material-icons">save</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 103, col 72.
+        write(''' waves-effect" ><i class="material-icons">save</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_save'] # u"$tstrings['at_save']" on line 103, col 138
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_save']")) # from line 103, col 138.
-        write(u'''</span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_save']")) # from line 103, col 138.
+        write('''</span></button>
 \t\t\t\t\t\t\t\t\t<button onClick="parseAT(); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 104, col 73
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 104, col 73.
-        write(u''' waves-effect" ><i class="material-icons">code</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 104, col 73.
+        write(''' waves-effect" ><i class="material-icons">code</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_parse'] # u"$tstrings['at_parse']" on line 104, col 139
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_parse']")) # from line 104, col 139.
-        write(u'''</span></span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_parse']")) # from line 104, col 139.
+        write('''</span></span></button>
 \t\t\t\t\t\t\t\t\t<button onClick="test_simulateAT(true); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 105, col 85
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 105, col 85.
-        write(u''' waves-effect" data-toggle="modal" data-target="#ATTimerModal" ><i class="material-icons">view_list</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 105, col 85.
+        write(''' waves-effect" data-toggle="modal" data-target="#ATTimerModal" ><i class="material-icons">view_list</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_simulate'] # u"$tstrings['at_simulate']" on line 105, col 204
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_simulate']")) # from line 105, col 204.
-        write(u'''</span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_simulate']")) # from line 105, col 204.
+        write('''</span></button>
 \t\t\t\t\t\t\t\t\t<button onClick="test_simulateAT(false); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 106, col 86
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 106, col 86.
-        write(u''' waves-effect" data-toggle="modal" data-target="#ATTimerModal" ><i class="material-icons">extension</i><span>Test</span></button>
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 106, col 86.
+        write(''' waves-effect" data-toggle="modal" data-target="#ATTimerModal" ><i class="material-icons">extension</i><span>Test</span></button>
 \t\t\t\t\t\t\t\t\t<button onClick="listTimers(); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 107, col 76
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 107, col 76.
-        write(u''' waves-effect" data-toggle="modal" data-target="#ATTimerList" ><i class="material-icons">alarm</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 107, col 76.
+        write(''' waves-effect" data-toggle="modal" data-target="#ATTimerList" ><i class="material-icons">alarm</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_timers'] # u"$tstrings['at_timers']" on line 107, col 190
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_timers']")) # from line 107, col 190.
-        write(u'''</span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_timers']")) # from line 107, col 190.
+        write('''</span></button>
 \t\t\t\t\t\t\t\t\t<button onClick="getAutoTimerSettings(); return false;" data-toggle="modal" data-target="#ATSettings" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 108, col 132
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 108, col 132.
-        write(u''' waves-effect"  data-title="''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 108, col 132.
+        write(''' waves-effect"  data-title="''')
         _v = VFFSL(SL,"tstrings",True)['ats_auto_timer_settings'] # u"$tstrings['ats_auto_timer_settings']" on line 108, col 170
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_auto_timer_settings']")) # from line 108, col 170.
-        write(u'''"><i class="material-icons">settings</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['ats_auto_timer_settings']")) # from line 108, col 170.
+        write('''"><i class="material-icons">settings</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_settings'] # u"$tstrings['at_settings']" on line 108, col 252
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_settings']")) # from line 108, col 252.
-        write(u'''</span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_settings']")) # from line 108, col 252.
+        write('''</span></button>
 \t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t</div>
@@ -430,12 +431,12 @@
 \t\t\t\t\t\t\t\t\t\t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<label>''')
         _v = VFFSL(SL,"tstrings",True)['at_enabled'] # u"$tstrings['at_enabled']" on line 122, col 22
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_enabled']")) # from line 122, col 22.
-        write(u''':&nbsp;</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_enabled']")) # from line 122, col 22.
+        write(''':&nbsp;</label>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type="checkbox" id="enabled" class="form-control chk-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 123, col 79
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 123, col 79.
-        write(u'''" value="">
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 123, col 79.
+        write('''" value="">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<label for="enabled">&nbsp;</label>
 \t\t\t\t\t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t\t\t\t</div>
@@ -445,8 +446,8 @@
 \t\t\t\t\t\t\t\t\t\t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<label style="float:left;">''')
         _v = VFFSL(SL,"tstrings",True)['at_description'] # u"$tstrings['at_description']" on line 131, col 42
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_description']")) # from line 131, col 42.
-        write(u''':&nbsp;</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_description']")) # from line 131, col 42.
+        write(''':&nbsp;</label>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<div  class="form-line">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type="text" class="form-control" id="name">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>
@@ -458,24 +459,24 @@
 \t\t\t\t\t\t\t\t\t\t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<label>''')
         _v = VFFSL(SL,"tstrings",True)['at_timer_type'] # u"$tstrings['at_timer_type']" on line 141, col 22
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_timer_type']")) # from line 141, col 22.
-        write(u''':&nbsp;</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_timer_type']")) # from line 141, col 22.
+        write(''':&nbsp;</label>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<select class="form-control show-tick" id="justplay">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value="0" selected="selected">''')
         _v = VFFSL(SL,"tstrings",True)['at_record'] # u"$tstrings['at_record']" on line 143, col 54
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_record']")) # from line 143, col 54.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_record']")) # from line 143, col 54.
+        write('''</option>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value="1">''')
         _v = VFFSL(SL,"tstrings",True)['at_zap'] # u"$tstrings['at_zap']" on line 144, col 34
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_zap']")) # from line 144, col 34.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_zap']")) # from line 144, col 34.
+        write('''</option>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value="2">''')
         _v = VFFSL(SL,"tstrings",True)['at_record'] # u"$tstrings['at_record']" on line 145, col 34
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_record']")) # from line 145, col 34.
-        write(u'''+''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_record']")) # from line 145, col 34.
+        write('''+''')
         _v = VFFSL(SL,"tstrings",True)['at_zap'] # u"$tstrings['at_zap']" on line 145, col 57
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_zap']")) # from line 145, col 57.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_zap']")) # from line 145, col 57.
+        write('''</option>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>
 \t\t\t\t\t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t\t\t\t</div>
@@ -487,8 +488,8 @@
 \t\t\t\t\t\t\t\t\t\t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<label style="float:left;">''')
         _v = VFFSL(SL,"tstrings",True)['at_title_match'] # u"$tstrings['at_title_match']" on line 155, col 42
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_title_match']")) # from line 155, col 42.
-        write(u''':&nbsp;</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_title_match']")) # from line 155, col 42.
+        write(''':&nbsp;</label>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<div  class="form-line">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type="text" class="form-control inactive" id="match" >
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>
@@ -500,41 +501,41 @@
 \t\t\t\t\t\t\t\t\t\t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<label>''')
         _v = VFFSL(SL,"tstrings",True)['at_search_type'] # u"$tstrings['at_search_type']" on line 165, col 22
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_search_type']")) # from line 165, col 22.
-        write(u''':&nbsp;</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_search_type']")) # from line 165, col 22.
+        write(''':&nbsp;</label>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<select class="form-control show-tick" id="searchType">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value="partial" selected="selected">''')
         _v = VFFSL(SL,"tstrings",True)['at_partial_match'] # u"$tstrings['at_partial_match']" on line 167, col 60
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_partial_match']")) # from line 167, col 60.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_partial_match']")) # from line 167, col 60.
+        write('''</option>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value="exact">''')
         _v = VFFSL(SL,"tstrings",True)['at_exact_match'] # u"$tstrings['at_exact_match']" on line 168, col 38
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_exact_match']")) # from line 168, col 38.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_exact_match']")) # from line 168, col 38.
+        write('''</option>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value="description">''')
         _v = VFFSL(SL,"tstrings",True)['at_description_match'] # u"$tstrings['at_description_match']" on line 169, col 44
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_description_match']")) # from line 169, col 44.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_description_match']")) # from line 169, col 44.
+        write('''</option>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value="full">''')
         _v = VFFSL(SL,"tstrings",True)['at_title_or_description_match'] # u"$tstrings['at_title_or_description_match']" on line 170, col 37
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_title_or_description_match']")) # from line 170, col 37.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_title_or_description_match']")) # from line 170, col 37.
+        write('''</option>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value="shortdesc">''')
         _v = VFFSL(SL,"tstrings",True)['at_short_description_match'] # u"$tstrings['at_short_description_match']" on line 171, col 42
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_short_description_match']")) # from line 171, col 42.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_short_description_match']")) # from line 171, col 42.
+        write('''</option>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value="title_shortdesc">''')
         _v = VFFSL(SL,"tstrings",True)['at_title_or_short_description_match'] # u"$tstrings['at_title_or_short_description_match']" on line 172, col 48
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_title_or_short_description_match']")) # from line 172, col 48.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_title_or_short_description_match']")) # from line 172, col 48.
+        write('''</option>
 ''')
         if 'start' in VFFSL(SL,"types",True): # generated from line 173, col 16
-            write(u'''\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value="start">''')
+            write('''\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value="start">''')
             _v = VFFSL(SL,"tstrings",True)['at_start_match'] # u"$tstrings['at_start_match']" on line 174, col 39
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_start_match']")) # from line 174, col 39.
-            write(u'''</option>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_start_match']")) # from line 174, col 39.
+            write('''</option>
 ''')
-        write(u'''\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>
+        write('''\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>
 \t\t\t\t\t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t\t\t</div>
@@ -543,17 +544,17 @@
 \t\t\t\t\t\t\t\t\t\t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<label>''')
         _v = VFFSL(SL,"tstrings",True)['at_search_strictness'] # u"$tstrings['at_search_strictness']" on line 183, col 22
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_search_strictness']")) # from line 183, col 22.
-        write(u''':&nbsp;</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_search_strictness']")) # from line 183, col 22.
+        write(''':&nbsp;</label>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<select class="form-control show-tick" id="searchCase">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value="sensitive" selected="selected">''')
         _v = VFFSL(SL,"tstrings",True)['at_case_sensitive'] # u"$tstrings['at_case_sensitive']" on line 185, col 62
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_case_sensitive']")) # from line 185, col 62.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_case_sensitive']")) # from line 185, col 62.
+        write('''</option>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value="insensitive">''')
         _v = VFFSL(SL,"tstrings",True)['at_case_insensitive'] # u"$tstrings['at_case_insensitive']" on line 186, col 44
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_case_insensitive']")) # from line 186, col 44.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_case_insensitive']")) # from line 186, col 44.
+        write('''</option>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>
 \t\t\t\t\t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t\t\t\t</div>
@@ -565,12 +566,12 @@
 \t\t\t\t\t\t\t\t\t\t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<label style="float:left;">''')
         _v = VFFSL(SL,"tstrings",True)['at_timespan'] # u"$tstrings['at_timespan']" on line 196, col 42
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_timespan']")) # from line 196, col 42.
-        write(u''':&nbsp;</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_timespan']")) # from line 196, col 42.
+        write(''':&nbsp;</label>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type="checkbox" class="form-control chk-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 197, col 66
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 197, col 66.
-        write(u'''" id="timeSpan">
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 197, col 66.
+        write('''" id="timeSpan">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<label for="timeSpan">&nbsp;</label>
 \t\t\t\t\t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t\t\t\t</div>
@@ -581,8 +582,8 @@
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label>''')
         _v = VFFSL(SL,"tstrings",True)['at_timespan_begin'] # u"$tstrings['at_timespan_begin']" on line 206, col 23
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_timespan_begin']")) # from line 206, col 23.
-        write(u''':&nbsp;</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_timespan_begin']")) # from line 206, col 23.
+        write(''':&nbsp;</label>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class="input-group">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class="input-group-addon">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i class="material-icons">access_time</i>
@@ -599,8 +600,8 @@
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label>''')
         _v = VFFSL(SL,"tstrings",True)['at_timespan_end'] # u"$tstrings['at_timespan_end']" on line 221, col 23
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_timespan_end']")) # from line 221, col 23.
-        write(u''':&nbsp;</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_timespan_end']")) # from line 221, col 23.
+        write(''':&nbsp;</label>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class="input-group">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class="input-group-addon">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i class="material-icons">access_time</i>
@@ -620,25 +621,25 @@
 \t\t\t\t\t\t\t\t\t\t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<label>''')
         _v = VFFSL(SL,"tstrings",True)['at_avoid_dup'] # u"$tstrings['at_avoid_dup']" on line 239, col 22
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_avoid_dup']")) # from line 239, col 22.
-        write(u''':&nbsp;</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_avoid_dup']")) # from line 239, col 22.
+        write(''':&nbsp;</label>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<select class="form-control show-tick" id="avoidDuplicateDescription">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value="0" selected="selected">''')
         _v = VFFSL(SL,"tstrings",True)['at_avoid_dup_no'] # u"$tstrings['at_avoid_dup_no']" on line 241, col 54
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_avoid_dup_no']")) # from line 241, col 54.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_avoid_dup_no']")) # from line 241, col 54.
+        write('''</option>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value="1">''')
         _v = VFFSL(SL,"tstrings",True)['at_avoid_dup_same_service'] # u"$tstrings['at_avoid_dup_same_service']" on line 242, col 34
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_avoid_dup_same_service']")) # from line 242, col 34.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_avoid_dup_same_service']")) # from line 242, col 34.
+        write('''</option>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value="2">''')
         _v = VFFSL(SL,"tstrings",True)['at_avoid_dup_any_service'] # u"$tstrings['at_avoid_dup_any_service']" on line 243, col 34
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_avoid_dup_any_service']")) # from line 243, col 34.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_avoid_dup_any_service']")) # from line 243, col 34.
+        write('''</option>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value="3">''')
         _v = VFFSL(SL,"tstrings",True)['at_avoid_dup_any_service_rec'] # u"$tstrings['at_avoid_dup_any_service_rec']" on line 244, col 34
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_avoid_dup_any_service_rec']")) # from line 244, col 34.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_avoid_dup_any_service_rec']")) # from line 244, col 34.
+        write('''</option>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>
 \t\t\t\t\t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t\t\t\t</div>
@@ -648,12 +649,12 @@
 \t\t\t\t\t\t\t\t\t\t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<label style="float:left;">''')
         _v = VFFSL(SL,"tstrings",True)['at_datespan_before'] # u"$tstrings['at_datespan_before']" on line 252, col 42
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_datespan_before']")) # from line 252, col 42.
-        write(u''':&nbsp;</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_datespan_before']")) # from line 252, col 42.
+        write(''':&nbsp;</label>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type="checkbox" class="form-control chk-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 253, col 66
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 253, col 66.
-        write(u'''" id="timeFrame">
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 253, col 66.
+        write('''" id="timeFrame">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<label for="timeFrame">&nbsp;</label>
 \t\t\t\t\t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t\t\t\t</div>
@@ -664,12 +665,12 @@
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<span id="timeFrameAfterCheckBox" style="display:none;">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label style="float:left;">''')
         _v = VFFSL(SL,"tstrings",True)['at_datespan_after'] # u"$tstrings['at_datespan_after']" on line 262, col 43
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_datespan_after']")) # from line 262, col 43.
-        write(u''':&nbsp;</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_datespan_after']")) # from line 262, col 43.
+        write(''':&nbsp;</label>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type="checkbox" class="form-control chk-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 263, col 67
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 263, col 67.
-        write(u'''" id="timeFrameAfter">
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 263, col 67.
+        write('''" id="timeFrameAfter">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label for="timeFrameAfter">&nbsp;</label>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>
 \t\t\t\t\t\t\t\t\t\t\t\t\t</div>
@@ -689,8 +690,8 @@
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label>''')
         _v = VFFSL(SL,"tstrings",True)['at_datespan_before'] # u"$tstrings['at_datespan_before']" on line 281, col 24
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_datespan_before']")) # from line 281, col 24.
-        write(u''':&nbsp;</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_datespan_before']")) # from line 281, col 24.
+        write(''':&nbsp;</label>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div  class="form-line">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type="text" class="form-control inactive" id="after">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>
@@ -703,8 +704,8 @@
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span id="beforeE" style="display:none;">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label>''')
         _v = VFFSL(SL,"tstrings",True)['at_datespan_after'] # u"$tstrings['at_datespan_after']" on line 292, col 24
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_datespan_after']")) # from line 292, col 24.
-        write(u''':&nbsp;</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_datespan_after']")) # from line 292, col 24.
+        write(''':&nbsp;</label>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div  class="form-line">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type="text" class="form-control inactive" id="before">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>
@@ -720,12 +721,12 @@
 \t\t\t\t\t\t\t\t\t\t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<label style="float:left;">''')
         _v = VFFSL(SL,"tstrings",True)['at_timer_offset'] # u"$tstrings['at_timer_offset']" on line 306, col 42
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_timer_offset']")) # from line 306, col 42.
-        write(u''':&nbsp;</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_timer_offset']")) # from line 306, col 42.
+        write(''':&nbsp;</label>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type="checkbox" class="form-control chk-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 307, col 66
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 307, col 66.
-        write(u'''" id="timerOffset">
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 307, col 66.
+        write('''" id="timerOffset">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<label for="timerOffset">&nbsp;</label>
 \t\t\t\t\t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t\t\t\t</div>
@@ -736,8 +737,8 @@
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label>''')
         _v = VFFSL(SL,"tstrings",True)['at_timer_offset_before'] # u"$tstrings['at_timer_offset_before']" on line 316, col 23
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_timer_offset_before']")) # from line 316, col 23.
-        write(u''':&nbsp;</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_timer_offset_before']")) # from line 316, col 23.
+        write(''':&nbsp;</label>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div  class="form-line">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type="text" class="form-control inactive" id="tbefore" onkeyup="this.value=this.value.replace(/[^\\d]/,\'\')">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>
@@ -749,8 +750,8 @@
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label>''')
         _v = VFFSL(SL,"tstrings",True)['at_timer_offset_after'] # u"$tstrings['at_timer_offset_after']" on line 326, col 23
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_timer_offset_after']")) # from line 326, col 23.
-        write(u''':&nbsp;</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_timer_offset_after']")) # from line 326, col 23.
+        write(''':&nbsp;</label>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div  class="form-line">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type="text" class="form-control inactive" id="tafter" onkeyup="this.value=this.value.replace(/[^\\d]/,\'\')">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>
@@ -761,18 +762,18 @@
 \t\t\t\t\t\t\t\t\t\t</div>
 ''')
         if VFFSL(SL,"autoadjust",True) == 1: # generated from line 335, col 11
-            write(u'''\t\t\t\t\t\t\t\t\t\t<div class="row clearfix">
+            write('''\t\t\t\t\t\t\t\t\t\t<div class="row clearfix">
 \t\t\t\t\t\t\t\t\t\t\t<div class="col-xs-12 col-sm-4">
 \t\t\t\t\t\t\t\t\t\t\t\t<div class="row clearfix">
 \t\t\t\t\t\t\t\t\t\t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<label style="float:left;">''')
             _v = VFFSL(SL,"tstrings",True)['autoadjust'] # u"$tstrings['autoadjust']" on line 340, col 42
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['autoadjust']")) # from line 340, col 42.
-            write(u''':&nbsp;</label>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['autoadjust']")) # from line 340, col 42.
+            write(''':&nbsp;</label>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type="checkbox" class="form-control chk-col-''')
             _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 341, col 66
-            if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 341, col 66.
-            write(u'''" id="autoadjust">
+            if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 341, col 66.
+            write('''" id="autoadjust">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<label for="autoadjust">&nbsp;</label>
 \t\t\t\t\t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t\t\t\t</div>
@@ -782,12 +783,12 @@
 \t\t\t\t\t\t\t\t\t\t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<label style="float:left;">''')
             _v = VFFSL(SL,"tstrings",True)['avoidDuplicateMovies'] # u"$tstrings['avoidDuplicateMovies']" on line 349, col 42
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['avoidDuplicateMovies']")) # from line 349, col 42.
-            write(u''':&nbsp;</label>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['avoidDuplicateMovies']")) # from line 349, col 42.
+            write(''':&nbsp;</label>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type="checkbox" class="form-control chk-col-''')
             _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 350, col 66
-            if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 350, col 66.
-            write(u'''" id="avoidDuplicateMovies">
+            if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 350, col 66.
+            write('''" id="avoidDuplicateMovies">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<label for="avoidDuplicateMovies">&nbsp;</label>
 \t\t\t\t\t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t\t\t\t</div>
@@ -797,30 +798,30 @@
 \t\t\t\t\t\t\t\t\t\t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<label style="float:left;">''')
             _v = VFFSL(SL,"tstrings",True)['allow_duplicate'] # u"$tstrings['allow_duplicate']" on line 358, col 42
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['allow_duplicate']")) # from line 358, col 42.
-            write(u''':&nbsp;</label>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['allow_duplicate']")) # from line 358, col 42.
+            write(''':&nbsp;</label>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type="checkbox" class="form-control chk-col-''')
             _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 359, col 66
-            if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 359, col 66.
-            write(u'''" id="allow_duplicate">
+            if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 359, col 66.
+            write('''" id="allow_duplicate">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<label for="allow_duplicate">&nbsp;</label>
 \t\t\t\t\t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t\t</div>
 ''')
-        write(u'''\t\t\t\t\t\t\t\t\t\t<div class="row clearfix">
+        write('''\t\t\t\t\t\t\t\t\t\t<div class="row clearfix">
 \t\t\t\t\t\t\t\t\t\t\t<div class="col-xs-12 col-sm-4">
 \t\t\t\t\t\t\t\t\t\t\t\t<div class="row clearfix">
 \t\t\t\t\t\t\t\t\t\t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<label style="float:left;">''')
         _v = VFFSL(SL,"tstrings",True)['at_max_duration'] # u"$tstrings['at_max_duration']" on line 370, col 42
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_max_duration']")) # from line 370, col 42.
-        write(u''':&nbsp;</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_max_duration']")) # from line 370, col 42.
+        write(''':&nbsp;</label>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type="checkbox" class="form-control chk-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 371, col 66
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 371, col 66.
-        write(u'''" id="maxDuration">
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 371, col 66.
+        write('''" id="maxDuration">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<label for="maxDuration">&nbsp;</label>
 \t\t\t\t\t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t\t\t\t</div>
@@ -831,8 +832,8 @@
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label>''')
         _v = VFFSL(SL,"tstrings",True)['at_max_duration'] # u"$tstrings['at_max_duration']" on line 380, col 23
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_max_duration']")) # from line 380, col 23.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_max_duration']")) # from line 380, col 23.
+        write('''</label>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select class="form-control show-tick" id="maxduration">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>
@@ -844,12 +845,12 @@
 \t\t\t\t\t\t\t\t\t\t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<label>''')
         _v = VFFSL(SL,"tstrings",True)['at_override_alt'] # u"$tstrings['at_override_alt']" on line 390, col 22
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_override_alt']")) # from line 390, col 22.
-        write(u''':&nbsp;</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_override_alt']")) # from line 390, col 22.
+        write(''':&nbsp;</label>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type="checkbox" class="form-control chk-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 391, col 66
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 391, col 66.
-        write(u'''" id="overrideAlternatives" val="">
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 391, col 66.
+        write('''" id="overrideAlternatives" val="">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<label for="overrideAlternatives">&nbsp;</label>
 \t\t\t\t\t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t\t\t\t</div>
@@ -861,29 +862,29 @@
 \t\t\t\t\t\t\t\t\t\t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<label>''')
         _v = VFFSL(SL,"tstrings",True)['at_after_event'] # u"$tstrings['at_after_event']" on line 401, col 22
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_after_event']")) # from line 401, col 22.
-        write(u''':&nbsp;</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_after_event']")) # from line 401, col 22.
+        write(''':&nbsp;</label>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<select class="form-control show-tick" id="afterevent" multiple>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value="" selected="selected">''')
         _v = VFFSL(SL,"tstrings",True)['at_after_event_standard'] # u"$tstrings['at_after_event_standard']" on line 403, col 53
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_after_event_standard']")) # from line 403, col 53.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_after_event_standard']")) # from line 403, col 53.
+        write('''</option>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value="none" selected>''')
         _v = VFFSL(SL,"tstrings",True)['at_after_event_nothing'] # u"$tstrings['at_after_event_nothing']" on line 404, col 46
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_after_event_nothing']")) # from line 404, col 46.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_after_event_nothing']")) # from line 404, col 46.
+        write('''</option>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value="standby">''')
         _v = VFFSL(SL,"tstrings",True)['at_after_event_standby'] # u"$tstrings['at_after_event_standby']" on line 405, col 40
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_after_event_standby']")) # from line 405, col 40.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_after_event_standby']")) # from line 405, col 40.
+        write('''</option>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value="shutdown">''')
         _v = VFFSL(SL,"tstrings",True)['at_after_event_deepstandby'] # u"$tstrings['at_after_event_deepstandby']" on line 406, col 41
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_after_event_deepstandby']")) # from line 406, col 41.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_after_event_deepstandby']")) # from line 406, col 41.
+        write('''</option>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value="auto">''')
         _v = VFFSL(SL,"tstrings",True)['at_after_event_auto'] # u"$tstrings['at_after_event_auto']" on line 407, col 37
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_after_event_auto']")) # from line 407, col 37.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_after_event_auto']")) # from line 407, col 37.
+        write('''</option>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>
 \t\t\t\t\t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t\t\t\t</div>
@@ -893,12 +894,12 @@
 \t\t\t\t\t\t\t\t\t\t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<label>''')
         _v = VFFSL(SL,"tstrings",True)['at_location'] # u"$tstrings['at_location']" on line 415, col 22
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_location']")) # from line 415, col 22.
-        write(u''':&nbsp;</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_location']")) # from line 415, col 22.
+        write(''':&nbsp;</label>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type="checkbox" class="form-control chk-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 416, col 66
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 416, col 66.
-        write(u'''" id="Location" val="">
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 416, col 66.
+        write('''" id="Location" val="">
 \t\t\t\t\t\t\t\t\t\t\t\t\t<label for="Location">&nbsp;</label>
 \t\t\t\t\t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t\t\t\t</div>
@@ -909,20 +910,20 @@
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label>''')
         _v = VFFSL(SL,"tstrings",True)['at_location'] # u"$tstrings['at_location']" on line 425, col 23
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_location']")) # from line 425, col 23.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_location']")) # from line 425, col 23.
+        write('''</label>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select class="form-control show-tick" id="location">
 ''')
         for location in VFFSL(SL,"locations",True): # generated from line 427, col 16
-            write(u'''\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value="''')
+            write('''\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value="''')
             _v = VFFSL(SL,"location",True) # u'$location' on line 428, col 32
-            if _v is not None: write(_filter(_v, rawExpr=u'$location')) # from line 428, col 32.
-            write(u'''">''')
+            if _v is not None: write(_filter(_v, rawExpr='$location')) # from line 428, col 32.
+            write('''">''')
             _v = VFFSL(SL,"location",True) # u'$location' on line 428, col 43
-            if _v is not None: write(_filter(_v, rawExpr=u'$location')) # from line 428, col 43.
-            write(u'''</option>
+            if _v is not None: write(_filter(_v, rawExpr='$location')) # from line 428, col 43.
+            write('''</option>
 ''')
-        write(u'''\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>
+        write('''\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t\t\t\t</div>
@@ -935,12 +936,12 @@
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label style="float:left;">''')
         _v = VFFSL(SL,"tstrings",True)['at_event_timespan'] # u"$tstrings['at_event_timespan']" on line 441, col 43
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_event_timespan']")) # from line 441, col 43.
-        write(u''':&nbsp;</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_event_timespan']")) # from line 441, col 43.
+        write(''':&nbsp;</label>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type="checkbox" class="form-control chk-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 442, col 67
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 442, col 67.
-        write(u'''" id="timeSpanAE">
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 442, col 67.
+        write('''" id="timeSpanAE">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label for="timeSpanAE">&nbsp;</label>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t\t\t\t\t</div>
@@ -951,8 +952,8 @@
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label>''')
         _v = VFFSL(SL,"tstrings",True)['at_event_timespan_begin'] # u"$tstrings['at_event_timespan_begin']" on line 451, col 24
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_event_timespan_begin']")) # from line 451, col 24.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_event_timespan_begin']")) # from line 451, col 24.
+        write('''</label>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div  class="form-line">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type="text" class="form-control inactive" id="aefrom">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>
@@ -964,8 +965,8 @@
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label>''')
         _v = VFFSL(SL,"tstrings",True)['at_event_timespan_end'] # u"$tstrings['at_event_timespan_end']" on line 461, col 24
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_event_timespan_end']")) # from line 461, col 24.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_event_timespan_end']")) # from line 461, col 24.
+        write('''</label>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div  class="form-line">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type="text" class="form-control inactive" id="aeto">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>
@@ -981,8 +982,8 @@
 \t\t\t\t\t\t\t\t\t\t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<label style="float:left;">''')
         _v = VFFSL(SL,"tstrings",True)['at_max_counter'] # u"$tstrings['at_max_counter']" on line 475, col 42
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_max_counter']")) # from line 475, col 42.
-        write(u''':&nbsp;</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_max_counter']")) # from line 475, col 42.
+        write(''':&nbsp;</label>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<select class="form-control show-tick" id="counter"></select>
 \t\t\t\t\t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t\t\t\t</div>
@@ -993,8 +994,8 @@
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label style="float:left;">''')
         _v = VFFSL(SL,"tstrings",True)['at_left'] # u"$tstrings['at_left']" on line 484, col 43
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_left']")) # from line 484, col 43.
-        write(u''':&nbsp;</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_left']")) # from line 484, col 43.
+        write(''':&nbsp;</label>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select class="form-control show-tick" id="left"></select>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t\t\t\t\t</div>
@@ -1004,25 +1005,25 @@
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label style="float:left;">''')
         _v = VFFSL(SL,"tstrings",True)['at_reset_count'] # u"$tstrings['at_reset_count']" on line 492, col 43
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_reset_count']")) # from line 492, col 43.
-        write(u''':&nbsp;</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_reset_count']")) # from line 492, col 43.
+        write(''':&nbsp;</label>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select class="form-control show-tick" id="counterFormat">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value="" selected>''')
         _v = VFFSL(SL,"tstrings",True)['at_never'] # u"$tstrings['at_never']" on line 494, col 43
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_never']")) # from line 494, col 43.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_never']")) # from line 494, col 43.
+        write('''</option>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value="%m">''')
         _v = VFFSL(SL,"tstrings",True)['at_monthly'] # u"$tstrings['at_monthly']" on line 495, col 36
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_monthly']")) # from line 495, col 36.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_monthly']")) # from line 495, col 36.
+        write('''</option>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value="%U">''')
         _v = VFFSL(SL,"tstrings",True)['at_weekly_sun'] # u"$tstrings['at_weekly_sun']" on line 496, col 36
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_weekly_sun']")) # from line 496, col 36.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_weekly_sun']")) # from line 496, col 36.
+        write('''</option>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value="%W">''')
         _v = VFFSL(SL,"tstrings",True)['at_weekly_mon'] # u"$tstrings['at_weekly_mon']" on line 497, col 36
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_weekly_mon']")) # from line 497, col 36.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_weekly_mon']")) # from line 497, col 36.
+        write('''</option>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t\t\t\t\t</div>
@@ -1035,12 +1036,12 @@
 \t\t\t\t\t\t\t\t\t\t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<label style="float:left;">''')
         _v = VFFSL(SL,"tstrings",True)['at_bouquets'] # u"$tstrings['at_bouquets']" on line 508, col 42
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_bouquets']")) # from line 508, col 42.
-        write(u''':&nbsp;</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_bouquets']")) # from line 508, col 42.
+        write(''':&nbsp;</label>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type="checkbox" class="form-control chk-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 509, col 66
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 509, col 66.
-        write(u'''" id="Bouquets">
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 509, col 66.
+        write('''" id="Bouquets">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<label for="Bouquets">&nbsp;</label>
 \t\t\t\t\t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t\t\t\t</div>
@@ -1050,12 +1051,12 @@
 \t\t\t\t\t\t\t\t\t\t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<label style="float:left;">''')
         _v = VFFSL(SL,"tstrings",True)['at_channels'] # u"$tstrings['at_channels']" on line 517, col 42
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_channels']")) # from line 517, col 42.
-        write(u''':&nbsp;</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_channels']")) # from line 517, col 42.
+        write(''':&nbsp;</label>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type="checkbox" class="form-control chk-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 518, col 66
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 518, col 66.
-        write(u'''" id="Channels">
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 518, col 66.
+        write('''" id="Channels">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<label for="Channels">&nbsp;</label>
 \t\t\t\t\t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t\t\t\t</div>
@@ -1065,12 +1066,12 @@
 \t\t\t\t\t\t\t\t\t\t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<label style="float:left;">''')
         _v = VFFSL(SL,"tstrings",True)['at_tags'] # u"$tstrings['at_tags']" on line 526, col 42
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_tags']")) # from line 526, col 42.
-        write(u''':&nbsp;</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_tags']")) # from line 526, col 42.
+        write(''':&nbsp;</label>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type="checkbox" class="form-control chk-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 527, col 66
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 527, col 66.
-        write(u'''" id="Tags">
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 527, col 66.
+        write('''" id="Tags">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<label for="Tags">&nbsp;</label>
 \t\t\t\t\t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t\t\t\t</div>
@@ -1083,8 +1084,8 @@
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<span id="BouquetsE" style="display:none" >
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label style="float:left;">''')
         _v = VFFSL(SL,"tstrings",True)['at_bouquets'] # u"$tstrings['at_bouquets']" on line 538, col 43
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_bouquets']")) # from line 538, col 43.
-        write(u''':&nbsp;</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_bouquets']")) # from line 538, col 43.
+        write(''':&nbsp;</label>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select id="bouquets"  class="form-control show-tick" multiple="multiple"></select>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>
 \t\t\t\t\t\t\t\t\t\t\t\t\t</div>
@@ -1096,8 +1097,8 @@
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<span id="ChannelsE" style="display:none" >
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label style="float:left;">''')
         _v = VFFSL(SL,"tstrings",True)['at_channels'] # u"$tstrings['at_channels']" on line 548, col 43
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_channels']")) # from line 548, col 43.
-        write(u''':&nbsp;</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_channels']")) # from line 548, col 43.
+        write(''':&nbsp;</label>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select id="channels" class="form-control show-tick" multiple="multiple"></select>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>
 \t\t\t\t\t\t\t\t\t\t\t\t\t</div>
@@ -1109,8 +1110,8 @@
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<span id="TagsE" style="display:none" >
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label style="float:left;">''')
         _v = VFFSL(SL,"tstrings",True)['at_tags'] # u"$tstrings['at_tags']" on line 558, col 43
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_tags']")) # from line 558, col 43.
-        write(u''':&nbsp;</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_tags']")) # from line 558, col 43.
+        write(''':&nbsp;</label>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select id="tags" class="form-control show-tick" multiple="multiple"></select>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>
 \t\t\t\t\t\t\t\t\t\t\t\t\t</div>
@@ -1123,17 +1124,17 @@
 \t\t\t\t\t\t\t\t\t\t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<label style="float:left;">''')
         _v = VFFSL(SL,"tstrings",True)['at_filter'] # u"$tstrings['at_filter']" on line 569, col 42
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_filter']")) # from line 569, col 42.
-        write(u''':&nbsp;</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_filter']")) # from line 569, col 42.
+        write(''':&nbsp;</label>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type="checkbox" class="form-control chk-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 570, col 66
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 570, col 66.
-        write(u'''" id="Filter">
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 570, col 66.
+        write('''" id="Filter">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<label for="Filter">&nbsp;</label>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<button type="button" class="btn btn-default waves-effect FilterE" id="AddFilter" >''')
         _v = VFFSL(SL,"tstrings",True)['at_add'] # u"$tstrings['at_add']" on line 572, col 98
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_add']")) # from line 572, col 98.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_add']")) # from line 572, col 98.
+        write('''</button>
 \t\t\t\t\t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t\t\t</div>
@@ -1153,17 +1154,17 @@
 \t\t\t\t\t\t\t\t\t\t<div class="row clearfix">
 ''')
         if VFFSL(SL,"hasVPS",True) == 1: # generated from line 590, col 9
-            write(u'''\t\t\t\t\t\t\t\t\t\t\t<div class="col-xs-12 col-sm-4">
+            write('''\t\t\t\t\t\t\t\t\t\t\t<div class="col-xs-12 col-sm-4">
 \t\t\t\t\t\t\t\t\t\t\t\t<div class="row clearfix">
 \t\t\t\t\t\t\t\t\t\t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<label style="float:left;">''')
             _v = VFFSL(SL,"tstrings",True)['vps'] # u"$tstrings['vps']" on line 594, col 42
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['vps']")) # from line 594, col 42.
-            write(u''':&nbsp;</label>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['vps']")) # from line 594, col 42.
+            write(''':&nbsp;</label>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type="checkbox" class="form-control chk-col-''')
             _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 595, col 66
-            if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 595, col 66.
-            write(u'''" id="vps">
+            if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 595, col 66.
+            write('''" id="vps">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<label for="vps">&nbsp;</label>
 \t\t\t\t\t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t\t\t\t</div>
@@ -1174,12 +1175,12 @@
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label style="float:left;">''')
             _v = VFFSL(SL,"tstrings",True)['safe_mode'] # u"$tstrings['safe_mode']" on line 604, col 43
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['safe_mode']")) # from line 604, col 43.
-            write(u''':&nbsp;</label>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['safe_mode']")) # from line 604, col 43.
+            write(''':&nbsp;</label>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type="checkbox" class="form-control chk-col-''')
             _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 605, col 67
-            if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 605, col 67.
-            write(u'''" id="vpssm">
+            if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 605, col 67.
+            write('''" id="vpssm">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label for="vpssm">&nbsp;</label>
 \t\t\t\t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t\t\t</div>
@@ -1187,23 +1188,23 @@
 \t\t\t\t\t\t\t\t\t\t\t</span>
 ''')
         if VFFSL(SL,"hasSeriesPlugin",True) == 1: # generated from line 612, col 9
-            write(u'''\t\t\t\t\t\t\t\t\t\t\t<div class="col-xs-12 col-sm-4">
+            write('''\t\t\t\t\t\t\t\t\t\t\t<div class="col-xs-12 col-sm-4">
 \t\t\t\t\t\t\t\t\t\t\t\t<div class="row clearfix">
 \t\t\t\t\t\t\t\t\t\t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<label style="float:left;">''')
             _v = VFFSL(SL,"tstrings",True)['at_label_series'] # u"$tstrings['at_label_series']" on line 616, col 42
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_label_series']")) # from line 616, col 42.
-            write(u''':&nbsp;</label>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_label_series']")) # from line 616, col 42.
+            write(''':&nbsp;</label>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type="checkbox" class="form-control chk-col-''')
             _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 617, col 66
-            if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 617, col 66.
-            write(u'''" id="series_labeling">
+            if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 617, col 66.
+            write('''" id="series_labeling">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<label for="series_labeling">&nbsp;</label>
 \t\t\t\t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t\t</div>
 ''')
-        write(u'''\t\t\t\t\t\t\t\t\t\t</div>
+        write('''\t\t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t</fieldset></form>
 \t\t\t\t\t\t\t</div>
@@ -1215,83 +1216,83 @@
 \t\t\t\t\t\t\t\t<div class="col-xs-12 align-center">
 \t\t\t\t\t\t\t\t\t<button onClick="addAT(); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 633, col 71
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 633, col 71.
-        write(u''' waves-effect" ><i class="material-icons">add</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 633, col 71.
+        write(''' waves-effect" ><i class="material-icons">add</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_add'] # u"$tstrings['at_add']" on line 633, col 136
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_add']")) # from line 633, col 136.
-        write(u'''</span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_add']")) # from line 633, col 136.
+        write('''</span></button>
 \t\t\t\t\t\t\t\t\t<button onClick="delAT(); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 634, col 71
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 634, col 71.
-        write(u''' waves-effect" ><i class="material-icons">delete</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 634, col 71.
+        write(''' waves-effect" ><i class="material-icons">delete</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_del'] # u"$tstrings['at_del']" on line 634, col 139
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_del']")) # from line 634, col 139.
-        write(u'''</span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_del']")) # from line 634, col 139.
+        write('''</span></button>
 \t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t<div class="row">
 \t\t\t\t\t\t\t\t<div class="col-xs-12 align-center">
 \t\t\t\t\t\t\t\t\t<button onClick="reloadAT(); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 639, col 74
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 639, col 74.
-        write(u''' waves-effect" ><i class="material-icons">autorenew</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 639, col 74.
+        write(''' waves-effect" ><i class="material-icons">autorenew</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_reload'] # u"$tstrings['at_reload']" on line 639, col 145
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_reload']")) # from line 639, col 145.
-        write(u'''</span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_reload']")) # from line 639, col 145.
+        write('''</span></button>
 \t\t\t\t\t\t\t\t\t<button onClick="saveAT(); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 640, col 72
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 640, col 72.
-        write(u''' waves-effect" ><i class="material-icons">save</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 640, col 72.
+        write(''' waves-effect" ><i class="material-icons">save</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_save'] # u"$tstrings['at_save']" on line 640, col 138
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_save']")) # from line 640, col 138.
-        write(u'''</span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_save']")) # from line 640, col 138.
+        write('''</span></button>
 \t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t<div class="row">
 \t\t\t\t\t\t\t\t<div class="col-xs-12 align-center">
 \t\t\t\t\t\t\t\t\t<button onClick="parseAT(); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 645, col 73
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 645, col 73.
-        write(u''' waves-effect" ><i class="material-icons">code</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 645, col 73.
+        write(''' waves-effect" ><i class="material-icons">code</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_parse'] # u"$tstrings['at_parse']" on line 645, col 139
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_parse']")) # from line 645, col 139.
-        write(u'''</span></span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_parse']")) # from line 645, col 139.
+        write('''</span></span></button>
 \t\t\t\t\t\t\t\t\t<button onClick="test_simulateAT(true); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 646, col 85
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 646, col 85.
-        write(u''' waves-effect" data-toggle="modal" data-target="#ATTimerModal" ><i class="material-icons">view_list</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 646, col 85.
+        write(''' waves-effect" data-toggle="modal" data-target="#ATTimerModal" ><i class="material-icons">view_list</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_simulate'] # u"$tstrings['at_simulate']" on line 646, col 204
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_simulate']")) # from line 646, col 204.
-        write(u'''</span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_simulate']")) # from line 646, col 204.
+        write('''</span></button>
 \t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t<div class="row">
 \t\t\t\t\t\t\t\t<div class="col-xs-12 align-center">
 \t\t\t\t\t\t\t\t\t<button onClick="test_simulateAT(false); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 651, col 86
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 651, col 86.
-        write(u''' waves-effect" data-toggle="modal" data-target="#ATTimerModal" ><i class="material-icons">extension</i><span>Test</span></button>
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 651, col 86.
+        write(''' waves-effect" data-toggle="modal" data-target="#ATTimerModal" ><i class="material-icons">extension</i><span>Test</span></button>
 \t\t\t\t\t\t\t\t\t<button onClick="listTimers(); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 652, col 76
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 652, col 76.
-        write(u''' waves-effect" data-toggle="modal" data-target="#ATTimerList" ><i class="material-icons">alarm</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 652, col 76.
+        write(''' waves-effect" data-toggle="modal" data-target="#ATTimerList" ><i class="material-icons">alarm</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_timers'] # u"$tstrings['at_timers']" on line 652, col 190
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_timers']")) # from line 652, col 190.
-        write(u'''</span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_timers']")) # from line 652, col 190.
+        write('''</span></button>
 \t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t<div class="row">
 \t\t\t\t\t\t\t\t<div class="col-xs-12 align-center">
 \t\t\t\t\t\t\t\t\t<button onClick="getAutoTimerSettings(); return false;" data-toggle="modal" data-target="#ATSettings" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 657, col 132
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 657, col 132.
-        write(u''' waves-effect"  data-title="''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 657, col 132.
+        write(''' waves-effect"  data-title="''')
         _v = VFFSL(SL,"tstrings",True)['ats_auto_timer_settings'] # u"$tstrings['ats_auto_timer_settings']" on line 657, col 170
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_auto_timer_settings']")) # from line 657, col 170.
-        write(u'''"><i class="material-icons">settings</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['ats_auto_timer_settings']")) # from line 657, col 170.
+        write('''"><i class="material-icons">settings</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_settings'] # u"$tstrings['at_settings']" on line 657, col 252
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_settings']")) # from line 657, col 252.
-        write(u'''</span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_settings']")) # from line 657, col 252.
+        write('''</span></button>
 \t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t</div>
@@ -1300,75 +1301,75 @@
 \t\t\t\t\t\t\t\t<div class="col-xs-12 align-center">
 \t\t\t\t\t\t\t\t\t<button onClick="addAT(); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 664, col 71
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 664, col 71.
-        write(u''' waves-effect" ><i class="material-icons">add</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 664, col 71.
+        write(''' waves-effect" ><i class="material-icons">add</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_add'] # u"$tstrings['at_add']" on line 664, col 136
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_add']")) # from line 664, col 136.
-        write(u'''</span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_add']")) # from line 664, col 136.
+        write('''</span></button>
 \t\t\t\t\t\t\t\t\t<button onClick="delAT(); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 665, col 71
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 665, col 71.
-        write(u''' waves-effect" ><i class="material-icons">delete</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 665, col 71.
+        write(''' waves-effect" ><i class="material-icons">delete</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_del'] # u"$tstrings['at_del']" on line 665, col 139
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_del']")) # from line 665, col 139.
-        write(u'''</span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_del']")) # from line 665, col 139.
+        write('''</span></button>
 \t\t\t\t\t\t\t\t\t<button onClick="reloadAT(); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 666, col 74
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 666, col 74.
-        write(u''' waves-effect" ><i class="material-icons">autorenew</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 666, col 74.
+        write(''' waves-effect" ><i class="material-icons">autorenew</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_reload'] # u"$tstrings['at_reload']" on line 666, col 145
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_reload']")) # from line 666, col 145.
-        write(u'''</span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_reload']")) # from line 666, col 145.
+        write('''</span></button>
 \t\t\t\t\t\t\t\t\t<button onClick="saveAT(); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 667, col 72
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 667, col 72.
-        write(u''' waves-effect" ><i class="material-icons">save</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 667, col 72.
+        write(''' waves-effect" ><i class="material-icons">save</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_save'] # u"$tstrings['at_save']" on line 667, col 138
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_save']")) # from line 667, col 138.
-        write(u'''</span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_save']")) # from line 667, col 138.
+        write('''</span></button>
 \t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t<div class="row">
 \t\t\t\t\t\t\t\t<div class="col-xs-12 align-center">
 \t\t\t\t\t\t\t\t\t<button onClick="parseAT(); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 672, col 73
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 672, col 73.
-        write(u''' waves-effect" ><i class="material-icons">code</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 672, col 73.
+        write(''' waves-effect" ><i class="material-icons">code</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_parse'] # u"$tstrings['at_parse']" on line 672, col 139
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_parse']")) # from line 672, col 139.
-        write(u'''</span></span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_parse']")) # from line 672, col 139.
+        write('''</span></span></button>
 \t\t\t\t\t\t\t\t\t<button onClick="test_simulateAT(true); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 673, col 85
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 673, col 85.
-        write(u''' waves-effect" data-toggle="modal" data-target="#ATTimerModal" ><i class="material-icons">view_list</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 673, col 85.
+        write(''' waves-effect" data-toggle="modal" data-target="#ATTimerModal" ><i class="material-icons">view_list</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_simulate'] # u"$tstrings['at_simulate']" on line 673, col 204
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_simulate']")) # from line 673, col 204.
-        write(u'''</span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_simulate']")) # from line 673, col 204.
+        write('''</span></button>
 \t\t\t\t\t\t\t\t\t<button onClick="test_simulateAT(false); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 674, col 86
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 674, col 86.
-        write(u''' waves-effect" data-toggle="modal" data-target="#ATTimerModal" ><i class="material-icons">extension</i><span>Test</span></button>
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 674, col 86.
+        write(''' waves-effect" data-toggle="modal" data-target="#ATTimerModal" ><i class="material-icons">extension</i><span>Test</span></button>
 \t\t\t\t\t\t\t\t\t<button onClick="listTimers(); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 675, col 76
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 675, col 76.
-        write(u''' waves-effect" data-toggle="modal" data-target="#ATTimerList" ><i class="material-icons">alarm</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 675, col 76.
+        write(''' waves-effect" data-toggle="modal" data-target="#ATTimerList" ><i class="material-icons">alarm</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_timers'] # u"$tstrings['at_timers']" on line 675, col 190
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_timers']")) # from line 675, col 190.
-        write(u'''</span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_timers']")) # from line 675, col 190.
+        write('''</span></button>
 \t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t<div class="row">
 \t\t\t\t\t\t\t\t<div class="col-xs-12 align-center">
 \t\t\t\t\t\t\t\t\t<button onClick="getAutoTimerSettings(); return false;" data-toggle="modal" data-target="#ATSettings" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 680, col 132
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 680, col 132.
-        write(u''' waves-effect"  data-title="''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 680, col 132.
+        write(''' waves-effect"  data-title="''')
         _v = VFFSL(SL,"tstrings",True)['ats_auto_timer_settings'] # u"$tstrings['ats_auto_timer_settings']" on line 680, col 170
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_auto_timer_settings']")) # from line 680, col 170.
-        write(u'''"><i class="material-icons">settings</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['ats_auto_timer_settings']")) # from line 680, col 170.
+        write('''"><i class="material-icons">settings</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_settings'] # u"$tstrings['at_settings']" on line 680, col 252
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_settings']")) # from line 680, col 252.
-        write(u'''</span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_settings']")) # from line 680, col 252.
+        write('''</span></button>
 \t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t</div>
@@ -1377,71 +1378,71 @@
 \t\t\t\t\t\t\t\t<div class="col-xs-12 align-center">
 \t\t\t\t\t\t\t\t\t<button onClick="addAT(); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 687, col 71
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 687, col 71.
-        write(u''' waves-effect" ><i class="material-icons">add</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 687, col 71.
+        write(''' waves-effect" ><i class="material-icons">add</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_add'] # u"$tstrings['at_add']" on line 687, col 136
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_add']")) # from line 687, col 136.
-        write(u'''</span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_add']")) # from line 687, col 136.
+        write('''</span></button>
 \t\t\t\t\t\t\t\t\t<button onClick="delAT(); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 688, col 71
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 688, col 71.
-        write(u''' waves-effect" ><i class="material-icons">delete</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 688, col 71.
+        write(''' waves-effect" ><i class="material-icons">delete</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_del'] # u"$tstrings['at_del']" on line 688, col 139
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_del']")) # from line 688, col 139.
-        write(u'''</span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_del']")) # from line 688, col 139.
+        write('''</span></button>
 \t\t\t\t\t\t\t\t\t<button onClick="reloadAT(); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 689, col 74
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 689, col 74.
-        write(u''' waves-effect" ><i class="material-icons">autorenew</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 689, col 74.
+        write(''' waves-effect" ><i class="material-icons">autorenew</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_reload'] # u"$tstrings['at_reload']" on line 689, col 145
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_reload']")) # from line 689, col 145.
-        write(u'''</span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_reload']")) # from line 689, col 145.
+        write('''</span></button>
 \t\t\t\t\t\t\t\t\t<button onClick="saveAT(); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 690, col 72
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 690, col 72.
-        write(u''' waves-effect" ><i class="material-icons">save</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 690, col 72.
+        write(''' waves-effect" ><i class="material-icons">save</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_save'] # u"$tstrings['at_save']" on line 690, col 138
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_save']")) # from line 690, col 138.
-        write(u'''</span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_save']")) # from line 690, col 138.
+        write('''</span></button>
 \t\t\t\t\t\t\t\t\t<button onClick="parseAT(); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 691, col 73
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 691, col 73.
-        write(u''' waves-effect" ><i class="material-icons">code</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 691, col 73.
+        write(''' waves-effect" ><i class="material-icons">code</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_parse'] # u"$tstrings['at_parse']" on line 691, col 139
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_parse']")) # from line 691, col 139.
-        write(u'''</span></span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_parse']")) # from line 691, col 139.
+        write('''</span></span></button>
 \t\t\t\t\t\t\t\t\t<button onClick="test_simulateAT(true); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 692, col 85
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 692, col 85.
-        write(u''' waves-effect" data-toggle="modal" data-target="#ATTimerModal" ><i class="material-icons">view_list</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 692, col 85.
+        write(''' waves-effect" data-toggle="modal" data-target="#ATTimerModal" ><i class="material-icons">view_list</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_simulate'] # u"$tstrings['at_simulate']" on line 692, col 204
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_simulate']")) # from line 692, col 204.
-        write(u'''</span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_simulate']")) # from line 692, col 204.
+        write('''</span></button>
 \t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t<div class="row">
 \t\t\t\t\t\t\t\t<div class="col-xs-12 align-center">
 \t\t\t\t\t\t\t\t\t<button onClick="test_simulateAT(false); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 697, col 86
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 697, col 86.
-        write(u''' waves-effect" data-toggle="modal" data-target="#ATTimerModal" ><i class="material-icons">extension</i><span>Test</span></button>
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 697, col 86.
+        write(''' waves-effect" data-toggle="modal" data-target="#ATTimerModal" ><i class="material-icons">extension</i><span>Test</span></button>
 \t\t\t\t\t\t\t\t\t<button onClick="listTimers(); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 698, col 76
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 698, col 76.
-        write(u''' waves-effect" data-toggle="modal" data-target="#ATTimerList" ><i class="material-icons">alarm</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 698, col 76.
+        write(''' waves-effect" data-toggle="modal" data-target="#ATTimerList" ><i class="material-icons">alarm</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_timers'] # u"$tstrings['at_timers']" on line 698, col 190
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_timers']")) # from line 698, col 190.
-        write(u'''</span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_timers']")) # from line 698, col 190.
+        write('''</span></button>
 \t\t\t\t\t\t\t\t\t<button onClick="getAutoTimerSettings(); return false;" data-toggle="modal" data-target="#ATSettings" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 699, col 132
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 699, col 132.
-        write(u''' waves-effect"  data-title="''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 699, col 132.
+        write(''' waves-effect"  data-title="''')
         _v = VFFSL(SL,"tstrings",True)['ats_auto_timer_settings'] # u"$tstrings['ats_auto_timer_settings']" on line 699, col 170
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_auto_timer_settings']")) # from line 699, col 170.
-        write(u'''"><i class="material-icons">settings</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['ats_auto_timer_settings']")) # from line 699, col 170.
+        write('''"><i class="material-icons">settings</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_settings'] # u"$tstrings['at_settings']" on line 699, col 252
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_settings']")) # from line 699, col 252.
-        write(u'''</span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_settings']")) # from line 699, col 252.
+        write('''</span></button>
 \t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t</div>
@@ -1450,67 +1451,67 @@
 \t\t\t\t\t\t\t\t<div class="col-xs-12 align-center">
 \t\t\t\t\t\t\t\t\t<button onClick="addAT(); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 706, col 71
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 706, col 71.
-        write(u''' waves-effect" ><i class="material-icons">add</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 706, col 71.
+        write(''' waves-effect" ><i class="material-icons">add</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_add'] # u"$tstrings['at_add']" on line 706, col 136
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_add']")) # from line 706, col 136.
-        write(u'''</span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_add']")) # from line 706, col 136.
+        write('''</span></button>
 \t\t\t\t\t\t\t\t\t<button onClick="delAT(); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 707, col 71
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 707, col 71.
-        write(u''' waves-effect" ><i class="material-icons">delete</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 707, col 71.
+        write(''' waves-effect" ><i class="material-icons">delete</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_del'] # u"$tstrings['at_del']" on line 707, col 139
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_del']")) # from line 707, col 139.
-        write(u'''</span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_del']")) # from line 707, col 139.
+        write('''</span></button>
 \t\t\t\t\t\t\t\t\t<button onClick="reloadAT(); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 708, col 74
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 708, col 74.
-        write(u''' waves-effect" ><i class="material-icons">autorenew</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 708, col 74.
+        write(''' waves-effect" ><i class="material-icons">autorenew</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_reload'] # u"$tstrings['at_reload']" on line 708, col 145
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_reload']")) # from line 708, col 145.
-        write(u'''</span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_reload']")) # from line 708, col 145.
+        write('''</span></button>
 \t\t\t\t\t\t\t\t\t<button onClick="saveAT(); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 709, col 72
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 709, col 72.
-        write(u''' waves-effect" ><i class="material-icons">save</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 709, col 72.
+        write(''' waves-effect" ><i class="material-icons">save</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_save'] # u"$tstrings['at_save']" on line 709, col 138
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_save']")) # from line 709, col 138.
-        write(u'''</span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_save']")) # from line 709, col 138.
+        write('''</span></button>
 \t\t\t\t\t\t\t\t\t<button onClick="parseAT(); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 710, col 73
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 710, col 73.
-        write(u''' waves-effect" ><i class="material-icons">code</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 710, col 73.
+        write(''' waves-effect" ><i class="material-icons">code</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_parse'] # u"$tstrings['at_parse']" on line 710, col 139
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_parse']")) # from line 710, col 139.
-        write(u'''</span></span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_parse']")) # from line 710, col 139.
+        write('''</span></span></button>
 \t\t\t\t\t\t\t\t\t<button onClick="test_simulateAT(true); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 711, col 85
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 711, col 85.
-        write(u''' waves-effect" data-toggle="modal" data-target="#ATTimerModal" ><i class="material-icons">view_list</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 711, col 85.
+        write(''' waves-effect" data-toggle="modal" data-target="#ATTimerModal" ><i class="material-icons">view_list</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_simulate'] # u"$tstrings['at_simulate']" on line 711, col 204
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_simulate']")) # from line 711, col 204.
-        write(u'''</span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_simulate']")) # from line 711, col 204.
+        write('''</span></button>
 \t\t\t\t\t\t\t\t\t<button onClick="test_simulateAT(false); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 712, col 86
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 712, col 86.
-        write(u''' waves-effect" data-toggle="modal" data-target="#ATTimerModal" ><i class="material-icons">extension</i><span>Test</span></button>
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 712, col 86.
+        write(''' waves-effect" data-toggle="modal" data-target="#ATTimerModal" ><i class="material-icons">extension</i><span>Test</span></button>
 \t\t\t\t\t\t\t\t\t<button onClick="listTimers(); return false;" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 713, col 76
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 713, col 76.
-        write(u''' waves-effect" data-toggle="modal" data-target="#ATTimerList" ><i class="material-icons">alarm</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 713, col 76.
+        write(''' waves-effect" data-toggle="modal" data-target="#ATTimerList" ><i class="material-icons">alarm</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_timers'] # u"$tstrings['at_timers']" on line 713, col 190
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_timers']")) # from line 713, col 190.
-        write(u'''</span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_timers']")) # from line 713, col 190.
+        write('''</span></button>
 \t\t\t\t\t\t\t\t\t<button onClick="getAutoTimerSettings(); return false;" data-toggle="modal" data-target="#ATSettings" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 714, col 132
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 714, col 132.
-        write(u''' waves-effect"  data-title="''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 714, col 132.
+        write(''' waves-effect"  data-title="''')
         _v = VFFSL(SL,"tstrings",True)['ats_auto_timer_settings'] # u"$tstrings['ats_auto_timer_settings']" on line 714, col 170
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_auto_timer_settings']")) # from line 714, col 170.
-        write(u'''"><i class="material-icons">settings</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['ats_auto_timer_settings']")) # from line 714, col 170.
+        write('''"><i class="material-icons">settings</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['at_settings'] # u"$tstrings['at_settings']" on line 714, col 252
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_settings']")) # from line 714, col 252.
-        write(u'''</span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_settings']")) # from line 714, col 252.
+        write('''</span></button>
 \t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t</div>
@@ -1535,20 +1536,20 @@
 \t\t\t\t\t\t\t<thead>
 \t\t\t\t\t\t\t\t<tr><th>State</th><th>''')
         _v = VFFSL(SL,"tstrings",True)['name'] # u"$tstrings['name']" on line 737, col 31
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['name']")) # from line 737, col 31.
-        write(u'''</th><th>''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['name']")) # from line 737, col 31.
+        write('''</th><th>''')
         _v = VFFSL(SL,"tstrings",True)['title'] # u"$tstrings['title']" on line 737, col 57
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['title']")) # from line 737, col 57.
-        write(u'''</th><th>''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['title']")) # from line 737, col 57.
+        write('''</th><th>''')
         _v = VFFSL(SL,"tstrings",True)['channel'] # u"$tstrings['channel']" on line 737, col 84
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['channel']")) # from line 737, col 84.
-        write(u'''</th><th>''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['channel']")) # from line 737, col 84.
+        write('''</th><th>''')
         _v = VFFSL(SL,"tstrings",True)['start'] # u"$tstrings['start']" on line 737, col 113
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['start']")) # from line 737, col 113.
-        write(u'''</th><th>''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['start']")) # from line 737, col 113.
+        write('''</th><th>''')
         _v = VFFSL(SL,"tstrings",True)['end'] # u"$tstrings['end']" on line 737, col 140
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['end']")) # from line 737, col 140.
-        write(u'''</th></tr>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['end']")) # from line 737, col 140.
+        write('''</th></tr>
 \t\t\t\t\t\t\t</thead>
 \t\t\t\t\t\t\t\t<tbody id=\'simtb\'>
 \t\t\t\t\t\t\t\t</tbody>
@@ -1558,8 +1559,8 @@
 \t\t\t<div class="modal-footer">
 \t\t\t\t<button type="button" class="btn waves-effect btn-default" data-dismiss="modal">''')
         _v = VFFSL(SL,"tstrings",True)['close'] # u"$tstrings['close']" on line 745, col 85
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['close']")) # from line 745, col 85.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['close']")) # from line 745, col 85.
+        write('''</button>
 \t\t\t</div>
 \t\t</div>
 \t</div>
@@ -1572,8 +1573,8 @@
 \t\t\t\t<button type="button" class="close" data-dismiss="modal">&times;</button>
 \t\t\t\t<h4 class="modal-title">''')
         _v = VFFSL(SL,"tstrings",True)['ats_auto_timer_settings'] # u"$tstrings['ats_auto_timer_settings']" on line 756, col 29
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_auto_timer_settings']")) # from line 756, col 29.
-        write(u'''</h4>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['ats_auto_timer_settings']")) # from line 756, col 29.
+        write('''</h4>
 \t\t\t</div>
 \t\t\t\t<div class="modal-body" style="max-height: calc(100vh - 180px); overflow-y: auto;">
 \t\t\t\t\t<div id="atsettingdlgcont">
@@ -1582,142 +1583,142 @@
 \t\t\t\t\t\t\t\t<div class="form-group">
 \t\t\t\t\t\t\t\t\t<input type="checkbox" class="form-control chk-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 763, col 61
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 763, col 61.
-        write(u'''" id="ats_autopoll" value="" >
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 763, col 61.
+        write('''" id="ats_autopoll" value="" >
 \t\t\t\t\t\t\t\t\t<label for="ats_autopoll">''')
         _v = VFFSL(SL,"tstrings",True)['ats_autopoll'] # u"$tstrings['ats_autopoll']" on line 764, col 36
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_autopoll']")) # from line 764, col 36.
-        write(u'''</label>&nbsp;
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['ats_autopoll']")) # from line 764, col 36.
+        write('''</label>&nbsp;
 \t\t\t\t\t\t\t\t\t<br />
 \t\t\t\t\t\t\t\t\t<label for="ats_interval">''')
         _v = VFFSL(SL,"tstrings",True)['ats_interval'] # u"$tstrings['ats_interval']" on line 766, col 36
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_interval']")) # from line 766, col 36.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['ats_interval']")) # from line 766, col 36.
+        write('''</label>
 \t\t\t\t\t\t\t\t\t<div class="form-line inactive">
 \t\t\t\t\t\t\t\t\t\t<input type="text" size="5" id="ats_interval" class="form-control">
 \t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t<br />
 \t\t\t\t\t\t\t\t\t<label for="ats_maxdaysinfuture">''')
         _v = VFFSL(SL,"tstrings",True)['ats_maxdaysinfuture'] # u"$tstrings['ats_maxdaysinfuture']" on line 771, col 43
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_maxdaysinfuture']")) # from line 771, col 43.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['ats_maxdaysinfuture']")) # from line 771, col 43.
+        write('''</label>
 \t\t\t\t\t\t\t\t\t<div class="form-line inactive">
 \t\t\t\t\t\t\t\t\t\t<input type="text" size="5" id="ats_maxdaysinfuture" class="form-control">
 \t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t<br>
 \t\t\t\t\t\t\t\t\t<input type="checkbox" id="ats_try_guessing" value="" class="form-control chk-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 776, col 92
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 776, col 92.
-        write(u'''" >
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 776, col 92.
+        write('''" >
 \t\t\t\t\t\t\t\t\t<label for="ats_try_guessing">''')
         _v = VFFSL(SL,"tstrings",True)['ats_try_guessing'] # u"$tstrings['ats_try_guessing']" on line 777, col 40
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_try_guessing']")) # from line 777, col 40.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['ats_try_guessing']")) # from line 777, col 40.
+        write('''</label>
 \t\t\t\t\t\t\t\t\t<br />
 \t\t\t\t\t\t\t\t\t<input type="checkbox" id="ats_fastscan" class="form-control chk-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 779, col 79
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 779, col 79.
-        write(u'''" value="" >
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 779, col 79.
+        write('''" value="" >
 \t\t\t\t\t\t\t\t\t<label for="ats_fastscan">''')
         _v = VFFSL(SL,"tstrings",True)['ats_fastscan'] # u"$tstrings['ats_fastscan']" on line 780, col 36
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_fastscan']")) # from line 780, col 36.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['ats_fastscan']")) # from line 780, col 36.
+        write('''</label>
 \t\t\t\t\t\t\t\t\t<br />
 \t\t\t\t\t\t\t\t\t<input type="checkbox" id="ats_show_in_extensionsmenu" class="form-control chk-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 782, col 93
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 782, col 93.
-        write(u'''" value="" >
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 782, col 93.
+        write('''" value="" >
 \t\t\t\t\t\t\t\t\t<label for="ats_show_in_extensionsmenu">''')
         _v = VFFSL(SL,"tstrings",True)['ats_show_in_extensionsmenu'] # u"$tstrings['ats_show_in_extensionsmenu']" on line 783, col 50
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_show_in_extensionsmenu']")) # from line 783, col 50.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['ats_show_in_extensionsmenu']")) # from line 783, col 50.
+        write('''</label>
 \t\t\t\t\t\t\t\t\t<br>
 \t\t\t\t\t\t\t\t\t<input type="checkbox" id="ats_disabled_on_conflict" value=""  class="form-control chk-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 785, col 101
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 785, col 101.
-        write(u'''" >
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 785, col 101.
+        write('''" >
 \t\t\t\t\t\t\t\t\t<label for="ats_disabled_on_conflict">''')
         _v = VFFSL(SL,"tstrings",True)['ats_disabled_on_conflict'] # u"$tstrings['ats_disabled_on_conflict']" on line 786, col 48
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_disabled_on_conflict']")) # from line 786, col 48.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['ats_disabled_on_conflict']")) # from line 786, col 48.
+        write('''</label>
 \t\t\t\t\t\t\t\t\t<br />
 \t\t\t\t\t\t\t\t\t<input type="checkbox" id="ats_addsimilar_on_conflict" value="" class="form-control chk-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 788, col 102
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 788, col 102.
-        write(u'''" >
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 788, col 102.
+        write('''" >
 \t\t\t\t\t\t\t\t\t<label for="ats_addsimilar_on_conflict">''')
         _v = VFFSL(SL,"tstrings",True)['ats_addsimilar_on_conflict'] # u"$tstrings['ats_addsimilar_on_conflict']" on line 789, col 50
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_addsimilar_on_conflict']")) # from line 789, col 50.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['ats_addsimilar_on_conflict']")) # from line 789, col 50.
+        write('''</label>
 \t\t\t\t\t\t\t\t\t<br>
 \t\t\t\t\t\t\t\t\t<input type="checkbox" id="ats_notifconflict" value="" class="form-control chk-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 791, col 93
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 791, col 93.
-        write(u'''" >
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 791, col 93.
+        write('''" >
 \t\t\t\t\t\t\t\t\t<label for="ats_notifconflict">''')
         _v = VFFSL(SL,"tstrings",True)['ats_notifconflict'] # u"$tstrings['ats_notifconflict']" on line 792, col 41
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_notifconflict']")) # from line 792, col 41.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['ats_notifconflict']")) # from line 792, col 41.
+        write('''</label>
 \t\t\t\t\t\t\t\t\t<br />
 \t\t\t\t\t\t\t\t\t<input type="checkbox" id="ats_notifsimilar" value="" class="form-control chk-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 794, col 92
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 794, col 92.
-        write(u'''" >
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 794, col 92.
+        write('''" >
 \t\t\t\t\t\t\t\t\t<label for="ats_notifsimilar">''')
         _v = VFFSL(SL,"tstrings",True)['ats_notifsimilar'] # u"$tstrings['ats_notifsimilar']" on line 795, col 40
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_notifsimilar']")) # from line 795, col 40.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['ats_notifsimilar']")) # from line 795, col 40.
+        write('''</label>
 \t\t\t\t\t\t\t\t\t<br>
 \t\t\t\t\t\t\t\t\t<input type="checkbox" id="ats_add_autotimer_to_tags" value="" class="form-control chk-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 797, col 101
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 797, col 101.
-        write(u'''" >
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 797, col 101.
+        write('''" >
 \t\t\t\t\t\t\t\t\t<label for="ats_add_autotimer_to_tags">''')
         _v = VFFSL(SL,"tstrings",True)['ats_add_autotimer_to_tags'] # u"$tstrings['ats_add_autotimer_to_tags']" on line 798, col 49
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_add_autotimer_to_tags']")) # from line 798, col 49.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['ats_add_autotimer_to_tags']")) # from line 798, col 49.
+        write('''</label>
 \t\t\t\t\t\t\t\t\t<br />
 \t\t\t\t\t\t\t\t\t<input type="checkbox" id="ats_add_name_to_tags" value="" class="form-control chk-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 800, col 96
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 800, col 96.
-        write(u'''" >
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 800, col 96.
+        write('''" >
 \t\t\t\t\t\t\t\t\t<label for="ats_add_name_to_tags">''')
         _v = VFFSL(SL,"tstrings",True)['ats_add_name_to_tags'] # u"$tstrings['ats_add_name_to_tags']" on line 801, col 44
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_add_name_to_tags']")) # from line 801, col 44.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['ats_add_name_to_tags']")) # from line 801, col 44.
+        write('''</label>
 \t\t\t\t\t\t\t\t\t<br>
 \t\t\t\t\t\t\t\t\t<label for="ats_refresh">''')
         _v = VFFSL(SL,"tstrings",True)['ats_refresh'] # u"$tstrings['ats_refresh']" on line 803, col 35
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_refresh']")) # from line 803, col 35.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['ats_refresh']")) # from line 803, col 35.
+        write('''</label>
 \t\t\t\t\t\t\t\t\t<select id="ats_refresh" size="1"  class="form-control">
 \t\t\t\t\t\t\t\t\t\t<option value="none" selected="selected">''')
         _v = VFFSL(SL,"tstrings",True)['ats_refresh_none'] # u"$tstrings['ats_refresh_none']" on line 805, col 52
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_refresh_none']")) # from line 805, col 52.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['ats_refresh_none']")) # from line 805, col 52.
+        write('''</option>
 \t\t\t\t\t\t\t\t\t\t<option value="auto" selected="selected">''')
         _v = VFFSL(SL,"tstrings",True)['ats_refresh_auto'] # u"$tstrings['ats_refresh_auto']" on line 806, col 52
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_refresh_auto']")) # from line 806, col 52.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['ats_refresh_auto']")) # from line 806, col 52.
+        write('''</option>
 \t\t\t\t\t\t\t\t\t\t<option value="all" selected="selected">''')
         _v = VFFSL(SL,"tstrings",True)['ats_refresh_all'] # u"$tstrings['ats_refresh_all']" on line 807, col 51
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_refresh_all']")) # from line 807, col 51.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['ats_refresh_all']")) # from line 807, col 51.
+        write('''</option>
 \t\t\t\t\t\t\t\t\t</select>
 \t\t\t\t\t\t\t\t\t<br />
 \t\t\t\t\t\t\t\t\t<label for="ats_editor">''')
         _v = VFFSL(SL,"tstrings",True)['ats_editor'] # u"$tstrings['ats_editor']" on line 810, col 34
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_editor']")) # from line 810, col 34.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['ats_editor']")) # from line 810, col 34.
+        write('''</label>
 \t\t\t\t\t\t\t\t\t<select id="ats_editor" size="1" class="form-control">
 \t\t\t\t\t\t\t\t\t\t<option value="plain" selected="selected">''')
         _v = VFFSL(SL,"tstrings",True)['ats_editor_plain'] # u"$tstrings['ats_editor_plain']" on line 812, col 53
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_editor_plain']")) # from line 812, col 53.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['ats_editor_plain']")) # from line 812, col 53.
+        write('''</option>
 \t\t\t\t\t\t\t\t\t\t<option value="wizzard" selected="selected">''')
         _v = VFFSL(SL,"tstrings",True)['ats_editor_wizzard'] # u"$tstrings['ats_editor_wizzard']" on line 813, col 55
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_editor_wizzard']")) # from line 813, col 55.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['ats_editor_wizzard']")) # from line 813, col 55.
+        write('''</option>
 \t\t\t\t\t\t\t\t\t</select>
 \t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t</fieldset>
@@ -1727,15 +1728,15 @@
 \t\t\t<div class="modal-footer">
 \t\t\t\t<button type="button" class="btn waves-effect btn-default" data-dismiss="modal">''')
         _v = VFFSL(SL,"tstrings",True)['close'] # u"$tstrings['close']" on line 821, col 85
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['close']")) # from line 821, col 85.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['close']")) # from line 821, col 85.
+        write('''</button>
 \t\t\t\t<button type="button" class="btn waves-effect bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 822, col 54
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 822, col 54.
-        write(u'''" data-dismiss="modal" onClick="setAutoTimerSettings(); return false;">''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 822, col 54.
+        write('''" data-dismiss="modal" onClick="setAutoTimerSettings(); return false;">''')
         _v = VFFSL(SL,"tstrings",True)['save'] # u"$tstrings['save']" on line 822, col 135
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['save']")) # from line 822, col 135.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['save']")) # from line 822, col 135.
+        write('''</button>
 \t\t\t</div>
 \t\t</div>
 \t</div>
@@ -1754,8 +1755,8 @@
 \t\t\t<div class="modal-footer">
 \t\t\t\t<button type="button" class="btn waves-effect bg-red" data-dismiss="modal">''')
         _v = VFFSL(SL,"tstrings",True)['close'] # u"$tstrings['close']" on line 839, col 80
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['close']")) # from line 839, col 80.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['close']")) # from line 839, col 80.
+        write('''</button>
 \t\t\t</div>
 \t\t</div>
 \t</div>
--- ./plugin/controllers/views/responsive/ajax/bouquets.py	(original)
+++ ./plugin/controllers/views/responsive/ajax/bouquets.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -62,7 +63,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -72,7 +73,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -85,54 +86,54 @@
         ########################################
         ## START - generated method body
         
-        write(u'''<div class="form-group hidden-md hidden-lg hidden-xl">
+        write('''<div class="form-group hidden-md hidden-lg hidden-xl">
 \t<select class="form-control show-tick" id="bqselector">
 ''')
         for bouquet in VFFSL(SL,"bouquets",True): # generated from line 6, col 2
-            write(u"""\t\t<option value='ajax/channels?id=""")
+            write("""\t\t<option value='ajax/channels?id=""")
             _v = VFFSL(SL,"quote",False)(VFFSL(SL,"bouquet",True)[0]) # u'$quote($bouquet[0])' on line 7, col 35
-            if _v is not None: write(_filter(_v, rawExpr=u'$quote($bouquet[0])')) # from line 7, col 35.
-            write(u'''&stype=''')
+            if _v is not None: write(_filter(_v, rawExpr='$quote($bouquet[0])')) # from line 7, col 35.
+            write('''&stype=''')
             _v = VFFSL(SL,"stype",True) # u'$stype' on line 7, col 61
-            if _v is not None: write(_filter(_v, rawExpr=u'$stype')) # from line 7, col 61.
-            write(u"""'>""")
+            if _v is not None: write(_filter(_v, rawExpr='$stype')) # from line 7, col 61.
+            write("""'>""")
             _v = VFFSL(SL,"bouquet",True)[1] # u'$bouquet[1]' on line 7, col 69
-            if _v is not None: write(_filter(_v, rawExpr=u'$bouquet[1]')) # from line 7, col 69.
-            write(u'''</option>
-''')
-        write(u'''\t</select>
+            if _v is not None: write(_filter(_v, rawExpr='$bouquet[1]')) # from line 7, col 69.
+            write('''</option>
+''')
+        write('''\t</select>
 </div>
 <div class="hidden-sm hidden-xs">
 \t<ul class="nav nav-tabs tab-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 12, col 34
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 12, col 34.
-        write(u'''">
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 12, col 34.
+        write('''">
 ''')
         f = "id='firstBq'"
         for bouquet in VFFSL(SL,"bouquets",True): # generated from line 14, col 2
-            write(u'''\t\t<li><a data-toggle="tab" href=\'#tab\' ''')
+            write('''\t\t<li><a data-toggle="tab" href=\'#tab\' ''')
             _v = VFFSL(SL,"f",True) # u'$f' on line 15, col 40
-            if _v is not None: write(_filter(_v, rawExpr=u'$f')) # from line 15, col 40.
-            write(u''' onclick="load_subcontent(\'ajax/channels?id=''')
+            if _v is not None: write(_filter(_v, rawExpr='$f')) # from line 15, col 40.
+            write(''' onclick="load_subcontent(\'ajax/channels?id=''')
             _v = VFFSL(SL,"quote",False)(VFFSL(SL,"bouquet",True)[0]) # u'$quote($bouquet[0])' on line 15, col 86
-            if _v is not None: write(_filter(_v, rawExpr=u'$quote($bouquet[0])')) # from line 15, col 86.
-            write(u'''&stype=''')
+            if _v is not None: write(_filter(_v, rawExpr='$quote($bouquet[0])')) # from line 15, col 86.
+            write('''&stype=''')
             _v = VFFSL(SL,"stype",True) # u'$stype' on line 15, col 112
-            if _v is not None: write(_filter(_v, rawExpr=u'$stype')) # from line 15, col 112.
-            write(u'''\'); return false;" >
+            if _v is not None: write(_filter(_v, rawExpr='$stype')) # from line 15, col 112.
+            write('''\'); return false;" >
 \t\t<i onclick="pl(\'''')
             _v = VFFSL(SL,"quote",False)(VFFSL(SL,"bouquet",True)[0]) # u'$quote($bouquet[0])' on line 16, col 19
-            if _v is not None: write(_filter(_v, rawExpr=u'$quote($bouquet[0])')) # from line 16, col 19.
-            write(u"""','""")
+            if _v is not None: write(_filter(_v, rawExpr='$quote($bouquet[0])')) # from line 16, col 19.
+            write("""','""")
             _v = VFFSL(SL,"quote",False)(VFFSL(SL,"bouquet",True)[1]) # u'$quote($bouquet[1])' on line 16, col 41
-            if _v is not None: write(_filter(_v, rawExpr=u'$quote($bouquet[1])')) # from line 16, col 41.
-            write(u'''\');return false;" class="material-icons material-icons-bouquets">tv</i>''')
+            if _v is not None: write(_filter(_v, rawExpr='$quote($bouquet[1])')) # from line 16, col 41.
+            write('''\');return false;" class="material-icons material-icons-bouquets">tv</i>''')
             _v = VFFSL(SL,"bouquet",True)[1] # u'$bouquet[1]' on line 16, col 131
-            if _v is not None: write(_filter(_v, rawExpr=u'$bouquet[1]')) # from line 16, col 131.
-            write(u'''</a></li>
+            if _v is not None: write(_filter(_v, rawExpr='$bouquet[1]')) # from line 16, col 131.
+            write('''</a></li>
 ''')
             f = "class='align-middle'"
-        write(u'''\t</ul>
+        write('''\t</ul>
 </div>
 <div class="tab-content">
 \t<div class="tab-pane active" id="tab">
--- ./plugin/controllers/views/responsive/ajax/boxinfo.py	(original)
+++ ./plugin/controllers/views/responsive/ajax/boxinfo.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -61,7 +62,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -71,7 +72,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -84,15 +85,15 @@
         ########################################
         ## START - generated method body
         
-        write(u'''<div class="col-xs-12">
+        write('''<div class="col-xs-12">
 \t<div class="card">
 \t\t<div class="header">
 \t\t\t<div class="row clearfix">
 \t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t<h2><i class="material-icons material-icons-centered">info</i>''')
         _v = VFFSL(SL,"tstrings",True)['box_info'] # u"$tstrings['box_info']" on line 8, col 68
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['box_info']")) # from line 8, col 68.
-        write(u'''</h2>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['box_info']")) # from line 8, col 68.
+        write('''</h2>
 \t\t\t\t</div>
 \t\t\t</div>
 \t\t</div>
@@ -101,8 +102,8 @@
 \t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t<img src="images/boxes/''')
         _v = VFFSL(SL,"boximage",True) # u'${boximage}' on line 15, col 29
-        if _v is not None: write(_filter(_v, rawExpr=u'${boximage}')) # from line 15, col 29.
-        write(u'''" id="box_image" class="img-responsive center-block" alt="box_info">
+        if _v is not None: write(_filter(_v, rawExpr='${boximage}')) # from line 15, col 29.
+        write('''" id="box_image" class="img-responsive center-block" alt="box_info">
 \t\t\t\t</div>
 \t\t\t</div>
 \t\t\t<div class="row clearfix">
@@ -110,74 +111,74 @@
 \t\t\t\t\t<div class="card">
 \t\t\t\t\t<div class="header vti-colored-card bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 21, col 45
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 21, col 45.
-        write(u'''">
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 21, col 45.
+        write('''">
 \t\t\t\t\t\t\t<h2>''')
         _v = VFFSL(SL,"tstrings",True)['box'] # u"$tstrings['box']" on line 22, col 12
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['box']")) # from line 22, col 12.
-        write(u'''</h2>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['box']")) # from line 22, col 12.
+        write('''</h2>
 \t\t\t\t\t</div>
 \t\t\t\t\t<div class="body">
 \t\t\t\t\t\t\t<div class="row clearfix">
 \t\t\t\t\t\t\t\t<div class="col-xs-12 col-sm-6">
 \t\t\t\t\t\t\t\t\t<b>''')
         _v = VFFSL(SL,"tstrings",True)['brand'] # u"$tstrings['brand']" on line 27, col 13
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['brand']")) # from line 27, col 13.
-        write(u''' & ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['brand']")) # from line 27, col 13.
+        write(''' & ''')
         _v = VFFSL(SL,"tstrings",True)['model'] # u"$tstrings['model']" on line 27, col 34
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['model']")) # from line 27, col 34.
-        write(u''':</b>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['model']")) # from line 27, col 34.
+        write(''':</b>
 \t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t<div class="col-xs-6">
 \t\t\t\t\t\t\t\t\t''')
         _v = VFFSL(SL,"brand",True) # u'$brand' on line 30, col 10
-        if _v is not None: write(_filter(_v, rawExpr=u'$brand')) # from line 30, col 10.
-        write(u''' ''')
+        if _v is not None: write(_filter(_v, rawExpr='$brand')) # from line 30, col 10.
+        write(''' ''')
         _v = VFFSL(SL,"model",True) # u'$model' on line 30, col 17
-        if _v is not None: write(_filter(_v, rawExpr=u'$model')) # from line 30, col 17.
-        write(u'''
+        if _v is not None: write(_filter(_v, rawExpr='$model')) # from line 30, col 17.
+        write('''
 \t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t<div class="row clearfix">
 \t\t\t\t\t\t\t\t<div class="col-xs-12 col-sm-6">
 \t\t\t\t\t\t\t\t\t<b>''')
         _v = VFFSL(SL,"friendlychipsetdescription",True) # u'$friendlychipsetdescription' on line 35, col 13
-        if _v is not None: write(_filter(_v, rawExpr=u'$friendlychipsetdescription')) # from line 35, col 13.
-        write(u''':</b>
+        if _v is not None: write(_filter(_v, rawExpr='$friendlychipsetdescription')) # from line 35, col 13.
+        write(''':</b>
 \t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t<div class="col-xs-12 col-sm-6">
 \t\t\t\t\t\t\t\t\t''')
         _v = VFFSL(SL,"friendlychipsettext",True) # u'$friendlychipsettext' on line 38, col 10
-        if _v is not None: write(_filter(_v, rawExpr=u'$friendlychipsettext')) # from line 38, col 10.
-        write(u'''
+        if _v is not None: write(_filter(_v, rawExpr='$friendlychipsettext')) # from line 38, col 10.
+        write('''
 \t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t<div class="row clearfix">
 \t\t\t\t\t\t\t\t<div class="col-xs-12 col-sm-6">
 \t\t\t\t\t\t\t\t\t<b>''')
         _v = VFFSL(SL,"tstrings",True)['main_memory'] # u"$tstrings['main_memory']" on line 43, col 13
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['main_memory']")) # from line 43, col 13.
-        write(u''':</b>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['main_memory']")) # from line 43, col 13.
+        write(''':</b>
 \t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t<div class="col-xs-12 col-sm-6">
 \t\t\t\t\t\t\t\t\t''')
         _v = VFFSL(SL,"mem3",True) # u'$mem3' on line 46, col 10
-        if _v is not None: write(_filter(_v, rawExpr=u'$mem3')) # from line 46, col 10.
-        write(u'''
+        if _v is not None: write(_filter(_v, rawExpr='$mem3')) # from line 46, col 10.
+        write('''
 \t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t<div class="row clearfix">
 \t\t\t\t\t\t\t\t<div class="col-xs-12 col-sm-6">
 \t\t\t\t\t\t\t\t\t<b>''')
         _v = VFFSL(SL,"tstrings",True)['box_uptime'] # u"$tstrings['box_uptime']" on line 51, col 13
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['box_uptime']")) # from line 51, col 13.
-        write(u''':</b>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['box_uptime']")) # from line 51, col 13.
+        write(''':</b>
 \t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t<div class="col-xs-12 col-sm-6">
 \t\t\t\t\t\t\t\t\t''')
         _v = VFFSL(SL,"uptime",True) # u'$uptime' on line 54, col 10
-        if _v is not None: write(_filter(_v, rawExpr=u'$uptime')) # from line 54, col 10.
-        write(u'''
+        if _v is not None: write(_filter(_v, rawExpr='$uptime')) # from line 54, col 10.
+        write('''
 \t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t</div>
@@ -189,66 +190,66 @@
 \t\t\t\t\t<div class="card">
 \t\t\t\t\t\t<div class="header vti-colored-card bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 64, col 46
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 64, col 46.
-        write(u'''">
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 64, col 46.
+        write('''">
 \t\t\t\t\t\t\t<h2>''')
         _v = VFFSL(SL,"tstrings",True)['software'] # u"$tstrings['software']" on line 65, col 12
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['software']")) # from line 65, col 12.
-        write(u'''</h2>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['software']")) # from line 65, col 12.
+        write('''</h2>
 \t\t\t\t\t\t</div>
 \t\t\t\t\t\t<div class="body">
 \t\t\t\t\t\t\t<div class="row clearfix">
 \t\t\t\t\t\t\t\t<div class="col-xs-12 col-sm-6">
 \t\t\t\t\t\t\t\t\t<b>''')
         _v = VFFSL(SL,"tstrings",True)['oe_version'] # u"$tstrings['oe_version']" on line 70, col 13
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['oe_version']")) # from line 70, col 13.
-        write(u''':</b>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['oe_version']")) # from line 70, col 13.
+        write(''':</b>
 \t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t<div class="col-xs-12 col-sm-6">
 \t\t\t\t\t\t\t\t\t''')
         _v = VFFSL(SL,"oever",True) # u'$oever' on line 73, col 10
-        if _v is not None: write(_filter(_v, rawExpr=u'$oever')) # from line 73, col 10.
-        write(u'''
+        if _v is not None: write(_filter(_v, rawExpr='$oever')) # from line 73, col 10.
+        write('''
 \t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t<div class="row clearfix">
 \t\t\t\t\t\t\t\t<div class="col-xs-12 col-sm-6">
 \t\t\t\t\t\t\t\t\t<b>''')
         _v = VFFSL(SL,"tstrings",True)['firmware_version'] # u"$tstrings['firmware_version']" on line 78, col 13
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['firmware_version']")) # from line 78, col 13.
-        write(u''':</b>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['firmware_version']")) # from line 78, col 13.
+        write(''':</b>
 \t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t<div class="col-xs-12 col-sm-6">
 \t\t\t\t\t\t\t\t\t''')
         _v = VFFSL(SL,"friendlyimagedistro",True) # u'$friendlyimagedistro' on line 81, col 10
-        if _v is not None: write(_filter(_v, rawExpr=u'$friendlyimagedistro')) # from line 81, col 10.
-        write(u''' ''')
+        if _v is not None: write(_filter(_v, rawExpr='$friendlyimagedistro')) # from line 81, col 10.
+        write(''' ''')
         _v = VFFSL(SL,"imagever",True) # u'$imagever' on line 81, col 31
-        if _v is not None: write(_filter(_v, rawExpr=u'$imagever')) # from line 81, col 31.
-        write(u''' (''')
+        if _v is not None: write(_filter(_v, rawExpr='$imagever')) # from line 81, col 31.
+        write(''' (''')
         _v = VFFSL(SL,"enigmaver",True) # u'$enigmaver' on line 81, col 42
-        if _v is not None: write(_filter(_v, rawExpr=u'$enigmaver')) # from line 81, col 42.
-        write(u''')
+        if _v is not None: write(_filter(_v, rawExpr='$enigmaver')) # from line 81, col 42.
+        write(''')
 \t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t<div class="row clearfix">
 \t\t\t\t\t\t\t\t<div class="col-xs-12 col-sm-6">
 \t\t\t\t\t\t\t\t\t<b>''')
         _v = VFFSL(SL,"tstrings",True)['kernel_version'] # u"$tstrings['kernel_version']" on line 86, col 13
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['kernel_version']")) # from line 86, col 13.
-        write(u''' / ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['kernel_version']")) # from line 86, col 13.
+        write(''' / ''')
         _v = VFFSL(SL,"tstrings",True)['driver_date'] # u"$tstrings['driver_date']" on line 86, col 43
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['driver_date']")) # from line 86, col 43.
-        write(u''':</b>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['driver_date']")) # from line 86, col 43.
+        write(''':</b>
 \t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t<div class="col-xs-12 col-sm-6">
 \t\t\t\t\t\t\t\t\t''')
         _v = VFFSL(SL,"kernelver",True) # u'$kernelver' on line 89, col 10
-        if _v is not None: write(_filter(_v, rawExpr=u'$kernelver')) # from line 89, col 10.
-        write(u''' / ''')
+        if _v is not None: write(_filter(_v, rawExpr='$kernelver')) # from line 89, col 10.
+        write(''' / ''')
         _v = VFFSL(SL,"driverdate",True) # u'$driverdate' on line 89, col 23
-        if _v is not None: write(_filter(_v, rawExpr=u'$driverdate')) # from line 89, col 23.
-        write(u'''
+        if _v is not None: write(_filter(_v, rawExpr='$driverdate')) # from line 89, col 23.
+        write('''
 \t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t</div>
@@ -260,294 +261,294 @@
 \t\t\t\t\t<div class="card">
 \t\t\t\t\t\t<div class="header vti-colored-card bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 99, col 46
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 99, col 46.
-        write(u'''">
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 99, col 46.
+        write('''">
 \t\t\t\t\t\t\t<h2>''')
         _v = VFFSL(SL,"tstrings",True)['tuners'] # u"$tstrings['tuners']" on line 100, col 12
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['tuners']")) # from line 100, col 12.
-        write(u'''</h2>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['tuners']")) # from line 100, col 12.
+        write('''</h2>
 \t\t\t\t\t\t</div>
 \t\t\t\t\t\t<div class="body">
 ''')
         for tuner in VFFSL(SL,"tuners",True): # generated from line 103, col 7
-            write(u'''\t\t\t\t\t\t\t\t<div class="row clearfix">
+            write('''\t\t\t\t\t\t\t\t<div class="row clearfix">
 \t\t\t\t\t\t\t\t\t<div class="col-xs-12 col-sm-6">
 \t\t\t\t\t\t\t\t\t\t<b>''')
             _v = VFFSL(SL,"tuner.name",True) # u'$tuner.name' on line 106, col 14
-            if _v is not None: write(_filter(_v, rawExpr=u'$tuner.name')) # from line 106, col 14.
-            write(u'''</b>
+            if _v is not None: write(_filter(_v, rawExpr='$tuner.name')) # from line 106, col 14.
+            write('''</b>
 \t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t<div class="col-xs-12 col-sm-6">
 \t\t\t\t\t\t\t\t\t\t''')
             _v = VFFSL(SL,"tuner.type",True) # u'$tuner.type' on line 109, col 11
-            if _v is not None: write(_filter(_v, rawExpr=u'$tuner.type')) # from line 109, col 11.
-            write(u'''
+            if _v is not None: write(_filter(_v, rawExpr='$tuner.type')) # from line 109, col 11.
+            write('''
 ''')
             if VFFSL(SL,"tuner.live",True) != '': # generated from line 110, col 10
-                write(u'''\t\t\t\t\t\t\t\t\t\t<p><i class="material-icons material-icons-centered">play_circle_outline</i>''')
+                write('''\t\t\t\t\t\t\t\t\t\t<p><i class="material-icons material-icons-centered">play_circle_outline</i>''')
                 _v = VFFSL(SL,"tuner.live",True) # u'$tuner.live' on line 111, col 87
-                if _v is not None: write(_filter(_v, rawExpr=u'$tuner.live')) # from line 111, col 87.
-                write(u'''</p>
+                if _v is not None: write(_filter(_v, rawExpr='$tuner.live')) # from line 111, col 87.
+                write('''</p>
 ''')
             if VFFSL(SL,"tuner.rec",True) != '': # generated from line 113, col 10
-                write(u'''\t\t\t\t\t\t\t\t\t\t\t<p><i class="material-icons material-icons-centered">videocam</i>''')
+                write('''\t\t\t\t\t\t\t\t\t\t\t<p><i class="material-icons material-icons-centered">videocam</i>''')
                 _v = VFFSL(SL,"tuner.rec",True) # u'$tuner.rec' on line 114, col 77
-                if _v is not None: write(_filter(_v, rawExpr=u'$tuner.rec')) # from line 114, col 77.
-                write(u'''</p>
-''')
-            write(u'''\t\t\t\t\t\t\t\t\t</div>
-\t\t\t\t\t\t\t\t</div>
-''')
-        write(u'''\t\t\t\t\t\t</div>
+                if _v is not None: write(_filter(_v, rawExpr='$tuner.rec')) # from line 114, col 77.
+                write('''</p>
+''')
+            write('''\t\t\t\t\t\t\t\t\t</div>
+\t\t\t\t\t\t\t\t</div>
+''')
+        write('''\t\t\t\t\t\t</div>
 \t\t\t\t\t</div>
 \t\t\t\t</div>
 \t\t\t</div>
 ''')
         if VFFSL(SL,"len",False)(VFFSL(SL,"streams",True)) > 0: # generated from line 123, col 4
-            write(u'''\t\t\t<div class="row clearfix">
+            write('''\t\t\t<div class="row clearfix">
 \t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t<div class="card">
 \t\t\t\t\t\t<div class="header vti-colored-card bg-''')
             _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 127, col 46
-            if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 127, col 46.
-            write(u'''">
+            if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 127, col 46.
+            write('''">
 \t\t\t\t\t\t\t<h2>''')
             _v = VFFSL(SL,"tstrings",True)['streamclients'] # u"$tstrings['streamclients']" on line 128, col 12
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['streamclients']")) # from line 128, col 12.
-            write(u'''</h2>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['streamclients']")) # from line 128, col 12.
+            write('''</h2>
 \t\t\t\t\t\t</div>
 \t\t\t\t\t\t<div class="body">
 ''')
             for stream in VFFSL(SL,"streams",True): # generated from line 131, col 8
-                write(u'''\t\t\t\t\t\t\t\t<div class="row clearfix">
+                write('''\t\t\t\t\t\t\t\t<div class="row clearfix">
 \t\t\t\t\t\t\t\t\t<div class="col-xs-12 col-sm-6">
 \t\t\t\t\t\t\t\t\t\t<b>''')
                 _v = VFFSL(SL,"stream.ip",True) # u'$stream.ip' on line 134, col 14
-                if _v is not None: write(_filter(_v, rawExpr=u'$stream.ip')) # from line 134, col 14.
-                write(u''':</b>
+                if _v is not None: write(_filter(_v, rawExpr='$stream.ip')) # from line 134, col 14.
+                write(''':</b>
 \t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t<div class="col-xs-12 col-sm-6">
 ''')
                 if VFFSL(SL,"stream.type",True) == 'T': # generated from line 137, col 11
-                    write(u'''\t\t\t\t\t\t\t\t\t\t\t''')
+                    write('''\t\t\t\t\t\t\t\t\t\t\t''')
                     _v = VFFSL(SL,"stream.name",True) # u'$stream.name' on line 138, col 12
-                    if _v is not None: write(_filter(_v, rawExpr=u'$stream.name')) # from line 138, col 12.
-                    write(u''' / (''')
+                    if _v is not None: write(_filter(_v, rawExpr='$stream.name')) # from line 138, col 12.
+                    write(''' / (''')
                     _v = VFFSL(SL,"tstrings",True)['transcoded'] # u"$tstrings['transcoded']" on line 138, col 28
-                    if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['transcoded']")) # from line 138, col 28.
-                    write(u''')
+                    if _v is not None: write(_filter(_v, rawExpr="$tstrings['transcoded']")) # from line 138, col 28.
+                    write(''')
 ''')
                 else: # generated from line 139, col 11
-                    write(u'''\t\t\t\t\t\t\t\t\t\t\t''')
+                    write('''\t\t\t\t\t\t\t\t\t\t\t''')
                     _v = VFFSL(SL,"stream.name",True) # u'$stream.name' on line 140, col 12
-                    if _v is not None: write(_filter(_v, rawExpr=u'$stream.name')) # from line 140, col 12.
-                    write(u'''
-''')
-                write(u'''\t\t\t\t\t\t\t\t\t</div>
-\t\t\t\t\t\t\t\t</div>
-''')
-            write(u'''\t\t\t\t\t\t</div>
-\t\t\t\t\t</div>
-\t\t\t\t</div>
-\t\t\t</div>
-''')
-        write(u'''\t\t\t<div class="row clearfix">
+                    if _v is not None: write(_filter(_v, rawExpr='$stream.name')) # from line 140, col 12.
+                    write('''
+''')
+                write('''\t\t\t\t\t\t\t\t\t</div>
+\t\t\t\t\t\t\t\t</div>
+''')
+            write('''\t\t\t\t\t\t</div>
+\t\t\t\t\t</div>
+\t\t\t\t</div>
+\t\t\t</div>
+''')
+        write('''\t\t\t<div class="row clearfix">
 \t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t<div class="card">
 \t\t\t\t\t\t<div class="header vti-colored-card bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 153, col 46
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 153, col 46.
-        write(u'''">
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 153, col 46.
+        write('''">
 \t\t\t\t\t\t\t<h2>HDD</h2>
 \t\t\t\t\t\t</div>
 \t\t\t\t\t\t<div class="body">
 ''')
         for hd in VFFSL(SL,"hdd",True): # generated from line 157, col 8
-            write(u'''\t\t\t\t\t\t\t\t<div class="row clearfix">
+            write('''\t\t\t\t\t\t\t\t<div class="row clearfix">
 \t\t\t\t\t\t\t\t\t<div class="col-xs-12 col-sm-6">
 \t\t\t\t\t\t\t\t\t\t<b>''')
             _v = VFFSL(SL,"tstrings",True)['hdd_model'] # u"$tstrings['hdd_model']" on line 160, col 14
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['hdd_model']")) # from line 160, col 14.
-            write(u''':</b>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['hdd_model']")) # from line 160, col 14.
+            write(''':</b>
 \t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t<div class="col-xs-12 col-sm-6">
 \t\t\t\t\t\t\t\t\t\t ''')
             _v = VFFSL(SL,"hd.model",True) # u'$hd.model' on line 163, col 12
-            if _v is not None: write(_filter(_v, rawExpr=u'$hd.model')) # from line 163, col 12.
-            write(u'''
+            if _v is not None: write(_filter(_v, rawExpr='$hd.model')) # from line 163, col 12.
+            write('''
 \t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t<div class="row clearfix">
 \t\t\t\t\t\t\t\t<div class="col-xs-12 col-sm-6">
 \t\t\t\t\t\t\t\t\t<b>''')
             _v = VFFSL(SL,"tstrings",True)['capacity'] # u"$tstrings['capacity']" on line 168, col 13
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['capacity']")) # from line 168, col 13.
-            write(u''':</b>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['capacity']")) # from line 168, col 13.
+            write(''':</b>
 \t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t<div class="col-xs-12 col-sm-6">
 \t\t\t\t\t\t\t\t\t''')
             _v = VFFSL(SL,"hd.friendlycapacity",True) # u'$hd.friendlycapacity' on line 171, col 10
-            if _v is not None: write(_filter(_v, rawExpr=u'$hd.friendlycapacity')) # from line 171, col 10.
-            write(u''' (''')
+            if _v is not None: write(_filter(_v, rawExpr='$hd.friendlycapacity')) # from line 171, col 10.
+            write(''' (''')
             _v = VFFSL(SL,"hd.mount",True) # u'$hd.mount' on line 171, col 32
-            if _v is not None: write(_filter(_v, rawExpr=u'$hd.mount')) # from line 171, col 32.
-            write(u''')
-\t\t\t\t\t\t\t\t</div>
-\t\t\t\t\t\t\t</div>
-''')
-        write(u'''\t\t\t\t\t\t</div>
+            if _v is not None: write(_filter(_v, rawExpr='$hd.mount')) # from line 171, col 32.
+            write(''')
+\t\t\t\t\t\t\t\t</div>
+\t\t\t\t\t\t\t</div>
+''')
+        write('''\t\t\t\t\t\t</div>
 \t\t\t\t\t</div>
 \t\t\t\t</div>
 \t\t\t</div>
 ''')
         if VFFSL(SL,"shares",True): # generated from line 179, col 4
-            write(u'''\t\t\t<div class="row clearfix">
+            write('''\t\t\t<div class="row clearfix">
 \t\t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t\t<div class="card">
 \t\t\t\t\t\t\t<div class="header vti-colored-card bg-''')
             _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 183, col 47
-            if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 183, col 47.
-            write(u'''">
+            if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 183, col 47.
+            write('''">
 \t\t\t\t\t\t\t\t<h2>''')
             _v = VFFSL(SL,"tstrings",True)['networkshares'] # u"$tstrings['networkshares']" on line 184, col 13
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['networkshares']")) # from line 184, col 13.
-            write(u'''</h2>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['networkshares']")) # from line 184, col 13.
+            write('''</h2>
 \t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t<div class="body">
 ''')
             for share in VFFSL(SL,"shares",True): # generated from line 187, col 8
-                write(u'''\t\t\t\t\t\t\t\t\t<div class="row clearfix">
+                write('''\t\t\t\t\t\t\t\t\t<div class="row clearfix">
 \t\t\t\t\t\t\t\t\t\t<div class="col-xs-12 col-sm-6">
 \t\t\t\t\t\t\t\t\t\t\t<b>''')
                 _v = VFFSL(SL,"share.name",True) # u'$share.name' on line 190, col 15
-                if _v is not None: write(_filter(_v, rawExpr=u'$share.name')) # from line 190, col 15.
-                write(u''':</b>
+                if _v is not None: write(_filter(_v, rawExpr='$share.name')) # from line 190, col 15.
+                write(''':</b>
 \t\t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t\t<div class="col-xs-12 col-sm-6">
 \t\t\t\t\t\t\t\t\t\t\t''')
                 _v = VFFSL(SL,"share.type",True) # u'$share.type' on line 193, col 12
-                if _v is not None: write(_filter(_v, rawExpr=u'$share.type')) # from line 193, col 12.
-                write(u''' ''')
+                if _v is not None: write(_filter(_v, rawExpr='$share.type')) # from line 193, col 12.
+                write(''' ''')
                 _v = VFFSL(SL,"tstrings",True)['using'] # u"$tstrings['using']" on line 193, col 24
-                if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['using']")) # from line 193, col 24.
-                write(u''' ''')
+                if _v is not None: write(_filter(_v, rawExpr="$tstrings['using']")) # from line 193, col 24.
+                write(''' ''')
                 _v = VFFSL(SL,"share.method",True) # u'$share.method' on line 193, col 43
-                if _v is not None: write(_filter(_v, rawExpr=u'$share.method')) # from line 193, col 43.
-                write(u''': ''')
+                if _v is not None: write(_filter(_v, rawExpr='$share.method')) # from line 193, col 43.
+                write(''': ''')
                 _v = VFFSL(SL,"share.path",True) # u'$share.path' on line 193, col 58
-                if _v is not None: write(_filter(_v, rawExpr=u'$share.path')) # from line 193, col 58.
-                write(u''' (''')
+                if _v is not None: write(_filter(_v, rawExpr='$share.path')) # from line 193, col 58.
+                write(''' (''')
                 _v = VFFSL(SL,"share.friendlyaddress",True) # u'$share.friendlyaddress' on line 193, col 71
-                if _v is not None: write(_filter(_v, rawExpr=u'$share.friendlyaddress')) # from line 193, col 71.
-                write(u''')
+                if _v is not None: write(_filter(_v, rawExpr='$share.friendlyaddress')) # from line 193, col 71.
+                write(''')
 \t\t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t</div>
 ''')
-            write(u'''\t\t\t\t\t\t\t</div>
+            write('''\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t</div>
 \t\t\t\t\t</div>
 \t\t\t\t</div>
 ''')
         for iface in VFFSL(SL,"ifaces",True): # generated from line 202, col 4
-            write(u'''\t\t\t<div class="row clearfix">
+            write('''\t\t\t<div class="row clearfix">
 \t\t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t\t<div class="card">
 \t\t\t\t\t\t\t<div class="header vti-colored-card bg-''')
             _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 206, col 47
-            if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 206, col 47.
-            write(u'''">
+            if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 206, col 47.
+            write('''">
 \t\t\t\t\t\t\t\t<h2>''')
             _v = VFFSL(SL,"tstrings",True)['network_interface'] # u"$tstrings['network_interface']" on line 207, col 13
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['network_interface']")) # from line 207, col 13.
-            write(u''': ''')
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['network_interface']")) # from line 207, col 13.
+            write(''': ''')
             _v = VFFSL(SL,"iface.name",True) # u'$iface.name' on line 207, col 45
-            if _v is not None: write(_filter(_v, rawExpr=u'$iface.name')) # from line 207, col 45.
-            write(u''' (''')
+            if _v is not None: write(_filter(_v, rawExpr='$iface.name')) # from line 207, col 45.
+            write(''' (''')
             _v = VFFSL(SL,"iface.friendlynic",True) # u'$iface.friendlynic' on line 207, col 58
-            if _v is not None: write(_filter(_v, rawExpr=u'$iface.friendlynic')) # from line 207, col 58.
-            write(u''')</h2>
+            if _v is not None: write(_filter(_v, rawExpr='$iface.friendlynic')) # from line 207, col 58.
+            write(''')</h2>
 \t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t<div class="body">
 \t\t\t\t\t\t\t\t<div class="row clearfix">
 \t\t\t\t\t\t\t\t\t<div class="col-xs-12 col-sm-6">
 \t\t\t\t\t\t\t\t\t\t<b>''')
             _v = VFFSL(SL,"tstrings",True)['linkspeed'] # u"$tstrings['linkspeed']" on line 212, col 14
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['linkspeed']")) # from line 212, col 14.
-            write(u''':</b>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['linkspeed']")) # from line 212, col 14.
+            write(''':</b>
 \t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t<div class="col-xs-12 col-sm-6">
 \t\t\t\t\t\t\t\t\t\t''')
             _v = VFFSL(SL,"iface.linkspeed",True) # u'$iface.linkspeed' on line 215, col 11
-            if _v is not None: write(_filter(_v, rawExpr=u'$iface.linkspeed')) # from line 215, col 11.
-            write(u'''
+            if _v is not None: write(_filter(_v, rawExpr='$iface.linkspeed')) # from line 215, col 11.
+            write('''
 \t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t<div class="row clearfix">
 \t\t\t\t\t\t\t\t\t<div class="col-xs-12 col-sm-6">
 \t\t\t\t\t\t\t\t\t\t<b>''')
             _v = VFFSL(SL,"tstrings",True)['mac_address'] # u"$tstrings['mac_address']" on line 220, col 14
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['mac_address']")) # from line 220, col 14.
-            write(u''':</b>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['mac_address']")) # from line 220, col 14.
+            write(''':</b>
 \t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t<div class="col-xs-12 col-sm-6">
 \t\t\t\t\t\t\t\t\t\t''')
             _v = VFFSL(SL,"iface.mac",True) # u'$iface.mac' on line 223, col 11
-            if _v is not None: write(_filter(_v, rawExpr=u'$iface.mac')) # from line 223, col 11.
-            write(u'''
+            if _v is not None: write(_filter(_v, rawExpr='$iface.mac')) # from line 223, col 11.
+            write('''
 \t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t<div class="row clearfix">
 \t\t\t\t\t\t\t\t\t<div class="col-xs-12 col-sm-6">
 \t\t\t\t\t\t\t\t\t\t<b>''')
             _v = VFFSL(SL,"tstrings",True)['ipv6_address'] # u"$tstrings['ipv6_address']" on line 228, col 14
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ipv6_address']")) # from line 228, col 14.
-            write(u''':</b>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['ipv6_address']")) # from line 228, col 14.
+            write(''':</b>
 \t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t<div class="col-xs-12 col-sm-6">
 \t\t\t\t\t\t\t\t\t\t''')
             _v = VFFSL(SL,"iface.ipv6",True) # u'$iface.ipv6' on line 231, col 11
-            if _v is not None: write(_filter(_v, rawExpr=u'$iface.ipv6')) # from line 231, col 11.
-            write(u''' (''')
+            if _v is not None: write(_filter(_v, rawExpr='$iface.ipv6')) # from line 231, col 11.
+            write(''' (''')
             _v = VFFSL(SL,"iface.ipmethod",True) # u'$iface.ipmethod' on line 231, col 24
-            if _v is not None: write(_filter(_v, rawExpr=u'$iface.ipmethod')) # from line 231, col 24.
-            write(u''')
+            if _v is not None: write(_filter(_v, rawExpr='$iface.ipmethod')) # from line 231, col 24.
+            write(''')
 \t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t</div>
 ''')
             if VFFSL(SL,"iface.ip",True) != "0.0.0.0": # generated from line 234, col 7
-                write(u'''\t\t\t\t\t\t\t\t\t<div class="row clearfix">
+                write('''\t\t\t\t\t\t\t\t\t<div class="row clearfix">
 \t\t\t\t\t\t\t\t\t\t<div class="col-xs-12 col-sm-6">
 \t\t\t\t\t\t\t\t\t\t\t<b>''')
                 _v = VFFSL(SL,"tstrings",True)['ipv4_address'] # u"$tstrings['ipv4_address']" on line 237, col 15
-                if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ipv4_address']")) # from line 237, col 15.
-                write(u''':</b>
+                if _v is not None: write(_filter(_v, rawExpr="$tstrings['ipv4_address']")) # from line 237, col 15.
+                write(''':</b>
 \t\t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t\t<div class="col-xs-12 col-sm-6">
 \t\t\t\t\t\t\t\t\t\t\t''')
                 _v = VFFSL(SL,"iface.ip",True) # u'$iface.ip' on line 240, col 12
-                if _v is not None: write(_filter(_v, rawExpr=u'$iface.ip')) # from line 240, col 12.
-                write(u'''/''')
+                if _v is not None: write(_filter(_v, rawExpr='$iface.ip')) # from line 240, col 12.
+                write('''/''')
                 _v = VFFSL(SL,"iface.v4prefix",True) # u'$iface.v4prefix' on line 240, col 22
-                if _v is not None: write(_filter(_v, rawExpr=u'$iface.v4prefix')) # from line 240, col 22.
-                write(u''' ''')
+                if _v is not None: write(_filter(_v, rawExpr='$iface.v4prefix')) # from line 240, col 22.
+                write(''' ''')
                 _v = VFFSL(SL,"tstrings",True)['via'] # u"$tstrings['via']" on line 240, col 38
-                if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['via']")) # from line 240, col 38.
-                write(u''' ''')
+                if _v is not None: write(_filter(_v, rawExpr="$tstrings['via']")) # from line 240, col 38.
+                write(''' ''')
                 _v = VFFSL(SL,"iface.gw",True) # u'$iface.gw' on line 240, col 55
-                if _v is not None: write(_filter(_v, rawExpr=u'$iface.gw')) # from line 240, col 55.
-                write(u''' (''')
+                if _v is not None: write(_filter(_v, rawExpr='$iface.gw')) # from line 240, col 55.
+                write(''' (''')
                 _v = VFFSL(SL,"iface.ipv4method",True) # u'$iface.ipv4method' on line 240, col 66
-                if _v is not None: write(_filter(_v, rawExpr=u'$iface.ipv4method')) # from line 240, col 66.
-                write(u''')
+                if _v is not None: write(_filter(_v, rawExpr='$iface.ipv4method')) # from line 240, col 66.
+                write(''')
 \t\t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t</div>
 ''')
-            write(u'''\t\t\t\t\t\t\t</div>
-\t\t\t\t\t\t</div>
-\t\t\t\t\t</div>
-\t\t\t\t</div>
-''')
-        write(u'''\t\t</div>
+            write('''\t\t\t\t\t\t\t</div>
+\t\t\t\t\t\t</div>
+\t\t\t\t\t</div>
+\t\t\t\t</div>
+''')
+        write('''\t\t</div>
 \t</div>
 </div>
 ''')
--- ./plugin/controllers/views/responsive/ajax/bqe.py	(original)
+++ ./plugin/controllers/views/responsive/ajax/bqe.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -61,7 +62,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -71,7 +72,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -85,13 +86,13 @@
         ## START - generated method body
         
         _orig_filter_99851527 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<style>
+        write('''<style>
 .select { width: 100%; }
 .sortable { list-style-type: none; margin: 0; padding: 0; width: 200px; }
 .sortable li { margin: 0 1px 1px 2px; padding-left: 1.5em; font-size: .8em;  height:20px;}
@@ -106,8 +107,8 @@
 \t\t\t\t<div class="col-xs-12 col-sm-6">
 \t\t\t\t\t<h2><i class="material-icons material-icons-centered">view_list</i>''')
         _v = VFFSL(SL,"tstrings",True)['Bouquet_Editor'] # u"$tstrings['Bouquet_Editor']" on line 17, col 73
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['Bouquet_Editor']")) # from line 17, col 73.
-        write(u'''</h2>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['Bouquet_Editor']")) # from line 17, col 73.
+        write('''</h2>
 \t\t\t\t</div>
 \t\t\t</div>
 \t\t\t<ul class="header-dropdown m-r--5">
@@ -117,12 +118,12 @@
 \t\t\t\t\t<ul class="dropdown-menu pull-right">
 \t\t\t\t\t\t<li><a href="#"  id="toolbar-bouquets-export"><i class="material-icons material-icons-centered">vertical_align_bottom</i>''')
         _v = VFFSL(SL,"tstrings",True)['export'] # u"$tstrings['export']" on line 25, col 128
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['export']")) # from line 25, col 128.
-        write(u'''</a></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['export']")) # from line 25, col 128.
+        write('''</a></li>
 \t\t\t\t\t\t<li><a href="#"  id="toolbar-bouquets-import"><i class="material-icons material-icons-centered">vertical_align_top</i>''')
         _v = VFFSL(SL,"tstrings",True)['import'] # u"$tstrings['import']" on line 26, col 125
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['import']")) # from line 26, col 125.
-        write(u'''</a></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['import']")) # from line 26, col 125.
+        write('''</a></li>
 \t\t\t\t\t</ul>
 \t\t\t\t</li>
 \t\t\t</ul>
@@ -132,39 +133,39 @@
 \t\t\t\t<div class="col-xs-12 align-center">
 \t\t\t\t\t<input type="radio" class="radio-vti radio-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 34, col 53
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 34, col 53.
-        write(u'''" id="toolbar-choose-tv" name="tb1" checked="checked" /><label for="toolbar-choose-tv">''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 34, col 53.
+        write('''" id="toolbar-choose-tv" name="tb1" checked="checked" /><label for="toolbar-choose-tv">''')
         _v = VFFSL(SL,"tstrings",True)['tv'] # u"$tstrings['tv']" on line 34, col 150
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['tv']")) # from line 34, col 150.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['tv']")) # from line 34, col 150.
+        write('''</label>
 \t\t\t\t\t<input type="radio" class="radio-vti radio-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 35, col 53
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 35, col 53.
-        write(u'''" id="toolbar-choose-radio" name="tb1"/><label for="toolbar-choose-radio">''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 35, col 53.
+        write('''" id="toolbar-choose-radio" name="tb1"/><label for="toolbar-choose-radio">''')
         _v = VFFSL(SL,"tstrings",True)['radio'] # u"$tstrings['radio']" on line 35, col 137
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['radio']")) # from line 35, col 137.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['radio']")) # from line 35, col 137.
+        write('''</label>
 \t\t\t\t\t<input type="radio" class="radio-vti radio-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 36, col 53
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 36, col 53.
-        write(u'''" id="toolbar-choose-satellites" name="tb2" /><label for="toolbar-choose-satellites">''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 36, col 53.
+        write('''" id="toolbar-choose-satellites" name="tb2" /><label for="toolbar-choose-satellites">''')
         _v = VFFSL(SL,"tstrings",True)['satellites'] # u"$tstrings['satellites']" on line 36, col 148
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['satellites']")) # from line 36, col 148.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['satellites']")) # from line 36, col 148.
+        write('''</label>
 \t\t\t\t\t<input type="radio" class="radio-vti radio-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 37, col 53
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 37, col 53.
-        write(u'''" id="toolbar-choose-providers" name="tb2" checked="checked" /><label for="toolbar-choose-providers">''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 37, col 53.
+        write('''" id="toolbar-choose-providers" name="tb2" checked="checked" /><label for="toolbar-choose-providers">''')
         _v = VFFSL(SL,"tstrings",True)['providers'] # u"$tstrings['providers']" on line 37, col 164
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['providers']")) # from line 37, col 164.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['providers']")) # from line 37, col 164.
+        write('''</label>
 \t\t\t\t\t<input type="radio" class="radio-vti radio-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 38, col 53
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 38, col 53.
-        write(u'''" id="toolbar-choose-channels" name="tb2" /><label for="toolbar-choose-channels">''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 38, col 53.
+        write('''" id="toolbar-choose-channels" name="tb2" /><label for="toolbar-choose-channels">''')
         _v = VFFSL(SL,"tstrings",True)['all_channels'] # u"$tstrings['all_channels']" on line 38, col 144
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['all_channels']")) # from line 38, col 144.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['all_channels']")) # from line 38, col 144.
+        write('''</label>
 \t\t\t\t</div>
 \t\t\t</div>
 \t\t\t<div class="row clearfix">
@@ -180,16 +181,16 @@
 \t\t\t\t\t\t\t\t<div class="form-line">
 \t\t\t\t\t\t\t\t\t<input type="text" class="form-control" id="searchch" placeholder="''')
         _v = VFFSL(SL,"tstrings",True)['bqe_search'] # u"$tstrings['bqe_search']" on line 52, col 77
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['bqe_search']")) # from line 52, col 77.
-        write(u'''">
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['bqe_search']")) # from line 52, col 77.
+        write('''">
 \t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t</div>
 \t\t\t\t\t\t<div class="col-xs-12 col-sm-6">
 \t\t\t\t\t\t\t<button class="btn btn-default waves-effect" id="btn-provider-add">''')
         _v = VFFSL(SL,"tstrings",True)['bqe_add_provider_as_bouquet'] # u"$tstrings['bqe_add_provider_as_bouquet']" on line 57, col 75
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['bqe_add_provider_as_bouquet']")) # from line 57, col 75.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['bqe_add_provider_as_bouquet']")) # from line 57, col 75.
+        write('''</button>
 \t\t\t\t\t\t</div>
 \t\t\t\t\t</div>
 \t\t\t\t</div>
@@ -204,12 +205,12 @@
 \t\t\t\t\t\t\t<div class="btn-group" role="group">
 \t\t\t\t\t\t\t\t<button class="btn btn-default waves-effect" id="btn-channel-add">''')
         _v = VFFSL(SL,"tstrings",True)['bqe_add_channel'] # u"$tstrings['bqe_add_channel']" on line 70, col 75
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['bqe_add_channel']")) # from line 70, col 75.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['bqe_add_channel']")) # from line 70, col 75.
+        write('''</button>
 \t\t\t\t\t\t\t\t<button class="btn btn-default waves-effect" id="btn-alternative-add">''')
         _v = VFFSL(SL,"tstrings",True)['bqe_add_alternative'] # u"$tstrings['bqe_add_alternative']" on line 71, col 79
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['bqe_add_alternative']")) # from line 71, col 79.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['bqe_add_alternative']")) # from line 71, col 79.
+        write('''</button>
 \t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t</div>
 \t\t\t\t\t</div>
@@ -227,16 +228,16 @@
 \t\t\t\t\t\t\t<div class="btn-group" role="group">
 \t\t\t\t\t\t\t\t<button class="btn btn-default waves-effect" id="btn-bouquet-add">''')
         _v = VFFSL(SL,"tstrings",True)['bqe_add_bq'] # u"$tstrings['bqe_add_bq']" on line 87, col 75
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['bqe_add_bq']")) # from line 87, col 75.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['bqe_add_bq']")) # from line 87, col 75.
+        write('''</button>
 \t\t\t\t\t\t\t\t<button class="btn btn-default waves-effect" id="btn-bouquet-rename">''')
         _v = VFFSL(SL,"tstrings",True)['bqe_rename_bq'] # u"$tstrings['bqe_rename_bq']" on line 88, col 78
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['bqe_rename_bq']")) # from line 88, col 78.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['bqe_rename_bq']")) # from line 88, col 78.
+        write('''</button>
 \t\t\t\t\t\t\t\t<button class="btn btn-default waves-effect" id="btn-bouquet-delete">''')
         _v = VFFSL(SL,"tstrings",True)['bqe_delete_bq'] # u"$tstrings['bqe_delete_bq']" on line 89, col 78
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['bqe_delete_bq']")) # from line 89, col 78.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['bqe_delete_bq']")) # from line 89, col 78.
+        write('''</button>
 \t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t</div>
 \t\t\t\t\t</div>
@@ -252,20 +253,20 @@
 \t\t\t\t\t\t\t<div class="btn-group" role="group">
 \t\t\t\t\t\t\t\t<button class="btn btn-default waves-effect" id="btn-channel-delete">''')
         _v = VFFSL(SL,"tstrings",True)['delete'] # u"$tstrings['delete']" on line 103, col 78
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['delete']")) # from line 103, col 78.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['delete']")) # from line 103, col 78.
+        write('''</button>
 \t\t\t\t\t\t\t\t<button class="btn btn-default waves-effect" id="btn-marker-add">''')
         _v = VFFSL(SL,"tstrings",True)['bqe_add_marker'] # u"$tstrings['bqe_add_marker']" on line 104, col 74
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['bqe_add_marker']")) # from line 104, col 74.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['bqe_add_marker']")) # from line 104, col 74.
+        write('''</button>
 \t\t\t\t\t\t\t\t<!--<button class="btn btn-default waves-effect" id="btn-spacer-add">''')
         _v = VFFSL(SL,"tstrings",True)['bqe_add_spacer'] # u"$tstrings['bqe_add_spacer']" on line 105, col 78
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['bqe_add_spacer']")) # from line 105, col 78.
-        write(u'''</button>-->
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['bqe_add_spacer']")) # from line 105, col 78.
+        write('''</button>-->
 \t\t\t\t\t\t\t\t<button class="btn btn-default waves-effect" id="btn-marker-group-rename">''')
         _v = VFFSL(SL,"tstrings",True)['bqe_rename'] # u"$tstrings['bqe_rename']" on line 106, col 83
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['bqe_rename']")) # from line 106, col 83.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['bqe_rename']")) # from line 106, col 83.
+        write('''</button>
 \t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t</div>
 \t\t\t\t\t</div>
--- ./plugin/controllers/views/responsive/ajax/channels.py	(original)
+++ ./plugin/controllers/views/responsive/ajax/channels.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -61,7 +62,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -71,7 +72,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -84,221 +85,221 @@
         ########################################
         ## START - generated method body
         
-        write(u'''
+        write('''
 <div class="table-responsive block-header">
 \t<table class="table table-striped table-hover">
 
 ''')
         for channel in VFFSL(SL,"channels",True): # generated from line 7, col 1
-            write(u'''<tr>
+            write('''<tr>
 ''')
             if VFFSL(SL,"showchannelpicon",True) and 'picon' in VFFSL(SL,"channel",True): # generated from line 9, col 1
-                write(u'''<td style="vertical-align:middle;width:120px;">
+                write('''<td style="vertical-align:middle;width:120px;">
 \t<div>
 \t\t<img class="img-fluid" style="max-width:100px;" src="''')
                 _v = VFFSL(SL,"channel.picon",True) # u'$channel.picon' on line 12, col 56
-                if _v is not None: write(_filter(_v, rawExpr=u'$channel.picon')) # from line 12, col 56.
-                write(u'''" title="">
+                if _v is not None: write(_filter(_v, rawExpr='$channel.picon')) # from line 12, col 56.
+                write('''" title="">
 \t</div>
 ''')
             else: # generated from line 14, col 1
-                write(u'''<td style="vertical-align:middle;width:0px;">
-''')
-            write(u'''</td>
+                write('''<td style="vertical-align:middle;width:0px;">
+''')
+            write('''</td>
 <td style="vertical-align:middle;">
 \t<div>
 ''')
             name = VFN(VFFSL(SL,"channel.name",True),"replace",False)("'", r"\'")
-            write(u'''\t<h2>
+            write('''\t<h2>
 ''')
             if 'protection' in VFFSL(SL,"channel",True) and VFFSL(SL,"channel.protection",True) != "0": # generated from line 22, col 4
-                write(u'''\t\t\t\t<a href="#" class="theme-link-color theme-link-col-''')
+                write('''\t\t\t\t<a href="#" class="theme-link-color theme-link-col-''')
                 _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 23, col 56
-                if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 23, col 56.
-                write(u'''" onclick="return false" title="''')
+                if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 23, col 56.
+                write('''" onclick="return false" title="''')
                 _v = VFFSL(SL,"tstrings",True)['locked'] # u"$tstrings['locked']" on line 23, col 98
-                if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['locked']")) # from line 23, col 98.
-                write(u'''"><i class="material-icons material-icons-centered">play_circle_outline</i>''')
+                if _v is not None: write(_filter(_v, rawExpr="$tstrings['locked']")) # from line 23, col 98.
+                write('''"><i class="material-icons material-icons-centered">play_circle_outline</i>''')
                 _v = VFFSL(SL,"channel.name",True) # u'$channel.name' on line 23, col 192
-                if _v is not None: write(_filter(_v, rawExpr=u'$channel.name')) # from line 23, col 192.
-                write(u'''</a>
+                if _v is not None: write(_filter(_v, rawExpr='$channel.name')) # from line 23, col 192.
+                write('''</a>
 ''')
             else: # generated from line 24, col 4
-                write(u'''\t\t\t\t<a href="#" class="theme-link-color theme-link-col-''')
+                write('''\t\t\t\t<a href="#" class="theme-link-color theme-link-col-''')
                 _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 25, col 56
-                if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 25, col 56.
-                write(u'''" onclick="zapChannel(\'''')
+                if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 25, col 56.
+                write('''" onclick="zapChannel(\'''')
                 _v = VFFSL(SL,"channel.ref",True) # u'$channel.ref' on line 25, col 89
-                if _v is not None: write(_filter(_v, rawExpr=u'$channel.ref')) # from line 25, col 89.
-                write(u"""', '""")
+                if _v is not None: write(_filter(_v, rawExpr='$channel.ref')) # from line 25, col 89.
+                write("""', '""")
                 _v = VFFSL(SL,"name",True) # u'$name' on line 25, col 105
-                if _v is not None: write(_filter(_v, rawExpr=u'$name')) # from line 25, col 105.
-                write(u'''\'); return false" title="''')
+                if _v is not None: write(_filter(_v, rawExpr='$name')) # from line 25, col 105.
+                write('''\'); return false" title="''')
                 _v = VFFSL(SL,"tstrings",True)['zap_to'] # u"$tstrings['zap_to']" on line 25, col 135
-                if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['zap_to']")) # from line 25, col 135.
-                write(u''' ''')
+                if _v is not None: write(_filter(_v, rawExpr="$tstrings['zap_to']")) # from line 25, col 135.
+                write(''' ''')
                 _v = VFFSL(SL,"channel.name",True) # u'$channel.name' on line 25, col 155
-                if _v is not None: write(_filter(_v, rawExpr=u'$channel.name')) # from line 25, col 155.
-                write(u'''">''')
+                if _v is not None: write(_filter(_v, rawExpr='$channel.name')) # from line 25, col 155.
+                write('''">''')
                 _v = VFFSL(SL,"channel.name",True) # u'$channel.name' on line 25, col 170
-                if _v is not None: write(_filter(_v, rawExpr=u'$channel.name')) # from line 25, col 170.
-                write(u'''</a>
-''')
-            write(u'''\t</h2>
+                if _v is not None: write(_filter(_v, rawExpr='$channel.name')) # from line 25, col 170.
+                write('''</a>
+''')
+            write('''\t</h2>
 \t</div>
 \t<div class="vti-vspace-10"></div>
 \t<div>
 ''')
             if 'protection' in VFFSL(SL,"channel",True) and VFFSL(SL,"channel.protection",True) != "0": # generated from line 31, col 2
-                write(u'''\t\t<a class="theme-link-col-fixed" target="_blank" href=\'#\' title="''')
+                write('''\t\t<a class="theme-link-col-fixed" target="_blank" href=\'#\' title="''')
                 _v = VFFSL(SL,"tstrings",True)['locked'] # u"$tstrings['locked']" on line 32, col 67
-                if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['locked']")) # from line 32, col 67.
-                write(u'''"><i class="material-icons material-icons-centered">lock</i></a>
+                if _v is not None: write(_filter(_v, rawExpr="$tstrings['locked']")) # from line 32, col 67.
+                write('''"><i class="material-icons material-icons-centered">lock</i></a>
 ''')
             else: # generated from line 33, col 2
                 if VFFSL(SL,"type",True) == "radio": # generated from line 34, col 3
-                    write(u'''\t\t\t<a class="theme-link-col-fixed" href="#" onclick="addTimer(\'\',\'''')
+                    write('''\t\t\t<a class="theme-link-col-fixed" href="#" onclick="addTimer(\'\',\'''')
                     _v = VFFSL(SL,"channel.ref",True) # u'$channel.ref' on line 35, col 67
-                    if _v is not None: write(_filter(_v, rawExpr=u'$channel.ref')) # from line 35, col 67.
-                    write(u"""','""")
+                    if _v is not None: write(_filter(_v, rawExpr='$channel.ref')) # from line 35, col 67.
+                    write("""','""")
                     _v = VFFSL(SL,"channel.name",True) # u'$channel.name' on line 35, col 82
-                    if _v is not None: write(_filter(_v, rawExpr=u'$channel.name')) # from line 35, col 82.
-                    write(u'''\',\'\'); return false" title="''')
+                    if _v is not None: write(_filter(_v, rawExpr='$channel.name')) # from line 35, col 82.
+                    write('''\',\'\'); return false" title="''')
                     _v = VFFSL(SL,"tstrings",True)['add_timer'] # u"$tstrings['add_timer']" on line 35, col 123
-                    if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['add_timer']")) # from line 35, col 123.
-                    write(u'''"><i class="material-icons material-icons-centered">access_time</i></a>
+                    if _v is not None: write(_filter(_v, rawExpr="$tstrings['add_timer']")) # from line 35, col 123.
+                    write('''"><i class="material-icons material-icons-centered">access_time</i></a>
 ''')
                 if '4097:' in VFFSL(SL,"channel.ref",True): # generated from line 37, col 3
                     rname = ":" + VFFSL(SL,"channel.name",True)
                     lnk = VFN(VFN(VFN(VFFSL(SL,"channel.ref",True),"replace",False)("4097:0:1:0:0:0:0:0:0:0:", ""),"replace",False)("%3a", ":"),"replace",False)(VFFSL(SL,"rname",True), "")
-                    write(u'''\t\t\t<a class="theme-link-col-fixed" target="_blank" href="''')
+                    write('''\t\t\t<a class="theme-link-col-fixed" target="_blank" href="''')
                     _v = VFFSL(SL,"lnk",True) # u'$lnk' on line 40, col 58
-                    if _v is not None: write(_filter(_v, rawExpr=u'$lnk')) # from line 40, col 58.
-                    write(u'''" title="''')
+                    if _v is not None: write(_filter(_v, rawExpr='$lnk')) # from line 40, col 58.
+                    write('''" title="''')
                     _v = VFFSL(SL,"tstrings",True)['stream'] # u"$tstrings['stream']" on line 40, col 71
-                    if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['stream']")) # from line 40, col 71.
-                    write(u''': ''')
+                    if _v is not None: write(_filter(_v, rawExpr="$tstrings['stream']")) # from line 40, col 71.
+                    write(''': ''')
                     _v = VFFSL(SL,"channel.name",True) # u'$channel.name' on line 40, col 92
-                    if _v is not None: write(_filter(_v, rawExpr=u'$channel.name')) # from line 40, col 92.
-                    write(u'''"><i class="material-icons material-icons-centered">tv</i></a>
+                    if _v is not None: write(_filter(_v, rawExpr='$channel.name')) # from line 40, col 92.
+                    write('''"><i class="material-icons material-icons-centered">tv</i></a>
 ''')
                 else: # generated from line 41, col 3
-                    write(u'''\t\t\t<a class="theme-link-col-fixed" href="#" onclick="zapChannel(\'''')
+                    write('''\t\t\t<a class="theme-link-col-fixed" href="#" onclick="zapChannel(\'''')
                     _v = VFFSL(SL,"channel.ref",True) # u'$channel.ref' on line 42, col 66
-                    if _v is not None: write(_filter(_v, rawExpr=u'$channel.ref')) # from line 42, col 66.
-                    write(u"""', '""")
+                    if _v is not None: write(_filter(_v, rawExpr='$channel.ref')) # from line 42, col 66.
+                    write("""', '""")
                     _v = VFFSL(SL,"name",True) # u'$name' on line 42, col 82
-                    if _v is not None: write(_filter(_v, rawExpr=u'$name')) # from line 42, col 82.
-                    write(u'''\'); return false" title="''')
+                    if _v is not None: write(_filter(_v, rawExpr='$name')) # from line 42, col 82.
+                    write('''\'); return false" title="''')
                     _v = VFFSL(SL,"tstrings",True)['zap_to'] # u"$tstrings['zap_to']" on line 42, col 112
-                    if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['zap_to']")) # from line 42, col 112.
-                    write(u''' ''')
+                    if _v is not None: write(_filter(_v, rawExpr="$tstrings['zap_to']")) # from line 42, col 112.
+                    write(''' ''')
                     _v = VFFSL(SL,"channel.name",True) # u'$channel.name' on line 42, col 132
-                    if _v is not None: write(_filter(_v, rawExpr=u'$channel.name')) # from line 42, col 132.
-                    write(u'''"><i class="material-icons material-icons-centered">play_circle_outline</i></a>
+                    if _v is not None: write(_filter(_v, rawExpr='$channel.name')) # from line 42, col 132.
+                    write('''"><i class="material-icons material-icons-centered">play_circle_outline</i></a>
 \t\t\t<a class="theme-link-col-fixed" href="#" onclick="open_epg_dialog(\'''')
                     _v = VFFSL(SL,"channel.ref",True) # u'$channel.ref' on line 43, col 71
-                    if _v is not None: write(_filter(_v, rawExpr=u'$channel.ref')) # from line 43, col 71.
-                    write(u"""','""")
+                    if _v is not None: write(_filter(_v, rawExpr='$channel.ref')) # from line 43, col 71.
+                    write("""','""")
                     _v = VFFSL(SL,"name",True) # u'$name' on line 43, col 86
-                    if _v is not None: write(_filter(_v, rawExpr=u'$name')) # from line 43, col 86.
-                    write(u'''\')" title="''')
+                    if _v is not None: write(_filter(_v, rawExpr='$name')) # from line 43, col 86.
+                    write('''\')" title="''')
                     _v = VFFSL(SL,"tstrings",True)['show_epg_for'] # u"$tstrings['show_epg_for']" on line 43, col 102
-                    if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['show_epg_for']")) # from line 43, col 102.
-                    write(u''' ''')
+                    if _v is not None: write(_filter(_v, rawExpr="$tstrings['show_epg_for']")) # from line 43, col 102.
+                    write(''' ''')
                     _v = VFFSL(SL,"channel.name",True) # u'$channel.name' on line 43, col 128
-                    if _v is not None: write(_filter(_v, rawExpr=u'$channel.name')) # from line 43, col 128.
-                    write(u'''" data-toggle="modal" data-target="#EPGModal"><i class="material-icons material-icons-centered">today</i></a>
+                    if _v is not None: write(_filter(_v, rawExpr='$channel.name')) # from line 43, col 128.
+                    write('''" data-toggle="modal" data-target="#EPGModal"><i class="material-icons material-icons-centered">today</i></a>
 \t\t\t<a class="theme-link-col-fixed" href="#" onclick="jumper8001(\'''')
                     _v = VFFSL(SL,"channel.ref",True) # u'$channel.ref' on line 44, col 66
-                    if _v is not None: write(_filter(_v, rawExpr=u'$channel.ref')) # from line 44, col 66.
-                    write(u"""', '""")
+                    if _v is not None: write(_filter(_v, rawExpr='$channel.ref')) # from line 44, col 66.
+                    write("""', '""")
                     _v = VFFSL(SL,"name",True) # u'$name' on line 44, col 82
-                    if _v is not None: write(_filter(_v, rawExpr=u'$name')) # from line 44, col 82.
-                    write(u'''\');" title="''')
+                    if _v is not None: write(_filter(_v, rawExpr='$name')) # from line 44, col 82.
+                    write('''\');" title="''')
                     _v = VFFSL(SL,"tstrings",True)['stream'] # u"$tstrings['stream']" on line 44, col 99
-                    if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['stream']")) # from line 44, col 99.
-                    write(u''': ''')
+                    if _v is not None: write(_filter(_v, rawExpr="$tstrings['stream']")) # from line 44, col 99.
+                    write(''': ''')
                     _v = VFFSL(SL,"channel.name",True) # u'$channel.name' on line 44, col 120
-                    if _v is not None: write(_filter(_v, rawExpr=u'$channel.name')) # from line 44, col 120.
-                    write(u'''"><i class="material-icons material-icons-centered">tv</i></a>
+                    if _v is not None: write(_filter(_v, rawExpr='$channel.name')) # from line 44, col 120.
+                    write('''"><i class="material-icons material-icons-centered">tv</i></a>
 ''')
                     if VFFSL(SL,"transcoding",True): # generated from line 45, col 4
-                        write(u'''\t\t\t<a class="theme-link-col-fixed" href="#" onclick="jumper8002(\'''')
+                        write('''\t\t\t<a class="theme-link-col-fixed" href="#" onclick="jumper8002(\'''')
                         _v = VFFSL(SL,"channel.ref",True) # u'$channel.ref' on line 46, col 66
-                        if _v is not None: write(_filter(_v, rawExpr=u'$channel.ref')) # from line 46, col 66.
-                        write(u"""', '""")
+                        if _v is not None: write(_filter(_v, rawExpr='$channel.ref')) # from line 46, col 66.
+                        write("""', '""")
                         _v = VFFSL(SL,"name",True) # u'$name' on line 46, col 82
-                        if _v is not None: write(_filter(_v, rawExpr=u'$name')) # from line 46, col 82.
-                        write(u'''\');" title="''')
+                        if _v is not None: write(_filter(_v, rawExpr='$name')) # from line 46, col 82.
+                        write('''\');" title="''')
                         _v = VFFSL(SL,"tstrings",True)['stream'] # u"$tstrings['stream']" on line 46, col 99
-                        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['stream']")) # from line 46, col 99.
-                        write(u''' (''')
+                        if _v is not None: write(_filter(_v, rawExpr="$tstrings['stream']")) # from line 46, col 99.
+                        write(''' (''')
                         _v = VFFSL(SL,"tstrings",True)['transcoded'] # u"$tstrings['transcoded']" on line 46, col 120
-                        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['transcoded']")) # from line 46, col 120.
-                        write(u'''): ''')
+                        if _v is not None: write(_filter(_v, rawExpr="$tstrings['transcoded']")) # from line 46, col 120.
+                        write('''): ''')
                         _v = VFFSL(SL,"channel.name",True) # u'$channel.name' on line 46, col 146
-                        if _v is not None: write(_filter(_v, rawExpr=u'$channel.name')) # from line 46, col 146.
-                        write(u'''"><i class="material-icons material-icons-centered">phone_android</i></a>
-''')
-            write(u'''\t</div>
+                        if _v is not None: write(_filter(_v, rawExpr='$channel.name')) # from line 46, col 146.
+                        write('''"><i class="material-icons material-icons-centered">phone_android</i></a>
+''')
+            write('''\t</div>
 </td>
 ''')
             if 'protection' in VFFSL(SL,"channel",True) and VFFSL(SL,"channel.protection",True) == "0" and 'now_title' in VFFSL(SL,"channel",True): # generated from line 52, col 1
-                write(u'''<td style="vertical-align:middle;">
+                write('''<td style="vertical-align:middle;">
 \t<div>
 \t\t<div>
 \t\t<h2><a class="theme-link-color theme-link-col-''')
                 _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 56, col 49
-                if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 56, col 49.
-                write(u'''" href=\'#\' data-ref="''')
+                if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 56, col 49.
+                write('''" href=\'#\' data-ref="''')
                 _v = VFFSL(SL,"channel.ref",True) # u'$channel.ref' on line 56, col 80
-                if _v is not None: write(_filter(_v, rawExpr=u'$channel.ref')) # from line 56, col 80.
-                write(u'''" data-id="''')
+                if _v is not None: write(_filter(_v, rawExpr='$channel.ref')) # from line 56, col 80.
+                write('''" data-id="''')
                 _v = VFFSL(SL,"channel.now_ev_id",True) # u'$channel.now_ev_id' on line 56, col 103
-                if _v is not None: write(_filter(_v, rawExpr=u'$channel.now_ev_id')) # from line 56, col 103.
-                write(u'''" data-toggle="modal" data-target="#EventModal" onClick="loadeventepg(\'''')
+                if _v is not None: write(_filter(_v, rawExpr='$channel.now_ev_id')) # from line 56, col 103.
+                write('''" data-toggle="modal" data-target="#EventModal" onClick="loadeventepg(\'''')
                 _v = VFFSL(SL,"channel.now_ev_id",True) # u'$channel.now_ev_id' on line 56, col 192
-                if _v is not None: write(_filter(_v, rawExpr=u'$channel.now_ev_id')) # from line 56, col 192.
-                write(u"""', '""")
+                if _v is not None: write(_filter(_v, rawExpr='$channel.now_ev_id')) # from line 56, col 192.
+                write("""', '""")
                 _v = VFFSL(SL,"channel.ref",True) # u'$channel.ref' on line 56, col 214
-                if _v is not None: write(_filter(_v, rawExpr=u'$channel.ref')) # from line 56, col 214.
-                write(u"""', '""")
+                if _v is not None: write(_filter(_v, rawExpr='$channel.ref')) # from line 56, col 214.
+                write("""', '""")
                 _v = VFFSL(SL,"channel.picon",True) # u'$channel.picon' on line 56, col 230
-                if _v is not None: write(_filter(_v, rawExpr=u'$channel.picon')) # from line 56, col 230.
-                write(u'''\');return false;" title="''')
+                if _v is not None: write(_filter(_v, rawExpr='$channel.picon')) # from line 56, col 230.
+                write('''\');return false;" title="''')
                 _v = VFFSL(SL,"channel.now_title",True) # u'$channel.now_title' on line 56, col 269
-                if _v is not None: write(_filter(_v, rawExpr=u'$channel.now_title')) # from line 56, col 269.
-                write(u'''">''')
+                if _v is not None: write(_filter(_v, rawExpr='$channel.now_title')) # from line 56, col 269.
+                write('''">''')
                 _v = VFFSL(SL,"channel.now_title",True) # u'$channel.now_title' on line 56, col 289
-                if _v is not None: write(_filter(_v, rawExpr=u'$channel.now_title')) # from line 56, col 289.
-                write(u'''</a>&nbsp;(+''')
+                if _v is not None: write(_filter(_v, rawExpr='$channel.now_title')) # from line 56, col 289.
+                write('''</a>&nbsp;(+''')
                 _v = VFFSL(SL,"channel.now_left",True) # u'$channel.now_left' on line 56, col 319
-                if _v is not None: write(_filter(_v, rawExpr=u'$channel.now_left')) # from line 56, col 319.
-                write(u''' min)</h2>
+                if _v is not None: write(_filter(_v, rawExpr='$channel.now_left')) # from line 56, col 319.
+                write(''' min)</h2>
 \t\t</div>
 \t\t<div>''')
                 _v = VFFSL(SL,"channel.now_begin",True) # u'$channel.now_begin' on line 58, col 8
-                if _v is not None: write(_filter(_v, rawExpr=u'$channel.now_begin')) # from line 58, col 8.
-                write(u''' &mdash; ''')
+                if _v is not None: write(_filter(_v, rawExpr='$channel.now_begin')) # from line 58, col 8.
+                write(''' &mdash; ''')
                 _v = VFFSL(SL,"channel.now_end",True) # u'$channel.now_end' on line 58, col 35
-                if _v is not None: write(_filter(_v, rawExpr=u'$channel.now_end')) # from line 58, col 35.
-                write(u''' &nbsp;&nbsp;&nbsp;</div>
+                if _v is not None: write(_filter(_v, rawExpr='$channel.now_end')) # from line 58, col 35.
+                write(''' &nbsp;&nbsp;&nbsp;</div>
 \t\t<div class="progress" style="margin-bottom:0px;width:200px;">
 \t\t<div class="progress-bar bg-''')
                 _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 60, col 31
-                if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 60, col 31.
-                write(u''' progress-bar-striped" role="progressbar" aria-valuenow="''')
+                if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 60, col 31.
+                write(''' progress-bar-striped" role="progressbar" aria-valuenow="''')
                 _v = VFFSL(SL,"channel.progress",True) # u'${channel.progress}' on line 60, col 98
-                if _v is not None: write(_filter(_v, rawExpr=u'${channel.progress}')) # from line 60, col 98.
-                write(u'''" aria-valuemin="0" aria-valuemax="100" style="width:''')
+                if _v is not None: write(_filter(_v, rawExpr='${channel.progress}')) # from line 60, col 98.
+                write('''" aria-valuemin="0" aria-valuemax="100" style="width:''')
                 _v = VFFSL(SL,"channel.progress",True) # u'${channel.progress}' on line 60, col 170
-                if _v is not None: write(_filter(_v, rawExpr=u'${channel.progress}')) # from line 60, col 170.
-                write(u'''%">
+                if _v is not None: write(_filter(_v, rawExpr='${channel.progress}')) # from line 60, col 170.
+                write('''%">
 \t\t<span>''')
                 _v = VFFSL(SL,"channel.progress",True) # u'${channel.progress}' on line 61, col 9
-                if _v is not None: write(_filter(_v, rawExpr=u'${channel.progress}')) # from line 61, col 9.
-                write(u'''%</span>
+                if _v is not None: write(_filter(_v, rawExpr='${channel.progress}')) # from line 61, col 9.
+                write('''%</span>
 \t\t</div>
 \t\t</div>
 \t</div>
@@ -308,52 +309,52 @@
 \t\t<div>
 \t\t\t<h2><a class="theme-link-color theme-link-col-''')
                 _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 69, col 50
-                if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 69, col 50.
-                write(u'''" href=\'#\' data-ref="''')
+                if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 69, col 50.
+                write('''" href=\'#\' data-ref="''')
                 _v = VFFSL(SL,"channel.ref",True) # u'$channel.ref' on line 69, col 81
-                if _v is not None: write(_filter(_v, rawExpr=u'$channel.ref')) # from line 69, col 81.
-                write(u'''" data-id="''')
+                if _v is not None: write(_filter(_v, rawExpr='$channel.ref')) # from line 69, col 81.
+                write('''" data-id="''')
                 _v = VFFSL(SL,"channel.next_ev_id",True) # u'$channel.next_ev_id' on line 69, col 104
-                if _v is not None: write(_filter(_v, rawExpr=u'$channel.next_ev_id')) # from line 69, col 104.
-                write(u'''" data-toggle="modal" data-target="#EventModal" onClick="loadeventepg(\'''')
+                if _v is not None: write(_filter(_v, rawExpr='$channel.next_ev_id')) # from line 69, col 104.
+                write('''" data-toggle="modal" data-target="#EventModal" onClick="loadeventepg(\'''')
                 _v = VFFSL(SL,"channel.next_ev_id",True) # u'$channel.next_ev_id' on line 69, col 194
-                if _v is not None: write(_filter(_v, rawExpr=u'$channel.next_ev_id')) # from line 69, col 194.
-                write(u"""', '""")
+                if _v is not None: write(_filter(_v, rawExpr='$channel.next_ev_id')) # from line 69, col 194.
+                write("""', '""")
                 _v = VFFSL(SL,"channel.ref",True) # u'$channel.ref' on line 69, col 217
-                if _v is not None: write(_filter(_v, rawExpr=u'$channel.ref')) # from line 69, col 217.
-                write(u"""', '""")
+                if _v is not None: write(_filter(_v, rawExpr='$channel.ref')) # from line 69, col 217.
+                write("""', '""")
                 _v = VFFSL(SL,"channel.picon",True) # u'$channel.picon' on line 69, col 233
-                if _v is not None: write(_filter(_v, rawExpr=u'$channel.picon')) # from line 69, col 233.
-                write(u'''\');return false;" title="''')
+                if _v is not None: write(_filter(_v, rawExpr='$channel.picon')) # from line 69, col 233.
+                write('''\');return false;" title="''')
                 _v = VFFSL(SL,"channel.next_title",True) # u'$channel.next_title' on line 69, col 272
-                if _v is not None: write(_filter(_v, rawExpr=u'$channel.next_title')) # from line 69, col 272.
-                write(u'''">''')
+                if _v is not None: write(_filter(_v, rawExpr='$channel.next_title')) # from line 69, col 272.
+                write('''">''')
                 _v = VFFSL(SL,"channel.next_title",True) # u'$channel.next_title' on line 69, col 293
-                if _v is not None: write(_filter(_v, rawExpr=u'$channel.next_title')) # from line 69, col 293.
-                write(u'''</a>&nbsp;(''')
+                if _v is not None: write(_filter(_v, rawExpr='$channel.next_title')) # from line 69, col 293.
+                write('''</a>&nbsp;(''')
                 _v = VFFSL(SL,"channel.next_duration",True) # u'$channel.next_duration' on line 69, col 323
-                if _v is not None: write(_filter(_v, rawExpr=u'$channel.next_duration')) # from line 69, col 323.
-                write(u''' min)</h2>
+                if _v is not None: write(_filter(_v, rawExpr='$channel.next_duration')) # from line 69, col 323.
+                write(''' min)</h2>
 \t\t</div>
 \t\t<div>''')
                 _v = VFFSL(SL,"channel.next_begin",True) # u'$channel.next_begin' on line 71, col 8
-                if _v is not None: write(_filter(_v, rawExpr=u'$channel.next_begin')) # from line 71, col 8.
-                write(u''' &mdash; ''')
+                if _v is not None: write(_filter(_v, rawExpr='$channel.next_begin')) # from line 71, col 8.
+                write(''' &mdash; ''')
                 _v = VFFSL(SL,"channel.next_end",True) # u'$channel.next_end' on line 71, col 36
-                if _v is not None: write(_filter(_v, rawExpr=u'$channel.next_end')) # from line 71, col 36.
-                write(u''' &nbsp;&nbsp;&nbsp;</div>
+                if _v is not None: write(_filter(_v, rawExpr='$channel.next_end')) # from line 71, col 36.
+                write(''' &nbsp;&nbsp;&nbsp;</div>
 \t</div>
 </td>
 ''')
             else: # generated from line 74, col 1
-                write(u'''<td style="vertical-align:middle;">
+                write('''<td style="vertical-align:middle;">
 </td>
 <td style="vertical-align:middle;">
 </td>
 ''')
-            write(u'''</tr>
-''')
-        write(u'''</table
+            write('''</tr>
+''')
+        write('''</table
 </div>
 ''')
         
--- ./plugin/controllers/views/responsive/ajax/config.py	(original)
+++ ./plugin/controllers/views/responsive/ajax/config.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -61,7 +62,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -72,7 +73,7 @@
 
         ## CHEETAH: generated from #def select($config) at line 4, col 1.
         trans = KWS.get("trans")
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -85,42 +86,42 @@
         ########################################
         ## START - generated method body
         
-        write(u'''<div class="row clearfix">
+        write('''<div class="row clearfix">
 \t<div class="col-xs-6 align-right">
 \t<label>''')
         _v = VFFSL(SL,"config.description",True) # u'$config.description' on line 7, col 9
-        if _v is not None: write(_filter(_v, rawExpr=u'$config.description')) # from line 7, col 9.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr='$config.description')) # from line 7, col 9.
+        write('''</label>
 \t</div>
 \t<div class="col-xs-6 col-md-3">
 \t<select class="form-control show-tick" id="''')
         _v = VFFSL(SL,"config.path",True) # u'$config.path' on line 10, col 45
-        if _v is not None: write(_filter(_v, rawExpr=u'$config.path')) # from line 10, col 45.
-        write(u'''" onchange="saveConfig(\'''')
+        if _v is not None: write(_filter(_v, rawExpr='$config.path')) # from line 10, col 45.
+        write('''" onchange="saveConfig(\'''')
         _v = VFFSL(SL,"config.path",True) # u'$config.path' on line 10, col 81
-        if _v is not None: write(_filter(_v, rawExpr=u'$config.path')) # from line 10, col 81.
-        write(u'''\', this.value);">
+        if _v is not None: write(_filter(_v, rawExpr='$config.path')) # from line 10, col 81.
+        write('''\', this.value);">
 ''')
         for choice in VFFSL(SL,"config.data.choices",True): # generated from line 11, col 3
             if VFFSL(SL,"config.data.current",True) == VFFSL(SL,"choice",True)[0]: # generated from line 12, col 4
-                write(u'''\t\t\t\t<option value="''')
+                write('''\t\t\t\t<option value="''')
                 _v = VFFSL(SL,"choice",True)[0] # u'$choice[0]' on line 13, col 20
-                if _v is not None: write(_filter(_v, rawExpr=u'$choice[0]')) # from line 13, col 20.
-                write(u'''" selected="true">''')
+                if _v is not None: write(_filter(_v, rawExpr='$choice[0]')) # from line 13, col 20.
+                write('''" selected="true">''')
                 _v = VFFSL(SL,"choice",True)[1] # u'$choice[1]' on line 13, col 48
-                if _v is not None: write(_filter(_v, rawExpr=u'$choice[1]')) # from line 13, col 48.
-                write(u'''</option>
+                if _v is not None: write(_filter(_v, rawExpr='$choice[1]')) # from line 13, col 48.
+                write('''</option>
 ''')
             else: # generated from line 14, col 4
-                write(u'''\t\t\t\t<option value="''')
+                write('''\t\t\t\t<option value="''')
                 _v = VFFSL(SL,"choice",True)[0] # u'$choice[0]' on line 15, col 20
-                if _v is not None: write(_filter(_v, rawExpr=u'$choice[0]')) # from line 15, col 20.
-                write(u'''">''')
+                if _v is not None: write(_filter(_v, rawExpr='$choice[0]')) # from line 15, col 20.
+                write('''">''')
                 _v = VFFSL(SL,"choice",True)[1] # u'$choice[1]' on line 15, col 32
-                if _v is not None: write(_filter(_v, rawExpr=u'$choice[1]')) # from line 15, col 32.
-                write(u'''</option>
-''')
-        write(u'''\t</select>
+                if _v is not None: write(_filter(_v, rawExpr='$choice[1]')) # from line 15, col 32.
+                write('''</option>
+''')
+        write('''\t</select>
 \t</div>
 </div>
 ''')
@@ -137,7 +138,7 @@
 
         ## CHEETAH: generated from #def checkbox($config) at line 23, col 1.
         trans = KWS.get("trans")
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -150,45 +151,45 @@
         ########################################
         ## START - generated method body
         
-        write(u'''<div class="row clearfix">
+        write('''<div class="row clearfix">
 \t<div class="col-xs-6 align-right">
 \t<label>''')
         _v = VFFSL(SL,"config.description",True) # u'$config.description' on line 26, col 9
-        if _v is not None: write(_filter(_v, rawExpr=u'$config.description')) # from line 26, col 9.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr='$config.description')) # from line 26, col 9.
+        write('''</label>
 \t</div>
 \t<div class="col-xs-6">
 \t\t\t<div class="switch switch-col-indigo">
 ''')
         if VFFSL(SL,"config.data.current",True): # generated from line 30, col 3
-            write(u'''\t\t\t\t\t<label><input type="checkbox" id="''')
+            write('''\t\t\t\t\t<label><input type="checkbox" id="''')
             _v = VFFSL(SL,"config.path",True) # u'$config.path' on line 31, col 40
-            if _v is not None: write(_filter(_v, rawExpr=u'$config.path')) # from line 31, col 40.
-            write(u'''" checked="true" onclick="saveConfig(\'''')
+            if _v is not None: write(_filter(_v, rawExpr='$config.path')) # from line 31, col 40.
+            write('''" checked="true" onclick="saveConfig(\'''')
             _v = VFFSL(SL,"config.path",True) # u'$config.path' on line 31, col 90
-            if _v is not None: write(_filter(_v, rawExpr=u'$config.path')) # from line 31, col 90.
-            write(u'''\', this.checked);" /><span class=\'lever switch-col-''')
+            if _v is not None: write(_filter(_v, rawExpr='$config.path')) # from line 31, col 90.
+            write('''\', this.checked);" /><span class=\'lever switch-col-''')
             _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 31, col 153
-            if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 31, col 153.
-            write(u"""'></span></label>
+            if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 31, col 153.
+            write("""'></span></label>
 """)
         else: # generated from line 32, col 3
-            write(u'''\t\t\t\t\t<label><input type="checkbox" id="''')
+            write('''\t\t\t\t\t<label><input type="checkbox" id="''')
             _v = VFFSL(SL,"config.path",True) # u'$config.path' on line 33, col 40
-            if _v is not None: write(_filter(_v, rawExpr=u'$config.path')) # from line 33, col 40.
-            write(u'''" onclick="saveConfig(\'''')
+            if _v is not None: write(_filter(_v, rawExpr='$config.path')) # from line 33, col 40.
+            write('''" onclick="saveConfig(\'''')
             _v = VFFSL(SL,"config.path",True) # u'$config.path' on line 33, col 75
-            if _v is not None: write(_filter(_v, rawExpr=u'$config.path')) # from line 33, col 75.
-            write(u'''\', this.checked);" /><span class=\'lever switch-col-''')
+            if _v is not None: write(_filter(_v, rawExpr='$config.path')) # from line 33, col 75.
+            write('''\', this.checked);" /><span class=\'lever switch-col-''')
             _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 33, col 138
-            if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 33, col 138.
-            write(u"""'></span></label>
+            if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 33, col 138.
+            write("""'></span></label>
 """)
-        write(u'''\t\t\t</div>
+        write('''\t\t\t</div>
 \t\t<label for="''')
         _v = VFFSL(SL,"config.path",True) # u'$config.path' on line 36, col 15
-        if _v is not None: write(_filter(_v, rawExpr=u'$config.path')) # from line 36, col 15.
-        write(u'''"></label>
+        if _v is not None: write(_filter(_v, rawExpr='$config.path')) # from line 36, col 15.
+        write('''"></label>
 \t</div>
 </div>
 ''')
@@ -205,7 +206,7 @@
 
         ## CHEETAH: generated from #def multicheckbox($config) at line 41, col 1.
         trans = KWS.get("trans")
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -218,49 +219,49 @@
         ########################################
         ## START - generated method body
         
-        write(u'''<div class="row clearfix">
+        write('''<div class="row clearfix">
 \t<div class="col-xs-6 align-right">
 \t<label>''')
         _v = VFFSL(SL,"config.description",True) # u'$config.description' on line 44, col 9
-        if _v is not None: write(_filter(_v, rawExpr=u'$config.description')) # from line 44, col 9.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr='$config.description')) # from line 44, col 9.
+        write('''</label>
 \t</div>
 \t<div class="col-xs-6">
 ''')
         for choice in VFFSL(SL,"config.data.choices",True): # generated from line 47, col 2
             if VFFSL(SL,"choice",True) in VFFSL(SL,"config.data.current",True): # generated from line 48, col 3
-                write(u'''\t\t\t\t\t<input type="checkbox" class="form-control chk-col-''')
+                write('''\t\t\t\t\t<input type="checkbox" class="form-control chk-col-''')
                 _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 49, col 57
-                if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 49, col 57.
-                write(u'''" id="''')
+                if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 49, col 57.
+                write('''" id="''')
                 _v = VFFSL(SL,"config.path",True) # u'$config.path' on line 49, col 73
-                if _v is not None: write(_filter(_v, rawExpr=u'$config.path')) # from line 49, col 73.
-                write(u'''" checked="true" onclick="saveConfig(\'''')
+                if _v is not None: write(_filter(_v, rawExpr='$config.path')) # from line 49, col 73.
+                write('''" checked="true" onclick="saveConfig(\'''')
                 _v = VFFSL(SL,"config.path",True) # u'$config.path' on line 49, col 123
-                if _v is not None: write(_filter(_v, rawExpr=u'$config.path')) # from line 49, col 123.
-                write(u'''\', this.checked);" />
+                if _v is not None: write(_filter(_v, rawExpr='$config.path')) # from line 49, col 123.
+                write('''\', this.checked);" />
 ''')
             else: # generated from line 50, col 3
-                write(u'''\t\t\t\t\t<input type="checkbox" class="form-control chk-col-''')
+                write('''\t\t\t\t\t<input type="checkbox" class="form-control chk-col-''')
                 _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 51, col 57
-                if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 51, col 57.
-                write(u'''" id="''')
+                if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 51, col 57.
+                write('''" id="''')
                 _v = VFFSL(SL,"config.path",True) # u'$config.path' on line 51, col 73
-                if _v is not None: write(_filter(_v, rawExpr=u'$config.path')) # from line 51, col 73.
-                write(u'''" onclick="saveConfig(\'''')
+                if _v is not None: write(_filter(_v, rawExpr='$config.path')) # from line 51, col 73.
+                write('''" onclick="saveConfig(\'''')
                 _v = VFFSL(SL,"config.path",True) # u'$config.path' on line 51, col 108
-                if _v is not None: write(_filter(_v, rawExpr=u'$config.path')) # from line 51, col 108.
-                write(u'''\', this.checked);" />
-''')
-            write(u'''\t\t\t\t<label for="''')
+                if _v is not None: write(_filter(_v, rawExpr='$config.path')) # from line 51, col 108.
+                write('''\', this.checked);" />
+''')
+            write('''\t\t\t\t<label for="''')
             _v = VFFSL(SL,"config.path",True) # u'$config.path' on line 53, col 17
-            if _v is not None: write(_filter(_v, rawExpr=u'$config.path')) # from line 53, col 17.
-            write(u'''">''')
+            if _v is not None: write(_filter(_v, rawExpr='$config.path')) # from line 53, col 17.
+            write('''">''')
             _v = VFFSL(SL,"choice",True) # u'$choice' on line 53, col 31
-            if _v is not None: write(_filter(_v, rawExpr=u'$choice')) # from line 53, col 31.
-            write(u'''</label>
-''')
-        write(u'''\t</div>
+            if _v is not None: write(_filter(_v, rawExpr='$choice')) # from line 53, col 31.
+            write('''</label>
+''')
+        write('''\t</div>
 </div>
 ''')
         
@@ -276,7 +277,7 @@
 
         ## CHEETAH: generated from #def number($config, $active) at line 59, col 1.
         trans = KWS.get("trans")
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -289,25 +290,25 @@
         ########################################
         ## START - generated method body
         
-        write(u'''<div class="row clearfix">
+        write('''<div class="row clearfix">
 \t<div class="col-xs-6 align-right">
 \t<label>''')
         _v = VFFSL(SL,"config.description",True) # u'$config.description' on line 62, col 9
-        if _v is not None: write(_filter(_v, rawExpr=u'$config.description')) # from line 62, col 9.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr='$config.description')) # from line 62, col 9.
+        write('''</label>
 \t</div>
 \t<div class="col-xs-6 col-md-3">
 \t<div class="form-line">
 \t\t\t\t<input type="text"  class="form-control inactive" id="''')
         _v = VFFSL(SL,"config.path",True) # u'${config.path}' on line 66, col 59
-        if _v is not None: write(_filter(_v, rawExpr=u'${config.path}')) # from line 66, col 59.
-        write(u'''" placeholder="''')
+        if _v is not None: write(_filter(_v, rawExpr='${config.path}')) # from line 66, col 59.
+        write('''" placeholder="''')
         _v = VFFSL(SL,"config.data.current",True) # u'$config.data.current' on line 66, col 88
-        if _v is not None: write(_filter(_v, rawExpr=u'$config.data.current')) # from line 66, col 88.
-        write(u'''" onchange="saveConfig(\'''')
+        if _v is not None: write(_filter(_v, rawExpr='$config.data.current')) # from line 66, col 88.
+        write('''" onchange="saveConfig(\'''')
         _v = VFFSL(SL,"config.path",True) # u'$config.path' on line 66, col 132
-        if _v is not None: write(_filter(_v, rawExpr=u'$config.path')) # from line 66, col 132.
-        write(u'''\', this.value);" />
+        if _v is not None: write(_filter(_v, rawExpr='$config.path')) # from line 66, col 132.
+        write('''\', this.value);" />
 \t</div>
 \t</div>
 </div>
@@ -324,7 +325,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -337,7 +338,7 @@
         ########################################
         ## START - generated method body
         
-        write(u'''
+        write('''
 
 
 
@@ -345,43 +346,43 @@
 <div id="content_main">
 ''')
         isactive = "active"
-        write(u'''\t<div style="display:none" id="thistitleconfig"><i class=\'material-icons material-icons-centered\'>settings</i>''')
+        write('''\t<div style="display:none" id="thistitleconfig"><i class=\'material-icons material-icons-centered\'>settings</i>''')
         _v = VFFSL(SL,"tstrings",True)['settings'] # u"$tstrings['settings']" on line 74, col 111
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['settings']")) # from line 74, col 111.
-        write(u''' - ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['settings']")) # from line 74, col 111.
+        write(''' - ''')
         _v = VFFSL(SL,"title",True) # u'$title' on line 74, col 135
-        if _v is not None: write(_filter(_v, rawExpr=u'$title')) # from line 74, col 135.
-        write(u'''</div>
+        if _v is not None: write(_filter(_v, rawExpr='$title')) # from line 74, col 135.
+        write('''</div>
 \t<div class="form-group" id="configuration">
 ''')
         for config in VFFSL(SL,"configs",True): # generated from line 76, col 3
             if VFFSL(SL,"config.data.type",True) == "select": # generated from line 77, col 4
-                write(u'''\t\t\t\t''')
+                write('''\t\t\t\t''')
                 _v = VFFSL(SL,"select",False)(VFFSL(SL,"config",True)) # u'$select($config)' on line 78, col 5
-                if _v is not None: write(_filter(_v, rawExpr=u'$select($config)')) # from line 78, col 5.
-                write(u'''
+                if _v is not None: write(_filter(_v, rawExpr='$select($config)')) # from line 78, col 5.
+                write('''
 ''')
             elif VFFSL(SL,"config.data.type",True) == "checkbox": # generated from line 79, col 4
-                write(u'''\t\t\t\t''')
+                write('''\t\t\t\t''')
                 _v = VFFSL(SL,"checkbox",False)(VFFSL(SL,"config",True)) # u'$checkbox($config)' on line 80, col 5
-                if _v is not None: write(_filter(_v, rawExpr=u'$checkbox($config)')) # from line 80, col 5.
-                write(u'''
+                if _v is not None: write(_filter(_v, rawExpr='$checkbox($config)')) # from line 80, col 5.
+                write('''
 ''')
             elif VFFSL(SL,"config.data.type",True) == "multicheckbox": # generated from line 81, col 4
-                write(u'''\t\t\t\t''')
+                write('''\t\t\t\t''')
                 _v = VFFSL(SL,"multicheckbox",False)(VFFSL(SL,"config",True)) # u'$multicheckbox($config)' on line 82, col 5
-                if _v is not None: write(_filter(_v, rawExpr=u'$multicheckbox($config)')) # from line 82, col 5.
-                write(u'''
+                if _v is not None: write(_filter(_v, rawExpr='$multicheckbox($config)')) # from line 82, col 5.
+                write('''
 ''')
             elif VFFSL(SL,"config.data.type",True) == "number": # generated from line 83, col 4
-                write(u'''\t\t\t\t''')
+                write('''\t\t\t\t''')
                 _v = VFFSL(SL,"number",False)(VFFSL(SL,"config",True), VFFSL(SL,"isactive",True)) # u'$number($config, $isactive)' on line 84, col 5
-                if _v is not None: write(_filter(_v, rawExpr=u'$number($config, $isactive)')) # from line 84, col 5.
-                write(u'''
+                if _v is not None: write(_filter(_v, rawExpr='$number($config, $isactive)')) # from line 84, col 5.
+                write('''
 ''')
                 if VFFSL(SL,"isactive",True) == "active": # generated from line 85, col 5
                     isactive = ""
-        write(u'''\t</div>
+        write('''\t</div>
 </div>
 
 <script type="text/javascript">
--- ./plugin/controllers/views/responsive/ajax/current.py	(original)
+++ ./plugin/controllers/views/responsive/ajax/current.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -61,7 +62,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -71,7 +72,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -84,7 +85,7 @@
         ########################################
         ## START - generated method body
         
-        write(u'''<div class="row clearfix">
+        write('''<div class="row clearfix">
 \t<div class="col-xs-12">
 \t\t<div class="card">
 \t\t\t<div class="header">
@@ -92,32 +93,32 @@
 \t\t\t\t\t<div class="col-xs-7">
 \t\t\t\t\t\t<h2><a class="theme-link-color theme-link-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 9, col 53
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 9, col 53.
-        write(u'''" target="_blank" title="''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 9, col 53.
+        write('''" target="_blank" title="''')
         _v = VFFSL(SL,"tstrings",True)['stream'] # u"$tstrings['stream']" on line 9, col 88
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['stream']")) # from line 9, col 88.
-        write(u''' ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['stream']")) # from line 9, col 88.
+        write(''' ''')
         _v = VFFSL(SL,"getVar",False)('now.title', '') # u"$getVar('now.title', '')" on line 9, col 108
-        if _v is not None: write(_filter(_v, rawExpr=u"$getVar('now.title', '')")) # from line 9, col 108.
-        write(u''' from ''')
+        if _v is not None: write(_filter(_v, rawExpr="$getVar('now.title', '')")) # from line 9, col 108.
+        write(''' from ''')
         _v = VFFSL(SL,"info.name",True) # u'$info.name' on line 9, col 138
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.name')) # from line 9, col 138.
-        write(u'''" href=\'web/stream.m3u?ref=''')
+        if _v is not None: write(_filter(_v, rawExpr='$info.name')) # from line 9, col 138.
+        write('''" href=\'web/stream.m3u?ref=''')
         _v = VFFSL(SL,"info.ref",True) # u'$info.ref' on line 9, col 175
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.ref')) # from line 9, col 175.
-        write(u'''&name=''')
+        if _v is not None: write(_filter(_v, rawExpr='$info.ref')) # from line 9, col 175.
+        write('''&name=''')
         _v = VFFSL(SL,"info.name",True) # u'$info.name' on line 9, col 190
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.name')) # from line 9, col 190.
-        write(u'''\'><i class="material-icons material-icons-centered">tv</i>''')
+        if _v is not None: write(_filter(_v, rawExpr='$info.name')) # from line 9, col 190.
+        write('''\'><i class="material-icons material-icons-centered">tv</i>''')
         _v = VFFSL(SL,"info.name",True) # u'$info.name' on line 9, col 258
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.name')) # from line 9, col 258.
-        write(u'''</a></h2>
+        if _v is not None: write(_filter(_v, rawExpr='$info.name')) # from line 9, col 258.
+        write('''</a></h2>
 \t\t\t\t\t</div>
 \t\t\t\t\t<div class="col-xs-5 align-right">
 \t\t\t\t\t\t<h2>''')
         _v = VFFSL(SL,"info.date",True) # u'$info.date' on line 12, col 11
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.date')) # from line 12, col 11.
-        write(u'''</h2>
+        if _v is not None: write(_filter(_v, rawExpr='$info.date')) # from line 12, col 11.
+        write('''</h2>
 \t\t\t\t\t</div>
 \t\t\t\t</div>
 \t\t\t</div>
@@ -126,43 +127,43 @@
 \t\t\t\t\t<div class="col-xs-12 col-md-3">
 \t\t\t\t\t\t<img border=\'0\' width="100px" height="60px" src=\'''')
         _v = VFFSL(SL,"getVar",False)("info.picon", "images/default_picon.png") # u'$getVar("info.picon", "images/default_picon.png")' on line 19, col 56
-        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("info.picon", "images/default_picon.png")')) # from line 19, col 56.
-        write(u'''\' onclick="open_epg_dialog(\'''')
+        if _v is not None: write(_filter(_v, rawExpr='$getVar("info.picon", "images/default_picon.png")')) # from line 19, col 56.
+        write('''\' onclick="open_epg_dialog(\'''')
         _v = VFFSL(SL,"info.ref",True) # u'$info.ref' on line 19, col 133
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.ref')) # from line 19, col 133.
-        write(u"""','""")
+        if _v is not None: write(_filter(_v, rawExpr='$info.ref')) # from line 19, col 133.
+        write("""','""")
         _v = VFFSL(SL,"info.name",True) # u'$info.name' on line 19, col 145
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.name')) # from line 19, col 145.
-        write(u'''\');" style="cursor:pointer;" data-toggle="modal" data-target="#EPGModal" title="''')
+        if _v is not None: write(_filter(_v, rawExpr='$info.name')) # from line 19, col 145.
+        write('''\');" style="cursor:pointer;" data-toggle="modal" data-target="#EPGModal" title="''')
         _v = VFFSL(SL,"tstrings",True)['show_epg_for'] # u"$tstrings['show_epg_for']" on line 19, col 235
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['show_epg_for']")) # from line 19, col 235.
-        write(u''' ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['show_epg_for']")) # from line 19, col 235.
+        write(''' ''')
         _v = VFFSL(SL,"info.name",True) # u'$info.name' on line 19, col 261
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.name')) # from line 19, col 261.
-        write(u'''" border="0" alt=\'\' />
+        if _v is not None: write(_filter(_v, rawExpr='$info.name')) # from line 19, col 261.
+        write('''" border="0" alt=\'\' />
 \t\t\t\t\t</div>
 \t\t\t\t\t<div class="col-xs-12 col-md-6">
 \t\t\t\t\t\t<div class="row clearfix" >
 \t\t\t\t\t\t\t<div class="col-xs-3">
 \t\t\t\t\t\t\t\t<span><b>''')
         _v = VFFSL(SL,"getVar",False)("now.begin", " ") # u'$getVar("now.begin", " ")' on line 24, col 18
-        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("now.begin", " ")')) # from line 24, col 18.
-        write(u''' - ''')
+        if _v is not None: write(_filter(_v, rawExpr='$getVar("now.begin", " ")')) # from line 24, col 18.
+        write(''' - ''')
         _v = VFFSL(SL,"getVar",False)("now.end", " ") # u'$getVar("now.end", " ")' on line 24, col 46
-        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("now.end", " ")')) # from line 24, col 46.
-        write(u'''</b></span>
+        if _v is not None: write(_filter(_v, rawExpr='$getVar("now.end", " ")')) # from line 24, col 46.
+        write('''</b></span>
 \t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t<div class="col-xs-6">
 \t\t\t\t\t\t\t\t<span><b>''')
         _v = VFFSL(SL,"getVar",False)("now.title", " ") # u'$getVar("now.title", " ")' on line 27, col 18
-        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("now.title", " ")')) # from line 27, col 18.
-        write(u'''</b></span>
+        if _v is not None: write(_filter(_v, rawExpr='$getVar("now.title", " ")')) # from line 27, col 18.
+        write('''</b></span>
 \t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t<div class="col-xs-3 align-right">
 \t\t\t\t\t\t\t\t<span><b>+''')
         _v = VFFSL(SL,"getVar",False)("now.tleft", " ") # u'$getVar("now.tleft", " ")' on line 30, col 19
-        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("now.tleft", " ")')) # from line 30, col 19.
-        write(u''' min</b></span>
+        if _v is not None: write(_filter(_v, rawExpr='$getVar("now.tleft", " ")')) # from line 30, col 19.
+        write(''' min</b></span>
 \t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t</div>
 \t\t\t\t\t\t<div class="row clearfix">
@@ -170,16 +171,16 @@
 \t\t\t\t\t\t\t\t<div class="progress progress-striped" style="height:10px;">
 ''')
         sz = VFFSL(SL,"getVar",False)("now.progress", 0)/400.0*100.0
-        write(u'''\t\t\t\t\t\t\t\t\t<div class="progress-bar bg-''')
+        write('''\t\t\t\t\t\t\t\t\t<div class="progress-bar bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 37, col 38
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 37, col 38.
-        write(u'''" role="progressbar" aria-valuenow="''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 37, col 38.
+        write('''" role="progressbar" aria-valuenow="''')
         _v = VFFSL(SL,"sz",True) # u'$sz' on line 37, col 84
-        if _v is not None: write(_filter(_v, rawExpr=u'$sz')) # from line 37, col 84.
-        write(u'''" aria-valuemin="0" aria-valuemax="100" style="width:''')
+        if _v is not None: write(_filter(_v, rawExpr='$sz')) # from line 37, col 84.
+        write('''" aria-valuemin="0" aria-valuemax="100" style="width:''')
         _v = VFFSL(SL,"sz",True) # u'$sz' on line 37, col 140
-        if _v is not None: write(_filter(_v, rawExpr=u'$sz')) # from line 37, col 140.
-        write(u'''%;margin:0px"></div>
+        if _v is not None: write(_filter(_v, rawExpr='$sz')) # from line 37, col 140.
+        write('''%;margin:0px"></div>
 \t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t</div>
@@ -187,23 +188,23 @@
 \t\t\t\t\t\t\t<div class="col-xs-3">
 \t\t\t\t\t\t\t\t<span>''')
         _v = VFFSL(SL,"getVar",False)("next.begin", " ") # u'$getVar("next.begin", " ")' on line 43, col 15
-        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("next.begin", " ")')) # from line 43, col 15.
-        write(u''' - ''')
+        if _v is not None: write(_filter(_v, rawExpr='$getVar("next.begin", " ")')) # from line 43, col 15.
+        write(''' - ''')
         _v = VFFSL(SL,"getVar",False)("next.end", " ") # u'$getVar("next.end", " ")' on line 43, col 44
-        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("next.end", " ")')) # from line 43, col 44.
-        write(u'''</span>
+        if _v is not None: write(_filter(_v, rawExpr='$getVar("next.end", " ")')) # from line 43, col 44.
+        write('''</span>
 \t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t<div class="col-xs-6">
 \t\t\t\t\t\t\t\t<span>''')
         _v = VFFSL(SL,"getVar",False)("next.title", " ") # u'$getVar("next.title", " ")' on line 46, col 15
-        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("next.title", " ")')) # from line 46, col 15.
-        write(u'''</span>
+        if _v is not None: write(_filter(_v, rawExpr='$getVar("next.title", " ")')) # from line 46, col 15.
+        write('''</span>
 \t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t<div class="col-xs-3 align-right">
 \t\t\t\t\t\t\t\t<span>''')
         _v = VFFSL(SL,"getVar",False)("next.duration", " ") # u'$getVar("next.duration", " ")' on line 49, col 15
-        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("next.duration", " ")')) # from line 49, col 15.
-        write(u''' min</span>
+        if _v is not None: write(_filter(_v, rawExpr='$getVar("next.duration", " ")')) # from line 49, col 15.
+        write(''' min</span>
 \t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t</div>
 \t\t\t\t\t</div>
@@ -215,19 +216,19 @@
         tnum = 0
         for tuner in VFFSL(SL,"info.tuners",True): # generated from line 58, col 1
             if VFFSL(SL,"info.tunernumber",True) == VFFSL(SL,"tnum",True): # generated from line 59, col 2
-                write(u'''\t\t\t\t\t\t\t\t\t<span style="color:green;"><b>''')
+                write('''\t\t\t\t\t\t\t\t\t<span style="color:green;"><b>''')
                 _v = VFFSL(SL,"tuner",True) # u'$tuner' on line 60, col 40
-                if _v is not None: write(_filter(_v, rawExpr=u'$tuner')) # from line 60, col 40.
-                write(u'''</b></span>
+                if _v is not None: write(_filter(_v, rawExpr='$tuner')) # from line 60, col 40.
+                write('''</b></span>
 ''')
             else: # generated from line 61, col 2
-                write(u'''\t\t\t\t\t\t\t\t\t<span>''')
+                write('''\t\t\t\t\t\t\t\t\t<span>''')
                 _v = VFFSL(SL,"tuner",True) # u'$tuner' on line 62, col 16
-                if _v is not None: write(_filter(_v, rawExpr=u'$tuner')) # from line 62, col 16.
-                write(u'''</span>
+                if _v is not None: write(_filter(_v, rawExpr='$tuner')) # from line 62, col 16.
+                write('''</span>
 ''')
             tnum = VFFSL(SL,"tnum",True) + 1
-        write(u'''\t\t\t\t\t\t\t\t</span>
+        write('''\t\t\t\t\t\t\t\t</span>
 \t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t</div>
 \t\t\t\t\t\t<div class="row clearfix">
@@ -235,8 +236,8 @@
 \t\t\t\t\t\t\t\t<span>
 \t\t\t\t\t\t\t\t\t''')
         _v = VFFSL(SL,"getVar",False)("info.tunertype", " ") # u'$getVar("info.tunertype", " ")' on line 72, col 10
-        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("info.tunertype", " ")')) # from line 72, col 10.
-        write(u'''
+        if _v is not None: write(_filter(_v, rawExpr='$getVar("info.tunertype", " ")')) # from line 72, col 10.
+        write('''
 \t\t\t\t\t\t\t\t</span>
 \t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t</div>
@@ -245,11 +246,11 @@
 \t\t\t\t\t\t\t\t<span>
 \t\t\t\t\t\t\t\t\t''')
         _v = VFFSL(SL,"info.width",True) # u'$info.width' on line 79, col 10
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.width')) # from line 79, col 10.
-        write(u''' x ''')
+        if _v is not None: write(_filter(_v, rawExpr='$info.width')) # from line 79, col 10.
+        write(''' x ''')
         _v = VFFSL(SL,"info.height",True) # u'$info.height' on line 79, col 24
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.height')) # from line 79, col 24.
-        write(u'''
+        if _v is not None: write(_filter(_v, rawExpr='$info.height')) # from line 79, col 24.
+        write('''
 \t\t\t\t\t\t\t\t</span>
 \t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t</div>
@@ -260,14 +261,14 @@
 \t\t\t\t\t\t<span>
 \t\t\t\t\t\t\t<b>''')
         _v = VFFSL(SL,"tstrings",True)['description'] # u"$tstrings['description']" on line 88, col 11
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['description']")) # from line 88, col 11.
-        write(u''':</b> ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['description']")) # from line 88, col 11.
+        write(''':</b> ''')
         _v = VFFSL(SL,"getVar",False)("now.shortdesc", " ") # u'$getVar("now.shortdesc", " ")' on line 88, col 41
-        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("now.shortdesc", " ")')) # from line 88, col 41.
-        write(u'''<br/>''')
-        _v = VFN(VFN(VFFSL(SL,"getVar",False)("now.longdesc", " "),"replace",False)("\n","<br/>"),"replace",False)(u"\u008a","<br/>") # u'$getVar("now.longdesc", " ").replace("\\n","<br/>").replace(u"\\u008a","<br/>")' on line 88, col 75
-        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("now.longdesc", " ").replace("\\n","<br/>").replace(u"\\u008a","<br/>")')) # from line 88, col 75.
-        write(u'''
+        if _v is not None: write(_filter(_v, rawExpr='$getVar("now.shortdesc", " ")')) # from line 88, col 41.
+        write('''<br/>''')
+        _v = VFN(VFN(VFFSL(SL,"getVar",False)("now.longdesc", " "),"replace",False)("\n","<br/>"),"replace",False)("\u008a","<br/>") # u'$getVar("now.longdesc", " ").replace("\\n","<br/>").replace(u"\\u008a","<br/>")' on line 88, col 75
+        if _v is not None: write(_filter(_v, rawExpr='$getVar("now.longdesc", " ").replace("\\n","<br/>").replace(u"\\u008a","<br/>")')) # from line 88, col 75.
+        write('''
 \t\t\t\t\t\t</span>
 \t\t\t\t\t</div>
 \t\t\t\t</div>
@@ -283,18 +284,18 @@
 \t\t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t\t<p><b>''')
         _v = VFFSL(SL,"tstrings",True)['tuner_type'] # u"$tstrings['tuner_type']" on line 102, col 13
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['tuner_type']")) # from line 102, col 13.
-        write(u''':</b> ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['tuner_type']")) # from line 102, col 13.
+        write(''':</b> ''')
         _v = VFFSL(SL,"getVar",False)("info.tunertype", "N/A") # u'$getVar("info.tunertype", "N/A")' on line 102, col 42
-        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("info.tunertype", "N/A")')) # from line 102, col 42.
-        write(u'''</p>
+        if _v is not None: write(_filter(_v, rawExpr='$getVar("info.tunertype", "N/A")')) # from line 102, col 42.
+        write('''</p>
 \t\t\t\t\t\t<p><b>''')
         _v = VFFSL(SL,"tstrings",True)['tuner_number'] # u"$tstrings['tuner_number']" on line 103, col 13
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['tuner_number']")) # from line 103, col 13.
-        write(u''':</b> ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['tuner_number']")) # from line 103, col 13.
+        write(''':</b> ''')
         _v = VFFSL(SL,"getVar",False)("info.tunernumber", "N/A") # u'$getVar("info.tunernumber", "N/A")' on line 103, col 44
-        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("info.tunernumber", "N/A")')) # from line 103, col 44.
-        write(u'''</p>
+        if _v is not None: write(_filter(_v, rawExpr='$getVar("info.tunernumber", "N/A")')) # from line 103, col 44.
+        write('''</p>
 \t\t\t\t\t</div>
 \t\t\t\t</div>
 \t\t\t</div>
@@ -307,46 +308,46 @@
 \t\t\t\t\t<div class="col-xs-6">
 \t\t\t\t\t\t<p><b>''')
         _v = VFFSL(SL,"tstrings",True)['tuner_signal_snr'] # u"$tstrings['tuner_signal_snr']" on line 114, col 13
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['tuner_signal_snr']")) # from line 114, col 13.
-        write(u''':</b> ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['tuner_signal_snr']")) # from line 114, col 13.
+        write(''':</b> ''')
         _v = VFFSL(SL,"getVar",False)("info.snr", "N/A") # u'$getVar("info.snr", "N/A")' on line 114, col 48
-        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("info.snr", "N/A")')) # from line 114, col 48.
-        write(u'''%</p>
+        if _v is not None: write(_filter(_v, rawExpr='$getVar("info.snr", "N/A")')) # from line 114, col 48.
+        write('''%</p>
 \t\t\t\t\t\t<p><b>''')
         _v = VFFSL(SL,"tstrings",True)['tuner_signal_agc'] # u"$tstrings['tuner_signal_agc']" on line 115, col 13
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['tuner_signal_agc']")) # from line 115, col 13.
-        write(u''':</b> ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['tuner_signal_agc']")) # from line 115, col 13.
+        write(''':</b> ''')
         _v = VFFSL(SL,"getVar",False)("info.agc", "N/A") # u'$getVar("info.agc", "N/A")' on line 115, col 48
-        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("info.agc", "N/A")')) # from line 115, col 48.
-        write(u'''%</p>
+        if _v is not None: write(_filter(_v, rawExpr='$getVar("info.agc", "N/A")')) # from line 115, col 48.
+        write('''%</p>
 \t\t\t\t\t</div>
 \t\t\t\t\t<div class="col-xs-6">
 ''')
         snr = VFFSL(SL,"getVar",False)("info.snr", "0")
         agc = VFFSL(SL,"getVar",False)("info.agc", "0")
-        write(u'''\t\t\t\t\t\t<div class="progress" style="height:10px;max-width:150px;margin-top:5px;">
+        write('''\t\t\t\t\t\t<div class="progress" style="height:10px;max-width:150px;margin-top:5px;">
 \t\t\t\t\t\t\t<div class="progress-bar bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 121, col 36
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 121, col 36.
-        write(u'''" role="progressbar" aria-valuenow="''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 121, col 36.
+        write('''" role="progressbar" aria-valuenow="''')
         _v = VFFSL(SL,"snr",True) # u'$snr' on line 121, col 82
-        if _v is not None: write(_filter(_v, rawExpr=u'$snr')) # from line 121, col 82.
-        write(u'''" aria-valuemin="0" aria-valuemax="100" style="width:''')
+        if _v is not None: write(_filter(_v, rawExpr='$snr')) # from line 121, col 82.
+        write('''" aria-valuemin="0" aria-valuemax="100" style="width:''')
         _v = VFFSL(SL,"snr",True) # u'$snr' on line 121, col 139
-        if _v is not None: write(_filter(_v, rawExpr=u'$snr')) # from line 121, col 139.
-        write(u'''%;margin:0px"></div>
+        if _v is not None: write(_filter(_v, rawExpr='$snr')) # from line 121, col 139.
+        write('''%;margin:0px"></div>
 \t\t\t\t\t\t</div>
 \t\t\t\t\t\t<div class="progress" style="height:10px;max-width:150px;margin-bottom:-5px;">
 \t\t\t\t\t\t\t<div class="progress-bar bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 124, col 36
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 124, col 36.
-        write(u'''" role="progressbar" aria-valuenow="''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 124, col 36.
+        write('''" role="progressbar" aria-valuenow="''')
         _v = VFFSL(SL,"agc",True) # u'$agc' on line 124, col 82
-        if _v is not None: write(_filter(_v, rawExpr=u'$agc')) # from line 124, col 82.
-        write(u'''" aria-valuemin="0" aria-valuemax="100" style="width:''')
+        if _v is not None: write(_filter(_v, rawExpr='$agc')) # from line 124, col 82.
+        write('''" aria-valuemin="0" aria-valuemax="100" style="width:''')
         _v = VFFSL(SL,"agc",True) # u'$agc' on line 124, col 139
-        if _v is not None: write(_filter(_v, rawExpr=u'$agc')) # from line 124, col 139.
-        write(u'''%;margin:0px"></div>
+        if _v is not None: write(_filter(_v, rawExpr='$agc')) # from line 124, col 139.
+        write('''%;margin:0px"></div>
 \t\t\t\t\t\t</div>
 \t\t\t\t\t</div>
 \t\t\t\t</div>
@@ -360,18 +361,18 @@
 \t\t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t\t<p><b>''')
         _v = VFFSL(SL,"tstrings",True)['tuner_signal_snr_db'] # u"$tstrings['tuner_signal_snr_db']" on line 136, col 13
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['tuner_signal_snr_db']")) # from line 136, col 13.
-        write(u''':</b> ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['tuner_signal_snr_db']")) # from line 136, col 13.
+        write(''':</b> ''')
         _v = VFFSL(SL,"getVar",False)("info.snr_db", "N/A") # u'$getVar("info.snr_db", "N/A")' on line 136, col 51
-        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("info.snr_db", "N/A")')) # from line 136, col 51.
-        write(u'''</p>
+        if _v is not None: write(_filter(_v, rawExpr='$getVar("info.snr_db", "N/A")')) # from line 136, col 51.
+        write('''</p>
 \t\t\t\t\t\t<p><b>''')
         _v = VFFSL(SL,"tstrings",True)['tuner_ber'] # u"$tstrings['tuner_ber']" on line 137, col 13
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['tuner_ber']")) # from line 137, col 13.
-        write(u''':</b> ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['tuner_ber']")) # from line 137, col 13.
+        write(''':</b> ''')
         _v = VFFSL(SL,"getVar",False)("info.ber", "N/A") # u'$getVar("info.ber", "N/A")' on line 137, col 41
-        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("info.ber", "N/A")')) # from line 137, col 41.
-        write(u'''</p>
+        if _v is not None: write(_filter(_v, rawExpr='$getVar("info.ber", "N/A")')) # from line 137, col 41.
+        write('''</p>
 \t\t\t\t\t</div>
 \t\t\t\t</div>
 \t\t\t</div>
@@ -388,53 +389,53 @@
 \t\t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t\t<p><b>''')
         _v = VFFSL(SL,"tstrings",True)['name'] # u"$tstrings['name']" on line 152, col 13
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['name']")) # from line 152, col 13.
-        write(u''':</b> ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['name']")) # from line 152, col 13.
+        write(''':</b> ''')
         _v = VFFSL(SL,"info.name",True) # u'$info.name' on line 152, col 36
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.name')) # from line 152, col 36.
-        write(u'''</p>
+        if _v is not None: write(_filter(_v, rawExpr='$info.name')) # from line 152, col 36.
+        write('''</p>
 \t\t\t\t\t\t<p><b>''')
         _v = VFFSL(SL,"tstrings",True)['video_width'] # u"$tstrings['video_width']" on line 153, col 13
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['video_width']")) # from line 153, col 13.
-        write(u''':</b> ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['video_width']")) # from line 153, col 13.
+        write(''':</b> ''')
         _v = VFFSL(SL,"info.width",True) # u'$info.width' on line 153, col 43
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.width')) # from line 153, col 43.
-        write(u'''</p>
+        if _v is not None: write(_filter(_v, rawExpr='$info.width')) # from line 153, col 43.
+        write('''</p>
 \t\t\t\t\t\t<p><b>''')
         _v = VFFSL(SL,"tstrings",True)['encrypted'] # u"$tstrings['encrypted']" on line 154, col 13
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['encrypted']")) # from line 154, col 13.
-        write(u''':</b> ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['encrypted']")) # from line 154, col 13.
+        write(''':</b> ''')
         _v = VFFSL(SL,"info.crypt",True) # u'$info.crypt' on line 154, col 41
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.crypt')) # from line 154, col 41.
-        write(u'''</p>
+        if _v is not None: write(_filter(_v, rawExpr='$info.crypt')) # from line 154, col 41.
+        write('''</p>
 \t\t\t\t\t\t<p><b>''')
         _v = VFFSL(SL,"tstrings",True)['teletext'] # u"$tstrings['teletext']" on line 155, col 13
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['teletext']")) # from line 155, col 13.
-        write(u''':</b> ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['teletext']")) # from line 155, col 13.
+        write(''':</b> ''')
         _v = VFFSL(SL,"info.txtpid",True) # u'$info.txtpid' on line 155, col 40
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.txtpid')) # from line 155, col 40.
-        write(u'''</p>
+        if _v is not None: write(_filter(_v, rawExpr='$info.txtpid')) # from line 155, col 40.
+        write('''</p>
 \t\t\t\t\t\t<p><b>''')
         _v = VFFSL(SL,"tstrings",True)['a_pid'] # u"$tstrings['a_pid']" on line 156, col 13
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['a_pid']")) # from line 156, col 13.
-        write(u''':</b> ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['a_pid']")) # from line 156, col 13.
+        write(''':</b> ''')
         _v = VFFSL(SL,"info.apid",True) # u'$info.apid' on line 156, col 37
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.apid')) # from line 156, col 37.
-        write(u'''</p>
+        if _v is not None: write(_filter(_v, rawExpr='$info.apid')) # from line 156, col 37.
+        write('''</p>
 \t\t\t\t\t\t<p><b>''')
         _v = VFFSL(SL,"tstrings",True)['ts_id'] # u"$tstrings['ts_id']" on line 157, col 13
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ts_id']")) # from line 157, col 13.
-        write(u''':</b> ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['ts_id']")) # from line 157, col 13.
+        write(''':</b> ''')
         _v = VFFSL(SL,"info.tsid",True) # u'$info.tsid' on line 157, col 37
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.tsid')) # from line 157, col 37.
-        write(u'''</p>
+        if _v is not None: write(_filter(_v, rawExpr='$info.tsid')) # from line 157, col 37.
+        write('''</p>
 \t\t\t\t\t\t<p><b>''')
         _v = VFFSL(SL,"tstrings",True)['s_ref'] # u"$tstrings['s_ref']" on line 158, col 13
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['s_ref']")) # from line 158, col 13.
-        write(u''':</b> ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['s_ref']")) # from line 158, col 13.
+        write(''':</b> ''')
         _v = VFFSL(SL,"info.sref",True) # u'$info.sref' on line 158, col 37
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.sref')) # from line 158, col 37.
-        write(u'''</p>
+        if _v is not None: write(_filter(_v, rawExpr='$info.sref')) # from line 158, col 37.
+        write('''</p>
 \t\t\t\t\t</div>
 \t\t\t\t</div>
 \t\t\t</div>
@@ -447,50 +448,50 @@
 \t\t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t\t<p><b>''')
         _v = VFFSL(SL,"tstrings",True)['provider'] # u"$tstrings['provider']" on line 169, col 13
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['provider']")) # from line 169, col 13.
-        write(u''':</b> ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['provider']")) # from line 169, col 13.
+        write(''':</b> ''')
         _v = VFFSL(SL,"info.provider",True) # u'$info.provider' on line 169, col 40
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.provider')) # from line 169, col 40.
-        write(u'''</p>
+        if _v is not None: write(_filter(_v, rawExpr='$info.provider')) # from line 169, col 40.
+        write('''</p>
 \t\t\t\t\t\t<p><b>''')
         _v = VFFSL(SL,"tstrings",True)['video_height'] # u"$tstrings['video_height']" on line 170, col 13
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['video_height']")) # from line 170, col 13.
-        write(u''':</b> ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['video_height']")) # from line 170, col 13.
+        write(''':</b> ''')
         _v = VFFSL(SL,"info.height",True) # u'$info.height' on line 170, col 44
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.height')) # from line 170, col 44.
-        write(u'''</p>
+        if _v is not None: write(_filter(_v, rawExpr='$info.height')) # from line 170, col 44.
+        write('''</p>
 \t\t\t\t\t\t<p><b>''')
         _v = VFFSL(SL,"tstrings",True)['dolby'] # u"$tstrings['dolby']" on line 171, col 13
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['dolby']")) # from line 171, col 13.
-        write(u''':</b> ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['dolby']")) # from line 171, col 13.
+        write(''':</b> ''')
         _v = VFFSL(SL,"info.dolby",True) # u'$info.dolby' on line 171, col 37
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.dolby')) # from line 171, col 37.
-        write(u'''</p>
+        if _v is not None: write(_filter(_v, rawExpr='$info.dolby')) # from line 171, col 37.
+        write('''</p>
 \t\t\t\t\t\t<p><b>''')
         _v = VFFSL(SL,"tstrings",True)['rec_status'] # u"$tstrings['rec_status']" on line 172, col 13
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['rec_status']")) # from line 172, col 13.
-        write(u''':</b> ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['rec_status']")) # from line 172, col 13.
+        write(''':</b> ''')
         _v = VFFSL(SL,"info.rec_state",True) # u'$info.rec_state' on line 172, col 42
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.rec_state')) # from line 172, col 42.
-        write(u'''</p>
+        if _v is not None: write(_filter(_v, rawExpr='$info.rec_state')) # from line 172, col 42.
+        write('''</p>
 \t\t\t\t\t\t<p><b>''')
         _v = VFFSL(SL,"tstrings",True)['v_pid'] # u"$tstrings['v_pid']" on line 173, col 13
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['v_pid']")) # from line 173, col 13.
-        write(u''':</b> ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['v_pid']")) # from line 173, col 13.
+        write(''':</b> ''')
         _v = VFFSL(SL,"info.vpid",True) # u'$info.vpid' on line 173, col 37
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.vpid')) # from line 173, col 37.
-        write(u'''</p>
+        if _v is not None: write(_filter(_v, rawExpr='$info.vpid')) # from line 173, col 37.
+        write('''</p>
 \t\t\t\t\t\t<p><b>''')
         _v = VFFSL(SL,"tstrings",True)['on_id'] # u"$tstrings['on_id']" on line 174, col 13
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['on_id']")) # from line 174, col 13.
-        write(u''':</b> ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['on_id']")) # from line 174, col 13.
+        write(''':</b> ''')
         _v = VFFSL(SL,"info.onid",True) # u'$info.onid' on line 174, col 37
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.onid')) # from line 174, col 37.
-        write(u'''</p>
+        if _v is not None: write(_filter(_v, rawExpr='$info.onid')) # from line 174, col 37.
+        write('''</p>
 \t\t\t\t\t\t<p>''')
         _v = VFFSL(SL,"getVar",False)("info.srefv2", "") # u'$getVar("info.srefv2", "")' on line 175, col 10
-        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("info.srefv2", "")')) # from line 175, col 10.
-        write(u'''</p>
+        if _v is not None: write(_filter(_v, rawExpr='$getVar("info.srefv2", "")')) # from line 175, col 10.
+        write('''</p>
 \t\t\t\t\t</div>
 \t\t\t\t</div>
 \t\t\t</div>
@@ -503,53 +504,53 @@
 \t\t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t\t<p><b>''')
         _v = VFFSL(SL,"tstrings",True)['namespace'] # u"$tstrings['namespace']" on line 186, col 13
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['namespace']")) # from line 186, col 13.
-        write(u''':</b> ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['namespace']")) # from line 186, col 13.
+        write(''':</b> ''')
         _v = VFFSL(SL,"info.namespace",True) # u'$info.namespace' on line 186, col 41
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.namespace')) # from line 186, col 41.
-        write(u'''</p>
+        if _v is not None: write(_filter(_v, rawExpr='$info.namespace')) # from line 186, col 41.
+        write('''</p>
 \t\t\t\t\t\t<p><b>''')
         _v = VFFSL(SL,"tstrings",True)['video_wide'] # u"$tstrings['video_wide']" on line 187, col 13
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['video_wide']")) # from line 187, col 13.
-        write(u''':</b> ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['video_wide']")) # from line 187, col 13.
+        write(''':</b> ''')
         _v = VFFSL(SL,"info.wide",True) # u'$info.wide' on line 187, col 42
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.wide')) # from line 187, col 42.
-        write(u'''</p>
+        if _v is not None: write(_filter(_v, rawExpr='$info.wide')) # from line 187, col 42.
+        write('''</p>
 \t\t\t\t\t\t<p><b>''')
         _v = VFFSL(SL,"tstrings",True)['subservices'] # u"$tstrings['subservices']" on line 188, col 13
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['subservices']")) # from line 188, col 13.
-        write(u''':</b> ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['subservices']")) # from line 188, col 13.
+        write(''':</b> ''')
         _v = VFFSL(SL,"info.subs",True) # u'$info.subs' on line 188, col 43
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.subs')) # from line 188, col 43.
-        write(u'''</p>
+        if _v is not None: write(_filter(_v, rawExpr='$info.subs')) # from line 188, col 43.
+        write('''</p>
 \t\t\t\t\t\t<p><b>''')
         _v = VFFSL(SL,"tstrings",True)['pmt_pid'] # u"$tstrings['pmt_pid']" on line 189, col 13
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['pmt_pid']")) # from line 189, col 13.
-        write(u''':</b> ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['pmt_pid']")) # from line 189, col 13.
+        write(''':</b> ''')
         _v = VFFSL(SL,"info.pmtpid",True) # u'$info.pmtpid' on line 189, col 39
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.pmtpid')) # from line 189, col 39.
-        write(u'''</p>
+        if _v is not None: write(_filter(_v, rawExpr='$info.pmtpid')) # from line 189, col 39.
+        write('''</p>
 \t\t\t\t\t\t<p><b>''')
         _v = VFFSL(SL,"tstrings",True)['pcr_pid'] # u"$tstrings['pcr_pid']" on line 190, col 13
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['pcr_pid']")) # from line 190, col 13.
-        write(u''':</b> ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['pcr_pid']")) # from line 190, col 13.
+        write(''':</b> ''')
         _v = VFFSL(SL,"info.pcrpid",True) # u'$info.pcrpid' on line 190, col 39
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.pcrpid')) # from line 190, col 39.
-        write(u'''</p>
+        if _v is not None: write(_filter(_v, rawExpr='$info.pcrpid')) # from line 190, col 39.
+        write('''</p>
 \t\t\t\t\t\t<p><b>''')
         _v = VFFSL(SL,"tstrings",True)['s_id'] # u"$tstrings['s_id']" on line 191, col 13
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['s_id']")) # from line 191, col 13.
-        write(u''':</b> ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['s_id']")) # from line 191, col 13.
+        write(''':</b> ''')
         _v = VFFSL(SL,"info.sid",True) # u'$info.sid' on line 191, col 36
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.sid')) # from line 191, col 36.
-        write(u'''</p>
+        if _v is not None: write(_filter(_v, rawExpr='$info.sid')) # from line 191, col 36.
+        write('''</p>
 \t\t\t\t\t\t<p><b>''')
         _v = VFFSL(SL,"tstrings",True)['s_orb'] # u"$tstrings['s_orb']" on line 192, col 13
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['s_orb']")) # from line 192, col 13.
-        write(u''':</b> ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['s_orb']")) # from line 192, col 13.
+        write(''':</b> ''')
         _v = VFFSL(SL,"getVar",False)("info.orbital_position", "N/A") # u'$getVar("info.orbital_position", "N/A")' on line 192, col 37
-        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("info.orbital_position", "N/A")')) # from line 192, col 37.
-        write(u'''</p>
+        if _v is not None: write(_filter(_v, rawExpr='$getVar("info.orbital_position", "N/A")')) # from line 192, col 37.
+        write('''</p>
 \t\t\t\t\t</div>
 \t\t\t\t</div>
 \t\t\t</div>
--- ./plugin/controllers/views/responsive/ajax/edittimer.py	(original)
+++ ./plugin/controllers/views/responsive/ajax/edittimer.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -60,7 +61,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -70,7 +71,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,15 +84,15 @@
         ########################################
         ## START - generated method body
         
-        write(u'''<form>
+        write('''<form>
 <div class="form-group">
 \t<div class="row clearfix">
 \t\t<div class="col-sm-6">
 \t\t\t<input type="checkbox" id="enabled" value="1" />
 \t\t\t<label for="enabled">''')
         _v = VFFSL(SL,"tstrings",True)['enabled'] # u"$tstrings['enabled']" on line 7, col 25
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['enabled']")) # from line 7, col 25.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['enabled']")) # from line 7, col 25.
+        write(''':</label>
 \t\t</div>
 \t</div>
 \t<div class="row clearfix">
@@ -99,66 +100,66 @@
 \t\t\t<input type="checkbox" name="justplay" id="justplay" value="0" />
 \t\t\t<label for="justplay">''')
         _v = VFFSL(SL,"tstrings",True)['just_play'] # u"$tstrings['just_play']" on line 13, col 26
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['just_play']")) # from line 13, col 26.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['just_play']")) # from line 13, col 26.
+        write(''':</label>
 \t\t</div>
 \t\t<div class="col-sm-6">
 \t\t\t<input type="checkbox" name="always_zap" id="always_zap" value="0" />
 \t\t\t<label for="always_zap">''')
         _v = VFFSL(SL,"tstrings",True)['record_zap'] # u"$tstrings['record_zap']" on line 17, col 28
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['record_zap']")) # from line 17, col 28.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['record_zap']")) # from line 17, col 28.
+        write(''':</label>
 \t\t</div>
 ''')
         if VFFSL(SL,"pipzap",True): # generated from line 19, col 3
-            write(u'''\t\t<div class="col-sm-6">
+            write('''\t\t<div class="col-sm-6">
 \t\t\t<input type="checkbox" name="pipzap" id="pipzap" value="0" />
 \t\t\t<label for="pipzap">''')
             _v = VFFSL(SL,"tstrings",True)['pipifposible'] # u"$tstrings['pipifposible']" on line 22, col 24
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['pipifposible']")) # from line 22, col 24.
-            write(u''':</label>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['pipifposible']")) # from line 22, col 24.
+            write(''':</label>
 \t\t</div>
 ''')
         else: # generated from line 24, col 3
-            write(u'''\t\t<input type="checkbox" name="pipzap" id="pipzap" value="0" style="display:none"/>
-''')
-        write(u'''\t</div>
+            write('''\t\t<input type="checkbox" name="pipzap" id="pipzap" value="0" style="display:none"/>
+''')
+        write('''\t</div>
 ''')
         if VFFSL(SL,"autoadjust",True): # generated from line 28, col 2
-            write(u'''\t<div class="row clearfix">
+            write('''\t<div class="row clearfix">
 \t\t<div class="col-sm-6">
 \t\t\t<input type="checkbox" id="autoadjust" value="1" />
 \t\t\t<label for="autoadjust">''')
             _v = VFFSL(SL,"tstrings",True)['autoadjust'] # u"$tstrings['autoadjust']" on line 32, col 28
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['autoadjust']")) # from line 32, col 28.
-            write(u'''</label>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['autoadjust']")) # from line 32, col 28.
+            write('''</label>
 \t\t</div>
 \t\t<div class="col-sm-6">
 \t\t\t<input type="checkbox" id="allow_duplicate" value="1" />
 \t\t\t<label for="allow_duplicate">''')
             _v = VFFSL(SL,"tstrings",True)['allow_duplicate'] # u"$tstrings['allow_duplicate']" on line 36, col 33
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['allow_duplicate']")) # from line 36, col 33.
-            write(u''':</label>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['allow_duplicate']")) # from line 36, col 33.
+            write(''':</label>
 \t\t</div>
 \t</div>
 ''')
         else: # generated from line 39, col 2
-            write(u'''\t<input type="checkbox" id="autoadjust" value="0" style="display:none"/>
+            write('''\t<input type="checkbox" id="autoadjust" value="0" style="display:none"/>
 \t<input type="checkbox" id="allow_duplicate" value="0" style="display:none"/>
 ''')
-        write(u'''\t<div class="row clearfix">
+        write('''\t<div class="row clearfix">
 \t\t<div class="col-sm-3">
 \t\t\t<label>''')
         _v = VFFSL(SL,"tstrings",True)['name'] # u"$tstrings['name']" on line 45, col 11
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['name']")) # from line 45, col 11.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['name']")) # from line 45, col 11.
+        write(''':</label>
 \t\t</div>
 \t\t<div class="col-sm-9">
 \t\t\t<div class="form-line">
 \t\t\t\t<input type="text"  class="form-control" name="timername" id="timername" placeholder="''')
         _v = VFFSL(SL,"tstrings",True)['name'] # u"$tstrings['name']" on line 49, col 91
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['name']")) # from line 49, col 91.
-        write(u'''" />
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['name']")) # from line 49, col 91.
+        write('''" />
 \t\t\t</div>
 \t\t</div>
 \t</div>
@@ -166,15 +167,15 @@
 \t\t<div class="col-sm-3">
 \t\t\t<label>''')
         _v = VFFSL(SL,"tstrings",True)['description'] # u"$tstrings['description']" on line 55, col 11
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['description']")) # from line 55, col 11.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['description']")) # from line 55, col 11.
+        write(''':</label>
 \t\t</div>
 \t\t<div class="col-sm-9">
 \t\t\t<div class="form-line">
 \t\t\t\t<textarea rows="1" class="form-control no-resize auto-growth" name="description" id="description" placeholder="''')
         _v = VFFSL(SL,"tstrings",True)['description'] # u"$tstrings['description']" on line 59, col 116
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['description']")) # from line 59, col 116.
-        write(u'''" />
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['description']")) # from line 59, col 116.
+        write('''" />
 \t\t\t</div>
 \t\t</div>
 \t</div>
@@ -183,22 +184,22 @@
 \t\t<div class="col-sm-3">
 \t\t\t<label>''')
         _v = VFFSL(SL,"tstrings",True)['channel'] # u"$tstrings['channel']" on line 66, col 11
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['channel']")) # from line 66, col 11.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['channel']")) # from line 66, col 11.
+        write(''':</label>
 \t\t</div>
 \t\t<div class="col-sm-3">
 \t\t\t<input id="cbradio" type="checkbox" name="group1[]" />
 \t\t\t<label for="cbradio">(''')
         _v = VFFSL(SL,"tstrings",True)['radio'] # u"$tstrings['radio']" on line 70, col 26
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['radio']")) # from line 70, col 26.
-        write(u''')</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['radio']")) # from line 70, col 26.
+        write(''')</label>
 \t\t</div>
 \t\t<div class="col-sm-6">
 \t\t\t<select class="form-control show-tick no-default-select" id="bouquet_select" name="bouquet_select">
 \t\t\t\t<option value="0">''')
         _v = VFFSL(SL,"tstrings",True)['nothing'] # u"$tstrings['nothing']" on line 74, col 23
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['nothing']")) # from line 74, col 23.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['nothing']")) # from line 74, col 23.
+        write('''</option>
 \t\t\t</select>
 \t\t</div>
 \t</div>
@@ -207,15 +208,15 @@
 \t\t<div class="col-sm-6">
 \t\t\t<label>''')
         _v = VFFSL(SL,"tstrings",True)['start'] # u"$tstrings['start']" on line 81, col 11
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['start']")) # from line 81, col 11.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['start']")) # from line 81, col 11.
+        write(''':</label>
 \t\t\t<input type="text" class="form-control" id="timerbegin" placeholder="Please choose a date..." />
 \t\t</div>
 \t\t<div class="col-sm-6">
 \t\t\t<label>''')
         _v = VFFSL(SL,"tstrings",True)['end'] # u"$tstrings['end']" on line 85, col 11
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['end']")) # from line 85, col 11.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['end']")) # from line 85, col 11.
+        write(''':</label>
 \t\t\t<input type="text" id="timerend" class="form-control" placeholder="Please choose a date..." />
 \t\t</div>
 \t</div>
@@ -223,8 +224,8 @@
 \t\t<div class="col-sm-12">
 \t\t\t<label>''')
         _v = VFFSL(SL,"tstrings",True)['repeated'] # u"$tstrings['repeated']" on line 91, col 11
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['repeated']")) # from line 91, col 11.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['repeated']")) # from line 91, col 11.
+        write(''':</label>
 \t\t</div>
 \t</div>
 \t<div class="row clearfix">
@@ -232,38 +233,38 @@
         i = 0
         for day in [VFFSL(SL,"tstrings",True)['mo'], VFFSL(SL,"tstrings",True)['tu'], VFFSL(SL,"tstrings",True)['we'], VFFSL(SL,"tstrings",True)['th'], VFFSL(SL,"tstrings",True)['fr'], VFFSL(SL,"tstrings",True)['sa'], VFFSL(SL,"tstrings",True)['su']]: # generated from line 96, col 3
             value = 2 ** VFFSL(SL,"i",True)
-            write(u'''\t\t\t<div class="col-sm-1">
+            write('''\t\t\t<div class="col-sm-1">
 \t\t\t\t<input type="checkbox" name="repeated" id="day''')
             _v = VFFSL(SL,"i",True) # u'$i' on line 99, col 51
-            if _v is not None: write(_filter(_v, rawExpr=u'$i')) # from line 99, col 51.
-            write(u'''" value="''')
+            if _v is not None: write(_filter(_v, rawExpr='$i')) # from line 99, col 51.
+            write('''" value="''')
             _v = VFFSL(SL,"value",True) # u'$value' on line 99, col 62
-            if _v is not None: write(_filter(_v, rawExpr=u'$value')) # from line 99, col 62.
-            write(u'''" />
+            if _v is not None: write(_filter(_v, rawExpr='$value')) # from line 99, col 62.
+            write('''" />
 \t\t\t\t<label for="day''')
             _v = VFFSL(SL,"i",True) # u'$i' on line 100, col 20
-            if _v is not None: write(_filter(_v, rawExpr=u'$i')) # from line 100, col 20.
-            write(u'''">''')
+            if _v is not None: write(_filter(_v, rawExpr='$i')) # from line 100, col 20.
+            write('''">''')
             _v = VFFSL(SL,"day",True) # u'$day' on line 100, col 24
-            if _v is not None: write(_filter(_v, rawExpr=u'$day')) # from line 100, col 24.
-            write(u'''</label>
+            if _v is not None: write(_filter(_v, rawExpr='$day')) # from line 100, col 24.
+            write('''</label>
 \t\t\t</div>
 ''')
             i = VFFSL(SL,"i",True)+1
-        write(u'''\t</div>
+        write('''\t</div>
 \t<div class="row clearfix">
 \t\t<div class="col-sm-3">
 \t\t\t<label>''')
         _v = VFFSL(SL,"tstrings",True)['location'] # u"$tstrings['location']" on line 107, col 11
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['location']")) # from line 107, col 11.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['location']")) # from line 107, col 11.
+        write(''':</label>
 \t\t</div>
 \t\t<div class="col-sm-9">
 \t\t\t<select class="form-control show-tick" id="dirname" name="dirname" >
 \t\t\t\t<option value="None">''')
         _v = VFFSL(SL,"tstrings",True)['default'] # u"$tstrings['default']" on line 111, col 26
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['default']")) # from line 111, col 26.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['default']")) # from line 111, col 26.
+        write('''</option>
 \t\t\t</select>
 \t\t</div>
 \t</div>
@@ -271,28 +272,28 @@
 \t\t<div class="col-sm-3">
 \t\t\t<label>''')
         _v = VFFSL(SL,"tstrings",True)['after_event'] # u"$tstrings['after_event']" on line 117, col 11
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['after_event']")) # from line 117, col 11.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['after_event']")) # from line 117, col 11.
+        write(''':</label>
 \t\t</div>
 \t\t<div class="col-sm-9">
 \t\t\t<div class="form-group">
 \t\t\t<select class="form-control show-tick" id="afterevent" name="afterevent">
 \t\t\t<option value="0">''')
         _v = VFFSL(SL,"tstrings",True)['nothing'] # u"$tstrings['nothing']" on line 122, col 22
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['nothing']")) # from line 122, col 22.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['nothing']")) # from line 122, col 22.
+        write('''</option>
 \t\t\t<option value="1">''')
         _v = VFFSL(SL,"tstrings",True)['standby'] # u"$tstrings['standby']" on line 123, col 22
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['standby']")) # from line 123, col 22.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['standby']")) # from line 123, col 22.
+        write('''</option>
 \t\t\t<option value="2">''')
         _v = VFFSL(SL,"tstrings",True)['shutdown'] # u"$tstrings['shutdown']" on line 124, col 22
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['shutdown']")) # from line 124, col 22.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['shutdown']")) # from line 124, col 22.
+        write('''</option>
 \t\t\t<option value="3" selected="">''')
         _v = VFFSL(SL,"tstrings",True)['auto'] # u"$tstrings['auto']" on line 125, col 34
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['auto']")) # from line 125, col 34.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['auto']")) # from line 125, col 34.
+        write('''</option>
 \t\t\t</select>
 \t\t\t</div>
 \t\t</div>
@@ -304,16 +305,16 @@
 \t\t\t\t<input type="checkbox" name="vpsplugin_enabled" id="vpsplugin_enabled" value="0" />
 \t\t\t\t<label for="vpsplugin_enabled">''')
         _v = VFFSL(SL,"tstrings",True)['vps'] # u"$tstrings['vps']" on line 135, col 36
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['vps']")) # from line 135, col 36.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['vps']")) # from line 135, col 36.
+        write(''':</label>
 \t\t\t</div>
 \t\t\t<span id="has_vpsplugin2">
 \t\t\t\t<div class="col-sm-6">
 \t\t\t\t\t<input type="checkbox" name="vpsplugin_safemode" id="vpsplugin_safemode" value="0" />
 \t\t\t\t\t<label for="vpsplugin_safemode">''')
         _v = VFFSL(SL,"tstrings",True)['safe_mode'] # u"$tstrings['safe_mode']" on line 140, col 38
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['safe_mode']")) # from line 140, col 38.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['safe_mode']")) # from line 140, col 38.
+        write(''':</label>
 \t\t\t\t</div>
 \t\t\t</span>
 \t\t</div
@@ -323,8 +324,8 @@
 \t\t<div class="col-sm-3">
 \t\t\t<label>''')
         _v = VFFSL(SL,"tstrings",True)['tags'] # u"$tstrings['tags']" on line 148, col 11
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['tags']")) # from line 148, col 11.
-        write(u''':</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['tags']")) # from line 148, col 11.
+        write(''':</label>
 \t\t</div>
 \t\t<div class="col-sm-9">
 \t\t\t<span id="tagsnew" style="margin:5px"></span>
--- ./plugin/controllers/views/responsive/ajax/epgdialog.py	(original)
+++ ./plugin/controllers/views/responsive/ajax/epgdialog.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -62,7 +63,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -72,7 +73,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -85,14 +86,14 @@
         ########################################
         ## START - generated method body
         
-        write(u'''
+        write('''
 ''')
         if len(VFFSL(SL,"events",True)) == 0: # generated from line 5, col 1
-            write(u'''<img src="images/not_found.jpg" title="No items found" border="0" style="display:none;" id="ajpg">
+            write('''<img src="images/not_found.jpg" title="No items found" border="0" style="display:none;" id="ajpg">
 <img src="themes/not_found.png" title="No items found" border="0" onerror=\'$(this).hide();$("#ajpg").show();\'>
 ''')
         else: # generated from line 8, col 1
-            write(u'''
+            write('''
 <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
 \t<div class="card">
 \t\t<div class="header">
@@ -100,8 +101,8 @@
 \t\t\t\t<div class="col-xs-12 col-sm-6">
 \t\t\t\t\t<h2><i class="material-icons material-icons-centered">today</i>''')
             _v = VFFSL(SL,"tstrings",True)['epgsearch'] # u"$tstrings['epgsearch']" on line 15, col 69
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['epgsearch']")) # from line 15, col 69.
-            write(u'''</h2>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['epgsearch']")) # from line 15, col 69.
+            write('''</h2>
 \t\t\t\t</div>
 \t\t\t</div>
 \t\t</div>
@@ -114,31 +115,31 @@
                 channel = VFN(VFFSL(SL,"event.sname",True),"replace",False)("'", r"\'")
                 title = VFN(VFFSL(SL,"event.title",True),"replace",False)("'", r"\'")
                 sref = quote(VFFSL(SL,"event.sref",True), safe=' ~@#$&()*!+=:;,.?/\'')
-                write(u'''
+                write('''
 ''')
                 if VFFSL(SL,"MinEPGList",True) == 'checked': # generated from line 28, col 1
-                    write(u'''
+                    write('''
 <div class="row row-striped clearfix pad-top-15">
 \t<div class="col-xs-12 col-md-6">
 \t\t<div class="row">
 \t\t\t<div class="col-xs-3">
 \t\t\t\t<img src="''')
                     _v = VFFSL(SL,"event.picon",True) # u'$event.picon' on line 34, col 15
-                    if _v is not None: write(_filter(_v, rawExpr=u'$event.picon')) # from line 34, col 15.
-                    write(u'''" title="" class="img-responsive" style="width:80px;margin-top:-10px">
+                    if _v is not None: write(_filter(_v, rawExpr='$event.picon')) # from line 34, col 15.
+                    write('''" title="" class="img-responsive" style="width:80px;margin-top:-10px">
 \t\t\t\t\t</div>
 \t\t\t\t\t<div class="col-xs-9">
 \t\t\t\t\t\t<span data-toggle="collapse" data-target="#evenid''')
                     _v = VFFSL(SL,"dataid",True) # u'$dataid' on line 37, col 56
-                    if _v is not None: write(_filter(_v, rawExpr=u'$dataid')) # from line 37, col 56.
-                    write(u'''" aria-expanded="false"aria-controls="collapseExample" style="cursor:pointer;">
+                    if _v is not None: write(_filter(_v, rawExpr='$dataid')) # from line 37, col 56.
+                    write('''" aria-expanded="false"aria-controls="collapseExample" style="cursor:pointer;">
 \t\t\t\t\t\t<b>''')
                     _v = VFFSL(SL,"event.sname",True) # u'$event.sname' on line 38, col 10
-                    if _v is not None: write(_filter(_v, rawExpr=u'$event.sname')) # from line 38, col 10.
-                    write(u'''</b> - ''')
+                    if _v is not None: write(_filter(_v, rawExpr='$event.sname')) # from line 38, col 10.
+                    write('''</b> - ''')
                     _v = VFFSL(SL,"event.title",True) # u'$event.title' on line 38, col 29
-                    if _v is not None: write(_filter(_v, rawExpr=u'$event.title')) # from line 38, col 29.
-                    write(u'''<i class="material-icons material-icons-centered">expand_more</i>
+                    if _v is not None: write(_filter(_v, rawExpr='$event.title')) # from line 38, col 29.
+                    write('''<i class="material-icons material-icons-centered">expand_more</i>
 \t\t\t\t\t\t</span>
 \t\t\t\t\t</div>
 \t\t\t\t</div>
@@ -146,153 +147,153 @@
 \t\t\t<div class="col-xs-12 col-md-3">
 \t\t\t\t<span>''')
                     _v = VFFSL(SL,"event.date",True) # u'$event.date' on line 44, col 11
-                    if _v is not None: write(_filter(_v, rawExpr=u'$event.date')) # from line 44, col 11.
-                    write(u''' - ''')
+                    if _v is not None: write(_filter(_v, rawExpr='$event.date')) # from line 44, col 11.
+                    write(''' - ''')
                     _v = VFFSL(SL,"event.begin",True) # u'$event.begin' on line 44, col 25
-                    if _v is not None: write(_filter(_v, rawExpr=u'$event.begin')) # from line 44, col 25.
-                    write(u'''&nbsp;-&nbsp;''')
+                    if _v is not None: write(_filter(_v, rawExpr='$event.begin')) # from line 44, col 25.
+                    write('''&nbsp;-&nbsp;''')
                     _v = VFFSL(SL,"event.end",True) # u'$event.end' on line 44, col 50
-                    if _v is not None: write(_filter(_v, rawExpr=u'$event.end')) # from line 44, col 50.
-                    write(u'''&nbsp;(''')
+                    if _v is not None: write(_filter(_v, rawExpr='$event.end')) # from line 44, col 50.
+                    write('''&nbsp;(''')
                     _v = VFFSL(SL,"event.duration",True) # u'$event.duration' on line 44, col 67
-                    if _v is not None: write(_filter(_v, rawExpr=u'$event.duration')) # from line 44, col 67.
-                    write(u''' min.)</span>
+                    if _v is not None: write(_filter(_v, rawExpr='$event.duration')) # from line 44, col 67.
+                    write(''' min.)</span>
 \t\t\t</div>
 \t\t\t<div class="col-xs-12 col-md-3 align-right">
 \t\t\t\t<a class="theme-link-color theme-link-col-''')
                     _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 47, col 47
-                    if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 47, col 47.
-                    write(u'''" href="#" onclick="addTimerEvent(\'''')
+                    if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 47, col 47.
+                    write('''" href="#" onclick="addTimerEvent(\'''')
                     _v = VFFSL(SL,"sref",True) # u'$sref' on line 47, col 92
-                    if _v is not None: write(_filter(_v, rawExpr=u'$sref')) # from line 47, col 92.
-                    write(u"""',""")
+                    if _v is not None: write(_filter(_v, rawExpr='$sref')) # from line 47, col 92.
+                    write("""',""")
                     _v = VFFSL(SL,"event.id",True) # u'$event.id' on line 47, col 99
-                    if _v is not None: write(_filter(_v, rawExpr=u'$event.id')) # from line 47, col 99.
-                    write(u''',false);return false;" title="''')
+                    if _v is not None: write(_filter(_v, rawExpr='$event.id')) # from line 47, col 99.
+                    write(''',false);return false;" title="''')
                     _v = VFFSL(SL,"tstrings",True)['add_timer'] # u"$tstrings['add_timer']" on line 47, col 138
-                    if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['add_timer']")) # from line 47, col 138.
-                    write(u'''"><i class="material-icons material-icons-centered">alarm_add</i></a>
+                    if _v is not None: write(_filter(_v, rawExpr="$tstrings['add_timer']")) # from line 47, col 138.
+                    write('''"><i class="material-icons material-icons-centered">alarm_add</i></a>
 \t\t\t\t<a class="deltimer theme-link-color theme-link-col-''')
                     _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 48, col 56
-                    if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 48, col 56.
-                    write(u'''" href="#" onclick="delTimerEvent(\'''')
+                    if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 48, col 56.
+                    write('''" href="#" onclick="delTimerEvent(\'''')
                     _v = VFFSL(SL,"sref",True) # u'$sref' on line 48, col 101
-                    if _v is not None: write(_filter(_v, rawExpr=u'$sref')) # from line 48, col 101.
-                    write(u"""',""")
+                    if _v is not None: write(_filter(_v, rawExpr='$sref')) # from line 48, col 101.
+                    write("""',""")
                     _v = VFFSL(SL,"event.id",True) # u'$event.id' on line 48, col 108
-                    if _v is not None: write(_filter(_v, rawExpr=u'$event.id')) # from line 48, col 108.
-                    write(u''');return false;" title="''')
+                    if _v is not None: write(_filter(_v, rawExpr='$event.id')) # from line 48, col 108.
+                    write(''');return false;" title="''')
                     _v = VFFSL(SL,"tstrings",True)['delete_timer'] # u"$tstrings['delete_timer']" on line 48, col 141
-                    if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['delete_timer']")) # from line 48, col 141.
-                    write(u'''"></a>
+                    if _v is not None: write(_filter(_v, rawExpr="$tstrings['delete_timer']")) # from line 48, col 141.
+                    write('''"></a>
 \t\t\t\t<a href="#" class="theme-link-color theme-link-col-''')
                     _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 49, col 56
-                    if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 49, col 56.
-                    write(u'''" data-dismiss="modal" data-toggle="modal" data-target="#TimerModal" data-evid="''')
+                    if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 49, col 56.
+                    write('''" data-dismiss="modal" data-toggle="modal" data-target="#TimerModal" data-evid="''')
                     _v = VFFSL(SL,"event.id",True) # u'$event.id' on line 49, col 146
-                    if _v is not None: write(_filter(_v, rawExpr=u'$event.id')) # from line 49, col 146.
-                    write(u'''" data-ref="''')
+                    if _v is not None: write(_filter(_v, rawExpr='$event.id')) # from line 49, col 146.
+                    write('''" data-ref="''')
                     _v = VFFSL(SL,"sref",True) # u'$sref' on line 49, col 167
-                    if _v is not None: write(_filter(_v, rawExpr=u'$sref')) # from line 49, col 167.
-                    write(u'''" title="''')
+                    if _v is not None: write(_filter(_v, rawExpr='$sref')) # from line 49, col 167.
+                    write('''" title="''')
                     _v = VFFSL(SL,"tstrings",True)['edit_timer'] # u"$tstrings['edit_timer']" on line 49, col 181
-                    if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['edit_timer']")) # from line 49, col 181.
-                    write(u'''"><i class="material-icons material-icons-centered">alarm</i></a>
+                    if _v is not None: write(_filter(_v, rawExpr="$tstrings['edit_timer']")) # from line 49, col 181.
+                    write('''"><i class="material-icons material-icons-centered">alarm</i></a>
 \t\t\t\t<a href="#" class="theme-link-color theme-link-col-''')
                     _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 50, col 56
-                    if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 50, col 56.
-                    write(u'''" onclick="addTimerEvent(\'''')
+                    if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 50, col 56.
+                    write('''" onclick="addTimerEvent(\'''')
                     _v = VFFSL(SL,"sref",True) # u'$sref' on line 50, col 92
-                    if _v is not None: write(_filter(_v, rawExpr=u'$sref')) # from line 50, col 92.
-                    write(u"""',""")
+                    if _v is not None: write(_filter(_v, rawExpr='$sref')) # from line 50, col 92.
+                    write("""',""")
                     _v = VFFSL(SL,"event.id",True) # u'$event.id' on line 50, col 99
-                    if _v is not None: write(_filter(_v, rawExpr=u'$event.id')) # from line 50, col 99.
-                    write(u''',true);return false;" title="''')
+                    if _v is not None: write(_filter(_v, rawExpr='$event.id')) # from line 50, col 99.
+                    write(''',true);return false;" title="''')
                     _v = VFFSL(SL,"tstrings",True)['add_zaptimer'] # u"$tstrings['add_zaptimer']" on line 50, col 137
-                    if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['add_zaptimer']")) # from line 50, col 137.
-                    write(u'''"><i class="material-icons material-icons-centered">rotate_90_degrees_ccw</i></a>
+                    if _v is not None: write(_filter(_v, rawExpr="$tstrings['add_zaptimer']")) # from line 50, col 137.
+                    write('''"><i class="material-icons material-icons-centered">rotate_90_degrees_ccw</i></a>
 ''')
                     if VFFSL(SL,"at",True): # generated from line 51, col 4
-                        write(u'''\t\t\t\t<a href="#" class="theme-link-color theme-link-col-''')
+                        write('''\t\t\t\t<a href="#" class="theme-link-color theme-link-col-''')
                         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 52, col 56
-                        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 52, col 56.
-                        write(u'''" onclick="addAutoTimerEvent(\'''')
+                        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 52, col 56.
+                        write('''" onclick="addAutoTimerEvent(\'''')
                         _v = VFFSL(SL,"sref",True) # u'$sref' on line 52, col 96
-                        if _v is not None: write(_filter(_v, rawExpr=u'$sref')) # from line 52, col 96.
-                        write(u"""','""")
+                        if _v is not None: write(_filter(_v, rawExpr='$sref')) # from line 52, col 96.
+                        write("""','""")
                         _v = VFFSL(SL,"channel",True) # u'$channel' on line 52, col 104
-                        if _v is not None: write(_filter(_v, rawExpr=u'$channel')) # from line 52, col 104.
-                        write(u"""','""")
+                        if _v is not None: write(_filter(_v, rawExpr='$channel')) # from line 52, col 104.
+                        write("""','""")
                         _v = VFFSL(SL,"title",True) # u'$title' on line 52, col 115
-                        if _v is not None: write(_filter(_v, rawExpr=u'$title')) # from line 52, col 115.
-                        write(u"""','""")
+                        if _v is not None: write(_filter(_v, rawExpr='$title')) # from line 52, col 115.
+                        write("""','""")
                         _v = VFFSL(SL,"event.begin",True) # u'$event.begin' on line 52, col 124
-                        if _v is not None: write(_filter(_v, rawExpr=u'$event.begin')) # from line 52, col 124.
-                        write(u"""','""")
+                        if _v is not None: write(_filter(_v, rawExpr='$event.begin')) # from line 52, col 124.
+                        write("""','""")
                         _v = VFFSL(SL,"event.end",True) # u'$event.end' on line 52, col 139
-                        if _v is not None: write(_filter(_v, rawExpr=u'$event.end')) # from line 52, col 139.
-                        write(u'''\');return false;" title="''')
+                        if _v is not None: write(_filter(_v, rawExpr='$event.end')) # from line 52, col 139.
+                        write('''\');return false;" title="''')
                         _v = VFFSL(SL,"tstrings",True)['add_autotimer'] # u"$tstrings['add_autotimer']" on line 52, col 174
-                        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['add_autotimer']")) # from line 52, col 174.
-                        write(u'''"><i class="material-icons material-icons-centered">history</i></a>
+                        if _v is not None: write(_filter(_v, rawExpr="$tstrings['add_autotimer']")) # from line 52, col 174.
+                        write('''"><i class="material-icons material-icons-centered">history</i></a>
 ''')
                     if VFFSL(SL,"moviedb",True) == "Kinopoisk": # generated from line 54, col 4
-                        write(u'''\t\t\t\t<a href="#" class="theme-link-color theme-link-col-''')
+                        write('''\t\t\t\t<a href="#" class="theme-link-color theme-link-col-''')
                         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 55, col 56
-                        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 55, col 56.
-                        write(u'''" target="_blank" href="http://www.kinopoisk.ru/index.php?first=no&kp_query=''')
+                        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 55, col 56.
+                        write('''" target="_blank" href="http://www.kinopoisk.ru/index.php?first=no&kp_query=''')
                         _v = VFFSL(SL,"quote",False)(VFFSL(SL,"event.title",True)) # u'$quote($event.title)' on line 55, col 142
-                        if _v is not None: write(_filter(_v, rawExpr=u'$quote($event.title)')) # from line 55, col 142.
-                        write(u'''" title="''')
+                        if _v is not None: write(_filter(_v, rawExpr='$quote($event.title)')) # from line 55, col 142.
+                        write('''" title="''')
                         _v = VFFSL(SL,"tstrings",True)['search_kinopoisk'] # u"$tstrings['search_kinopoisk']" on line 55, col 171
-                        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['search_kinopoisk']")) # from line 55, col 171.
-                        write(u'''"></a>
+                        if _v is not None: write(_filter(_v, rawExpr="$tstrings['search_kinopoisk']")) # from line 55, col 171.
+                        write('''"></a>
 ''')
                     elif VFFSL(SL,"moviedb",True) == "CSFD": # generated from line 56, col 4
-                        write(u'''\t\t\t\t<a href="#" class="theme-link-color theme-link-col-''')
+                        write('''\t\t\t\t<a href="#" class="theme-link-color theme-link-col-''')
                         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 57, col 56
-                        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 57, col 56.
-                        write(u'''" target="_blank" href="http://www.imdb.com/find?s=all&amp;q=''')
+                        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 57, col 56.
+                        write('''" target="_blank" href="http://www.imdb.com/find?s=all&amp;q=''')
                         _v = VFFSL(SL,"quote",False)(VFFSL(SL,"event.title",True)) # u'$quote($event.title)' on line 57, col 127
-                        if _v is not None: write(_filter(_v, rawExpr=u'$quote($event.title)')) # from line 57, col 127.
-                        write(u'''" title="''')
+                        if _v is not None: write(_filter(_v, rawExpr='$quote($event.title)')) # from line 57, col 127.
+                        write('''" title="''')
                         _v = VFFSL(SL,"tstrings",True)['search_imdb'] # u"$tstrings['search_imdb']" on line 57, col 156
-                        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['search_imdb']")) # from line 57, col 156.
-                        write(u'''"><b>IMDb</b></a>
+                        if _v is not None: write(_filter(_v, rawExpr="$tstrings['search_imdb']")) # from line 57, col 156.
+                        write('''"><b>IMDb</b></a>
 ''')
                     else: # generated from line 58, col 4
-                        write(u'''\t\t\t\t<a href="#" class="theme-link-color theme-link-col-''')
+                        write('''\t\t\t\t<a href="#" class="theme-link-color theme-link-col-''')
                         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 59, col 56
-                        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 59, col 56.
-                        write(u'''" target="_blank" href="https://www.csfd.cz/hledat/?q=''')
+                        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 59, col 56.
+                        write('''" target="_blank" href="https://www.csfd.cz/hledat/?q=''')
                         _v = VFFSL(SL,"event.title",True) # u'$event.title' on line 59, col 120
-                        if _v is not None: write(_filter(_v, rawExpr=u'$event.title')) # from line 59, col 120.
-                        write(u'''" title="''')
+                        if _v is not None: write(_filter(_v, rawExpr='$event.title')) # from line 59, col 120.
+                        write('''" title="''')
                         _v = VFFSL(SL,"tstrings",True)['search_imdb'] # u"$tstrings['search_imdb']" on line 59, col 141
-                        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['search_imdb']")) # from line 59, col 141.
-                        write(u'''"><b>csfd</b></a>
-''')
-                    write(u'''\t\t\t</div>
+                        if _v is not None: write(_filter(_v, rawExpr="$tstrings['search_imdb']")) # from line 59, col 141.
+                        write('''"><b>csfd</b></a>
+''')
+                    write('''\t\t\t</div>
 \t\t\t<div class="col-xs-12 collapse" id="evenid''')
                     _v = VFFSL(SL,"dataid",True) # u'$dataid' on line 62, col 46
-                    if _v is not None: write(_filter(_v, rawExpr=u'$dataid')) # from line 62, col 46.
-                    write(u'''">
+                    if _v is not None: write(_filter(_v, rawExpr='$dataid')) # from line 62, col 46.
+                    write('''">
 \t\t\t<p><b>''')
                     _v = VFFSL(SL,"event.shortdesc",True) # u'$event.shortdesc' on line 63, col 10
-                    if _v is not None: write(_filter(_v, rawExpr=u'$event.shortdesc')) # from line 63, col 10.
-                    write(u'''</b>
+                    if _v is not None: write(_filter(_v, rawExpr='$event.shortdesc')) # from line 63, col 10.
+                    write('''</b>
 \t\t\t<br>
 \t\t\t''')
                     _v = VFN(VFN(VFFSL(SL,"event.longdesc",True),"replace",False)('\n',r'<br/>'),"replace",False)('\8a',r'<br/>') # u"$event.longdesc.replace('\\n',r'<br/>').replace('\\8a',r'<br/>')" on line 65, col 4
-                    if _v is not None: write(_filter(_v, rawExpr=u"$event.longdesc.replace('\\n',r'<br/>').replace('\\8a',r'<br/>')")) # from line 65, col 4.
-                    write(u'''
+                    if _v is not None: write(_filter(_v, rawExpr="$event.longdesc.replace('\\n',r'<br/>').replace('\\8a',r'<br/>')")) # from line 65, col 4.
+                    write('''
 \t\t\t</p>
 \t\t</div>
 \t</div>
 
 ''')
                 else: # generated from line 70, col 1
-                    write(u'''
+                    write('''
 <div class="row clearfix">
 \t<div class="col-xs-12">
 \t\t<div class="card" style="margin-bottom:-25px;">
@@ -301,168 +302,168 @@
 \t\t\t\t\t<div class="col-xs-12 col-md-2" style="margin-bottom:-10px;">
 \t\t\t\t\t\t<img src="''')
                     _v = VFFSL(SL,"event.picon",True) # u'$event.picon' on line 78, col 17
-                    if _v is not None: write(_filter(_v, rawExpr=u'$event.picon')) # from line 78, col 17.
-                    write(u'''" title="" class="img-responsive" style="width:100px;">
+                    if _v is not None: write(_filter(_v, rawExpr='$event.picon')) # from line 78, col 17.
+                    write('''" title="" class="img-responsive" style="width:100px;">
 \t\t\t\t\t\t<label>''')
                     _v = VFFSL(SL,"event.sname",True) # u'$event.sname' on line 79, col 14
-                    if _v is not None: write(_filter(_v, rawExpr=u'$event.sname')) # from line 79, col 14.
-                    write(u'''</label>
+                    if _v is not None: write(_filter(_v, rawExpr='$event.sname')) # from line 79, col 14.
+                    write('''</label>
 ''')
                     if 'ns' in VFFSL(SL,"event",True): # generated from line 80, col 7
-                        write(u'''\t\t\t\t\t\t\t<br />
+                        write('''\t\t\t\t\t\t\t<br />
 \t\t\t\t\t\t\t<span>
 ''')
                         if '4097:' in VFFSL(SL,"event.sref",True) or '5002:' in VFFSL(SL,"event.sref",True) or 'http%3a' in VFFSL(SL,"event.sref",True) or 'https%3a' in VFFSL(SL,"event.sref",True): # generated from line 83, col 8
-                            write(u'''\t\t\t\t\t\t\t\tIPTV
+                            write('''\t\t\t\t\t\t\t\tIPTV
 ''')
                         else: # generated from line 85, col 8
-                            write(u'''\t\t\t\t\t\t\t\t''')
+                            write('''\t\t\t\t\t\t\t\t''')
                             _v = VFFSL(SL,"event.service_type",True) # u'$event.service_type' on line 86, col 9
-                            if _v is not None: write(_filter(_v, rawExpr=u'$event.service_type')) # from line 86, col 9.
-                            write(u''' / ''')
+                            if _v is not None: write(_filter(_v, rawExpr='$event.service_type')) # from line 86, col 9.
+                            write(''' / ''')
                             _v = VFFSL(SL,"event.ns",True) # u'$event.ns' on line 86, col 31
-                            if _v is not None: write(_filter(_v, rawExpr=u'$event.ns')) # from line 86, col 31.
-                            write(u'''
-''')
-                        write(u'''\t\t\t\t\t\t\t</span>
-''')
-                    write(u'''\t\t\t\t\t\t</div>
+                            if _v is not None: write(_filter(_v, rawExpr='$event.ns')) # from line 86, col 31.
+                            write('''
+''')
+                        write('''\t\t\t\t\t\t\t</span>
+''')
+                    write('''\t\t\t\t\t\t</div>
 \t\t\t\t\t\t<div class="col-xs-12 col-md-6" style="word-break: break-all">
 \t\t\t\t\t\t<h2><i class="material-icons material-icons-centered">event</i><b>''')
                     _v = VFFSL(SL,"event.title",True) # u'$event.title' on line 92, col 73
-                    if _v is not None: write(_filter(_v, rawExpr=u'$event.title')) # from line 92, col 73.
-                    write(u'''</b></h2>
+                    if _v is not None: write(_filter(_v, rawExpr='$event.title')) # from line 92, col 73.
+                    write('''</b></h2>
 \t\t\t\t\t\t<div>
 \t\t\t\t\t\t<a class="theme-link-color theme-link-col-''')
                     _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 94, col 49
-                    if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 94, col 49.
-                    write(u'''" href="#" onclick="addTimerEvent(\'''')
+                    if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 94, col 49.
+                    write('''" href="#" onclick="addTimerEvent(\'''')
                     _v = VFFSL(SL,"sref",True) # u'$sref' on line 94, col 94
-                    if _v is not None: write(_filter(_v, rawExpr=u'$sref')) # from line 94, col 94.
-                    write(u"""',""")
+                    if _v is not None: write(_filter(_v, rawExpr='$sref')) # from line 94, col 94.
+                    write("""',""")
                     _v = VFFSL(SL,"event.id",True) # u'$event.id' on line 94, col 101
-                    if _v is not None: write(_filter(_v, rawExpr=u'$event.id')) # from line 94, col 101.
-                    write(u''',false);return false;" title="''')
+                    if _v is not None: write(_filter(_v, rawExpr='$event.id')) # from line 94, col 101.
+                    write(''',false);return false;" title="''')
                     _v = VFFSL(SL,"tstrings",True)['add_timer'] # u"$tstrings['add_timer']" on line 94, col 140
-                    if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['add_timer']")) # from line 94, col 140.
-                    write(u'''"><i class="material-icons material-icons-centered">alarm_add</i></a>
+                    if _v is not None: write(_filter(_v, rawExpr="$tstrings['add_timer']")) # from line 94, col 140.
+                    write('''"><i class="material-icons material-icons-centered">alarm_add</i></a>
 \t\t\t\t\t\t<a class="deltimer theme-link-color theme-link-col-''')
                     _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 95, col 58
-                    if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 95, col 58.
-                    write(u'''" href="#" onclick="delTimerEvent(\'''')
+                    if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 95, col 58.
+                    write('''" href="#" onclick="delTimerEvent(\'''')
                     _v = VFFSL(SL,"sref",True) # u'$sref' on line 95, col 103
-                    if _v is not None: write(_filter(_v, rawExpr=u'$sref')) # from line 95, col 103.
-                    write(u"""',""")
+                    if _v is not None: write(_filter(_v, rawExpr='$sref')) # from line 95, col 103.
+                    write("""',""")
                     _v = VFFSL(SL,"event.id",True) # u'$event.id' on line 95, col 110
-                    if _v is not None: write(_filter(_v, rawExpr=u'$event.id')) # from line 95, col 110.
-                    write(u''');return false;" title="''')
+                    if _v is not None: write(_filter(_v, rawExpr='$event.id')) # from line 95, col 110.
+                    write(''');return false;" title="''')
                     _v = VFFSL(SL,"tstrings",True)['delete_timer'] # u"$tstrings['delete_timer']" on line 95, col 143
-                    if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['delete_timer']")) # from line 95, col 143.
-                    write(u'''"></a>
+                    if _v is not None: write(_filter(_v, rawExpr="$tstrings['delete_timer']")) # from line 95, col 143.
+                    write('''"></a>
 \t\t\t\t\t\t<a href="#" class="theme-link-color theme-link-col-''')
                     _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 96, col 58
-                    if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 96, col 58.
-                    write(u'''" data-dismiss="modal" data-toggle="modal" data-target="#TimerModal" data-evid="''')
+                    if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 96, col 58.
+                    write('''" data-dismiss="modal" data-toggle="modal" data-target="#TimerModal" data-evid="''')
                     _v = VFFSL(SL,"event.id",True) # u'$event.id' on line 96, col 148
-                    if _v is not None: write(_filter(_v, rawExpr=u'$event.id')) # from line 96, col 148.
-                    write(u'''" data-ref="''')
+                    if _v is not None: write(_filter(_v, rawExpr='$event.id')) # from line 96, col 148.
+                    write('''" data-ref="''')
                     _v = VFFSL(SL,"sref",True) # u'$sref' on line 96, col 169
-                    if _v is not None: write(_filter(_v, rawExpr=u'$sref')) # from line 96, col 169.
-                    write(u'''" title="''')
+                    if _v is not None: write(_filter(_v, rawExpr='$sref')) # from line 96, col 169.
+                    write('''" title="''')
                     _v = VFFSL(SL,"tstrings",True)['edit_timer'] # u"$tstrings['edit_timer']" on line 96, col 183
-                    if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['edit_timer']")) # from line 96, col 183.
-                    write(u'''"><i class="material-icons material-icons-centered">alarm</i></a>
+                    if _v is not None: write(_filter(_v, rawExpr="$tstrings['edit_timer']")) # from line 96, col 183.
+                    write('''"><i class="material-icons material-icons-centered">alarm</i></a>
 \t\t\t\t\t\t<a href="#" class="theme-link-color theme-link-col-''')
                     _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 97, col 58
-                    if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 97, col 58.
-                    write(u'''" onclick="addTimerEvent(\'''')
+                    if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 97, col 58.
+                    write('''" onclick="addTimerEvent(\'''')
                     _v = VFFSL(SL,"sref",True) # u'$sref' on line 97, col 94
-                    if _v is not None: write(_filter(_v, rawExpr=u'$sref')) # from line 97, col 94.
-                    write(u"""',""")
+                    if _v is not None: write(_filter(_v, rawExpr='$sref')) # from line 97, col 94.
+                    write("""',""")
                     _v = VFFSL(SL,"event.id",True) # u'$event.id' on line 97, col 101
-                    if _v is not None: write(_filter(_v, rawExpr=u'$event.id')) # from line 97, col 101.
-                    write(u''',true);return false;" title="''')
+                    if _v is not None: write(_filter(_v, rawExpr='$event.id')) # from line 97, col 101.
+                    write(''',true);return false;" title="''')
                     _v = VFFSL(SL,"tstrings",True)['add_zaptimer'] # u"$tstrings['add_zaptimer']" on line 97, col 139
-                    if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['add_zaptimer']")) # from line 97, col 139.
-                    write(u'''"><i class="material-icons material-icons-centered">rotate_90_degrees_ccw</i></a>
+                    if _v is not None: write(_filter(_v, rawExpr="$tstrings['add_zaptimer']")) # from line 97, col 139.
+                    write('''"><i class="material-icons material-icons-centered">rotate_90_degrees_ccw</i></a>
 ''')
                     if VFFSL(SL,"at",True): # generated from line 98, col 6
-                        write(u'''\t\t\t\t\t\t<a href="#" class="theme-link-color theme-link-col-''')
+                        write('''\t\t\t\t\t\t<a href="#" class="theme-link-color theme-link-col-''')
                         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 99, col 58
-                        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 99, col 58.
-                        write(u'''" onclick="addAutoTimerEvent(\'''')
+                        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 99, col 58.
+                        write('''" onclick="addAutoTimerEvent(\'''')
                         _v = VFFSL(SL,"sref",True) # u'$sref' on line 99, col 98
-                        if _v is not None: write(_filter(_v, rawExpr=u'$sref')) # from line 99, col 98.
-                        write(u"""','""")
+                        if _v is not None: write(_filter(_v, rawExpr='$sref')) # from line 99, col 98.
+                        write("""','""")
                         _v = VFFSL(SL,"channel",True) # u'$channel' on line 99, col 106
-                        if _v is not None: write(_filter(_v, rawExpr=u'$channel')) # from line 99, col 106.
-                        write(u"""','""")
+                        if _v is not None: write(_filter(_v, rawExpr='$channel')) # from line 99, col 106.
+                        write("""','""")
                         _v = VFFSL(SL,"title",True) # u'$title' on line 99, col 117
-                        if _v is not None: write(_filter(_v, rawExpr=u'$title')) # from line 99, col 117.
-                        write(u"""','""")
+                        if _v is not None: write(_filter(_v, rawExpr='$title')) # from line 99, col 117.
+                        write("""','""")
                         _v = VFFSL(SL,"event.begin",True) # u'$event.begin' on line 99, col 126
-                        if _v is not None: write(_filter(_v, rawExpr=u'$event.begin')) # from line 99, col 126.
-                        write(u"""','""")
+                        if _v is not None: write(_filter(_v, rawExpr='$event.begin')) # from line 99, col 126.
+                        write("""','""")
                         _v = VFFSL(SL,"event.end",True) # u'$event.end' on line 99, col 141
-                        if _v is not None: write(_filter(_v, rawExpr=u'$event.end')) # from line 99, col 141.
-                        write(u'''\');return false;" title="''')
+                        if _v is not None: write(_filter(_v, rawExpr='$event.end')) # from line 99, col 141.
+                        write('''\');return false;" title="''')
                         _v = VFFSL(SL,"tstrings",True)['add_autotimer'] # u"$tstrings['add_autotimer']" on line 99, col 176
-                        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['add_autotimer']")) # from line 99, col 176.
-                        write(u'''"><i class="material-icons material-icons-centered">history</i></a>
+                        if _v is not None: write(_filter(_v, rawExpr="$tstrings['add_autotimer']")) # from line 99, col 176.
+                        write('''"><i class="material-icons material-icons-centered">history</i></a>
 ''')
                     if VFFSL(SL,"moviedb",True) == "Kinopoisk": # generated from line 101, col 6
-                        write(u'''\t\t\t\t\t\t<a href="#" class="theme-link-color theme-link-col-''')
+                        write('''\t\t\t\t\t\t<a href="#" class="theme-link-color theme-link-col-''')
                         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 102, col 58
-                        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 102, col 58.
-                        write(u'''" target="_blank" href="http://www.kinopoisk.ru/index.php?first=no&kp_query=''')
+                        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 102, col 58.
+                        write('''" target="_blank" href="http://www.kinopoisk.ru/index.php?first=no&kp_query=''')
                         _v = VFFSL(SL,"quote",False)(VFFSL(SL,"event.title",True)) # u'$quote($event.title)' on line 102, col 144
-                        if _v is not None: write(_filter(_v, rawExpr=u'$quote($event.title)')) # from line 102, col 144.
-                        write(u'''" title="''')
+                        if _v is not None: write(_filter(_v, rawExpr='$quote($event.title)')) # from line 102, col 144.
+                        write('''" title="''')
                         _v = VFFSL(SL,"tstrings",True)['search_kinopoisk'] # u"$tstrings['search_kinopoisk']" on line 102, col 173
-                        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['search_kinopoisk']")) # from line 102, col 173.
-                        write(u'''"></a>
+                        if _v is not None: write(_filter(_v, rawExpr="$tstrings['search_kinopoisk']")) # from line 102, col 173.
+                        write('''"></a>
 ''')
                     elif VFFSL(SL,"moviedb",True) == "CSFD": # generated from line 103, col 6
-                        write(u'''\t\t\t\t\t\t<a href="#" class="theme-link-color theme-link-col-''')
+                        write('''\t\t\t\t\t\t<a href="#" class="theme-link-color theme-link-col-''')
                         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 104, col 58
-                        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 104, col 58.
-                        write(u'''" target="_blank" href="https://www.csfd.cz/hledat/?q=''')
+                        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 104, col 58.
+                        write('''" target="_blank" href="https://www.csfd.cz/hledat/?q=''')
                         _v = VFFSL(SL,"event.title",True) # u'$event.title' on line 104, col 122
-                        if _v is not None: write(_filter(_v, rawExpr=u'$event.title')) # from line 104, col 122.
-                        write(u'''" title="''')
+                        if _v is not None: write(_filter(_v, rawExpr='$event.title')) # from line 104, col 122.
+                        write('''" title="''')
                         _v = VFFSL(SL,"tstrings",True)['search_csfd'] # u"$tstrings['search_csfd']" on line 104, col 143
-                        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['search_csfd']")) # from line 104, col 143.
-                        write(u'''"><b>csfd</b></a>
+                        if _v is not None: write(_filter(_v, rawExpr="$tstrings['search_csfd']")) # from line 104, col 143.
+                        write('''"><b>csfd</b></a>
 ''')
                     else: # generated from line 105, col 6
-                        write(u'''\t\t\t\t\t\t<a href="#" class="theme-link-color theme-link-col-''')
+                        write('''\t\t\t\t\t\t<a href="#" class="theme-link-color theme-link-col-''')
                         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 106, col 58
-                        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 106, col 58.
-                        write(u'''" target="_blank" href="http://www.imdb.com/find?s=all&amp;q=''')
+                        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 106, col 58.
+                        write('''" target="_blank" href="http://www.imdb.com/find?s=all&amp;q=''')
                         _v = VFFSL(SL,"quote",False)(VFFSL(SL,"event.title",True)) # u'$quote($event.title)' on line 106, col 129
-                        if _v is not None: write(_filter(_v, rawExpr=u'$quote($event.title)')) # from line 106, col 129.
-                        write(u'''" title="''')
+                        if _v is not None: write(_filter(_v, rawExpr='$quote($event.title)')) # from line 106, col 129.
+                        write('''" title="''')
                         _v = VFFSL(SL,"tstrings",True)['search_imdb'] # u"$tstrings['search_imdb']" on line 106, col 158
-                        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['search_imdb']")) # from line 106, col 158.
-                        write(u'''"><b>IMDb</b></a>
-''')
-                    write(u'''\t\t\t\t\t</div>
+                        if _v is not None: write(_filter(_v, rawExpr="$tstrings['search_imdb']")) # from line 106, col 158.
+                        write('''"><b>IMDb</b></a>
+''')
+                    write('''\t\t\t\t\t</div>
 \t\t\t\t</div>
 \t\t\t\t<div class="col-xs-12 col-md-4 align-right" style="word-break: break-all">
 \t\t\t\t<h2>''')
                     _v = VFFSL(SL,"event.date",True) # u'$event.date' on line 111, col 9
-                    if _v is not None: write(_filter(_v, rawExpr=u'$event.date')) # from line 111, col 9.
-                    write(u'''</h2>
+                    if _v is not None: write(_filter(_v, rawExpr='$event.date')) # from line 111, col 9.
+                    write('''</h2>
 \t\t\t\t<span>''')
                     _v = VFFSL(SL,"event.begin",True) # u'$event.begin' on line 112, col 11
-                    if _v is not None: write(_filter(_v, rawExpr=u'$event.begin')) # from line 112, col 11.
-                    write(u'''&nbsp;-&nbsp;''')
+                    if _v is not None: write(_filter(_v, rawExpr='$event.begin')) # from line 112, col 11.
+                    write('''&nbsp;-&nbsp;''')
                     _v = VFFSL(SL,"event.end",True) # u'$event.end' on line 112, col 36
-                    if _v is not None: write(_filter(_v, rawExpr=u'$event.end')) # from line 112, col 36.
-                    write(u'''&nbsp;(''')
+                    if _v is not None: write(_filter(_v, rawExpr='$event.end')) # from line 112, col 36.
+                    write('''&nbsp;(''')
                     _v = VFFSL(SL,"event.duration",True) # u'$event.duration' on line 112, col 53
-                    if _v is not None: write(_filter(_v, rawExpr=u'$event.duration')) # from line 112, col 53.
-                    write(u''' min.)</span>
+                    if _v is not None: write(_filter(_v, rawExpr='$event.duration')) # from line 112, col 53.
+                    write(''' min.)</span>
 \t\t\t\t</div>
 \t\t\t</div>
 \t\t</div>
@@ -471,32 +472,32 @@
 \t\t\t\t<div class="col-xs-12">
 ''')
                     if VFFSL(SL,"event.longdesc",True) != '': # generated from line 119, col 5
-                        write(u'''\t\t\t\t<span data-toggle="collapse" data-target="#evenid''')
+                        write('''\t\t\t\t<span data-toggle="collapse" data-target="#evenid''')
                         _v = VFFSL(SL,"dataid",True) # u'$dataid' on line 120, col 54
-                        if _v is not None: write(_filter(_v, rawExpr=u'$dataid')) # from line 120, col 54.
-                        write(u'''" aria-expanded="false"aria-controls="collapseExample" style="cursor:pointer;">
+                        if _v is not None: write(_filter(_v, rawExpr='$dataid')) # from line 120, col 54.
+                        write('''" aria-expanded="false"aria-controls="collapseExample" style="cursor:pointer;">
 \t\t\t\t<b>''')
                         _v = VFFSL(SL,"event.shortdesc",True) # u'$event.shortdesc' on line 121, col 8
-                        if _v is not None: write(_filter(_v, rawExpr=u'$event.shortdesc')) # from line 121, col 8.
-                        write(u'''</b>
+                        if _v is not None: write(_filter(_v, rawExpr='$event.shortdesc')) # from line 121, col 8.
+                        write('''</b>
 \t\t\t\t<i class="material-icons material-icons-centered">expand_more</i></span>
 \t\t\t\t<div class="collapse" id="evenid''')
                         _v = VFFSL(SL,"dataid",True) # u'$dataid' on line 123, col 37
-                        if _v is not None: write(_filter(_v, rawExpr=u'$dataid')) # from line 123, col 37.
-                        write(u'''">
+                        if _v is not None: write(_filter(_v, rawExpr='$dataid')) # from line 123, col 37.
+                        write('''">
 \t\t\t\t<p>''')
                         _v = VFN(VFN(VFFSL(SL,"event.longdesc",True),"replace",False)('\n',r'<br/>'),"replace",False)('\8a',r'<br/>') # u"$event.longdesc.replace('\\n',r'<br/>').replace('\\8a',r'<br/>')" on line 124, col 8
-                        if _v is not None: write(_filter(_v, rawExpr=u"$event.longdesc.replace('\\n',r'<br/>').replace('\\8a',r'<br/>')")) # from line 124, col 8.
-                        write(u'''</p>
+                        if _v is not None: write(_filter(_v, rawExpr="$event.longdesc.replace('\\n',r'<br/>').replace('\\8a',r'<br/>')")) # from line 124, col 8.
+                        write('''</p>
 \t\t\t\t</div>
 ''')
                     else: # generated from line 126, col 5
-                        write(u'''\t\t\t\t<span><b>''')
+                        write('''\t\t\t\t<span><b>''')
                         _v = VFFSL(SL,"event.shortdesc",True) # u'$event.shortdesc' on line 127, col 14
-                        if _v is not None: write(_filter(_v, rawExpr=u'$event.shortdesc')) # from line 127, col 14.
-                        write(u'''</b></span>
-''')
-                    write(u'''\t\t\t</div>
+                        if _v is not None: write(_filter(_v, rawExpr='$event.shortdesc')) # from line 127, col 14.
+                        write('''</b></span>
+''')
+                    write('''\t\t\t</div>
 \t\t</div>
 \t</div>
 </div>
@@ -504,10 +505,10 @@
 </div>
 
 ''')
-                write(u'''
+                write('''
 ''')
                 dataid = VFFSL(SL,"dataid",True)+1
-            write(u'''\t\t</div>
+            write('''\t\t</div>
 \t</div>
 \t</div>
 
@@ -515,18 +516,18 @@
 var t = [
 ''')
             for timer in VFFSL(SL,"timers",True): # generated from line 146, col 1
-                write(u"""\t{'begin':""")
+                write("""\t{'begin':""")
                 _v = VFFSL(SL,"timer.begin",True) # u'$timer.begin' on line 147, col 11
-                if _v is not None: write(_filter(_v, rawExpr=u'$timer.begin')) # from line 147, col 11.
-                write(u""",'end':""")
+                if _v is not None: write(_filter(_v, rawExpr='$timer.begin')) # from line 147, col 11.
+                write(""",'end':""")
                 _v = VFFSL(SL,"timer.end",True) # u'$timer.end' on line 147, col 30
-                if _v is not None: write(_filter(_v, rawExpr=u'$timer.end')) # from line 147, col 30.
-                write(u""",'sref':'""")
+                if _v is not None: write(_filter(_v, rawExpr='$timer.end')) # from line 147, col 30.
+                write(""",'sref':'""")
                 _v = VFFSL(SL,"timer.serviceref",True) # u'$timer.serviceref' on line 147, col 49
-                if _v is not None: write(_filter(_v, rawExpr=u'$timer.serviceref')) # from line 147, col 49.
-                write(u"""'},
+                if _v is not None: write(_filter(_v, rawExpr='$timer.serviceref')) # from line 147, col 49.
+                write("""'},
 """)
-            write(u'''];
+            write('''];
 var reloadTimers = true;
 $(function() {
 \t$(\'#editTimerForm\').load(\'ajax/edittimer\');
--- ./plugin/controllers/views/responsive/ajax/epgr.py	(original)
+++ ./plugin/controllers/views/responsive/ajax/epgr.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -61,7 +62,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -71,7 +72,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -85,13 +86,13 @@
         ## START - generated method body
         
         _orig_filter_57236971 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''
+        write('''
 <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
 \t<div class="card">
 \t\t<div class="header">
@@ -113,12 +114,12 @@
 \t\t\t\t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t\t\t\t<label>''')
         _v = VFFSL(SL,"tstrings",True)['er_enabled'] # u"$tstrings['er_enabled']" on line 24, col 16
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['er_enabled']")) # from line 24, col 16.
-        write(u''':&nbsp;</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['er_enabled']")) # from line 24, col 16.
+        write(''':&nbsp;</label>
 \t\t\t\t\t\t\t\t<input type="checkbox" id="er_enabled" class="form-control chk-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 25, col 76
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 25, col 76.
-        write(u'''" value="">
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 25, col 76.
+        write('''" value="">
 \t\t\t\t\t\t\t\t<label for="er_enabled">&nbsp;</label>
 \t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t</div>
@@ -128,12 +129,12 @@
 \t\t\t\t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t\t\t\t<label>''')
         _v = VFFSL(SL,"tstrings",True)['er_enable_messages'] # u"$tstrings['er_enable_messages']" on line 33, col 16
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['er_enable_messages']")) # from line 33, col 16.
-        write(u''':&nbsp;</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['er_enable_messages']")) # from line 33, col 16.
+        write(''':&nbsp;</label>
 \t\t\t\t\t\t\t\t<input type="checkbox" id="er_enablemessage" class="form-control chk-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 34, col 82
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 34, col 82.
-        write(u'''" value="">
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 34, col 82.
+        write('''" value="">
 \t\t\t\t\t\t\t\t<label for="er_enablemessage">&nbsp;</label>
 \t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t</div>
@@ -143,25 +144,25 @@
 \t\t\t\t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t\t\t\t<label>''')
         _v = VFFSL(SL,"tstrings",True)['er_adapter'] # u"$tstrings['er_adapter']" on line 42, col 16
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['er_adapter']")) # from line 42, col 16.
-        write(u''':&nbsp;</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['er_adapter']")) # from line 42, col 16.
+        write(''':&nbsp;</label>
 \t\t\t\t\t\t\t\t<select id="er_adapter" class="form-control" value="">
 \t\t\t\t\t\t\t\t\t<option value="main" selected="selected">''')
         _v = VFFSL(SL,"tstrings",True)['er_main'] # u"$tstrings['er_main']" on line 44, col 51
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['er_main']")) # from line 44, col 51.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['er_main']")) # from line 44, col 51.
+        write('''</option>
 \t\t\t\t\t\t\t\t\t<option value="pip">''')
         _v = VFFSL(SL,"tstrings",True)['er_pip'] # u"$tstrings['er_pip']" on line 45, col 30
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['er_pip']")) # from line 45, col 30.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['er_pip']")) # from line 45, col 30.
+        write('''</option>
 \t\t\t\t\t\t\t\t\t<option value="pip_hidden">''')
         _v = VFFSL(SL,"tstrings",True)['er_pip_hidden'] # u"$tstrings['er_pip_hidden']" on line 46, col 37
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['er_pip_hidden']")) # from line 46, col 37.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['er_pip_hidden']")) # from line 46, col 37.
+        write('''</option>
 \t\t\t\t\t\t\t\t\t<option value="record">''')
         _v = VFFSL(SL,"tstrings",True)['er_fake_recording'] # u"$tstrings['er_fake_recording']" on line 47, col 33
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['er_fake_recording']")) # from line 47, col 33.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['er_fake_recording']")) # from line 47, col 33.
+        write('''</option>
 \t\t\t\t\t\t\t\t</select>
 \t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t</div>
@@ -173,8 +174,8 @@
 \t\t\t\t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t\t\t\t<label>''')
         _v = VFFSL(SL,"tstrings",True)['er_begin'] # u"$tstrings['er_begin']" on line 57, col 16
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['er_begin']")) # from line 57, col 16.
-        write(u''':&nbsp;</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['er_begin']")) # from line 57, col 16.
+        write(''':&nbsp;</label>
 \t\t\t\t\t\t\t\t<div class="input-group">
 \t\t\t\t\t\t\t\t\t<span class="input-group-addon">
 \t\t\t\t\t\t\t\t\t\t<i class="material-icons">access_time</i>
@@ -191,8 +192,8 @@
 \t\t\t\t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t\t\t\t<label>''')
         _v = VFFSL(SL,"tstrings",True)['er_end'] # u"$tstrings['er_end']" on line 72, col 16
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['er_end']")) # from line 72, col 16.
-        write(u''':&nbsp;</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['er_end']")) # from line 72, col 16.
+        write(''':&nbsp;</label>
 \t\t\t\t\t\t\t\t<div class="input-group">
 \t\t\t\t\t\t\t\t\t<span class="input-group-addon">
 \t\t\t\t\t\t\t\t\t\t<i class="material-icons">access_time</i>
@@ -209,8 +210,8 @@
 \t\t\t\t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t\t\t\t<label>''')
         _v = VFFSL(SL,"tstrings",True)['er_delay_standby'] # u"$tstrings['er_delay_standby']" on line 87, col 16
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['er_delay_standby']")) # from line 87, col 16.
-        write(u''':&nbsp;</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['er_delay_standby']")) # from line 87, col 16.
+        write(''':&nbsp;</label>
 \t\t\t\t\t\t\t\t<div class="form-line">
 \t\t\t\t\t\t\t\t\t<input type="text" id="er_delay_standby" class="form-control" placeholder="10">
 \t\t\t\t\t\t\t\t</div>
@@ -224,8 +225,8 @@
 \t\t\t\t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t\t\t\t<label>''')
         _v = VFFSL(SL,"tstrings",True)['er_interval_sec'] # u"$tstrings['er_interval_sec']" on line 99, col 16
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['er_interval_sec']")) # from line 99, col 16.
-        write(u''':&nbsp;</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['er_interval_sec']")) # from line 99, col 16.
+        write(''':&nbsp;</label>
 \t\t\t\t\t\t\t\t<div class="form-line">
 \t\t\t\t\t\t\t\t\t<input type="text" id="er_interval" class="form-control" placeholder="10">
 \t\t\t\t\t\t\t\t</div>
@@ -237,12 +238,12 @@
 \t\t\t\t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t\t\t\t<label>''')
         _v = VFFSL(SL,"tstrings",True)['er_afterevent'] # u"$tstrings['er_afterevent']" on line 109, col 16
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['er_afterevent']")) # from line 109, col 16.
-        write(u''':&nbsp;</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['er_afterevent']")) # from line 109, col 16.
+        write(''':&nbsp;</label>
 \t\t\t\t\t\t\t\t<input type="checkbox" id="er_afterevent" class="form-control chk-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 110, col 79
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 110, col 79.
-        write(u'''" value="">
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 110, col 79.
+        write('''" value="">
 \t\t\t\t\t\t\t\t<label for="er_afterevent">&nbsp;</label>
 \t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t</div>
@@ -252,12 +253,12 @@
 \t\t\t\t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t\t\t\t<label>''')
         _v = VFFSL(SL,"tstrings",True)['er_force'] # u"$tstrings['er_force']" on line 118, col 16
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['er_force']")) # from line 118, col 16.
-        write(u''':&nbsp;</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['er_force']")) # from line 118, col 16.
+        write(''':&nbsp;</label>
 \t\t\t\t\t\t\t\t<input type="checkbox" id="er_force" class="form-control chk-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 119, col 74
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 119, col 74.
-        write(u'''" value="">
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 119, col 74.
+        write('''" value="">
 \t\t\t\t\t\t\t\t<label for="er_force">&nbsp;</label>
 \t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t</div>
@@ -269,12 +270,12 @@
 \t\t\t\t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t\t\t\t<label>''')
         _v = VFFSL(SL,"tstrings",True)['er_wakeup'] # u"$tstrings['er_wakeup']" on line 129, col 16
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['er_wakeup']")) # from line 129, col 16.
-        write(u''':&nbsp;</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['er_wakeup']")) # from line 129, col 16.
+        write(''':&nbsp;</label>
 \t\t\t\t\t\t\t\t<input type="checkbox" id="er_wakeup" class="form-control chk-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 130, col 75
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 130, col 75.
-        write(u'''" value="">
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 130, col 75.
+        write('''" value="">
 \t\t\t\t\t\t\t\t<label for="er_wakeup">&nbsp;</label>
 \t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t</div>
@@ -282,15 +283,15 @@
 \t\t\t\t\t<div class="col-xs-12  col-sm-4">
 \t\t\t\t\t\t<label>''')
         _v = VFFSL(SL,"tstrings",True)['at_bouquets'] # u"$tstrings['at_bouquets']" on line 136, col 14
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_bouquets']")) # from line 136, col 14.
-        write(u''':&nbsp;</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_bouquets']")) # from line 136, col 14.
+        write(''':&nbsp;</label>
 \t\t\t\t\t\t<select id="bouquets" class="form-control show-tick" multiple></select>
 \t\t\t\t\t</div>
 \t\t\t\t\t<div class="col-xs-12  col-sm-4">
 \t\t\t\t\t\t<label>''')
         _v = VFFSL(SL,"tstrings",True)['at_channels'] # u"$tstrings['at_channels']" on line 140, col 14
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_channels']")) # from line 140, col 14.
-        write(u''':&nbsp;</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['at_channels']")) # from line 140, col 14.
+        write(''':&nbsp;</label>
 \t\t\t\t\t\t<select id="channels" class="form-control show-tick" multiple data-live-search="true"></select>
 \t\t\t\t\t</div>
 \t\t\t\t</div>
@@ -301,12 +302,12 @@
 \t\t\t\t\t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t\t\t\t\t<label>''')
         _v = VFFSL(SL,"tstrings",True)['er_inherit_autotimer'] # u"$tstrings['er_inherit_autotimer']" on line 149, col 17
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['er_inherit_autotimer']")) # from line 149, col 17.
-        write(u''':&nbsp;</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['er_inherit_autotimer']")) # from line 149, col 17.
+        write(''':&nbsp;</label>
 \t\t\t\t\t\t\t\t\t<input type="checkbox" id="er_inherit_autotimer" class="form-control chk-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 150, col 87
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 150, col 87.
-        write(u'''" value="">
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 150, col 87.
+        write('''" value="">
 \t\t\t\t\t\t\t\t\t<label for="er_inherit_autotimer">&nbsp;</label>
 \t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t</div>
@@ -316,12 +317,12 @@
 \t\t\t\t\t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t\t\t\t\t<label>''')
         _v = VFFSL(SL,"tstrings",True)['er_parse_autotimer'] # u"$tstrings['er_parse_autotimer']" on line 158, col 17
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['er_parse_autotimer']")) # from line 158, col 17.
-        write(u''':&nbsp;</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['er_parse_autotimer']")) # from line 158, col 17.
+        write(''':&nbsp;</label>
 \t\t\t\t\t\t\t\t\t<input type="checkbox" id="er_parse_autotimer" class="form-control chk-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 159, col 85
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 159, col 85.
-        write(u'''" value="">
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 159, col 85.
+        write('''" value="">
 \t\t\t\t\t\t\t\t\t<label for="er_parse_autotimer">&nbsp;</label>
 \t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t</div>
@@ -337,25 +338,25 @@
 \t\t\t<div id="actions">
 \t\t\t\t<button id="epgrbutton0" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 173, col 50
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 173, col 50.
-        write(u''' waves-effect" ><i class="material-icons">autorenew</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 173, col 50.
+        write(''' waves-effect" ><i class="material-icons">autorenew</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['er_reload'] # u"$tstrings['er_reload']" on line 173, col 121
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['er_reload']")) # from line 173, col 121.
-        write(u'''</span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['er_reload']")) # from line 173, col 121.
+        write('''</span></button>
 \t\t\t\t<button id="epgrbutton1" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 174, col 50
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 174, col 50.
-        write(u''' waves-effect" ><i class="material-icons">save</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 174, col 50.
+        write(''' waves-effect" ><i class="material-icons">save</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['er_save'] # u"$tstrings['er_save']" on line 174, col 116
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['er_save']")) # from line 174, col 116.
-        write(u'''</span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['er_save']")) # from line 174, col 116.
+        write('''</span></button>
 \t\t\t\t<button id="epgrbutton2" class="atbtn btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 175, col 50
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 175, col 50.
-        write(u''' waves-effect" ><i class="material-icons">refresh</i><span>''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 175, col 50.
+        write(''' waves-effect" ><i class="material-icons">refresh</i><span>''')
         _v = VFFSL(SL,"tstrings",True)['er_refresh'] # u"$tstrings['er_refresh']" on line 175, col 119
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['er_refresh']")) # from line 175, col 119.
-        write(u'''</span></button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['er_refresh']")) # from line 175, col 119.
+        write('''</span></button>
 \t\t\t</div>
 \t\t</div>
 \t</div>
--- ./plugin/controllers/views/responsive/ajax/event.py	(original)
+++ ./plugin/controllers/views/responsive/ajax/event.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -63,7 +64,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -73,7 +74,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -90,7 +91,7 @@
         channel = VFN(VFFSL(SL,"event.channel",True),"replace",False)("'", r"\'")
         title = VFN(VFFSL(SL,"event.title",True),"replace",False)("'", r"\'")
         sref = quote(VFFSL(SL,"event.sref",True), safe=' ~@#$&()*!+=:;,.?/\'')
-        write(u'''
+        write('''
 <style>
 #station { cursor:pointer;overflow:hidden;}
 </style>
@@ -100,21 +101,21 @@
 \t\t<h4>
 \t\t\t<span id="station" onclick="zapChannel(\'''')
         _v = VFFSL(SL,"str",False)(VFFSL(SL,"event",True)['sref']) # u"$str($event['sref'])" on line 17, col 44
-        if _v is not None: write(_filter(_v, rawExpr=u"$str($event['sref'])")) # from line 17, col 44.
-        write(u"""', '""")
+        if _v is not None: write(_filter(_v, rawExpr="$str($event['sref'])")) # from line 17, col 44.
+        write("""', '""")
         _v = VFFSL(SL,"channel",True) # u'$channel' on line 17, col 68
-        if _v is not None: write(_filter(_v, rawExpr=u'$channel')) # from line 17, col 68.
-        write(u'''\')" title="''')
+        if _v is not None: write(_filter(_v, rawExpr='$channel')) # from line 17, col 68.
+        write('''\')" title="''')
         _v = VFFSL(SL,"tstrings",True)['zap'] # u"$tstrings['zap']" on line 17, col 87
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['zap']")) # from line 17, col 87.
-        write(u'''">''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['zap']")) # from line 17, col 87.
+        write('''">''')
         _v = VFFSL(SL,"event",True)['channel'] # u"$event['channel']" on line 17, col 105
-        if _v is not None: write(_filter(_v, rawExpr=u"$event['channel']")) # from line 17, col 105.
-        write(u'''</span>
+        if _v is not None: write(_filter(_v, rawExpr="$event['channel']")) # from line 17, col 105.
+        write('''</span>
 \t\t\t''')
         _v = VFFSL(SL,"channel",True) # u'$channel' on line 18, col 4
-        if _v is not None: write(_filter(_v, rawExpr=u'$channel')) # from line 18, col 4.
-        write(u'''<br/>
+        if _v is not None: write(_filter(_v, rawExpr='$channel')) # from line 18, col 4.
+        write('''<br/>
 \t\t</h4>
 \t</div>
 </div>
@@ -122,225 +123,225 @@
 \t<div class="col-xs-12">
 ''')
         if VFFSL(SL,"transcoding",True): # generated from line 24, col 3
-            write(u'''\t\t<a class="theme-link-color theme-link-col-''')
+            write('''\t\t<a class="theme-link-color theme-link-col-''')
             _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 25, col 45
-            if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 25, col 45.
-            write(u'''" href="#" onclick="jumper8001(\'''')
+            if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 25, col 45.
+            write('''" href="#" onclick="jumper8001(\'''')
             _v = VFFSL(SL,"sref",True) # u'$sref' on line 25, col 87
-            if _v is not None: write(_filter(_v, rawExpr=u'$sref')) # from line 25, col 87.
-            write(u"""', '""")
+            if _v is not None: write(_filter(_v, rawExpr='$sref')) # from line 25, col 87.
+            write("""', '""")
             _v = VFFSL(SL,"channel",True) # u'$channel' on line 25, col 96
-            if _v is not None: write(_filter(_v, rawExpr=u'$channel')) # from line 25, col 96.
-            write(u'''\');" title="''')
+            if _v is not None: write(_filter(_v, rawExpr='$channel')) # from line 25, col 96.
+            write('''\');" title="''')
             _v = VFFSL(SL,"tstrings",True)['stream'] # u"$tstrings['stream']" on line 25, col 116
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['stream']")) # from line 25, col 116.
-            write(u''': ''')
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['stream']")) # from line 25, col 116.
+            write(''': ''')
             _v = VFFSL(SL,"channel",True) # u'$channel' on line 25, col 137
-            if _v is not None: write(_filter(_v, rawExpr=u'$channel')) # from line 25, col 137.
-            write(u'''"><i class="material-icons material-icons-centered">tv</i></a>
+            if _v is not None: write(_filter(_v, rawExpr='$channel')) # from line 25, col 137.
+            write('''"><i class="material-icons material-icons-centered">tv</i></a>
 \t\t<a class="theme-link-color theme-link-col-''')
             _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 26, col 45
-            if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 26, col 45.
-            write(u'''" href="#" onclick="jumper8002(\'''')
+            if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 26, col 45.
+            write('''" href="#" onclick="jumper8002(\'''')
             _v = VFFSL(SL,"sref",True) # u'$sref' on line 26, col 87
-            if _v is not None: write(_filter(_v, rawExpr=u'$sref')) # from line 26, col 87.
-            write(u"""', '""")
+            if _v is not None: write(_filter(_v, rawExpr='$sref')) # from line 26, col 87.
+            write("""', '""")
             _v = VFFSL(SL,"channel",True) # u'$channel' on line 26, col 96
-            if _v is not None: write(_filter(_v, rawExpr=u'$channel')) # from line 26, col 96.
-            write(u'''\');" title="''')
+            if _v is not None: write(_filter(_v, rawExpr='$channel')) # from line 26, col 96.
+            write('''\');" title="''')
             _v = VFFSL(SL,"tstrings",True)['stream'] # u"$tstrings['stream']" on line 26, col 116
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['stream']")) # from line 26, col 116.
-            write(u''' (''')
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['stream']")) # from line 26, col 116.
+            write(''' (''')
             _v = VFFSL(SL,"tstrings",True)['transcoded'] # u"$tstrings['transcoded']" on line 26, col 137
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['transcoded']")) # from line 26, col 137.
-            write(u'''): ''')
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['transcoded']")) # from line 26, col 137.
+            write('''): ''')
             _v = VFFSL(SL,"channel",True) # u'$channel' on line 26, col 163
-            if _v is not None: write(_filter(_v, rawExpr=u'$channel')) # from line 26, col 163.
-            write(u'''"><i class="material-icons material-icons-centered">phone_android</i></a>
+            if _v is not None: write(_filter(_v, rawExpr='$channel')) # from line 26, col 163.
+            write('''"><i class="material-icons material-icons-centered">phone_android</i></a>
 ''')
         else: # generated from line 27, col 3
-            write(u'''\t\t<a class="theme-link-color theme-link-col-''')
+            write('''\t\t<a class="theme-link-color theme-link-col-''')
             _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 28, col 45
-            if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 28, col 45.
-            write(u'''" target="_blank" href=\'../web/stream.m3u?ref=''')
+            if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 28, col 45.
+            write('''" target="_blank" href=\'../web/stream.m3u?ref=''')
             _v = VFFSL(SL,"sref",True) # u'$sref' on line 28, col 101
-            if _v is not None: write(_filter(_v, rawExpr=u'$sref')) # from line 28, col 101.
-            write(u'''&name=''')
+            if _v is not None: write(_filter(_v, rawExpr='$sref')) # from line 28, col 101.
+            write('''&name=''')
             _v = VFFSL(SL,"channel",True) # u'$channel' on line 28, col 112
-            if _v is not None: write(_filter(_v, rawExpr=u'$channel')) # from line 28, col 112.
-            write(u'''\' title="''')
+            if _v is not None: write(_filter(_v, rawExpr='$channel')) # from line 28, col 112.
+            write('''\' title="''')
             _v = VFFSL(SL,"tstrings",True)['stream'] # u"$tstrings['stream']" on line 28, col 129
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['stream']")) # from line 28, col 129.
-            write(u''' ''')
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['stream']")) # from line 28, col 129.
+            write(''' ''')
             _v = VFFSL(SL,"channel",True) # u'$channel' on line 28, col 149
-            if _v is not None: write(_filter(_v, rawExpr=u'$channel')) # from line 28, col 149.
-            write(u'''"><i class="material-icons material-icons-centered">tv</i></a>
-''')
-        write(u'''\t\t
+            if _v is not None: write(_filter(_v, rawExpr='$channel')) # from line 28, col 149.
+            write('''"><i class="material-icons material-icons-centered">tv</i></a>
+''')
+        write('''\t\t
 \t\t<a class="tb theme-link-color theme-link-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 31, col 48
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 31, col 48.
-        write(u'''" href="#" onclick="addTimerEvent(\'''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 31, col 48.
+        write('''" href="#" onclick="addTimerEvent(\'''')
         _v = VFFSL(SL,"sref",True) # u'$sref' on line 31, col 93
-        if _v is not None: write(_filter(_v, rawExpr=u'$sref')) # from line 31, col 93.
-        write(u"""',""")
+        if _v is not None: write(_filter(_v, rawExpr='$sref')) # from line 31, col 93.
+        write("""',""")
         _v = VFFSL(SL,"event.id",True) # u'$event.id' on line 31, col 100
-        if _v is not None: write(_filter(_v, rawExpr=u'$event.id')) # from line 31, col 100.
-        write(u''',false,cbAddTimerEvent);return false;" title="''')
+        if _v is not None: write(_filter(_v, rawExpr='$event.id')) # from line 31, col 100.
+        write(''',false,cbAddTimerEvent);return false;" title="''')
         _v = VFFSL(SL,"tstrings",True)['add_timer'] # u"$tstrings['add_timer']" on line 31, col 155
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['add_timer']")) # from line 31, col 155.
-        write(u'''"><i class="material-icons material-icons-centered">alarm_add</i></a>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['add_timer']")) # from line 31, col 155.
+        write('''"><i class="material-icons material-icons-centered">alarm_add</i></a>
 \t\t<a class="tb theme-link-color theme-link-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 32, col 48
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 32, col 48.
-        write(u'''" href="#addtimer" data-dismiss="modal" data-toggle="modal" data-target="#TimerModal" data-evid="''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 32, col 48.
+        write('''" href="#addtimer" data-dismiss="modal" data-toggle="modal" data-target="#TimerModal" data-evid="''')
         _v = VFFSL(SL,"event.id",True) # u'$event.id' on line 32, col 155
-        if _v is not None: write(_filter(_v, rawExpr=u'$event.id')) # from line 32, col 155.
-        write(u'''" data-ref="''')
+        if _v is not None: write(_filter(_v, rawExpr='$event.id')) # from line 32, col 155.
+        write('''" data-ref="''')
         _v = VFFSL(SL,"sref",True) # u'$sref' on line 32, col 176
-        if _v is not None: write(_filter(_v, rawExpr=u'$sref')) # from line 32, col 176.
-        write(u'''" title="Timer bearbeiten"><i class="material-icons material-icons-centered">alarm</i></a>
+        if _v is not None: write(_filter(_v, rawExpr='$sref')) # from line 32, col 176.
+        write('''" title="Timer bearbeiten"><i class="material-icons material-icons-centered">alarm</i></a>
 \t\t<a class="tb theme-link-color theme-link-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 33, col 48
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 33, col 48.
-        write(u'''" href="#" onclick="addTimerEvent(\'''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 33, col 48.
+        write('''" href="#" onclick="addTimerEvent(\'''')
         _v = VFFSL(SL,"sref",True) # u'$sref' on line 33, col 93
-        if _v is not None: write(_filter(_v, rawExpr=u'$sref')) # from line 33, col 93.
-        write(u"""',""")
+        if _v is not None: write(_filter(_v, rawExpr='$sref')) # from line 33, col 93.
+        write("""',""")
         _v = VFFSL(SL,"event.id",True) # u'$event.id' on line 33, col 100
-        if _v is not None: write(_filter(_v, rawExpr=u'$event.id')) # from line 33, col 100.
-        write(u''',true,cbAddTimerEvent);return false;" title="''')
+        if _v is not None: write(_filter(_v, rawExpr='$event.id')) # from line 33, col 100.
+        write(''',true,cbAddTimerEvent);return false;" title="''')
         _v = VFFSL(SL,"tstrings",True)['add_zaptimer'] # u"$tstrings['add_zaptimer']" on line 33, col 154
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['add_zaptimer']")) # from line 33, col 154.
-        write(u'''"><i class="material-icons material-icons-centered">rotate_90_degrees_ccw</i></a>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['add_zaptimer']")) # from line 33, col 154.
+        write('''"><i class="material-icons material-icons-centered">rotate_90_degrees_ccw</i></a>
 \t\t
 ''')
         if VFFSL(SL,"at",True): # generated from line 35, col 3
-            write(u'''\t\t\t<a class="tb" href="#" onclick="addAutoTimerEvent(\'''')
+            write('''\t\t\t<a class="tb" href="#" onclick="addAutoTimerEvent(\'''')
             _v = VFFSL(SL,"sref",True) # u'$sref' on line 36, col 55
-            if _v is not None: write(_filter(_v, rawExpr=u'$sref')) # from line 36, col 55.
-            write(u"""','""")
+            if _v is not None: write(_filter(_v, rawExpr='$sref')) # from line 36, col 55.
+            write("""','""")
             _v = VFFSL(SL,"channel",True) # u'$channel' on line 36, col 63
-            if _v is not None: write(_filter(_v, rawExpr=u'$channel')) # from line 36, col 63.
-            write(u"""','""")
+            if _v is not None: write(_filter(_v, rawExpr='$channel')) # from line 36, col 63.
+            write("""','""")
             _v = VFFSL(SL,"title",True) # u'$title' on line 36, col 74
-            if _v is not None: write(_filter(_v, rawExpr=u'$title')) # from line 36, col 74.
-            write(u"""','""")
+            if _v is not None: write(_filter(_v, rawExpr='$title')) # from line 36, col 74.
+            write("""','""")
             _v = VFFSL(SL,"event.begin_str",True) # u'$event.begin_str' on line 36, col 83
-            if _v is not None: write(_filter(_v, rawExpr=u'$event.begin_str')) # from line 36, col 83.
-            write(u"""','""")
+            if _v is not None: write(_filter(_v, rawExpr='$event.begin_str')) # from line 36, col 83.
+            write("""','""")
             _v = VFFSL(SL,"event.end",True) # u'$event.end' on line 36, col 102
-            if _v is not None: write(_filter(_v, rawExpr=u'$event.end')) # from line 36, col 102.
-            write(u'''\');return false;" title="''')
+            if _v is not None: write(_filter(_v, rawExpr='$event.end')) # from line 36, col 102.
+            write('''\');return false;" title="''')
             _v = VFFSL(SL,"tstrings",True)['add_autotimer'] # u"$tstrings['add_autotimer']" on line 36, col 137
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['add_autotimer']")) # from line 36, col 137.
-            write(u'''">
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['add_autotimer']")) # from line 36, col 137.
+            write('''">
 \t\t\t\t<i class="fa fa-timerat"></i>
 \t\t\t</a>
 ''')
-        write(u'''\t\t
+        write('''\t\t
 \t\t<a class="d_timer tb" href="#" onclick="delTimerEvent(\'''')
         _v = VFFSL(SL,"sref",True) # u'$sref' on line 41, col 58
-        if _v is not None: write(_filter(_v, rawExpr=u'$sref')) # from line 41, col 58.
-        write(u"""','""")
+        if _v is not None: write(_filter(_v, rawExpr='$sref')) # from line 41, col 58.
+        write("""','""")
         _v = VFFSL(SL,"event.id",True) # u'$event.id' on line 41, col 66
-        if _v is not None: write(_filter(_v, rawExpr=u'$event.id')) # from line 41, col 66.
-        write(u'''\');return false;" title="''')
+        if _v is not None: write(_filter(_v, rawExpr='$event.id')) # from line 41, col 66.
+        write('''\');return false;" title="''')
         _v = VFFSL(SL,"tstrings",True)['delete_timer'] # u"$tstrings['delete_timer']" on line 41, col 100
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['delete_timer']")) # from line 41, col 100.
-        write(u'''">
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['delete_timer']")) # from line 41, col 100.
+        write('''">
 \t\t
 ''')
         if VFFSL(SL,"moviedb",True) == "Kinopoisk": # generated from line 43, col 3
-            write(u'''\t\t\t<a class="theme-link-color theme-link-col-''')
+            write('''\t\t\t<a class="theme-link-color theme-link-col-''')
             _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 44, col 46
-            if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 44, col 46.
-            write(u'''"  target="_blank" href="http://www.kinopoisk.ru/index.php?first=no&kp_query=''')
+            if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 44, col 46.
+            write('''"  target="_blank" href="http://www.kinopoisk.ru/index.php?first=no&kp_query=''')
             _v = VFFSL(SL,"quote",False)(VFFSL(SL,"event.title",True)) # u'$quote($event.title)' on line 44, col 133
-            if _v is not None: write(_filter(_v, rawExpr=u'$quote($event.title)')) # from line 44, col 133.
-            write(u'''"><img src="../images/kinopoisk.png" style="width:12px; height:12px; margin:0px 3px 0px 0px" title="''')
+            if _v is not None: write(_filter(_v, rawExpr='$quote($event.title)')) # from line 44, col 133.
+            write('''"><img src="../images/kinopoisk.png" style="width:12px; height:12px; margin:0px 3px 0px 0px" title="''')
             _v = VFFSL(SL,"tstrings",True)['search_kinopoisk'] # u"$tstrings['search_kinopoisk']" on line 44, col 253
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['search_kinopoisk']")) # from line 44, col 253.
-            write(u'''" border="0"></a>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['search_kinopoisk']")) # from line 44, col 253.
+            write('''" border="0"></a>
 ''')
         elif VFFSL(SL,"moviedb",True) == "CSFD": # generated from line 45, col 3
-            write(u'''\t\t\t<a class="theme-link-color theme-link-col-''')
+            write('''\t\t\t<a class="theme-link-color theme-link-col-''')
             _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 46, col 46
-            if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 46, col 46.
-            write(u'''" target="_blank" href="https://www.csfd.cz/hledat/?q=''')
+            if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 46, col 46.
+            write('''" target="_blank" href="https://www.csfd.cz/hledat/?q=''')
             _v = VFFSL(SL,"event.title",True) # u'$event.title' on line 46, col 110
-            if _v is not None: write(_filter(_v, rawExpr=u'$event.title')) # from line 46, col 110.
-            write(u'''" title="''')
+            if _v is not None: write(_filter(_v, rawExpr='$event.title')) # from line 46, col 110.
+            write('''" title="''')
             _v = VFFSL(SL,"tstrings",True)['search_csfd'] # u"$tstrings['search_csfd']" on line 46, col 131
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['search_csfd']")) # from line 46, col 131.
-            write(u'''">csfd</a>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['search_csfd']")) # from line 46, col 131.
+            write('''">csfd</a>
 ''')
         else: # generated from line 47, col 3
-            write(u'''\t\t\t<a class="theme-link-color theme-link-col-''')
+            write('''\t\t\t<a class="theme-link-color theme-link-col-''')
             _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 48, col 46
-            if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 48, col 46.
-            write(u'''" target="_blank" href="http://www.imdb.com/find?s=all&amp;q=''')
+            if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 48, col 46.
+            write('''" target="_blank" href="http://www.imdb.com/find?s=all&amp;q=''')
             _v = VFFSL(SL,"quote",False)(VFFSL(SL,"event.title",True)) # u'$quote($event.title)' on line 48, col 117
-            if _v is not None: write(_filter(_v, rawExpr=u'$quote($event.title)')) # from line 48, col 117.
-            write(u'''" title="''')
+            if _v is not None: write(_filter(_v, rawExpr='$quote($event.title)')) # from line 48, col 117.
+            write('''" title="''')
             _v = VFFSL(SL,"tstrings",True)['search_imdb'] # u"$tstrings['search_imdb']" on line 48, col 146
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['search_imdb']")) # from line 48, col 146.
-            write(u'''">IMDb</a>
-''')
-        write(u'''\t</div>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['search_imdb']")) # from line 48, col 146.
+            write('''">IMDb</a>
+''')
+        write('''\t</div>
 </div>
 <div class="row clearfix">
 \t<div class="col-xs-12">
 \t\t<h5>''')
         _v = VFFSL(SL,"tstrings",True)[("day_" + (VFN(VFFSL(SL,"time",True),"strftime",False)("%w", VFFSL(SL,"etime",True))))] # u'$tstrings[("day_" + ($time.strftime("%w", $etime)))]' on line 54, col 7
-        if _v is not None: write(_filter(_v, rawExpr=u'$tstrings[("day_" + ($time.strftime("%w", $etime)))]')) # from line 54, col 7.
-        write(u'''. ''')
+        if _v is not None: write(_filter(_v, rawExpr='$tstrings[("day_" + ($time.strftime("%w", $etime)))]')) # from line 54, col 7.
+        write('''. ''')
         _v = VFN(VFFSL(SL,"time",True),"strftime",False)("%d", VFFSL(SL,"etime",True)) # u'$time.strftime("%d", $etime)' on line 54, col 61
-        if _v is not None: write(_filter(_v, rawExpr=u'$time.strftime("%d", $etime)')) # from line 54, col 61.
-        write(u'''. ''')
+        if _v is not None: write(_filter(_v, rawExpr='$time.strftime("%d", $etime)')) # from line 54, col 61.
+        write('''. ''')
         _v = VFFSL(SL,"tstrings",True)[("month_" + (VFN(VFFSL(SL,"time",True),"strftime",False)("%m", VFFSL(SL,"etime",True))))] # u'$tstrings[("month_" + ($time.strftime("%m", $etime)))]' on line 54, col 91
-        if _v is not None: write(_filter(_v, rawExpr=u'$tstrings[("month_" + ($time.strftime("%m", $etime)))]')) # from line 54, col 91.
-        write(u''' ''')
+        if _v is not None: write(_filter(_v, rawExpr='$tstrings[("month_" + ($time.strftime("%m", $etime)))]')) # from line 54, col 91.
+        write(''' ''')
         _v = VFFSL(SL,"event.begin_str",True) # u'$event.begin_str' on line 54, col 146
-        if _v is not None: write(_filter(_v, rawExpr=u'$event.begin_str')) # from line 54, col 146.
-        write(u''' - ''')
+        if _v is not None: write(_filter(_v, rawExpr='$event.begin_str')) # from line 54, col 146.
+        write(''' - ''')
         _v = VFFSL(SL,"event.end",True) # u'$event.end' on line 54, col 165
-        if _v is not None: write(_filter(_v, rawExpr=u'$event.end')) # from line 54, col 165.
-        write(u'''&nbsp;&nbsp;(''')
+        if _v is not None: write(_filter(_v, rawExpr='$event.end')) # from line 54, col 165.
+        write('''&nbsp;&nbsp;(''')
         _v = VFFSL(SL,"int",False)(VFFSL(SL,"event.duration",True)/60) # u'$int($event.duration/60)' on line 54, col 188
-        if _v is not None: write(_filter(_v, rawExpr=u'$int($event.duration/60)')) # from line 54, col 188.
-        write(u''' min)</h5>
+        if _v is not None: write(_filter(_v, rawExpr='$int($event.duration/60)')) # from line 54, col 188.
+        write(''' min)</h5>
 \t</div>
 </div>
 <div class="row clearfix">
 \t<div class="col-xs-12">
 \t\t<h4>''')
         _v = VFFSL(SL,"event.title",True) # u'$event.title' on line 59, col 7
-        if _v is not None: write(_filter(_v, rawExpr=u'$event.title')) # from line 59, col 7.
-        write(u'''</h4>
+        if _v is not None: write(_filter(_v, rawExpr='$event.title')) # from line 59, col 7.
+        write('''</h4>
 ''')
         if VFFSL(SL,"event.title",True) != VFFSL(SL,"event.shortdesc",True): # generated from line 60, col 1
-            write(u'''\t\t<h5>''')
+            write('''\t\t<h5>''')
             _v = VFFSL(SL,"event.shortdesc",True) # u'$event.shortdesc' on line 61, col 7
-            if _v is not None: write(_filter(_v, rawExpr=u'$event.shortdesc')) # from line 61, col 7.
-            write(u'''</h5>
-''')
-        write(u'''\t</div>
+            if _v is not None: write(_filter(_v, rawExpr='$event.shortdesc')) # from line 61, col 7.
+            write('''</h5>
+''')
+        write('''\t</div>
 </div>
 <div class="row clearfix">
 \t<div class="col-xs-12">
 \t\t<p>''')
-        _v = VFN(VFN(VFFSL(SL,"event.longdesc",True),"replace",False)("\n","<br/>"),"replace",False)(u"\u008a","<br/>") # u'$(event.longdesc.replace("\\n","<br/>").replace(u"\\u008a","<br/>"))' on line 67, col 6
-        if _v is not None: write(_filter(_v, rawExpr=u'$(event.longdesc.replace("\\n","<br/>").replace(u"\\u008a","<br/>"))')) # from line 67, col 6.
-        write(u'''</p>
+        _v = VFN(VFN(VFFSL(SL,"event.longdesc",True),"replace",False)("\n","<br/>"),"replace",False)("\u008a","<br/>") # u'$(event.longdesc.replace("\\n","<br/>").replace(u"\\u008a","<br/>"))' on line 67, col 6
+        if _v is not None: write(_filter(_v, rawExpr='$(event.longdesc.replace("\\n","<br/>").replace(u"\\u008a","<br/>"))')) # from line 67, col 6.
+        write('''</p>
 \t</div>
 </div>
 
 <script>
 var theevent = ''')
         _v = VFFSL(SL,"dumps",False)(VFFSL(SL,"event",True)) # u'$dumps($event)' on line 72, col 16
-        if _v is not None: write(_filter(_v, rawExpr=u'$dumps($event)')) # from line 72, col 16.
-        write(u''';
+        if _v is not None: write(_filter(_v, rawExpr='$dumps($event)')) # from line 72, col 16.
+        write(''';
 if (picons[theevent[\'channel\']])
 \t$(\'#station\').html(\'<img src="\'+picons[theevent[\'channel\']]+\'" width="80" />\');
 if (typeof channelpicon !== \'undefined\') {
--- ./plugin/controllers/views/responsive/ajax/eventdescription.py	(original)
+++ ./plugin/controllers/views/responsive/ajax/eventdescription.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -82,11 +83,11 @@
         ########################################
         ## START - generated method body
         
-        write(u'''<p>
+        write('''<p>
 \t''')
         _v = VFFSL(SL,"description",True) # u'$description' on line 2, col 2
-        if _v is not None: write(_filter(_v, rawExpr=u'$description')) # from line 2, col 2.
-        write(u'''
+        if _v is not None: write(_filter(_v, rawExpr='$description')) # from line 2, col 2.
+        write('''
 </p>
 ''')
         
--- ./plugin/controllers/views/responsive/ajax/movies.py	(original)
+++ ./plugin/controllers/views/responsive/ajax/movies.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -63,7 +64,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -73,7 +74,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -86,7 +87,7 @@
         ########################################
         ## START - generated method body
         
-        write(u'''
+        write('''
 <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
 \t<div class="card">
 \t\t<div class="header">
@@ -94,8 +95,8 @@
 \t\t\t\t<div class="col-xs-12 col-sm-6">
 \t\t\t\t\t<h2><i class="material-icons material-icons-centered">movie</i>''')
         _v = VFFSL(SL,"tstrings",True)['movies'] # u"$tstrings['movies']" on line 11, col 69
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['movies']")) # from line 11, col 69.
-        write(u'''</h2>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['movies']")) # from line 11, col 69.
+        write('''</h2>
 \t\t\t\t</div>
 \t\t\t</div>
 \t\t\t<ul class="header-dropdown m-r--5">
@@ -105,20 +106,20 @@
 \t\t\t\t\t<ul class="dropdown-menu pull-right" id="timerbuttons">
 \t\t\t\t\t\t<li><a href="#" onclick="changeMoviesort(\'name\'); return false" ><i class="material-icons material-icons-centered">vertical_align_bottom</i>''')
         _v = VFFSL(SL,"tstrings",True)['name'] # u"$tstrings['name']" on line 19, col 147
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['name']")) # from line 19, col 147.
-        write(u'''</a></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['name']")) # from line 19, col 147.
+        write('''</a></li>
 \t\t\t\t\t\t<li><a href="#" onclick="changeMoviesort(\'named\'); return false" ><i class="material-icons material-icons-centered">vertical_align_top</i>''')
         _v = VFFSL(SL,"tstrings",True)['name'] # u"$tstrings['name']" on line 20, col 145
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['name']")) # from line 20, col 145.
-        write(u'''</a></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['name']")) # from line 20, col 145.
+        write('''</a></li>
 \t\t\t\t\t\t<li><a href="#" onclick="changeMoviesort(\'date\'); return false" ><i class="material-icons material-icons-centered">vertical_align_bottom</i>''')
         _v = VFFSL(SL,"tstrings",True)['date'] # u"$tstrings['date']" on line 21, col 147
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['date']")) # from line 21, col 147.
-        write(u'''</a></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['date']")) # from line 21, col 147.
+        write('''</a></li>
 \t\t\t\t\t\t<li><a href="#" onclick="changeMoviesort(\'dated\'); return false" ><i class="material-icons material-icons-centered">vertical_align_top</i>''')
         _v = VFFSL(SL,"tstrings",True)['date'] # u"$tstrings['date']" on line 22, col 145
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['date']")) # from line 22, col 145.
-        write(u'''</a></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['date']")) # from line 22, col 145.
+        write('''</a></li>
 \t\t\t\t\t</ul>
 \t\t\t\t</li>
 \t\t\t</ul>
@@ -133,153 +134,153 @@
         path = ''
         for dir in VFN(VFFSL(SL,"directory",True)[0:-1],"split",False)("/")[1:-1]: # generated from line 34, col 8
             path += '/' + VFFSL(SL,"dir",True)
-            write(u'''\t\t\t\t\t\t\t\t<button class="btn btn-default waves-effect" onclick="load_maincontent_spin(\'ajax/movies?dirname=\'+escape(\'''')
+            write('''\t\t\t\t\t\t\t\t<button class="btn btn-default waves-effect" onclick="load_maincontent_spin(\'ajax/movies?dirname=\'+escape(\'''')
             _v = VFFSL(SL,"path",True) # u'$path' on line 36, col 116
-            if _v is not None: write(_filter(_v, rawExpr=u'$path')) # from line 36, col 116.
-            write(u'''\'));">''')
+            if _v is not None: write(_filter(_v, rawExpr='$path')) # from line 36, col 116.
+            write('''\'));">''')
             _v = VFFSL(SL,"dir",True) # u'$dir' on line 36, col 127
-            if _v is not None: write(_filter(_v, rawExpr=u'$dir')) # from line 36, col 127.
-            write(u'''</button>
+            if _v is not None: write(_filter(_v, rawExpr='$dir')) # from line 36, col 127.
+            write('''</button>
 ''')
         if VFFSL(SL,"directory",True) != '/': # generated from line 38, col 8
-            write(u'''\t\t\t\t\t\t\t\t\t<button class="btn waves-effect bg-''')
+            write('''\t\t\t\t\t\t\t\t\t<button class="btn waves-effect bg-''')
             _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 39, col 45
-            if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 39, col 45.
-            write(u'''" id="moviedirbtn"><span style="font-weight: bold;">
+            if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 39, col 45.
+            write('''" id="moviedirbtn"><span style="font-weight: bold;">
 ''')
             _v = VFN(VFFSL(SL,"directory",True)[0:-1],"split",False)("/")[-1]
             if _v is not None: write(_filter(_v))
-            write(u'''\t\t\t\t\t\t\t\t\t</button>
-''')
-        write(u'''\t\t\t\t\t\t\t</div>
+            write('''\t\t\t\t\t\t\t\t\t</button>
+''')
+        write('''\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t</div>
 ''')
         if VFFSL(SL,"len",False)(VFFSL(SL,"bookmarks",True)): # generated from line 45, col 7
-            write(u'''\t\t\t\t\t\t<div class="col-lg-2 align-left">
+            write('''\t\t\t\t\t\t<div class="col-lg-2 align-left">
 \t\t\t\t\t\t\t<div class="form-group">
 \t\t\t\t\t\t\t\t<select class="form-control" id="directory">
 \t\t\t\t\t\t\t\t<option>Subdirs:</option>
 ''')
             for bookmark in VFFSL(SL,"bookmarks",True): # generated from line 50, col 9
-                write(u'''\t\t\t\t\t\t\t\t\t<option value="''')
+                write('''\t\t\t\t\t\t\t\t\t<option value="''')
                 _v = VFFSL(SL,"directory",True) # u'$directory' on line 51, col 25
-                if _v is not None: write(_filter(_v, rawExpr=u'$directory')) # from line 51, col 25.
+                if _v is not None: write(_filter(_v, rawExpr='$directory')) # from line 51, col 25.
                 _v = VFFSL(SL,"bookmark",True) # u'$bookmark' on line 51, col 35
-                if _v is not None: write(_filter(_v, rawExpr=u'$bookmark')) # from line 51, col 35.
-                write(u'''">''')
+                if _v is not None: write(_filter(_v, rawExpr='$bookmark')) # from line 51, col 35.
+                write('''">''')
                 _v = VFFSL(SL,"bookmark",True) # u'$bookmark' on line 51, col 46
-                if _v is not None: write(_filter(_v, rawExpr=u'$bookmark')) # from line 51, col 46.
-                write(u'''</option>
-''')
-            write(u'''\t\t\t\t\t\t\t</select>
+                if _v is not None: write(_filter(_v, rawExpr='$bookmark')) # from line 51, col 46.
+                write('''</option>
+''')
+            write('''\t\t\t\t\t\t\t</select>
 \t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t</div>
 ''')
-        write(u'''\t\t\t\t\t
+        write('''\t\t\t\t\t
 \t\t\t\t\t</div>
 ''')
         count = 0
         for movie in VFFSL(SL,"movies",True): # generated from line 60, col 6
-            write(u'''\t\t\t\t\t<div class="row clearfix">
+            write('''\t\t\t\t\t<div class="row clearfix">
 \t\t\t\t\t\t<div class="col-xs-12" id="movies">
 \t\t\t\t\t\t\t\t<div class="card" id="''')
             _v = VFFSL(SL,"count",True) # u'$count' on line 63, col 31
-            if _v is not None: write(_filter(_v, rawExpr=u'$count')) # from line 63, col 31.
-            write(u'''">
+            if _v is not None: write(_filter(_v, rawExpr='$count')) # from line 63, col 31.
+            write('''">
 \t\t\t\t\t\t\t\t\t<div class="header">
 \t\t\t\t\t\t\t\t\t\t<div class="row clearfix">
 \t\t\t\t\t\t\t\t\t\t\t<div class="col-xs-8">
 \t\t\t\t\t\t\t\t\t\t\t\t<h2><i class="material-icons material-icons-centered">movie</i>''')
             _v = VFFSL(SL,"movie.eventname",True) # u'$movie.eventname' on line 67, col 76
-            if _v is not None: write(_filter(_v, rawExpr=u'$movie.eventname')) # from line 67, col 76.
-            write(u''' - ''')
+            if _v is not None: write(_filter(_v, rawExpr='$movie.eventname')) # from line 67, col 76.
+            write(''' - ''')
             _v = VFFSL(SL,"movie.servicename",True) # u'$movie.servicename' on line 67, col 95
-            if _v is not None: write(_filter(_v, rawExpr=u'$movie.servicename')) # from line 67, col 95.
-            write(u'''</h2>
+            if _v is not None: write(_filter(_v, rawExpr='$movie.servicename')) # from line 67, col 95.
+            write('''</h2>
 \t\t\t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t\t\t<div class="col-xs-4">
 \t\t\t\t\t\t\t\t\t\t\t\t\t<ul class="header-dropdown m-r--5">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<li><span role="button"><a href=\'#\' onClick="playRecording(\'''')
             _v = VFFSL(SL,"quote",False)(VFFSL(SL,"movie.serviceref",True)) # u'$quote($movie.serviceref)' on line 71, col 75
-            if _v is not None: write(_filter(_v, rawExpr=u'$quote($movie.serviceref)')) # from line 71, col 75.
-            write(u'''\');" title="''')
+            if _v is not None: write(_filter(_v, rawExpr='$quote($movie.serviceref)')) # from line 71, col 75.
+            write('''\');" title="''')
             _v = VFFSL(SL,"tstrings",True)['playback'] # u"$tstrings['playback']" on line 71, col 112
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['playback']")) # from line 71, col 112.
-            write(u'''"><i class="material-icons material-icons-centered">play_circle_outline</i></a></span></li>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['playback']")) # from line 71, col 112.
+            write('''"><i class="material-icons material-icons-centered">play_circle_outline</i></a></span></li>
 ''')
             if VFFSL(SL,"transcoding",True): # generated from line 72, col 15
-                write(u'''\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li><span role="button"><a href="#" onclick="jumper80(\'''')
+                write('''\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li><span role="button"><a href="#" onclick="jumper80(\'''')
                 _v = VFFSL(SL,"quote",False)(VFFSL(SL,"movie.filename",True)) # u'$quote($movie.filename)' on line 73, col 70
-                if _v is not None: write(_filter(_v, rawExpr=u'$quote($movie.filename)')) # from line 73, col 70.
-                write(u'''\');" title="''')
+                if _v is not None: write(_filter(_v, rawExpr='$quote($movie.filename)')) # from line 73, col 70.
+                write('''\');" title="''')
                 _v = VFFSL(SL,"tstrings",True)['stream'] # u"$tstrings['stream']" on line 73, col 105
-                if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['stream']")) # from line 73, col 105.
-                write(u''': ''')
+                if _v is not None: write(_filter(_v, rawExpr="$tstrings['stream']")) # from line 73, col 105.
+                write(''': ''')
                 _v = VFFSL(SL,"movie.eventname",True) # u'$movie.eventname' on line 73, col 126
-                if _v is not None: write(_filter(_v, rawExpr=u'$movie.eventname')) # from line 73, col 126.
-                write(u'''"><i class="material-icons material-icons-centered">tv</i></a></span></li>
+                if _v is not None: write(_filter(_v, rawExpr='$movie.eventname')) # from line 73, col 126.
+                write('''"><i class="material-icons material-icons-centered">tv</i></a></span></li>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<li><span role="button"><a href="#" onclick="jumper8003(\'''')
                 _v = VFFSL(SL,"quote",False)(VFFSL(SL,"movie.filename",True)) # u'$quote($movie.filename)' on line 74, col 72
-                if _v is not None: write(_filter(_v, rawExpr=u'$quote($movie.filename)')) # from line 74, col 72.
-                write(u'''\');" title="''')
+                if _v is not None: write(_filter(_v, rawExpr='$quote($movie.filename)')) # from line 74, col 72.
+                write('''\');" title="''')
                 _v = VFFSL(SL,"tstrings",True)['stream'] # u"$tstrings['stream']" on line 74, col 107
-                if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['stream']")) # from line 74, col 107.
-                write(u''' (''')
+                if _v is not None: write(_filter(_v, rawExpr="$tstrings['stream']")) # from line 74, col 107.
+                write(''' (''')
                 _v = VFFSL(SL,"tstrings",True)['transcoded'] # u"$tstrings['transcoded']" on line 74, col 128
-                if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['transcoded']")) # from line 74, col 128.
-                write(u'''): ''')
+                if _v is not None: write(_filter(_v, rawExpr="$tstrings['transcoded']")) # from line 74, col 128.
+                write('''): ''')
                 _v = VFFSL(SL,"movie.eventname",True) # u'$movie.eventname' on line 74, col 154
-                if _v is not None: write(_filter(_v, rawExpr=u'$movie.eventname')) # from line 74, col 154.
-                write(u'''"><i class="material-icons material-icons-centered">phone_android</i></a></span></li>
+                if _v is not None: write(_filter(_v, rawExpr='$movie.eventname')) # from line 74, col 154.
+                write('''"><i class="material-icons material-icons-centered">phone_android</i></a></span></li>
 ''')
             else: # generated from line 75, col 15
-                write(u'''\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li><span role="button"><a target="_blank" href=\'web/ts.m3u?file=''')
+                write('''\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li><span role="button"><a target="_blank" href=\'web/ts.m3u?file=''')
                 _v = VFFSL(SL,"quote",False)(VFFSL(SL,"movie.filename",True)) # u'$quote($movie.filename)' on line 76, col 80
-                if _v is not None: write(_filter(_v, rawExpr=u'$quote($movie.filename)')) # from line 76, col 80.
-                write(u'''\' title="''')
+                if _v is not None: write(_filter(_v, rawExpr='$quote($movie.filename)')) # from line 76, col 80.
+                write('''\' title="''')
                 _v = VFFSL(SL,"tstrings",True)['stream'] # u"$tstrings['stream']" on line 76, col 112
-                if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['stream']")) # from line 76, col 112.
-                write(u''' ''')
+                if _v is not None: write(_filter(_v, rawExpr="$tstrings['stream']")) # from line 76, col 112.
+                write(''' ''')
                 _v = VFFSL(SL,"movie.eventname",True) # u'$movie.eventname' on line 76, col 132
-                if _v is not None: write(_filter(_v, rawExpr=u'$movie.eventname')) # from line 76, col 132.
-                write(u'''"><i class="material-icons material-icons-centered">tv</i></a></span></li>
-''')
-            write(u'''\t\t\t\t\t\t\t\t\t\t\t\t\t\t
+                if _v is not None: write(_filter(_v, rawExpr='$movie.eventname')) # from line 76, col 132.
+                write('''"><i class="material-icons material-icons-centered">tv</i></a></span></li>
+''')
+            write('''\t\t\t\t\t\t\t\t\t\t\t\t\t\t
 ''')
             eventname_escaped = VFN(VFFSL(SL,"movie.eventname",True),"replace",False)("'", r"\'")
-            write(u'''\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li><span role="button"><a href=\'/file?action=download&file=''')
+            write('''\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li><span role="button"><a href=\'/file?action=download&file=''')
             _v = VFFSL(SL,"quote",False)(VFFSL(SL,"movie.filename",True)) # u'$quote($movie.filename)' on line 80, col 75
-            if _v is not None: write(_filter(_v, rawExpr=u'$quote($movie.filename)')) # from line 80, col 75.
-            write(u'''\' title="''')
+            if _v is not None: write(_filter(_v, rawExpr='$quote($movie.filename)')) # from line 80, col 75.
+            write('''\' title="''')
             _v = VFFSL(SL,"tstrings",True)['download'] # u"$tstrings['download']" on line 80, col 107
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['download']")) # from line 80, col 107.
-            write(u''' ''')
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['download']")) # from line 80, col 107.
+            write(''' ''')
             _v = VFFSL(SL,"movie.eventname",True) # u'$movie.eventname' on line 80, col 129
-            if _v is not None: write(_filter(_v, rawExpr=u'$movie.eventname')) # from line 80, col 129.
-            write(u'''"><i class="material-icons material-icons-centered">cloud_download</i></a></span></li>
+            if _v is not None: write(_filter(_v, rawExpr='$movie.eventname')) # from line 80, col 129.
+            write('''"><i class="material-icons material-icons-centered">cloud_download</i></a></span></li>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<li><span role="button"><a href=\'#\' onClick="renameMovie(\'''')
             _v = VFFSL(SL,"quote",False)(VFFSL(SL,"movie.serviceref",True)) # u'$quote($movie.serviceref)' on line 81, col 73
-            if _v is not None: write(_filter(_v, rawExpr=u'$quote($movie.serviceref)')) # from line 81, col 73.
-            write(u"""','""")
+            if _v is not None: write(_filter(_v, rawExpr='$quote($movie.serviceref)')) # from line 81, col 73.
+            write("""','""")
             _v = VFFSL(SL,"eventname_escaped",True) # u'$eventname_escaped' on line 81, col 101
-            if _v is not None: write(_filter(_v, rawExpr=u'$eventname_escaped')) # from line 81, col 101.
-            write(u'''\');" title="''')
+            if _v is not None: write(_filter(_v, rawExpr='$eventname_escaped')) # from line 81, col 101.
+            write('''\');" title="''')
             _v = VFFSL(SL,"tstrings",True)['rename_recording'] # u"$tstrings['rename_recording']" on line 81, col 131
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['rename_recording']")) # from line 81, col 131.
-            write(u'''"><i class="material-icons material-icons-centered">edit</i></a></span></li>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['rename_recording']")) # from line 81, col 131.
+            write('''"><i class="material-icons material-icons-centered">edit</i></a></span></li>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<li><span role="button"><a href=\'#\' onClick="deleteMovie(\'''')
             _v = VFFSL(SL,"quote",False)(VFFSL(SL,"movie.serviceref",True)) # u'$quote($movie.serviceref)' on line 82, col 73
-            if _v is not None: write(_filter(_v, rawExpr=u'$quote($movie.serviceref)')) # from line 82, col 73.
-            write(u"""', '""")
+            if _v is not None: write(_filter(_v, rawExpr='$quote($movie.serviceref)')) # from line 82, col 73.
+            write("""', '""")
             _v = VFFSL(SL,"count",True) # u'$count' on line 82, col 102
-            if _v is not None: write(_filter(_v, rawExpr=u'$count')) # from line 82, col 102.
-            write(u"""', '""")
+            if _v is not None: write(_filter(_v, rawExpr='$count')) # from line 82, col 102.
+            write("""', '""")
             _v = VFFSL(SL,"eventname_escaped",True) # u'$eventname_escaped' on line 82, col 112
-            if _v is not None: write(_filter(_v, rawExpr=u'$eventname_escaped')) # from line 82, col 112.
-            write(u'''\'); return false;" title="''')
+            if _v is not None: write(_filter(_v, rawExpr='$eventname_escaped')) # from line 82, col 112.
+            write('''\'); return false;" title="''')
             _v = VFFSL(SL,"tstrings",True)['delete_recording'] # u"$tstrings['delete_recording']" on line 82, col 156
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['delete_recording']")) # from line 82, col 156.
-            write(u'''"><i class="material-icons material-icons-centered">delete</i></a></span></li>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['delete_recording']")) # from line 82, col 156.
+            write('''"><i class="material-icons material-icons-centered">delete</i></a></span></li>
 \t\t\t\t\t\t\t\t\t\t\t\t\t</ul>
 \t\t\t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t\t</div>
@@ -287,39 +288,39 @@
 \t\t\t\t\t\t\t\t\t\t\t\t<div class="col-xs-8">
 ''')
             da = VFFSL(SL,"tstrings",True)[("day_" + (time.strftime("%w", time.localtime(VFFSL(SL,"movie.recordingtime",True)))))]
-            write(u'''\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>''')
+            write('''\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>''')
             _v = VFFSL(SL,"da",True) # u'$da' on line 89, col 21
-            if _v is not None: write(_filter(_v, rawExpr=u'$da')) # from line 89, col 21.
-            write(u'''</span>
+            if _v is not None: write(_filter(_v, rawExpr='$da')) # from line 89, col 21.
+            write('''</span>
 ''')
             w = VFFSL(SL,"movie.lastseen",True)
             size = '0'
             if VFFSL(SL,"w",True) > 0: # generated from line 92, col 16
                 w = VFFSL(SL,"w",True) * 70 / 100
                 size = str(VFFSL(SL,"w",True))
-                write(u'''\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class="ui-progressbar ui-corner-all ui-widget ui-widget-content">
+                write('''\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class="ui-progressbar ui-corner-all ui-widget ui-widget-content">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class="ui-progressbar-value ui-corner-left ui-widget-header" style="width: ''')
                 _v = VFFSL(SL,"size",True) # u'$size' on line 96, col 98
-                if _v is not None: write(_filter(_v, rawExpr=u'$size')) # from line 96, col 98.
-                write(u''';"></div>
+                if _v is not None: write(_filter(_v, rawExpr='$size')) # from line 96, col 98.
+                write(''';"></div>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>
 ''')
-            write(u'''\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class="progress progress-striped" style="margin-bottom:0px;width:35%;max-width:200px;min-width:100px;height:10px;">
+            write('''\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class="progress progress-striped" style="margin-bottom:0px;width:35%;max-width:200px;min-width:100px;height:10px;">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class="progress-bar bg-''')
             _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 100, col 45
-            if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 100, col 45.
-            write(u'''" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width:''')
+            if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 100, col 45.
+            write('''" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width:''')
             _v = VFFSL(SL,"size",True) # u'$size' on line 100, col 145
-            if _v is not None: write(_filter(_v, rawExpr=u'$size')) # from line 100, col 145.
-            write(u'''%;"></div>
+            if _v is not None: write(_filter(_v, rawExpr='$size')) # from line 100, col 145.
+            write('''%;"></div>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>''')
             _v = VFFSL(SL,"movie.length",True) # u'$movie.length' on line 102, col 22
-            if _v is not None: write(_filter(_v, rawExpr=u'$movie.length')) # from line 102, col 22.
-            write(u''' min. / ''')
+            if _v is not None: write(_filter(_v, rawExpr='$movie.length')) # from line 102, col 22.
+            write(''' min. / ''')
             _v = VFFSL(SL,"movie.filesize_readable",True) # u'$movie.filesize_readable' on line 102, col 43
-            if _v is not None: write(_filter(_v, rawExpr=u'$movie.filesize_readable')) # from line 102, col 43.
-            write(u'''</span>
+            if _v is not None: write(_filter(_v, rawExpr='$movie.filesize_readable')) # from line 102, col 43.
+            write('''</span>
 \t\t\t\t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t</div>
@@ -328,19 +329,19 @@
 \t\t\t\t\t\t\t\t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t\t\t\t\t\t\t\t<span data-toggle="collapse" data-target="#eventid''')
             _v = VFFSL(SL,"count",True) # u'$count' on line 109, col 63
-            if _v is not None: write(_filter(_v, rawExpr=u'$count')) # from line 109, col 63.
-            write(u'''" aria-expanded="false"aria-controls="collapseExample" style="cursor:pointer;"><b>''')
+            if _v is not None: write(_filter(_v, rawExpr='$count')) # from line 109, col 63.
+            write('''" aria-expanded="false"aria-controls="collapseExample" style="cursor:pointer;"><b>''')
             _v = VFFSL(SL,"movie.description",True) # u'$movie.description' on line 109, col 151
-            if _v is not None: write(_filter(_v, rawExpr=u'$movie.description')) # from line 109, col 151.
-            write(u'''</b><i class="material-icons material-icons-centered">expand_more</i></span>
+            if _v is not None: write(_filter(_v, rawExpr='$movie.description')) # from line 109, col 151.
+            write('''</b><i class="material-icons material-icons-centered">expand_more</i></span>
 \t\t\t\t\t\t\t\t\t\t\t\t<div class="collapse" id="eventid''')
             _v = VFFSL(SL,"count",True) # u'$count' on line 110, col 46
-            if _v is not None: write(_filter(_v, rawExpr=u'$count')) # from line 110, col 46.
-            write(u'''">
+            if _v is not None: write(_filter(_v, rawExpr='$count')) # from line 110, col 46.
+            write('''">
 \t\t\t\t\t\t\t\t\t\t\t\t\t<p>''')
             _v = VFFSL(SL,"movie.descriptionExtended",True) # u'$movie.descriptionExtended' on line 111, col 17
-            if _v is not None: write(_filter(_v, rawExpr=u'$movie.descriptionExtended')) # from line 111, col 17.
-            write(u'''</p>
+            if _v is not None: write(_filter(_v, rawExpr='$movie.descriptionExtended')) # from line 111, col 17.
+            write('''</p>
 \t\t\t\t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t\t</div>
@@ -350,7 +351,7 @@
 \t\t\t\t\t</div>
 ''')
             count += 1
-        write(u'''\t\t\t\t</div>
+        write('''\t\t\t\t</div>
 \t\t\t</div>
 \t\t</div>
 \t</div>
@@ -363,7 +364,7 @@
 
 ''')
         if VFFSL(SL,"len",False)(VFFSL(SL,"bookmarks",True)): # generated from line 132, col 1
-            write(u"""
+            write("""
 $(function () {
 \t$('#directory').change(function() {
 \t\tload_maincontent_spin('ajax/movies?dirname='+escape($(this).val()));
@@ -371,7 +372,7 @@
 });
 
 """)
-        write(u'''</script>
+        write('''</script>
 ''')
         
         ########################################
--- ./plugin/controllers/views/responsive/ajax/moviesearch.py	(original)
+++ ./plugin/controllers/views/responsive/ajax/moviesearch.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -62,7 +63,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -72,7 +73,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -85,10 +86,10 @@
         ########################################
         ## START - generated method body
         
-        write(u'''
+        write('''
 ''')
         if VFFSL(SL,"MinMovieList",True) == 'checked': # generated from line 5, col 1
-            write(u'''
+            write('''
 \t<div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
 \t\t<div class="card">
 \t\t\t<div class="header">
@@ -96,8 +97,8 @@
 \t\t\t\t\t<div class="col-xs-12 col-sm-6">
 \t\t\t\t\t\t<h2><i class="material-icons material-icons-centered">movie</i>''')
             _v = VFFSL(SL,"tstrings",True)['movies'] # u"$tstrings['movies']" on line 12, col 70
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['movies']")) # from line 12, col 70.
-            write(u'''</h2>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['movies']")) # from line 12, col 70.
+            write('''</h2>
 \t\t\t\t\t</div>
 \t\t\t\t</div>
 \t\t\t\t<ul class="header-dropdown m-r--5">
@@ -107,20 +108,20 @@
 \t\t\t\t\t\t<ul class="dropdown-menu pull-right" id="timerbuttons">
 \t\t\t\t\t\t<li><a href="#" onclick="changeMoviesortSearch(\'name\'); return false" ><i class="material-icons material-icons-centered">vertical_align_bottom</i>''')
             _v = VFFSL(SL,"tstrings",True)['name'] # u"$tstrings['name']" on line 20, col 153
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['name']")) # from line 20, col 153.
-            write(u'''</a></li>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['name']")) # from line 20, col 153.
+            write('''</a></li>
 \t\t\t\t\t\t<li><a href="#" onclick="changeMoviesortSearch(\'named\'); return false" ><i class="material-icons material-icons-centered">vertical_align_top</i>''')
             _v = VFFSL(SL,"tstrings",True)['name'] # u"$tstrings['name']" on line 21, col 151
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['name']")) # from line 21, col 151.
-            write(u'''</a></li>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['name']")) # from line 21, col 151.
+            write('''</a></li>
 \t\t\t\t\t\t<li><a href="#" onclick="changeMoviesortSearch(\'date\'); return false" ><i class="material-icons material-icons-centered">vertical_align_bottom</i>''')
             _v = VFFSL(SL,"tstrings",True)['date'] # u"$tstrings['date']" on line 22, col 153
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['date']")) # from line 22, col 153.
-            write(u'''</a></li>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['date']")) # from line 22, col 153.
+            write('''</a></li>
 \t\t\t\t\t\t<li><a href="#" onclick="changeMoviesortSearch(\'dated\'); return false" ><i class="material-icons material-icons-centered">vertical_align_top</i>''')
             _v = VFFSL(SL,"tstrings",True)['date'] # u"$tstrings['date']" on line 23, col 151
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['date']")) # from line 23, col 151.
-            write(u'''</a></li>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['date']")) # from line 23, col 151.
+            write('''</a></li>
 \t\t\t\t\t\t</ul>
 \t\t\t\t\t</li>
 \t\t\t\t</ul>
@@ -131,203 +132,203 @@
 
 ''')
             path = ''
-            write(u'''\t<div class="row clearfix">
+            write('''\t<div class="row clearfix">
 \t\t<div class="col-xs-12" id="movies">
 \t
 ''')
             count = 0
             for movie in VFFSL(SL,"movies",True): # generated from line 37, col 2
-                write(u'''
+                write('''
 \t<div class="row row-striped clearfix pad-top-15">
 \t\t<div class="col-xs-12 col-md-6">
 \t
 ''')
                 if VFFSL(SL,"movie.descriptionExtended",True) == '': # generated from line 42, col 2
                     if VFFSL(SL,"movie.eventname",True) != '': # generated from line 43, col 3
-                        write(u'''\t\t\t<b><i class="material-icons material-icons-centered">movie</i>
+                        write('''\t\t\t<b><i class="material-icons material-icons-centered">movie</i>
 \t\t\t''')
                         _v = VFFSL(SL,"movie.eventname",True) # u'$movie.eventname' on line 45, col 4
-                        if _v is not None: write(_filter(_v, rawExpr=u'$movie.eventname')) # from line 45, col 4.
-                        write(u''' - ''')
+                        if _v is not None: write(_filter(_v, rawExpr='$movie.eventname')) # from line 45, col 4.
+                        write(''' - ''')
                         _v = VFFSL(SL,"movie.servicename",True) # u'$movie.servicename' on line 45, col 23
-                        if _v is not None: write(_filter(_v, rawExpr=u'$movie.servicename')) # from line 45, col 23.
-                        write(u'''</b>
+                        if _v is not None: write(_filter(_v, rawExpr='$movie.servicename')) # from line 45, col 23.
+                        write('''</b>
 \t\t\t<span data-toggle="collapse" data-target="#eventid''')
                         _v = VFFSL(SL,"count",True) # u'$count' on line 46, col 54
-                        if _v is not None: write(_filter(_v, rawExpr=u'$count')) # from line 46, col 54.
-                        write(u'''" aria-expanded="false"aria-controls="collapseExample" style="cursor:pointer;"><b>
+                        if _v is not None: write(_filter(_v, rawExpr='$count')) # from line 46, col 54.
+                        write('''" aria-expanded="false"aria-controls="collapseExample" style="cursor:pointer;"><b>
 \t\t\t''')
                         _v = VFFSL(SL,"movie.description",True) # u'$movie.description' on line 47, col 4
-                        if _v is not None: write(_filter(_v, rawExpr=u'$movie.description')) # from line 47, col 4.
-                        write(u'''</b><i class="material-icons material-icons-centered">expand_more</i></span>
+                        if _v is not None: write(_filter(_v, rawExpr='$movie.description')) # from line 47, col 4.
+                        write('''</b><i class="material-icons material-icons-centered">expand_more</i></span>
 ''')
                     else: # generated from line 48, col 3
-                        write(u'''\t\t\t<b><i class="material-icons material-icons-centered">movie</i>
+                        write('''\t\t\t<b><i class="material-icons material-icons-centered">movie</i>
 \t\t\t''')
                         _v = VFFSL(SL,"movie.filename",True) # u'$movie.filename' on line 50, col 4
-                        if _v is not None: write(_filter(_v, rawExpr=u'$movie.filename')) # from line 50, col 4.
-                        write(u'''</b>
+                        if _v is not None: write(_filter(_v, rawExpr='$movie.filename')) # from line 50, col 4.
+                        write('''</b>
 \t\t\t<span data-toggle="collapse" data-target="#eventid''')
                         _v = VFFSL(SL,"count",True) # u'$count' on line 51, col 54
-                        if _v is not None: write(_filter(_v, rawExpr=u'$count')) # from line 51, col 54.
-                        write(u'''" aria-expanded="false"aria-controls="collapseExample" style="cursor:pointer;"><b>
+                        if _v is not None: write(_filter(_v, rawExpr='$count')) # from line 51, col 54.
+                        write('''" aria-expanded="false"aria-controls="collapseExample" style="cursor:pointer;"><b>
 \t\t\t''')
                         _v = VFFSL(SL,"movie.description",True) # u'$movie.description' on line 52, col 4
-                        if _v is not None: write(_filter(_v, rawExpr=u'$movie.description')) # from line 52, col 4.
-                        write(u'''</b><i class="material-icons material-icons-centered">expand_more</i></span>
+                        if _v is not None: write(_filter(_v, rawExpr='$movie.description')) # from line 52, col 4.
+                        write('''</b><i class="material-icons material-icons-centered">expand_more</i></span>
 ''')
                 elif VFFSL(SL,"movie.eventname",True) != '': # generated from line 54, col 2
-                    write(u'''\t\t<b><i class="material-icons material-icons-centered">movie</i>''')
+                    write('''\t\t<b><i class="material-icons material-icons-centered">movie</i>''')
                     _v = VFFSL(SL,"movie.eventname",True) # u'$movie.eventname' on line 55, col 65
-                    if _v is not None: write(_filter(_v, rawExpr=u'$movie.eventname')) # from line 55, col 65.
-                    write(u''' - ''')
+                    if _v is not None: write(_filter(_v, rawExpr='$movie.eventname')) # from line 55, col 65.
+                    write(''' - ''')
                     _v = VFFSL(SL,"movie.servicename",True) # u'$movie.servicename' on line 55, col 84
-                    if _v is not None: write(_filter(_v, rawExpr=u'$movie.servicename')) # from line 55, col 84.
-                    write(u'''</b>
+                    if _v is not None: write(_filter(_v, rawExpr='$movie.servicename')) # from line 55, col 84.
+                    write('''</b>
 ''')
                 else: # generated from line 56, col 2
-                    write(u'''\t\t<b><i class="material-icons material-icons-centered">movie</i>''')
+                    write('''\t\t<b><i class="material-icons material-icons-centered">movie</i>''')
                     _v = VFFSL(SL,"movie.filename",True) # u'$movie.filename' on line 57, col 65
-                    if _v is not None: write(_filter(_v, rawExpr=u'$movie.filename')) # from line 57, col 65.
-                    write(u'''</b>
-''')
-                write(u'''\t</div>
+                    if _v is not None: write(_filter(_v, rawExpr='$movie.filename')) # from line 57, col 65.
+                    write('''</b>
+''')
+                write('''\t</div>
 \t<div class="col-xs-12 col-md-3">
 ''')
                 if VFFSL(SL,"movie.eventname",True) != '': # generated from line 61, col 2
                     da = VFFSL(SL,"tstrings",True)[("day_" + (time.strftime("%w", time.localtime(VFFSL(SL,"movie.recordingtime",True)))))]
-                    write(u'''\t\t<span>''')
+                    write('''\t\t<span>''')
                     _v = VFFSL(SL,"da",True) # u'$da' on line 63, col 9
-                    if _v is not None: write(_filter(_v, rawExpr=u'$da')) # from line 63, col 9.
-                    write(u'''. ''')
+                    if _v is not None: write(_filter(_v, rawExpr='$da')) # from line 63, col 9.
+                    write('''. ''')
                     _v = VFFSL(SL,"movie.begintime",True) # u'$movie.begintime' on line 63, col 14
-                    if _v is not None: write(_filter(_v, rawExpr=u'$movie.begintime')) # from line 63, col 14.
-                    write(u''' | ''')
+                    if _v is not None: write(_filter(_v, rawExpr='$movie.begintime')) # from line 63, col 14.
+                    write(''' | ''')
                     _v = VFFSL(SL,"movie.length",True) # u'$movie.length' on line 63, col 33
-                    if _v is not None: write(_filter(_v, rawExpr=u'$movie.length')) # from line 63, col 33.
-                    write(u''' min. / ''')
+                    if _v is not None: write(_filter(_v, rawExpr='$movie.length')) # from line 63, col 33.
+                    write(''' min. / ''')
                     _v = VFFSL(SL,"movie.filesize_readable",True) # u'$movie.filesize_readable' on line 63, col 54
-                    if _v is not None: write(_filter(_v, rawExpr=u'$movie.filesize_readable')) # from line 63, col 54.
-                    write(u'''</span>
-''')
-                write(u'''\t</div>
+                    if _v is not None: write(_filter(_v, rawExpr='$movie.filesize_readable')) # from line 63, col 54.
+                    write('''</span>
+''')
+                write('''\t</div>
 \t<div class="col-xs-12 col-md-3 align-right">
 \t
 \t\t<a class="theme-link-color theme-link-col-''')
                 _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 68, col 45
-                if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 68, col 45.
-                write(u'''" href=\'#\' onClick="playRecording(\'''')
+                if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 68, col 45.
+                write('''" href=\'#\' onClick="playRecording(\'''')
                 _v = VFFSL(SL,"quote",False)(VFFSL(SL,"movie.serviceref",True)) # u'$quote($movie.serviceref)' on line 68, col 90
-                if _v is not None: write(_filter(_v, rawExpr=u'$quote($movie.serviceref)')) # from line 68, col 90.
-                write(u'''\');" title="''')
+                if _v is not None: write(_filter(_v, rawExpr='$quote($movie.serviceref)')) # from line 68, col 90.
+                write('''\');" title="''')
                 _v = VFFSL(SL,"tstrings",True)['playback'] # u"$tstrings['playback']" on line 68, col 127
-                if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['playback']")) # from line 68, col 127.
-                write(u'''"><i class="material-icons material-icons-centered">play_circle_outline</i></a>
+                if _v is not None: write(_filter(_v, rawExpr="$tstrings['playback']")) # from line 68, col 127.
+                write('''"><i class="material-icons material-icons-centered">play_circle_outline</i></a>
 ''')
                 if VFFSL(SL,"transcoding",True): # generated from line 69, col 3
-                    write(u'''\t\t<a class="theme-link-color theme-link-col-''')
+                    write('''\t\t<a class="theme-link-color theme-link-col-''')
                     _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 70, col 45
-                    if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 70, col 45.
-                    write(u'''" href="#" onclick="jumper80(\'''')
+                    if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 70, col 45.
+                    write('''" href="#" onclick="jumper80(\'''')
                     _v = VFFSL(SL,"quote",False)(VFFSL(SL,"movie.filename",True)) # u'$quote($movie.filename)' on line 70, col 85
-                    if _v is not None: write(_filter(_v, rawExpr=u'$quote($movie.filename)')) # from line 70, col 85.
-                    write(u'''\');" title="''')
+                    if _v is not None: write(_filter(_v, rawExpr='$quote($movie.filename)')) # from line 70, col 85.
+                    write('''\');" title="''')
                     _v = VFFSL(SL,"tstrings",True)['stream'] # u"$tstrings['stream']" on line 70, col 120
-                    if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['stream']")) # from line 70, col 120.
-                    write(u''': ''')
+                    if _v is not None: write(_filter(_v, rawExpr="$tstrings['stream']")) # from line 70, col 120.
+                    write(''': ''')
                     _v = VFFSL(SL,"movie.eventname",True) # u'$movie.eventname' on line 70, col 141
-                    if _v is not None: write(_filter(_v, rawExpr=u'$movie.eventname')) # from line 70, col 141.
-                    write(u'''"><i class="material-icons material-icons-centered">tv</i></a>
+                    if _v is not None: write(_filter(_v, rawExpr='$movie.eventname')) # from line 70, col 141.
+                    write('''"><i class="material-icons material-icons-centered">tv</i></a>
 \t\t<a class="theme-link-color theme-link-col-''')
                     _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 71, col 45
-                    if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 71, col 45.
-                    write(u'''" href="#" onclick="jumper8003(\'''')
+                    if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 71, col 45.
+                    write('''" href="#" onclick="jumper8003(\'''')
                     _v = VFFSL(SL,"quote",False)(VFFSL(SL,"movie.filename",True)) # u'$quote($movie.filename)' on line 71, col 87
-                    if _v is not None: write(_filter(_v, rawExpr=u'$quote($movie.filename)')) # from line 71, col 87.
-                    write(u'''\');" title="''')
+                    if _v is not None: write(_filter(_v, rawExpr='$quote($movie.filename)')) # from line 71, col 87.
+                    write('''\');" title="''')
                     _v = VFFSL(SL,"tstrings",True)['stream'] # u"$tstrings['stream']" on line 71, col 122
-                    if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['stream']")) # from line 71, col 122.
-                    write(u''' (''')
+                    if _v is not None: write(_filter(_v, rawExpr="$tstrings['stream']")) # from line 71, col 122.
+                    write(''' (''')
                     _v = VFFSL(SL,"tstrings",True)['transcoded'] # u"$tstrings['transcoded']" on line 71, col 143
-                    if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['transcoded']")) # from line 71, col 143.
-                    write(u'''): ''')
+                    if _v is not None: write(_filter(_v, rawExpr="$tstrings['transcoded']")) # from line 71, col 143.
+                    write('''): ''')
                     _v = VFFSL(SL,"movie.eventname",True) # u'$movie.eventname' on line 71, col 169
-                    if _v is not None: write(_filter(_v, rawExpr=u'$movie.eventname')) # from line 71, col 169.
-                    write(u'''"><i class="material-icons material-icons-centered">phone_android</i></a>
+                    if _v is not None: write(_filter(_v, rawExpr='$movie.eventname')) # from line 71, col 169.
+                    write('''"><i class="material-icons material-icons-centered">phone_android</i></a>
 ''')
                 else: # generated from line 72, col 3
-                    write(u'''\t\t<a class="theme-link-color theme-link-col-''')
+                    write('''\t\t<a class="theme-link-color theme-link-col-''')
                     _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 73, col 45
-                    if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 73, col 45.
-                    write(u'''" target="_blank" href=\'web/ts.m3u?file=''')
+                    if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 73, col 45.
+                    write('''" target="_blank" href=\'web/ts.m3u?file=''')
                     _v = VFFSL(SL,"quote",False)(VFFSL(SL,"movie.filename",True)) # u'$quote($movie.filename)' on line 73, col 95
-                    if _v is not None: write(_filter(_v, rawExpr=u'$quote($movie.filename)')) # from line 73, col 95.
-                    write(u'''\' title="''')
+                    if _v is not None: write(_filter(_v, rawExpr='$quote($movie.filename)')) # from line 73, col 95.
+                    write('''\' title="''')
                     _v = VFFSL(SL,"tstrings",True)['stream'] # u"$tstrings['stream']" on line 73, col 127
-                    if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['stream']")) # from line 73, col 127.
-                    write(u''' ''')
+                    if _v is not None: write(_filter(_v, rawExpr="$tstrings['stream']")) # from line 73, col 127.
+                    write(''' ''')
                     _v = VFFSL(SL,"movie.eventname",True) # u'$movie.eventname' on line 73, col 147
-                    if _v is not None: write(_filter(_v, rawExpr=u'$movie.eventname')) # from line 73, col 147.
-                    write(u'''"><i class="material-icons material-icons-centered">tv</i></a>
-''')
-                write(u'''\t\t
+                    if _v is not None: write(_filter(_v, rawExpr='$movie.eventname')) # from line 73, col 147.
+                    write('''"><i class="material-icons material-icons-centered">tv</i></a>
+''')
+                write('''\t\t
 ''')
                 eventname_escaped = VFN(VFFSL(SL,"movie.eventname",True),"replace",False)("'", r"\'")
-                write(u'''\t\t<a class="theme-link-color theme-link-col-''')
+                write('''\t\t<a class="theme-link-color theme-link-col-''')
                 _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 77, col 45
-                if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 77, col 45.
-                write(u'''" href=\'/file?action=download&file=''')
+                if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 77, col 45.
+                write('''" href=\'/file?action=download&file=''')
                 _v = VFFSL(SL,"quote",False)(VFFSL(SL,"movie.filename",True)) # u'$quote($movie.filename)' on line 77, col 90
-                if _v is not None: write(_filter(_v, rawExpr=u'$quote($movie.filename)')) # from line 77, col 90.
-                write(u'''\' title="''')
+                if _v is not None: write(_filter(_v, rawExpr='$quote($movie.filename)')) # from line 77, col 90.
+                write('''\' title="''')
                 _v = VFFSL(SL,"tstrings",True)['download'] # u"$tstrings['download']" on line 77, col 122
-                if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['download']")) # from line 77, col 122.
-                write(u''' ''')
+                if _v is not None: write(_filter(_v, rawExpr="$tstrings['download']")) # from line 77, col 122.
+                write(''' ''')
                 _v = VFFSL(SL,"movie.eventname",True) # u'$movie.eventname' on line 77, col 144
-                if _v is not None: write(_filter(_v, rawExpr=u'$movie.eventname')) # from line 77, col 144.
-                write(u'''"><i class="material-icons material-icons-centered">cloud_download</i></a>
+                if _v is not None: write(_filter(_v, rawExpr='$movie.eventname')) # from line 77, col 144.
+                write('''"><i class="material-icons material-icons-centered">cloud_download</i></a>
 \t\t<a class="theme-link-color theme-link-col-''')
                 _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 78, col 45
-                if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 78, col 45.
-                write(u'''" href=\'#\' onClick="renameMovie(\'''')
+                if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 78, col 45.
+                write('''" href=\'#\' onClick="renameMovie(\'''')
                 _v = VFFSL(SL,"quote",False)(VFFSL(SL,"movie.serviceref",True)) # u'$quote($movie.serviceref)' on line 78, col 88
-                if _v is not None: write(_filter(_v, rawExpr=u'$quote($movie.serviceref)')) # from line 78, col 88.
-                write(u"""','""")
+                if _v is not None: write(_filter(_v, rawExpr='$quote($movie.serviceref)')) # from line 78, col 88.
+                write("""','""")
                 _v = VFFSL(SL,"eventname_escaped",True) # u'$eventname_escaped' on line 78, col 116
-                if _v is not None: write(_filter(_v, rawExpr=u'$eventname_escaped')) # from line 78, col 116.
-                write(u'''\');" title="''')
+                if _v is not None: write(_filter(_v, rawExpr='$eventname_escaped')) # from line 78, col 116.
+                write('''\');" title="''')
                 _v = VFFSL(SL,"tstrings",True)['rename_recording'] # u"$tstrings['rename_recording']" on line 78, col 146
-                if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['rename_recording']")) # from line 78, col 146.
-                write(u'''"><i class="material-icons material-icons-centered">edit</i></a>
+                if _v is not None: write(_filter(_v, rawExpr="$tstrings['rename_recording']")) # from line 78, col 146.
+                write('''"><i class="material-icons material-icons-centered">edit</i></a>
 \t\t<a class="theme-link-color theme-link-col-''')
                 _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 79, col 45
-                if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 79, col 45.
-                write(u'''" href=\'#\' onClick="deleteMovie(\'''')
+                if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 79, col 45.
+                write('''" href=\'#\' onClick="deleteMovie(\'''')
                 _v = VFFSL(SL,"quote",False)(VFFSL(SL,"movie.serviceref",True)) # u'$quote($movie.serviceref)' on line 79, col 88
-                if _v is not None: write(_filter(_v, rawExpr=u'$quote($movie.serviceref)')) # from line 79, col 88.
-                write(u"""', '""")
+                if _v is not None: write(_filter(_v, rawExpr='$quote($movie.serviceref)')) # from line 79, col 88.
+                write("""', '""")
                 _v = VFFSL(SL,"count",True) # u'$count' on line 79, col 117
-                if _v is not None: write(_filter(_v, rawExpr=u'$count')) # from line 79, col 117.
-                write(u"""', '""")
+                if _v is not None: write(_filter(_v, rawExpr='$count')) # from line 79, col 117.
+                write("""', '""")
                 _v = VFFSL(SL,"eventname_escaped",True) # u'$eventname_escaped' on line 79, col 127
-                if _v is not None: write(_filter(_v, rawExpr=u'$eventname_escaped')) # from line 79, col 127.
-                write(u'''\'); return false;" title="''')
+                if _v is not None: write(_filter(_v, rawExpr='$eventname_escaped')) # from line 79, col 127.
+                write('''\'); return false;" title="''')
                 _v = VFFSL(SL,"tstrings",True)['delete_recording'] # u"$tstrings['delete_recording']" on line 79, col 171
-                if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['delete_recording']")) # from line 79, col 171.
-                write(u'''"><i class="material-icons material-icons-centered">delete</i></a>
+                if _v is not None: write(_filter(_v, rawExpr="$tstrings['delete_recording']")) # from line 79, col 171.
+                write('''"><i class="material-icons material-icons-centered">delete</i></a>
 \t</div>
 \t<div class="col-xs-12 collapse" id="eventid''')
                 _v = VFFSL(SL,"count",True) # u'$count' on line 81, col 45
-                if _v is not None: write(_filter(_v, rawExpr=u'$count')) # from line 81, col 45.
-                write(u'''">
+                if _v is not None: write(_filter(_v, rawExpr='$count')) # from line 81, col 45.
+                write('''">
 \t<p>''')
                 _v = VFFSL(SL,"movie.descriptionExtended",True) # u'$movie.descriptionExtended' on line 82, col 5
-                if _v is not None: write(_filter(_v, rawExpr=u'$movie.descriptionExtended')) # from line 82, col 5.
-                write(u'''</p>
+                if _v is not None: write(_filter(_v, rawExpr='$movie.descriptionExtended')) # from line 82, col 5.
+                write('''</p>
 \t</div></div>
 ''')
                 count = VFFSL(SL,"count",True) + 1
-            write(u'''\t\t\t</div>
+            write('''\t\t\t</div>
 \t\t</div>
 \t</div>
 </div>
@@ -336,15 +337,15 @@
 
 ''')
         else: # generated from line 93, col 1
-            write(u'''\t<div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
+            write('''\t<div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
 \t\t<div class="card">
 \t\t\t<div class="header">
 \t\t\t\t<div class="row clearfix">
 \t\t\t\t\t<div class="col-xs-12 col-sm-6">
 \t\t\t\t\t\t<h2><i class="material-icons material-icons-centered">movie</i>''')
             _v = VFFSL(SL,"tstrings",True)['movies'] # u"$tstrings['movies']" on line 99, col 70
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['movies']")) # from line 99, col 70.
-            write(u'''</h2>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['movies']")) # from line 99, col 70.
+            write('''</h2>
 \t\t\t\t\t</div>
 \t\t\t\t</div>
 \t\t\t\t<ul class="header-dropdown m-r--5">
@@ -354,20 +355,20 @@
 \t\t\t\t\t\t<ul class="dropdown-menu pull-right" id="timerbuttons">
 \t\t\t\t\t\t<li><a href="#" onclick="changeMoviesortSearch(\'name\'); return false" ><i class="material-icons material-icons-centered">vertical_align_bottom</i>''')
             _v = VFFSL(SL,"tstrings",True)['name'] # u"$tstrings['name']" on line 107, col 153
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['name']")) # from line 107, col 153.
-            write(u'''</a></li>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['name']")) # from line 107, col 153.
+            write('''</a></li>
 \t\t\t\t\t\t<li><a href="#" onclick="changeMoviesortSearch(\'named\'); return false" ><i class="material-icons material-icons-centered">vertical_align_top</i>''')
             _v = VFFSL(SL,"tstrings",True)['name'] # u"$tstrings['name']" on line 108, col 151
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['name']")) # from line 108, col 151.
-            write(u'''</a></li>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['name']")) # from line 108, col 151.
+            write('''</a></li>
 \t\t\t\t\t\t<li><a href="#" onclick="changeMoviesortSearch(\'date\'); return false" ><i class="material-icons material-icons-centered">vertical_align_bottom</i>''')
             _v = VFFSL(SL,"tstrings",True)['date'] # u"$tstrings['date']" on line 109, col 153
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['date']")) # from line 109, col 153.
-            write(u'''</a></li>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['date']")) # from line 109, col 153.
+            write('''</a></li>
 \t\t\t\t\t\t<li><a href="#" onclick="changeMoviesortSearch(\'dated\'); return false" ><i class="material-icons material-icons-centered">vertical_align_top</i>''')
             _v = VFFSL(SL,"tstrings",True)['date'] # u"$tstrings['date']" on line 110, col 151
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['date']")) # from line 110, col 151.
-            write(u'''</a></li>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['date']")) # from line 110, col 151.
+            write('''</a></li>
 \t\t\t\t\t\t</ul>
 \t\t\t\t\t</li>
 \t\t\t\t</ul>
@@ -377,17 +378,17 @@
 \t\t\t\t<div id="tvcontentmain">
 ''')
             path = ''
-            write(u'''\t<div class="row clearfix">
+            write('''\t<div class="row clearfix">
 \t<div class="col-xs-12" id="movies">
 
 ''')
             count = 0
             for movie in VFFSL(SL,"movies",True): # generated from line 123, col 2
-                write(u'''\t
+                write('''\t
 \t<div class="card" id="''')
                 _v = VFFSL(SL,"count",True) # u'$count' on line 125, col 24
-                if _v is not None: write(_filter(_v, rawExpr=u'$count')) # from line 125, col 24.
-                write(u'''">
+                if _v is not None: write(_filter(_v, rawExpr='$count')) # from line 125, col 24.
+                write('''">
 \t<div class="header">
 \t<div class="row clearfix">
 \t<div class="col-xs-8">
@@ -395,212 +396,212 @@
 ''')
                 if VFFSL(SL,"movie.eventname",True) != '': # generated from line 130, col 2
                     da = VFFSL(SL,"tstrings",True)[("day_" + (time.strftime("%w", time.localtime(VFFSL(SL,"movie.recordingtime",True)))))]
-                    write(u'''\t\t<span>''')
+                    write('''\t\t<span>''')
                     _v = VFFSL(SL,"da",True) # u'$da' on line 132, col 9
-                    if _v is not None: write(_filter(_v, rawExpr=u'$da')) # from line 132, col 9.
-                    write(u'''. ''')
+                    if _v is not None: write(_filter(_v, rawExpr='$da')) # from line 132, col 9.
+                    write('''. ''')
                     _v = VFFSL(SL,"movie.begintime",True) # u'$movie.begintime' on line 132, col 14
-                    if _v is not None: write(_filter(_v, rawExpr=u'$movie.begintime')) # from line 132, col 14.
-                    write(u''' | ''')
+                    if _v is not None: write(_filter(_v, rawExpr='$movie.begintime')) # from line 132, col 14.
+                    write(''' | ''')
                     _v = VFFSL(SL,"movie.length",True) # u'$movie.length' on line 132, col 33
-                    if _v is not None: write(_filter(_v, rawExpr=u'$movie.length')) # from line 132, col 33.
-                    write(u''' min. / ''')
+                    if _v is not None: write(_filter(_v, rawExpr='$movie.length')) # from line 132, col 33.
+                    write(''' min. / ''')
                     _v = VFFSL(SL,"movie.filesize_readable",True) # u'$movie.filesize_readable' on line 132, col 54
-                    if _v is not None: write(_filter(_v, rawExpr=u'$movie.filesize_readable')) # from line 132, col 54.
-                    write(u'''</span>
-''')
-                write(u'''
+                    if _v is not None: write(_filter(_v, rawExpr='$movie.filesize_readable')) # from line 132, col 54.
+                    write('''</span>
+''')
+                write('''
 ''')
                 if VFFSL(SL,"movie.descriptionExtended",True) == '': # generated from line 135, col 2
                     if VFFSL(SL,"movie.eventname",True) != '': # generated from line 136, col 3
-                        write(u'''\t\t\t<b><i class="material-icons material-icons-centered">movie</i>
+                        write('''\t\t\t<b><i class="material-icons material-icons-centered">movie</i>
 \t\t\t''')
                         _v = VFFSL(SL,"movie.eventname",True) # u'$movie.eventname' on line 138, col 4
-                        if _v is not None: write(_filter(_v, rawExpr=u'$movie.eventname')) # from line 138, col 4.
-                        write(u''' - ''')
+                        if _v is not None: write(_filter(_v, rawExpr='$movie.eventname')) # from line 138, col 4.
+                        write(''' - ''')
                         _v = VFFSL(SL,"movie.servicename",True) # u'$movie.servicename' on line 138, col 23
-                        if _v is not None: write(_filter(_v, rawExpr=u'$movie.servicename')) # from line 138, col 23.
-                        write(u'''</b>
+                        if _v is not None: write(_filter(_v, rawExpr='$movie.servicename')) # from line 138, col 23.
+                        write('''</b>
 \t\t\t<span data-toggle="collapse" data-target="#eventid''')
                         _v = VFFSL(SL,"count",True) # u'$count' on line 139, col 54
-                        if _v is not None: write(_filter(_v, rawExpr=u'$count')) # from line 139, col 54.
-                        write(u'''" aria-expanded="false"aria-controls="collapseExample" style="cursor:pointer;"><b>
+                        if _v is not None: write(_filter(_v, rawExpr='$count')) # from line 139, col 54.
+                        write('''" aria-expanded="false"aria-controls="collapseExample" style="cursor:pointer;"><b>
 \t\t\t''')
                         _v = VFFSL(SL,"movie.description",True) # u'$movie.description' on line 140, col 4
-                        if _v is not None: write(_filter(_v, rawExpr=u'$movie.description')) # from line 140, col 4.
-                        write(u'''</b><i class="material-icons material-icons-centered">expand_more</i></span>
+                        if _v is not None: write(_filter(_v, rawExpr='$movie.description')) # from line 140, col 4.
+                        write('''</b><i class="material-icons material-icons-centered">expand_more</i></span>
 ''')
                     else: # generated from line 141, col 3
-                        write(u'''\t\t\t<b><i class="material-icons material-icons-centered">movie</i>
+                        write('''\t\t\t<b><i class="material-icons material-icons-centered">movie</i>
 \t\t\t''')
                         _v = VFFSL(SL,"movie.filename",True) # u'$movie.filename' on line 143, col 4
-                        if _v is not None: write(_filter(_v, rawExpr=u'$movie.filename')) # from line 143, col 4.
-                        write(u'''</b>
+                        if _v is not None: write(_filter(_v, rawExpr='$movie.filename')) # from line 143, col 4.
+                        write('''</b>
 \t\t\t<span data-toggle="collapse" data-target="#eventid''')
                         _v = VFFSL(SL,"count",True) # u'$count' on line 144, col 54
-                        if _v is not None: write(_filter(_v, rawExpr=u'$count')) # from line 144, col 54.
-                        write(u'''" aria-expanded="false"aria-controls="collapseExample" style="cursor:pointer;"><b>
+                        if _v is not None: write(_filter(_v, rawExpr='$count')) # from line 144, col 54.
+                        write('''" aria-expanded="false"aria-controls="collapseExample" style="cursor:pointer;"><b>
 \t\t\t''')
                         _v = VFFSL(SL,"movie.description",True) # u'$movie.description' on line 145, col 4
-                        if _v is not None: write(_filter(_v, rawExpr=u'$movie.description')) # from line 145, col 4.
-                        write(u'''</b><i class="material-icons material-icons-centered">expand_more</i></span>
+                        if _v is not None: write(_filter(_v, rawExpr='$movie.description')) # from line 145, col 4.
+                        write('''</b><i class="material-icons material-icons-centered">expand_more</i></span>
 ''')
                 elif VFFSL(SL,"movie.eventname",True) != '': # generated from line 147, col 2
-                    write(u'''\t\t<b><i class="material-icons material-icons-centered">movie</i>''')
+                    write('''\t\t<b><i class="material-icons material-icons-centered">movie</i>''')
                     _v = VFFSL(SL,"movie.eventname",True) # u'$movie.eventname' on line 148, col 65
-                    if _v is not None: write(_filter(_v, rawExpr=u'$movie.eventname')) # from line 148, col 65.
-                    write(u''' - ''')
+                    if _v is not None: write(_filter(_v, rawExpr='$movie.eventname')) # from line 148, col 65.
+                    write(''' - ''')
                     _v = VFFSL(SL,"movie.servicename",True) # u'$movie.servicename' on line 148, col 84
-                    if _v is not None: write(_filter(_v, rawExpr=u'$movie.servicename')) # from line 148, col 84.
-                    write(u'''</b>
+                    if _v is not None: write(_filter(_v, rawExpr='$movie.servicename')) # from line 148, col 84.
+                    write('''</b>
 ''')
                 else: # generated from line 149, col 2
-                    write(u'''\t\t<b><i class="material-icons material-icons-centered">movie</i>''')
+                    write('''\t\t<b><i class="material-icons material-icons-centered">movie</i>''')
                     _v = VFFSL(SL,"movie.filename",True) # u'$movie.filename' on line 150, col 65
-                    if _v is not None: write(_filter(_v, rawExpr=u'$movie.filename')) # from line 150, col 65.
-                    write(u'''</b>
-''')
-                write(u'''\t</div>
+                    if _v is not None: write(_filter(_v, rawExpr='$movie.filename')) # from line 150, col 65.
+                    write('''</b>
+''')
+                write('''\t</div>
 \t<div class="col-xs-12 col-md-3">
 ''')
                 if VFFSL(SL,"movie.eventname",True) != '': # generated from line 154, col 2
-                    write(u'''\t\t<h2><i class="material-icons material-icons-centered">movie</i>''')
+                    write('''\t\t<h2><i class="material-icons material-icons-centered">movie</i>''')
                     _v = VFFSL(SL,"movie.eventname",True) # u'$movie.eventname' on line 155, col 66
-                    if _v is not None: write(_filter(_v, rawExpr=u'$movie.eventname')) # from line 155, col 66.
-                    write(u''' - ''')
+                    if _v is not None: write(_filter(_v, rawExpr='$movie.eventname')) # from line 155, col 66.
+                    write(''' - ''')
                     _v = VFFSL(SL,"movie.servicename",True) # u'$movie.servicename' on line 155, col 85
-                    if _v is not None: write(_filter(_v, rawExpr=u'$movie.servicename')) # from line 155, col 85.
-                    write(u'''</h2>
+                    if _v is not None: write(_filter(_v, rawExpr='$movie.servicename')) # from line 155, col 85.
+                    write('''</h2>
 ''')
                 else: # generated from line 156, col 2
-                    write(u'''\t\t<h2><i class="material-icons material-icons-centered">movie</i>''')
+                    write('''\t\t<h2><i class="material-icons material-icons-centered">movie</i>''')
                     _v = VFFSL(SL,"movie.filename",True) # u'$movie.filename' on line 157, col 66
-                    if _v is not None: write(_filter(_v, rawExpr=u'$movie.filename')) # from line 157, col 66.
-                    write(u'''</h2>
-''')
-                write(u'''\t</div>
+                    if _v is not None: write(_filter(_v, rawExpr='$movie.filename')) # from line 157, col 66.
+                    write('''</h2>
+''')
+                write('''\t</div>
 \t<div class="col-xs-4">
 \t<ul class="header-dropdown m-r--5">
 \t\t<li><span role="button"><a href=\'#\' onClick="playRecording(\'''')
                 _v = VFFSL(SL,"quote",False)(VFFSL(SL,"movie.serviceref",True)) # u'$quote($movie.serviceref)' on line 162, col 63
-                if _v is not None: write(_filter(_v, rawExpr=u'$quote($movie.serviceref)')) # from line 162, col 63.
-                write(u'''\');" title="''')
+                if _v is not None: write(_filter(_v, rawExpr='$quote($movie.serviceref)')) # from line 162, col 63.
+                write('''\');" title="''')
                 _v = VFFSL(SL,"tstrings",True)['playback'] # u"$tstrings['playback']" on line 162, col 100
-                if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['playback']")) # from line 162, col 100.
-                write(u'''"><i class="material-icons material-icons-centered">play_circle_outline</i></a></span></li>
+                if _v is not None: write(_filter(_v, rawExpr="$tstrings['playback']")) # from line 162, col 100.
+                write('''"><i class="material-icons material-icons-centered">play_circle_outline</i></a></span></li>
 ''')
                 if VFFSL(SL,"transcoding",True): # generated from line 163, col 3
-                    write(u'''\t\t<li><span role="button"><a href="#" onclick="jumper80(\'''')
+                    write('''\t\t<li><span role="button"><a href="#" onclick="jumper80(\'''')
                     _v = VFFSL(SL,"quote",False)(VFFSL(SL,"movie.filename",True)) # u'$quote($movie.filename)' on line 164, col 58
-                    if _v is not None: write(_filter(_v, rawExpr=u'$quote($movie.filename)')) # from line 164, col 58.
-                    write(u'''\');" title="''')
+                    if _v is not None: write(_filter(_v, rawExpr='$quote($movie.filename)')) # from line 164, col 58.
+                    write('''\');" title="''')
                     _v = VFFSL(SL,"tstrings",True)['stream'] # u"$tstrings['stream']" on line 164, col 93
-                    if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['stream']")) # from line 164, col 93.
-                    write(u''': ''')
+                    if _v is not None: write(_filter(_v, rawExpr="$tstrings['stream']")) # from line 164, col 93.
+                    write(''': ''')
                     _v = VFFSL(SL,"movie.eventname",True) # u'$movie.eventname' on line 164, col 114
-                    if _v is not None: write(_filter(_v, rawExpr=u'$movie.eventname')) # from line 164, col 114.
-                    write(u'''"><i class="material-icons material-icons-centered">tv</i></a></span></li>
+                    if _v is not None: write(_filter(_v, rawExpr='$movie.eventname')) # from line 164, col 114.
+                    write('''"><i class="material-icons material-icons-centered">tv</i></a></span></li>
 \t\t<li><span role="button"><a href="#" onclick="jumper8003(\'''')
                     _v = VFFSL(SL,"quote",False)(VFFSL(SL,"movie.filename",True)) # u'$quote($movie.filename)' on line 165, col 60
-                    if _v is not None: write(_filter(_v, rawExpr=u'$quote($movie.filename)')) # from line 165, col 60.
-                    write(u'''\');" title="''')
+                    if _v is not None: write(_filter(_v, rawExpr='$quote($movie.filename)')) # from line 165, col 60.
+                    write('''\');" title="''')
                     _v = VFFSL(SL,"tstrings",True)['stream'] # u"$tstrings['stream']" on line 165, col 95
-                    if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['stream']")) # from line 165, col 95.
-                    write(u''' (''')
+                    if _v is not None: write(_filter(_v, rawExpr="$tstrings['stream']")) # from line 165, col 95.
+                    write(''' (''')
                     _v = VFFSL(SL,"tstrings",True)['transcoded'] # u"$tstrings['transcoded']" on line 165, col 116
-                    if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['transcoded']")) # from line 165, col 116.
-                    write(u'''): ''')
+                    if _v is not None: write(_filter(_v, rawExpr="$tstrings['transcoded']")) # from line 165, col 116.
+                    write('''): ''')
                     _v = VFFSL(SL,"movie.eventname",True) # u'$movie.eventname' on line 165, col 142
-                    if _v is not None: write(_filter(_v, rawExpr=u'$movie.eventname')) # from line 165, col 142.
-                    write(u'''"><i class="material-icons material-icons-centered">phone_android</i></a></span></li>
+                    if _v is not None: write(_filter(_v, rawExpr='$movie.eventname')) # from line 165, col 142.
+                    write('''"><i class="material-icons material-icons-centered">phone_android</i></a></span></li>
 ''')
                 else: # generated from line 166, col 3
-                    write(u'''\t\t<li><span role="button"><a target="_blank" href=\'web/ts.m3u?file=''')
+                    write('''\t\t<li><span role="button"><a target="_blank" href=\'web/ts.m3u?file=''')
                     _v = VFFSL(SL,"quote",False)(VFFSL(SL,"movie.filename",True)) # u'$quote($movie.filename)' on line 167, col 68
-                    if _v is not None: write(_filter(_v, rawExpr=u'$quote($movie.filename)')) # from line 167, col 68.
-                    write(u'''\' title="''')
+                    if _v is not None: write(_filter(_v, rawExpr='$quote($movie.filename)')) # from line 167, col 68.
+                    write('''\' title="''')
                     _v = VFFSL(SL,"tstrings",True)['stream'] # u"$tstrings['stream']" on line 167, col 100
-                    if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['stream']")) # from line 167, col 100.
-                    write(u''' ''')
+                    if _v is not None: write(_filter(_v, rawExpr="$tstrings['stream']")) # from line 167, col 100.
+                    write(''' ''')
                     _v = VFFSL(SL,"movie.eventname",True) # u'$movie.eventname' on line 167, col 120
-                    if _v is not None: write(_filter(_v, rawExpr=u'$movie.eventname')) # from line 167, col 120.
-                    write(u'''"><i class="material-icons material-icons-centered">tv</i></a></span></li>
-''')
-                write(u'''
+                    if _v is not None: write(_filter(_v, rawExpr='$movie.eventname')) # from line 167, col 120.
+                    write('''"><i class="material-icons material-icons-centered">tv</i></a></span></li>
+''')
+                write('''
 ''')
                 eventname_escaped = VFN(VFFSL(SL,"movie.eventname",True),"replace",False)("'", r"\'")
-                write(u'''\t\t<li><span role="button"><a href=\'/file?action=download&file=''')
+                write('''\t\t<li><span role="button"><a href=\'/file?action=download&file=''')
                 _v = VFFSL(SL,"quote",False)(VFFSL(SL,"movie.filename",True)) # u'$quote($movie.filename)' on line 171, col 63
-                if _v is not None: write(_filter(_v, rawExpr=u'$quote($movie.filename)')) # from line 171, col 63.
-                write(u'''\' title="''')
+                if _v is not None: write(_filter(_v, rawExpr='$quote($movie.filename)')) # from line 171, col 63.
+                write('''\' title="''')
                 _v = VFFSL(SL,"tstrings",True)['download'] # u"$tstrings['download']" on line 171, col 95
-                if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['download']")) # from line 171, col 95.
-                write(u''' ''')
+                if _v is not None: write(_filter(_v, rawExpr="$tstrings['download']")) # from line 171, col 95.
+                write(''' ''')
                 _v = VFFSL(SL,"movie.eventname",True) # u'$movie.eventname' on line 171, col 117
-                if _v is not None: write(_filter(_v, rawExpr=u'$movie.eventname')) # from line 171, col 117.
-                write(u'''"><i class="material-icons material-icons-centered">cloud_download</i></a></span></li>
+                if _v is not None: write(_filter(_v, rawExpr='$movie.eventname')) # from line 171, col 117.
+                write('''"><i class="material-icons material-icons-centered">cloud_download</i></a></span></li>
 \t\t<li><span role="button"><a href=\'#\' onClick="renameMovie(\'''')
                 _v = VFFSL(SL,"quote",False)(VFFSL(SL,"movie.serviceref",True)) # u'$quote($movie.serviceref)' on line 172, col 61
-                if _v is not None: write(_filter(_v, rawExpr=u'$quote($movie.serviceref)')) # from line 172, col 61.
-                write(u"""','""")
+                if _v is not None: write(_filter(_v, rawExpr='$quote($movie.serviceref)')) # from line 172, col 61.
+                write("""','""")
                 _v = VFFSL(SL,"eventname_escaped",True) # u'$eventname_escaped' on line 172, col 89
-                if _v is not None: write(_filter(_v, rawExpr=u'$eventname_escaped')) # from line 172, col 89.
-                write(u'''\');" title="''')
+                if _v is not None: write(_filter(_v, rawExpr='$eventname_escaped')) # from line 172, col 89.
+                write('''\');" title="''')
                 _v = VFFSL(SL,"tstrings",True)['rename_recording'] # u"$tstrings['rename_recording']" on line 172, col 119
-                if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['rename_recording']")) # from line 172, col 119.
-                write(u'''"><i class="material-icons material-icons-centered">edit</i></a></span></li>
+                if _v is not None: write(_filter(_v, rawExpr="$tstrings['rename_recording']")) # from line 172, col 119.
+                write('''"><i class="material-icons material-icons-centered">edit</i></a></span></li>
 \t\t<li><span role="button"><a href=\'#\' onClick="deleteMovie(\'''')
                 _v = VFFSL(SL,"quote",False)(VFFSL(SL,"movie.serviceref",True)) # u'$quote($movie.serviceref)' on line 173, col 61
-                if _v is not None: write(_filter(_v, rawExpr=u'$quote($movie.serviceref)')) # from line 173, col 61.
-                write(u"""', '""")
+                if _v is not None: write(_filter(_v, rawExpr='$quote($movie.serviceref)')) # from line 173, col 61.
+                write("""', '""")
                 _v = VFFSL(SL,"count",True) # u'$count' on line 173, col 90
-                if _v is not None: write(_filter(_v, rawExpr=u'$count')) # from line 173, col 90.
-                write(u"""', '""")
+                if _v is not None: write(_filter(_v, rawExpr='$count')) # from line 173, col 90.
+                write("""', '""")
                 _v = VFFSL(SL,"eventname_escaped",True) # u'$eventname_escaped' on line 173, col 100
-                if _v is not None: write(_filter(_v, rawExpr=u'$eventname_escaped')) # from line 173, col 100.
-                write(u'''\'); return false;" title="''')
+                if _v is not None: write(_filter(_v, rawExpr='$eventname_escaped')) # from line 173, col 100.
+                write('''\'); return false;" title="''')
                 _v = VFFSL(SL,"tstrings",True)['delete_recording'] # u"$tstrings['delete_recording']" on line 173, col 144
-                if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['delete_recording']")) # from line 173, col 144.
-                write(u'''"><i class="material-icons material-icons-centered">delete</i></a></span></li>
+                if _v is not None: write(_filter(_v, rawExpr="$tstrings['delete_recording']")) # from line 173, col 144.
+                write('''"><i class="material-icons material-icons-centered">delete</i></a></span></li>
 \t</ul>
 \t</div></div>
 <div class="row clearfix" style="margin-bottom:-25px;">
 \t<div class="col-xs-8">
 ''')
                 da = VFFSL(SL,"tstrings",True)[("day_" + (time.strftime("%w", time.localtime(VFFSL(SL,"movie.recordingtime",True)))))]
-                write(u'''\t\t\t<span>''')
+                write('''\t\t\t<span>''')
                 _v = VFFSL(SL,"da",True) # u'$da' on line 179, col 10
-                if _v is not None: write(_filter(_v, rawExpr=u'$da')) # from line 179, col 10.
-                write(u'''</span>
+                if _v is not None: write(_filter(_v, rawExpr='$da')) # from line 179, col 10.
+                write('''</span>
 ''')
                 w = VFFSL(SL,"movie.lastseen",True)
                 size = '0'
                 if VFFSL(SL,"w",True) > 0: # generated from line 182, col 5
                     w = VFFSL(SL,"w",True) * 70 / 100
                     size = str(VFFSL(SL,"w",True))
-                    write(u'''\t\t\t\t\t<div class="ui-progressbar ui-corner-all ui-widget ui-widget-content">
+                    write('''\t\t\t\t\t<div class="ui-progressbar ui-corner-all ui-widget ui-widget-content">
 \t\t\t\t\t\t<div class="ui-progressbar-value ui-corner-left ui-widget-header" style="width: ''')
                     _v = VFFSL(SL,"size",True) # u'$size' on line 186, col 87
-                    if _v is not None: write(_filter(_v, rawExpr=u'$size')) # from line 186, col 87.
-                    write(u''';"></div>
+                    if _v is not None: write(_filter(_v, rawExpr='$size')) # from line 186, col 87.
+                    write(''';"></div>
 \t\t\t\t\t</div>
 ''')
-                write(u'''\t\t\t\t<div class="progress progress-striped" style="margin-bottom:0px;width:35%;max-width:200px;min-width:100px;height:10px;">
+                write('''\t\t\t\t<div class="progress progress-striped" style="margin-bottom:0px;width:35%;max-width:200px;min-width:100px;height:10px;">
 \t\t\t\t\t<div class="progress-bar bg-''')
                 _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 190, col 34
-                if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 190, col 34.
-                write(u'''" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width:''')
+                if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 190, col 34.
+                write('''" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width:''')
                 _v = VFFSL(SL,"size",True) # u'$size' on line 190, col 134
-                if _v is not None: write(_filter(_v, rawExpr=u'$size')) # from line 190, col 134.
-                write(u'''%;"></div>
+                if _v is not None: write(_filter(_v, rawExpr='$size')) # from line 190, col 134.
+                write('''%;"></div>
 \t\t\t\t</div>
 \t\t\t\t<span>''')
                 _v = VFFSL(SL,"movie.length",True) # u'$movie.length' on line 192, col 11
-                if _v is not None: write(_filter(_v, rawExpr=u'$movie.length')) # from line 192, col 11.
-                write(u''' min. / ''')
+                if _v is not None: write(_filter(_v, rawExpr='$movie.length')) # from line 192, col 11.
+                write(''' min. / ''')
                 _v = VFFSL(SL,"movie.filesize_readable",True) # u'$movie.filesize_readable' on line 192, col 32
-                if _v is not None: write(_filter(_v, rawExpr=u'$movie.filesize_readable')) # from line 192, col 32.
-                write(u'''</span>
+                if _v is not None: write(_filter(_v, rawExpr='$movie.filesize_readable')) # from line 192, col 32.
+                write('''</span>
 \t</div>
 \t</div>
 
@@ -610,19 +611,19 @@
 \t\t\t\t\t\t\t\t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t\t\t\t\t\t\t\t<span data-toggle="collapse" data-target="#eventid''')
                 _v = VFFSL(SL,"count",True) # u'$count' on line 200, col 63
-                if _v is not None: write(_filter(_v, rawExpr=u'$count')) # from line 200, col 63.
-                write(u'''" aria-expanded="false"aria-controls="collapseExample" style="cursor:pointer;"><b>''')
+                if _v is not None: write(_filter(_v, rawExpr='$count')) # from line 200, col 63.
+                write('''" aria-expanded="false"aria-controls="collapseExample" style="cursor:pointer;"><b>''')
                 _v = VFFSL(SL,"movie.description",True) # u'$movie.description' on line 200, col 151
-                if _v is not None: write(_filter(_v, rawExpr=u'$movie.description')) # from line 200, col 151.
-                write(u'''</b><i class="material-icons material-icons-centered">expand_more</i></span>
+                if _v is not None: write(_filter(_v, rawExpr='$movie.description')) # from line 200, col 151.
+                write('''</b><i class="material-icons material-icons-centered">expand_more</i></span>
 \t\t\t\t\t\t\t\t\t\t\t\t<div class="collapse" id="eventid''')
                 _v = VFFSL(SL,"count",True) # u'$count' on line 201, col 46
-                if _v is not None: write(_filter(_v, rawExpr=u'$count')) # from line 201, col 46.
-                write(u'''">
+                if _v is not None: write(_filter(_v, rawExpr='$count')) # from line 201, col 46.
+                write('''">
 \t\t\t\t\t\t\t\t\t\t\t\t\t<p>''')
                 _v = VFFSL(SL,"movie.descriptionExtended",True) # u'$movie.descriptionExtended' on line 202, col 17
-                if _v is not None: write(_filter(_v, rawExpr=u'$movie.descriptionExtended')) # from line 202, col 17.
-                write(u'''</p>
+                if _v is not None: write(_filter(_v, rawExpr='$movie.descriptionExtended')) # from line 202, col 17.
+                write('''</p>
 \t\t\t\t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t\t</div>
@@ -633,7 +634,7 @@
 \t\t\t\t\t
 ''')
                 count += 1
-            write(u'''\t\t\t</div>
+            write('''\t\t\t</div>
 \t\t</div>
 \t</div>
 </div>
@@ -641,12 +642,12 @@
 </div></div></div>
 
 ''')
-        write(u'''<script type="text/javascript">
+        write('''<script type="text/javascript">
 \t$( function() {
 \t\tMLHelper.Load(\'''')
         _v = VFFSL(SL,"sort",True) # u'$sort' on line 223, col 18
-        if _v is not None: write(_filter(_v, rawExpr=u'$sort')) # from line 223, col 18.
-        write(u"""');
+        if _v is not None: write(_filter(_v, rawExpr='$sort')) # from line 223, col 18.
+        write("""');
 \t\t});
 </script>
 """)
--- ./plugin/controllers/views/responsive/ajax/multiepg.py	(original)
+++ ./plugin/controllers/views/responsive/ajax/multiepg.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -65,7 +66,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -75,7 +76,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -88,7 +89,7 @@
         ########################################
         ## START - generated method body
         
-        write(u'''<style>
+        write('''<style>
 \ttable { font-size: 13px; }
 \ttr { vertical-align: top }
 \t.float { float:left }
@@ -102,22 +103,22 @@
 \t.plusclick { font-size: 14px; }
 \t.navtab-active { cursor: pointer; margin-right:8px; font-weight: bold; border-bottom: 2px solid ''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 19, col 98
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 19, col 98.
-        write(u'''; background-color: transparent !important; bottom: 2px;}
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 19, col 98.
+        write('''; background-color: transparent !important; bottom: 2px;}
 \t.navtab-inactive { cursor: pointer; margin-right:8px;  border:None; background-color: transparent !important;  }
 \t.timer { font-weight: bold; font-size: 10px; color:red; }
 \t#eventdescription { width: 375px; height: auto; position: fixed; top: 205px; left: 350px; z-index: 100; display: none; overflow: auto; }
 \t#navepg { margin-bottom: 1px; }
 ''')
         if VFFSL(SL,"mode",True) == 2: # generated from line 24, col 1
-            write(u'''
+            write('''
 ''')
         else: # generated from line 26, col 1
-            write(u'''\t#tbl1 tbody { width: 100%; height: 100%; overflow-y: auto; display: block; overflow-x: hidden;}
+            write('''\t#tbl1 tbody { width: 100%; height: 100%; overflow-y: auto; display: block; overflow-x: hidden;}
 \t#tbl2 tbody { width: 100%; height: 100%; overflow-y: hidden; display: block; overflow-x: hidden;}
 \t#fulltbl { width: 100%; height: 100%; overflow-y: hidden; display: block; overflow-x: auto;}
 ''')
-        write(u'''\t.notablemargin { margin: 0px;}
+        write('''\t.notablemargin { margin: 0px;}
 \t.ui-widget-content.nobg , .ui-widget-header.nobg{ background-image: none; } 
 \t.wrapper { overflow-x: auto; width: 100%; -ms-overflow-style: -ms-autohiding-scrollbar;}
 \ttd.border { width: 190px; }
@@ -126,70 +127,70 @@
 <div id="navepg">
 <ul class="nav nav-tabs tab-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 38, col 33
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 38, col 33.
-        write(u'''" style="margin-top: -10px;">
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 38, col 33.
+        write('''" style="margin-top: -10px;">
 ''')
         for slot in list(range(0,7)): # generated from line 39, col 1
-            write(u'''\t<li><div class="plusclick navtab-''')
+            write('''\t<li><div class="plusclick navtab-''')
             if VFFSL(SL,"slot",True)==VFFSL(SL,"day",True) : # generated from line 40, col 35
                 _v =  'active' 
                 if _v is not None: write(_filter(_v))
             else:
                 _v =  'inactive' 
                 if _v is not None: write(_filter(_v))
-            write(u'''" data-day="''')
+            write('''" data-day="''')
             _v = VFFSL(SL,"slot",True) # u'$(slot)' on line 40, col 94
-            if _v is not None: write(_filter(_v, rawExpr=u'$(slot)')) # from line 40, col 94.
-            write(u'''">''')
+            if _v is not None: write(_filter(_v, rawExpr='$(slot)')) # from line 40, col 94.
+            write('''">''')
             _v = VFFSL(SL,"tstrings",True)[("day_" + (time.strftime("%w", time.localtime(time.time()+86400*slot))))] # u'$tstrings[("day_" + (time.strftime("%w", time.localtime(time.time()+86400*slot))))]' on line 40, col 103
-            if _v is not None: write(_filter(_v, rawExpr=u'$tstrings[("day_" + (time.strftime("%w", time.localtime(time.time()+86400*slot))))]')) # from line 40, col 103.
-            write(u'''</div></li>
+            if _v is not None: write(_filter(_v, rawExpr='$tstrings[("day_" + (time.strftime("%w", time.localtime(time.time()+86400*slot))))]')) # from line 40, col 103.
+            write('''</div></li>
 ''')
         if VFFSL(SL,"mode",True) == 2: # generated from line 42, col 1
-            write(u'''<li><div class="plusclick lbl">&nbsp;''')
+            write('''<li><div class="plusclick lbl">&nbsp;''')
             _v = VFFSL(SL,"tstrings",True)['prime_times'] # u"$tstrings['prime_times']" on line 43, col 38
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['prime_times']")) # from line 43, col 38.
-            write(u''':&nbsp;</div></li>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['prime_times']")) # from line 43, col 38.
+            write(''':&nbsp;</div></li>
 <li><div id="pt0" class="plusclick navtab-inactive" data-day="201">06:00</div></li>
 <li><div id="pt1" class="plusclick navtab-inactive" data-day="202">12:00</div></li>
 <li><div id="pt2" class="plusclick navtab-inactive" data-day="203">20:00</div></li>
 ''')
             if VFFSL(SL,"day",True) == 0: # generated from line 47, col 1
-                write(u'''\t\t<li><div id="pt3" class="plusclick navtab-inactive">&nbsp;</div>
+                write('''\t\t<li><div id="pt3" class="plusclick navtab-inactive">&nbsp;</div>
 <li><div id="pt4" class="plusclick navtab-active" data-day="200">''')
                 _v = VFFSL(SL,"tstrings",True)['now'] # u"$tstrings['now']" on line 49, col 66
-                if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['now']")) # from line 49, col 66.
-                write(u'''</div></li>
-''')
-            write(u'''
+                if _v is not None: write(_filter(_v, rawExpr="$tstrings['now']")) # from line 49, col 66.
+                write('''</div></li>
+''')
+            write('''
 ''')
         else: # generated from line 52, col 1
-            write(u'''<li><div class="plusclick lbl">&nbsp;''')
+            write('''<li><div class="plusclick lbl">&nbsp;''')
             _v = VFFSL(SL,"tstrings",True)['cw'] # u"$tstrings['cw']" on line 53, col 38
-            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['cw']")) # from line 53, col 38.
-            write(u''':&nbsp;</div></li>
+            if _v is not None: write(_filter(_v, rawExpr="$tstrings['cw']")) # from line 53, col 38.
+            write(''':&nbsp;</div></li>
 ''')
             for wk in list(range(0,3)): # generated from line 54, col 1
                 w = VFFSL(SL,"wk",True) + 1000
-                write(u'''\t<li><div class="plusclick navtab-''')
+                write('''\t<li><div class="plusclick navtab-''')
                 if VFFSL(SL,"wk",True)==VFFSL(SL,"week",True) : # generated from line 56, col 35
                     _v =  'active' 
                     if _v is not None: write(_filter(_v))
                 else:
                     _v =  'inactive' 
                     if _v is not None: write(_filter(_v))
-                write(u'''" data-day="''')
+                write('''" data-day="''')
                 _v = VFFSL(SL,"w",True) # u'$(w)' on line 56, col 93
-                if _v is not None: write(_filter(_v, rawExpr=u'$(w)')) # from line 56, col 93.
-                write(u'''">''')
+                if _v is not None: write(_filter(_v, rawExpr='$(w)')) # from line 56, col 93.
+                write('''">''')
                 _v = VFN(VFFSL(SL,"time",True),"strftime",False)("%V",time.localtime(time.time()+604800*wk)) # u'$time.strftime("%V",time.localtime(time.time()+604800*wk))' on line 56, col 99
-                if _v is not None: write(_filter(_v, rawExpr=u'$time.strftime("%V",time.localtime(time.time()+604800*wk))')) # from line 56, col 99.
-                write(u'''</div></li>
-''')
-        write(u'''<li><div class=" lbl">&nbsp;''')
+                if _v is not None: write(_filter(_v, rawExpr='$time.strftime("%V",time.localtime(time.time()+604800*wk))')) # from line 56, col 99.
+                write('''</div></li>
+''')
+        write('''<li><div class=" lbl">&nbsp;''')
         _v = VFFSL(SL,"tstrings",True)['display_mode'] # u"$tstrings['display_mode']" on line 59, col 29
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['display_mode']")) # from line 59, col 29.
-        write(u''':&nbsp;</div></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['display_mode']")) # from line 59, col 29.
+        write(''':&nbsp;</div></li>
 <li><div class="plusclick navtab-''')
         if VFFSL(SL,"mode",True)==1 : # generated from line 60, col 34
             _v =  'active' 
@@ -197,10 +198,10 @@
         else:
             _v =  'inactive' 
             if _v is not None: write(_filter(_v))
-        write(u'''" data-day="101">''')
+        write('''" data-day="101">''')
         _v = VFFSL(SL,"tstrings",True)['tv_guide'] # u"$tstrings['tv_guide']" on line 60, col 95
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['tv_guide']")) # from line 60, col 95.
-        write(u'''</div></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['tv_guide']")) # from line 60, col 95.
+        write('''</div></li>
 <li><div class="plusclick navtab-''')
         if VFFSL(SL,"mode",True)==2 : # generated from line 61, col 34
             _v =  'active' 
@@ -208,10 +209,10 @@
         else:
             _v =  'inactive' 
             if _v is not None: write(_filter(_v))
-        write(u'''" data-day="102">''')
+        write('''" data-day="102">''')
         _v = VFFSL(SL,"tstrings",True)['timeline'] # u"$tstrings['timeline']" on line 61, col 95
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['timeline']")) # from line 61, col 95.
-        write(u'''</div></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['timeline']")) # from line 61, col 95.
+        write('''</div></li>
 </ul>
 
 <div id="compressmepg" onclick="CompressMEPG();"><i id="compressmepgi" class="fa fa-compress link" aria-hidden="true"></i></div>
@@ -220,32 +221,32 @@
 
 <ul class="nav nav-tabs tab-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 68, col 33
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 68, col 33.
-        write(u'''" style="margin-top: -10px;">
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 68, col 33.
+        write('''" style="margin-top: -10px;">
 ''')
         for bq in VFFSL(SL,"bouquets",True): # generated from line 69, col 1
-            write(u'''\t<li><div class="bq navtab-''')
+            write('''\t<li><div class="bq navtab-''')
             if VFFSL(SL,"bq",True)[0]==VFFSL(SL,"bref",True) : # generated from line 70, col 28
                 _v =  'active' 
                 if _v is not None: write(_filter(_v))
             else:
                 _v =  'inactive' 
                 if _v is not None: write(_filter(_v))
-            write(u'''" data-ref="''')
+            write('''" data-ref="''')
             _v = VFFSL(SL,"quote",False)(VFFSL(SL,"bq",True)[0]) # u'$quote($bq[0])' on line 70, col 89
-            if _v is not None: write(_filter(_v, rawExpr=u'$quote($bq[0])')) # from line 70, col 89.
-            write(u'''">''')
+            if _v is not None: write(_filter(_v, rawExpr='$quote($bq[0])')) # from line 70, col 89.
+            write('''">''')
             _v = VFFSL(SL,"bq",True)[1] # u'$bq[1]' on line 70, col 105
-            if _v is not None: write(_filter(_v, rawExpr=u'$bq[1]')) # from line 70, col 105.
-            write(u'''</div></li>
-''')
-        write(u'''</ul>
+            if _v is not None: write(_filter(_v, rawExpr='$bq[1]')) # from line 70, col 105.
+            write('''</div></li>
+''')
+        write('''</ul>
 <br clear="all">
 </div>
 
 ''')
         if VFFSL(SL,"mode",True) == 2: # generated from line 76, col 1
-            write(u'''<style>
+            write('''<style>
 \t.picon { display: inline-block; margin:0; max-width: 100px;}
 \t.picon > img { max-height: 30px;}
 \t.timetable { border:none; height: 0px;}
@@ -273,34 +274,34 @@
 
 ''')
             now = VFFSL(SL,"mktime",False)(VFFSL(SL,"localtime",False)())
-            write(u'''
+            write('''
 ''')
             if VFFSL(SL,"day",True) == 0: # generated from line 105, col 1
                 first = VFFSL(SL,"now",True) - 3600
             else: # generated from line 107, col 1
                 first = VFFSL(SL,"now",True) + (VFFSL(SL,"day",True) * 3600 * 24)
-            write(u'''
+            write('''
 ''')
             s = VFFSL(SL,"strftime",False)("%S",VFFSL(SL,"localtime",False)(VFFSL(SL,"first",True)))
             m = VFFSL(SL,"strftime",False)("%M",VFFSL(SL,"localtime",False)(VFFSL(SL,"first",True)))
             offset = VFFSL(SL,"int",False)(VFFSL(SL,"m",True)) * 60
             offset = VFFSL(SL,"offset",True) + VFFSL(SL,"int",False)(VFFSL(SL,"s",True))
-            write(u'''
+            write('''
 ''')
             if VFFSL(SL,"day",True) > 0: # generated from line 116, col 1
                 h = VFFSL(SL,"strftime",False)("%H",VFFSL(SL,"localtime",False)(VFFSL(SL,"first",True)))
                 offset = VFFSL(SL,"offset",True) + VFFSL(SL,"int",False)(VFFSL(SL,"h",True)) * 60 * 60
                 offset = VFFSL(SL,"offset",True) + 3600
-            write(u'''
+            write('''
 ''')
             first = VFFSL(SL,"first",True) - VFFSL(SL,"offset",True)
-            write(u'''
-''')
-        write(u'''
+            write('''
+''')
+        write('''
 ''')
         if VFFSL(SL,"mode",True) == 1: # generated from line 126, col 1
             renderEventBlock = VFFSL(SL,"renderEvtBlock",False)()
-            write(u'''<div id="fulltbl" class="responsive-table">
+            write('''<div id="fulltbl" class="responsive-table">
 <table border="0" cellpadding="0" cellspacing="0" width="100%" id="tbl2">
 \t\t<tbody id="tbl2body">
 \t\t\t<tr style="background-color:#bababa;">
@@ -311,18 +312,18 @@
                 if VFFSL(SL,"evl",True): # generated from line 135, col 1
                     ev = VFFSL(SL,"evl",True)[0]
                     ref = "data-ref='" + VFFSL(SL,"ev.ref",True) + "'"
-                write(u'''<td class="serviceheader"><div class="service event" ''')
+                write('''<td class="serviceheader"><div class="service event" ''')
                 _v = VFFSL(SL,"ref",True) # u'$ref' on line 139, col 54
-                if _v is not None: write(_filter(_v, rawExpr=u'$ref')) # from line 139, col 54.
-                write(u'''><img src="''')
+                if _v is not None: write(_filter(_v, rawExpr='$ref')) # from line 139, col 54.
+                write('''><img src="''')
                 _v = VFFSL(SL,"picons",True)[VFFSL(SL,"sname",True)] # u'$(picons[$sname])' on line 139, col 69
-                if _v is not None: write(_filter(_v, rawExpr=u'$(picons[$sname])')) # from line 139, col 69.
-                write(u'''" />''')
+                if _v is not None: write(_filter(_v, rawExpr='$(picons[$sname])')) # from line 139, col 69.
+                write('''" />''')
                 _v = VFFSL(SL,"sname",True) # u'$sname' on line 139, col 90
-                if _v is not None: write(_filter(_v, rawExpr=u'$sname')) # from line 139, col 90.
-                write(u'''</div></td>
-''')
-            write(u'''</tr>
+                if _v is not None: write(_filter(_v, rawExpr='$sname')) # from line 139, col 90.
+                write('''</div></td>
+''')
+            write('''</tr>
 <tr>
 \t<table border="0" cellpadding="0" cellspacing="0" width="100%" id="tbl1" class="table table-striped">
 \t\t<tbody id="tbl1body">
@@ -330,30 +331,30 @@
             even = 0
             for slot in list(range(0,12)): # generated from line 146, col 1
                 if VFFSL(SL,"even",True) == 0: # generated from line 147, col 2
-                    write(u'''\t\t<tr>
+                    write('''\t\t<tr>
 ''')
                     even = 1
                 else: # generated from line 150, col 2
                     even = 0
-                    write(u'''\t<tr style="background-color:#e9e9e9;">
+                    write('''\t<tr style="background-color:#e9e9e9;">
 ''')
                 for sname, eventlist in VFN(VFFSL(SL,"events",True),"iteritems",False)(): # generated from line 154, col 2
-                    write(u'''\t\t<td class="border" style="white-space:normal;">
+                    write('''\t\t<td class="border" style="white-space:normal;">
 ''')
                     for event in VFFSL(SL,"eventlist",True)[VFFSL(SL,"slot",True)]: # generated from line 156, col 3
-                        write(u'''\t\t\t''')
+                        write('''\t\t\t''')
                         _v = VFN(VFFSL(SL,"renderEventBlock",True),"render",False)(VFFSL(SL,"event",True)) # u'$renderEventBlock.render($event)' on line 157, col 4
-                        if _v is not None: write(_filter(_v, rawExpr=u'$renderEventBlock.render($event)')) # from line 157, col 4.
-                        write(u'''
+                        if _v is not None: write(_filter(_v, rawExpr='$renderEventBlock.render($event)')) # from line 157, col 4.
+                        write('''
 ''')
                     if len(VFFSL(SL,"eventlist",True)[VFFSL(SL,"slot",True)]) == 0: # generated from line 159, col 3
-                        write(u'''\t\t<div class="event"></div>
-''')
-                    write(u'''\t</td>
-''')
-                write(u'''</tr>
-''')
-            write(u'''</tbody>
+                        write('''\t\t<div class="event"></div>
+''')
+                    write('''\t</td>
+''')
+                write('''</tr>
+''')
+            write('''</tbody>
 \t\t\t\t</table>
 \t\t\t</tr>
 \t\t</tbody>
@@ -362,7 +363,7 @@
 
 ''')
         else: # generated from line 173, col 1
-            write(u'''<div id="fulltbl" class="responsive-table" style="overflow-y:auto;overflow-x:hidden">
+            write('''<div id="fulltbl" class="responsive-table" style="overflow-y:auto;overflow-x:hidden">
 \t<table>
 \t\t<tbody>
 \t\t\t<tr>
@@ -373,23 +374,23 @@
 \t\t\t\t\t\t\t\t<td>
 ''')
             for sname, eventlist in VFN(VFFSL(SL,"events",True),"iteritems",False)(): # generated from line 183, col 1
-                write(u'''\t<div class="row " style="border:solid;border-width:1px 0px 0px 0px;height:60px!important;background-color:#bababa;" >
+                write('''\t<div class="row " style="border:solid;border-width:1px 0px 0px 0px;height:60px!important;background-color:#bababa;" >
 \t<div style="width:141px!important;margin-left:20px;" class="pull-left">
 \t<h2 class="picon" ><img src="''')
                 _v = VFFSL(SL,"picons",True)[VFFSL(SL,"sname",True)] # u'$(picons[$sname])' on line 186, col 31
-                if _v is not None: write(_filter(_v, rawExpr=u'$(picons[$sname])')) # from line 186, col 31.
-                write(u'''" title="''')
+                if _v is not None: write(_filter(_v, rawExpr='$(picons[$sname])')) # from line 186, col 31.
+                write('''" title="''')
                 _v = VFFSL(SL,"sname",True) # u'$sname' on line 186, col 57
-                if _v is not None: write(_filter(_v, rawExpr=u'$sname')) # from line 186, col 57.
-                write(u'''" /></h2>
+                if _v is not None: write(_filter(_v, rawExpr='$sname')) # from line 186, col 57.
+                write('''" /></h2>
 \t</br><label>''')
                 _v = VFFSL(SL,"sname",True) # u'$sname' on line 187, col 14
-                if _v is not None: write(_filter(_v, rawExpr=u'$sname')) # from line 187, col 14.
-                write(u'''</label>
+                if _v is not None: write(_filter(_v, rawExpr='$sname')) # from line 187, col 14.
+                write('''</label>
 \t</div>
 \t</div>
 ''')
-            write(u'''</td>
+            write('''</td>
 <tr>
 <tbody>
 </table>
@@ -407,7 +408,7 @@
 </div>
 ''')
             for sname, eventlist in VFN(VFFSL(SL,"events",True),"iteritems",False)(): # generated from line 207, col 1
-                write(u'''<div class="row " style="width:30000px; border:solid;border-width:1px 0px 0px 0px;height:60px!important" >
+                write('''<div class="row " style="width:30000px; border:solid;border-width:1px 0px 0px 0px;height:60px!important" >
 <ol class="eventlist" >
 ''')
                 c = 0
@@ -417,71 +418,71 @@
                     if VFFSL(SL,"c",True) == 0: # generated from line 214, col 3
                         ref = quote(event['ref'], safe=' ~@#$&()*!+=:;,.?/\'')
                         pad = 58 + (VFFSL(SL,"event.begin_timestamp",True) - VFFSL(SL,"first",True)) / 6
-                        write(u'''\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li class="event" style=;width:''')
+                        write('''\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li class="event" style=;width:''')
                         _v = VFFSL(SL,"pad",True) # u'${pad}' on line 217, col 47
-                        if _v is not None: write(_filter(_v, rawExpr=u'${pad}')) # from line 217, col 47.
-                        write(u'''px;border:none;">
+                        if _v is not None: write(_filter(_v, rawExpr='${pad}')) # from line 217, col 47.
+                        write('''px;border:none;">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</li>
 ''')
                     end = VFFSL(SL,"event.begin_timestamp",True) + VFFSL(SL,"event.duration",True)
                     iscurr = ""
                     if VFFSL(SL,"event.begin_timestamp",True) < VFFSL(SL,"now",True) and VFFSL(SL,"end",True) > VFFSL(SL,"now",True): # generated from line 222, col 3
                         iscurr = " curevent"
-                    write(u'''\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li class="event" data-ref="''')
+                    write('''\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li class="event" data-ref="''')
                     _v = VFFSL(SL,"ref",True) # u'$ref' on line 225, col 43
-                    if _v is not None: write(_filter(_v, rawExpr=u'$ref')) # from line 225, col 43.
-                    write(u'''" data-id="''')
+                    if _v is not None: write(_filter(_v, rawExpr='$ref')) # from line 225, col 43.
+                    write('''" data-id="''')
                     _v = VFFSL(SL,"event.id",True) # u'${event.id}' on line 225, col 58
-                    if _v is not None: write(_filter(_v, rawExpr=u'${event.id}')) # from line 225, col 58.
-                    write(u'''" data-toggle="modal" data-target="#EventModal" onClick="loadeventepg(\'''')
+                    if _v is not None: write(_filter(_v, rawExpr='${event.id}')) # from line 225, col 58.
+                    write('''" data-toggle="modal" data-target="#EventModal" onClick="loadeventepg(\'''')
                     _v = VFFSL(SL,"event.id",True) # u'${event.id}' on line 225, col 140
-                    if _v is not None: write(_filter(_v, rawExpr=u'${event.id}')) # from line 225, col 140.
-                    write(u"""', '""")
+                    if _v is not None: write(_filter(_v, rawExpr='${event.id}')) # from line 225, col 140.
+                    write("""', '""")
                     _v = VFFSL(SL,"ref",True) # u'$ref' on line 225, col 155
-                    if _v is not None: write(_filter(_v, rawExpr=u'$ref')) # from line 225, col 155.
-                    write(u'''\');return false;" style="width:''')
+                    if _v is not None: write(_filter(_v, rawExpr='$ref')) # from line 225, col 155.
+                    write('''\');return false;" style="width:''')
                     _v = VFFSL(SL,"event.duration",True)/6 # u'${event.duration/6}' on line 225, col 190
-                    if _v is not None: write(_filter(_v, rawExpr=u'${event.duration/6}')) # from line 225, col 190.
-                    write(u'''px;padding:10px;" >
+                    if _v is not None: write(_filter(_v, rawExpr='${event.duration/6}')) # from line 225, col 190.
+                    write('''px;padding:10px;" >
 \t\t\t<a href="#" class="ui-widget-content ''')
                     _v = VFFSL(SL,"iscurr",True) # u'${iscurr}' on line 226, col 41
-                    if _v is not None: write(_filter(_v, rawExpr=u'${iscurr}')) # from line 226, col 41.
-                    write(u'''" title="''')
+                    if _v is not None: write(_filter(_v, rawExpr='${iscurr}')) # from line 226, col 41.
+                    write('''" title="''')
                     _v = VFFSL(SL,"event",True)['title'] # u"$event['title']" on line 226, col 59
-                    if _v is not None: write(_filter(_v, rawExpr=u"$event['title']")) # from line 226, col 59.
-                    write(u'''">
+                    if _v is not None: write(_filter(_v, rawExpr="$event['title']")) # from line 226, col 59.
+                    write('''">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class="ename">''')
                     _v = VFFSL(SL,"event",True)['title'] # u"$event['title']" on line 227, col 36
-                    if _v is not None: write(_filter(_v, rawExpr=u"$event['title']")) # from line 227, col 36.
-                    write(u'''<span class="etimesmall"> (''')
+                    if _v is not None: write(_filter(_v, rawExpr="$event['title']")) # from line 227, col 36.
+                    write('''<span class="etimesmall"> (''')
                     _v = VFFSL(SL,"strftime",False)("%d.%m", VFFSL(SL,"localtime",False)(VFFSL(SL,"event",True)['begin_timestamp'])) # u'$strftime("%d.%m", $localtime($event[\'begin_timestamp\']))' on line 227, col 78
-                    if _v is not None: write(_filter(_v, rawExpr=u'$strftime("%d.%m", $localtime($event[\'begin_timestamp\']))')) # from line 227, col 78.
-                    write(u''')</span></span>
+                    if _v is not None: write(_filter(_v, rawExpr='$strftime("%d.%m", $localtime($event[\'begin_timestamp\']))')) # from line 227, col 78.
+                    write(''')</span></span>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class="etime">''')
                     _v = VFFSL(SL,"strftime",False)("%H:%M", VFFSL(SL,"localtime",False)(VFFSL(SL,"event",True)['begin_timestamp'])) # u'$strftime("%H:%M", $localtime($event[\'begin_timestamp\']))' on line 228, col 36
-                    if _v is not None: write(_filter(_v, rawExpr=u'$strftime("%H:%M", $localtime($event[\'begin_timestamp\']))')) # from line 228, col 36.
-                    write(u''' - ''')
+                    if _v is not None: write(_filter(_v, rawExpr='$strftime("%H:%M", $localtime($event[\'begin_timestamp\']))')) # from line 228, col 36.
+                    write(''' - ''')
                     _v = VFFSL(SL,"strftime",False)("%H:%M", VFFSL(SL,"localtime",False)(VFFSL(SL,"event",True)['begin_timestamp'] + VFFSL(SL,"event",True)['duration'])) # u'$strftime("%H:%M", $localtime($event[\'begin_timestamp\'] + $event[\'duration\']))' on line 228, col 96
-                    if _v is not None: write(_filter(_v, rawExpr=u'$strftime("%H:%M", $localtime($event[\'begin_timestamp\'] + $event[\'duration\']))')) # from line 228, col 96.
-                    write(u'''</span>
+                    if _v is not None: write(_filter(_v, rawExpr='$strftime("%H:%M", $localtime($event[\'begin_timestamp\'] + $event[\'duration\']))')) # from line 228, col 96.
+                    write('''</span>
 ''')
                     if VFFSL(SL,"event",True)['timerStatus'] != '': # generated from line 229, col 4
-                        write(u'''\t\t\t<span class="etimer ''')
+                        write('''\t\t\t<span class="etimer ''')
                         _v = VFFSL(SL,"event",True)['timerStatus'] # u"$event['timerStatus']" on line 230, col 24
-                        if _v is not None: write(_filter(_v, rawExpr=u"$event['timerStatus']")) # from line 230, col 24.
-                        write(u'''">''')
+                        if _v is not None: write(_filter(_v, rawExpr="$event['timerStatus']")) # from line 230, col 24.
+                        write('''">''')
                         _v = VFFSL(SL,"tstrings",True)['timer'] # u"$tstrings['timer']" on line 230, col 47
-                        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['timer']")) # from line 230, col 47.
-                        write(u'''</span>
-''')
-                    write(u'''\t\t\t</a>
+                        if _v is not None: write(_filter(_v, rawExpr="$tstrings['timer']")) # from line 230, col 47.
+                        write('''</span>
+''')
+                    write('''\t\t\t</a>
 \t\t</li>
 ''')
                     c = VFFSL(SL,"c",True) + 1
-                write(u'''</ol>
+                write('''</ol>
 </div>
 ''')
-            write(u'''</div>
+            write('''</div>
 \t\t\t\t\t\t\t\t</td>
 \t\t\t\t\t\t\t<tr>
 \t\t\t\t\t\t</tbody>
@@ -496,26 +497,26 @@
 
 </div>
 ''')
-        write(u'''<div id="eventdescription"></div>
+        write('''<div id="eventdescription"></div>
 
 <script>
 ''')
         if VFFSL(SL,"mode",True) == 2: # generated from line 257, col 1
-            write(u'''var opena = ''')
+            write('''var opena = ''')
             _v = VFFSL(SL,"first",True) # u'$first' on line 258, col 13
-            if _v is not None: write(_filter(_v, rawExpr=u'$first')) # from line 258, col 13.
-            write(u''';
+            if _v is not None: write(_filter(_v, rawExpr='$first')) # from line 258, col 13.
+            write(''';
 var openb = ''')
             _v = VFFSL(SL,"now",True) # u'$now' on line 259, col 13
-            if _v is not None: write(_filter(_v, rawExpr=u'$now')) # from line 259, col 13.
-            write(u''';
+            if _v is not None: write(_filter(_v, rawExpr='$now')) # from line 259, col 13.
+            write(''';
 var pos = (openb - opena);
 if (pos>0)
 \tpos = pos / 6;
 
 ''')
             if VFFSL(SL,"day",True) == 0: # generated from line 264, col 1
-                write(u'''
+                write('''
 $(".timetable-now").css(\'left\',151+pos);
 
 setTimeout(function() {
@@ -529,14 +530,14 @@
 $(".timetable-now").css(\'height\',$("#tblinner").height());
 ''')
             else: # generated from line 277, col 1
-                write(u'''$(".timetable-now").css(\'height\',\'0\');
-''')
-            write(u'''
-''')
-        write(u'''var picons = ''')
+                write('''$(".timetable-now").css(\'height\',\'0\');
+''')
+            write('''
+''')
+        write('''var picons = ''')
         _v = VFFSL(SL,"dumps",False)(VFFSL(SL,"picons",True)) # u'$dumps($picons)' on line 282, col 14
-        if _v is not None: write(_filter(_v, rawExpr=u'$dumps($picons)')) # from line 282, col 14.
-        write(u''';
+        if _v is not None: write(_filter(_v, rawExpr='$dumps($picons)')) # from line 282, col 14.
+        write(''';
 var reloadTimers = false;
 function getScrollBarWidth () {
 \tvar $outer = $(\'<div>\').css({visibility: \'hidden\', width: 100, overflow: \'scroll\'}).appendTo(\'body\'),
@@ -553,7 +554,7 @@
 
 ''')
         if VFFSL(SL,"mode",True) == 1: # generated from line 297, col 1
-            write(u'''\tvar new_height = ($("#epgcard").height() *0.85 - $("#epgcardheaderI").height() - $("#epgcardheaderII").height() - $("#navepg").height() - 2*$("#tbl1 thead").height() - addScrollBarWidth - 2);
+            write('''\tvar new_height = ($("#epgcard").height() *0.85 - $("#epgcardheaderI").height() - $("#epgcardheaderII").height() - $("#navepg").height() - 2*$("#tbl1 thead").height() - addScrollBarWidth - 2);
 \t$("#tbl1body").height(new_height + "px");
 \tvar scrollwidth = ($("#epgcard").width() -40 ) + "px";
 \tvar scrollheightI = new_height + \'px\';
@@ -561,13 +562,13 @@
 \t$(\'#fulltbl\').width(scrollwidth);
 ''')
         else: # generated from line 304, col 1
-            write(u'''\tvar new_height = ($("#epgcard").height() *0.90 - $("#epgcardheaderI").height() - $("#epgcardheaderII").height() - $("#navepg").height() - 2*$("#tbl1 thead").height() - addScrollBarWidth - 2);
+            write('''\tvar new_height = ($("#epgcard").height() *0.90 - $("#epgcardheaderI").height() - $("#epgcardheaderII").height() - $("#navepg").height() - 2*$("#tbl1 thead").height() - addScrollBarWidth - 2);
 \tvar scrollheightI = new_height + \'px\';
 \tvar scrollwidth = ($("#epgcard").width() -40 ) + "px";
 \t$(\'#fulltbl\').height(scrollheightI);
 \t$(\'#tblinner\').width(scrollwidth);
 ''')
-        write(u'''}
+        write('''}
 fixTableHeight();
 
 $(window).resize(function(){ fixTableHeight(); });
@@ -576,41 +577,41 @@
 \tvar id = $(this).data("ref");
 \tvar epgmode = "''')
         _v = VFFSL(SL,"epgmode",True) # u'$epgmode' on line 318, col 17
-        if _v is not None: write(_filter(_v, rawExpr=u'$epgmode')) # from line 318, col 17.
-        write(u'''";
+        if _v is not None: write(_filter(_v, rawExpr='$epgmode')) # from line 318, col 17.
+        write('''";
 \t$("#tvcontent").html(loadspinner).load(\'ajax/multiepg?bref=\'+id +\'&day=''')
         _v = VFFSL(SL,"day",True) # u'$day' on line 319, col 74
-        if _v is not None: write(_filter(_v, rawExpr=u'$day')) # from line 319, col 74.
-        write(u'''&epgmode=\' + epgmode);
+        if _v is not None: write(_filter(_v, rawExpr='$day')) # from line 319, col 74.
+        write('''&epgmode=\' + epgmode);
 \tSetLSValue("lastmbq_"+epgmode,id);
 });
 
 ''')
         if VFFSL(SL,"mode",True) == 1: # generated from line 323, col 1
-            write(u'''$(".service").click(function() {
+            write('''$(".service").click(function() {
 \tvar ref = $(this).data("ref");
 \tif (ref != undefined) {
 \t\tzapChannel(ref, \'\');
 \t}
 });
 ''')
-        write(u'''$(".plusclick").click(function() {
+        write('''$(".plusclick").click(function() {
 \tvar day = $(this).data("day");
 \tvar epgmode = "''')
         _v = VFFSL(SL,"epgmode",True) # u'$epgmode' on line 333, col 17
-        if _v is not None: write(_filter(_v, rawExpr=u'$epgmode')) # from line 333, col 17.
-        write(u'''";
+        if _v is not None: write(_filter(_v, rawExpr='$epgmode')) # from line 333, col 17.
+        write('''";
 \tif (day != undefined) {
 \t\tif (day > 999)
 \t\t{
 \t\t\tvar w = day - 1000;
 \t\t\t$("#tvcontent").html(loadspinner).load(\'ajax/multiepg?bref=''')
         _v = VFFSL(SL,"quote",False)(VFFSL(SL,"bref",True)) # u'${quote($bref)}' on line 338, col 64
-        if _v is not None: write(_filter(_v, rawExpr=u'${quote($bref)}')) # from line 338, col 64.
-        write(u"""&day='+""")
+        if _v is not None: write(_filter(_v, rawExpr='${quote($bref)}')) # from line 338, col 64.
+        write("""&day='+""")
         _v = VFFSL(SL,"day",True) # u'$day' on line 338, col 86
-        if _v is not None: write(_filter(_v, rawExpr=u'$day')) # from line 338, col 86.
-        write(u'''+\'&epgmode=\'+epgmode+\'&week=\'+w);
+        if _v is not None: write(_filter(_v, rawExpr='$day')) # from line 338, col 86.
+        write('''+\'&epgmode=\'+epgmode+\'&week=\'+w);
 \t\t}
 \t\telse if (day > 199)
 \t\t{
@@ -647,21 +648,21 @@
 \t\t\tvar mode = day - 100;
 \t\t\tif (mode != ''')
         _v = VFFSL(SL,"mode",True) # u'$mode' on line 373, col 16
-        if _v is not None: write(_filter(_v, rawExpr=u'$mode')) # from line 373, col 16.
-        write(u''') {
+        if _v is not None: write(_filter(_v, rawExpr='$mode')) # from line 373, col 16.
+        write(''') {
 \t\t\t\t$.ajax({
 \t\t\t\turl: \'api/setwebconfig?mepgmode=\' + mode,
 \t\t\t\t\tsuccess: function(data) {
 \t\t\t\t\t\t$("#tvcontent").html(loadspinner).load(\'ajax/multiepg?bref=''')
         _v = VFFSL(SL,"quote",False)(VFFSL(SL,"bref",True)) # u'${quote($bref)}' on line 377, col 67
-        if _v is not None: write(_filter(_v, rawExpr=u'${quote($bref)}')) # from line 377, col 67.
-        write(u'''&day=''')
+        if _v is not None: write(_filter(_v, rawExpr='${quote($bref)}')) # from line 377, col 67.
+        write('''&day=''')
         _v = VFFSL(SL,"day",True) # u'$day' on line 377, col 87
-        if _v is not None: write(_filter(_v, rawExpr=u'$day')) # from line 377, col 87.
-        write(u"""&epgmode='+epgmode+'&week='+""")
+        if _v is not None: write(_filter(_v, rawExpr='$day')) # from line 377, col 87.
+        write("""&epgmode='+epgmode+'&week='+""")
         _v = VFFSL(SL,"week",True) # u'$week' on line 377, col 119
-        if _v is not None: write(_filter(_v, rawExpr=u'$week')) # from line 377, col 119.
-        write(u''');
+        if _v is not None: write(_filter(_v, rawExpr='$week')) # from line 377, col 119.
+        write(''');
 \t\t\t\t\t}
 \t\t\t\t});
 \t\t\t}
@@ -669,11 +670,11 @@
 \t\telse {
 \t\t\t$("#tvcontent").html(loadspinner).load(\'ajax/multiepg?bref=''')
         _v = VFFSL(SL,"quote",False)(VFFSL(SL,"bref",True)) # u'${quote($bref)}' on line 383, col 64
-        if _v is not None: write(_filter(_v, rawExpr=u'${quote($bref)}')) # from line 383, col 64.
-        write(u"""&day='+day+'&epgmode='+epgmode+'&week='+""")
+        if _v is not None: write(_filter(_v, rawExpr='${quote($bref)}')) # from line 383, col 64.
+        write("""&day='+day+'&epgmode='+epgmode+'&week='+""")
         _v = VFFSL(SL,"week",True) # u'$week' on line 383, col 119
-        if _v is not None: write(_filter(_v, rawExpr=u'$week')) # from line 383, col 119.
-        write(u''');
+        if _v is not None: write(_filter(_v, rawExpr='$week')) # from line 383, col 119.
+        write(''');
 \t\t}
 \t} else {
 \t\tepgmode = $(this).data("tvradio");
@@ -704,7 +705,7 @@
 
 ''')
         if VFFSL(SL,"mode",True) == 2: # generated from line 412, col 1
-            write(u"""$(function() {
+            write("""$(function() {
 \t
 \tif(GetLSValue('MultiEPGScrollStyle','0')=='0') {
 \t\t$('#tblinner').css('overflow-y','hidden');
@@ -718,7 +719,7 @@
 
 });
 """)
-        write(u'''
+        write('''
 </script>
 ''')
         
--- ./plugin/controllers/views/responsive/ajax/myepg.py	(original)
+++ ./plugin/controllers/views/responsive/ajax/myepg.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -60,7 +61,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -70,7 +71,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,15 +84,15 @@
         ########################################
         ## START - generated method body
         
-        write(u'''<div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
+        write('''<div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
 \t<div class="card"  id="epgcard">
 \t\t<div class="header">
 \t\t\t<div class="row clearfix" id="epgcardheaderI">
 \t\t\t\t<div class="col-xs-12 col-sm-6">
 \t\t\t\t\t<h2><i class="material-icons material-icons-centered">today</i>''')
         _v = VFFSL(SL,"tstrings",True)['epg'] # u"$tstrings['epg']" on line 7, col 69
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['epg']")) # from line 7, col 69.
-        write(u'''</h2>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['epg']")) # from line 7, col 69.
+        write('''</h2>
 \t\t\t\t</div>
 \t\t\t</div>
 \t\t\t<ul class="header-dropdown m-r--5" id="epgcardheaderII">
@@ -101,12 +102,12 @@
 \t\t\t\t\t<ul class="dropdown-menu pull-right">
 \t\t\t\t\t\t<li><a href="#" onclick="load_tvcontent_spin(\'ajax/multiepg?epgmode=tv\'); return false;"  >''')
         _v = VFFSL(SL,"tstrings",True)['television'] # u"$tstrings['television']" on line 15, col 98
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['television']")) # from line 15, col 98.
-        write(u'''</a></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['television']")) # from line 15, col 98.
+        write('''</a></li>
 \t\t\t\t\t\t<li><a href="#" onclick="load_tvcontent_spin(\'ajax/multiepg?epgmode=radio\'); return false;"  >''')
         _v = VFFSL(SL,"tstrings",True)['radio'] # u"$tstrings['radio']" on line 16, col 101
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['radio']")) # from line 16, col 101.
-        write(u'''</a></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['radio']")) # from line 16, col 101.
+        write('''</a></li>
 \t\t\t\t\t</ul>
 \t\t\t\t</li>
 \t\t\t</ul>
--- ./plugin/controllers/views/responsive/ajax/powerstate.py	(original)
+++ ./plugin/controllers/views/responsive/ajax/powerstate.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -60,7 +61,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -70,7 +71,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,25 +84,25 @@
         ########################################
         ## START - generated method body
         
-        write(u'''<div style="height: 300px; width:500px">
+        write('''<div style="height: 300px; width:500px">
 \t<div class="powerStateButtons">
 \t\t<ul>
 \t\t\t<li class="ui-button" onclick="handle_power_state_dialog(new_power_state = 0); return false">''')
         _v = VFFSL(SL,"tstrings",True)['standby_toggle'] # u"$tstrings['standby_toggle']" on line 5, col 97
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['standby_toggle']")) # from line 5, col 97.
-        write(u'''</li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['standby_toggle']")) # from line 5, col 97.
+        write('''</li>
 \t\t\t<li class="ui-button" onclick="handle_power_state_dialog(new_power_state = 1); return false">''')
         _v = VFFSL(SL,"tstrings",True)['deep_standby'] # u"$tstrings['deep_standby']" on line 6, col 97
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['deep_standby']")) # from line 6, col 97.
-        write(u'''</li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['deep_standby']")) # from line 6, col 97.
+        write('''</li>
 \t\t\t<li class="ui-button" onclick="handle_power_state_dialog(new_power_state = 2); return false">''')
         _v = VFFSL(SL,"tstrings",True)['reboot_box'] # u"$tstrings['reboot_box']" on line 7, col 97
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['reboot_box']")) # from line 7, col 97.
-        write(u'''</li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['reboot_box']")) # from line 7, col 97.
+        write('''</li>
 \t\t\t<li class="ui-button" onclick="handle_power_state_dialog(new_power_state = 3); return false">''')
         _v = VFFSL(SL,"tstrings",True)['restart_gui'] # u"$tstrings['restart_gui']" on line 8, col 97
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['restart_gui']")) # from line 8, col 97.
-        write(u'''</li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['restart_gui']")) # from line 8, col 97.
+        write('''</li>
 \t\t</ul>
 \t</div>
 </div>
--- ./plugin/controllers/views/responsive/ajax/providers.py	(original)
+++ ./plugin/controllers/views/responsive/ajax/providers.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -60,7 +61,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -70,7 +71,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,22 +84,22 @@
         ########################################
         ## START - generated method body
         
-        write(u'''
+        write('''
 <ul class="nav nav-tabs tab-col-green" >
 ''')
         for provider in VFFSL(SL,"providers",True): # generated from line 4, col 1
-            write(u'''\t<li><a data-toggle="tab" href=\'#tab\' onclick="load_subcontent(\'ajax/channels?id=''')
+            write('''\t<li><a data-toggle="tab" href=\'#tab\' onclick="load_subcontent(\'ajax/channels?id=''')
             _v = VFFSL(SL,"quote",False)(VFFSL(SL,"provider",True)[0]) # u'$quote($provider[0])' on line 5, col 82
-            if _v is not None: write(_filter(_v, rawExpr=u'$quote($provider[0])')) # from line 5, col 82.
-            write(u'''&stype=''')
+            if _v is not None: write(_filter(_v, rawExpr='$quote($provider[0])')) # from line 5, col 82.
+            write('''&stype=''')
             _v = VFFSL(SL,"stype",True) # u'$stype' on line 5, col 109
-            if _v is not None: write(_filter(_v, rawExpr=u'$stype')) # from line 5, col 109.
-            write(u'''\'); return false;" >''')
+            if _v is not None: write(_filter(_v, rawExpr='$stype')) # from line 5, col 109.
+            write('''\'); return false;" >''')
             _v = VFFSL(SL,"provider",True)[1] # u'$provider[1]' on line 5, col 135
-            if _v is not None: write(_filter(_v, rawExpr=u'$provider[1]')) # from line 5, col 135.
-            write(u'''</a></li>
+            if _v is not None: write(_filter(_v, rawExpr='$provider[1]')) # from line 5, col 135.
+            write('''</a></li>
 ''')
-        write(u'''</ul>
+        write('''</ul>
 <div class="tab-content">
 \t<div class="tab-pane active" id="tab">
 \t\t<div id=\'sub_content_container\'></div>
--- ./plugin/controllers/views/responsive/ajax/radio.py	(original)
+++ ./plugin/controllers/views/responsive/ajax/radio.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -60,7 +61,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -70,7 +71,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,15 +84,15 @@
         ########################################
         ## START - generated method body
         
-        write(u'''<div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
+        write('''<div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
 \t<div class="card">
 \t\t<div class="header">
 \t\t\t<div class="row clearfix">
 \t\t\t\t<div class="col-xs-12 col-sm-6">
 \t\t\t\t\t<h2><i class="material-icons" style="display:inline-flex;vertical-align:middle !important;margin-right:10px;">radio</i>''')
         _v = VFFSL(SL,"tstrings",True)['radio'] # u"$tstrings['radio']" on line 7, col 125
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['radio']")) # from line 7, col 125.
-        write(u'''</h2>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['radio']")) # from line 7, col 125.
+        write('''</h2>
 \t\t\t\t</div>
 \t\t\t</div>
 \t\t\t<ul class="header-dropdown m-r--5">
@@ -100,28 +101,28 @@
 \t\t\t\t\t<ul class="dropdown-menu pull-right" id="tvbuttons">
 \t\t\t\t\t\t<li><a href="#" id="btn0" >''')
         _v = VFFSL(SL,"tstrings",True)['current'] # u"$tstrings['current']" on line 14, col 34
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['current']")) # from line 14, col 34.
-        write(u'''</a></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['current']")) # from line 14, col 34.
+        write('''</a></li>
 \t\t\t\t\t\t<li><a href="#" id="btn1" >''')
         _v = VFFSL(SL,"tstrings",True)['bouquets'] # u"$tstrings['bouquets']" on line 15, col 34
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['bouquets']")) # from line 15, col 34.
-        write(u'''</a></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['bouquets']")) # from line 15, col 34.
+        write('''</a></li>
 \t\t\t\t\t\t<li><a href="#" id="btn2" >''')
         _v = VFFSL(SL,"tstrings",True)['providers'] # u"$tstrings['providers']" on line 16, col 34
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['providers']")) # from line 16, col 34.
-        write(u'''</a></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['providers']")) # from line 16, col 34.
+        write('''</a></li>
 \t\t\t\t\t\t<li><a href="#" id="btn3" >''')
         _v = VFFSL(SL,"tstrings",True)['satellites'] # u"$tstrings['satellites']" on line 17, col 34
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['satellites']")) # from line 17, col 34.
-        write(u'''</a></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['satellites']")) # from line 17, col 34.
+        write('''</a></li>
 \t\t\t\t\t\t<li><a href="#" id="btn4" >''')
         _v = VFFSL(SL,"tstrings",True)['all_channels'] # u"$tstrings['all_channels']" on line 18, col 34
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['all_channels']")) # from line 18, col 34.
-        write(u'''</a></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['all_channels']")) # from line 18, col 34.
+        write('''</a></li>
 \t\t\t\t\t\t<li><a href="#" id="btn5" >''')
         _v = VFFSL(SL,"tstrings",True)['epg'] # u"$tstrings['epg']" on line 19, col 34
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['epg']")) # from line 19, col 34.
-        write(u'''</a></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['epg']")) # from line 19, col 34.
+        write('''</a></li>
 \t\t\t\t\t</ul>
 \t\t\t\t</li>
 \t\t\t</ul>
--- ./plugin/controllers/views/responsive/ajax/satellites.py	(original)
+++ ./plugin/controllers/views/responsive/ajax/satellites.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -62,7 +63,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -72,7 +73,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -86,38 +87,38 @@
         ## START - generated method body
         
         i = 0
-        write(u'''<ul class="nav nav-tabs tab-col-''')
+        write('''<ul class="nav nav-tabs tab-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 5, col 33
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 5, col 33.
-        write(u'''" >
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 5, col 33.
+        write('''" >
 ''')
         for satellite in VFFSL(SL,"satellites",True): # generated from line 6, col 1
             if VFFSL(SL,"i",True) == 0: # generated from line 7, col 3
-                write(u'''\t<li><a data-toggle="tab" href=\'#tab\' onclick="load_subcontent(\'ajax/channels?id=''')
+                write('''\t<li><a data-toggle="tab" href=\'#tab\' onclick="load_subcontent(\'ajax/channels?id=''')
                 _v = VFFSL(SL,"quote",False)(VFFSL(SL,"satellite.service",True)) # u'$quote($satellite.service)' on line 8, col 82
-                if _v is not None: write(_filter(_v, rawExpr=u'$quote($satellite.service)')) # from line 8, col 82.
-                write(u'''&stype=''')
+                if _v is not None: write(_filter(_v, rawExpr='$quote($satellite.service)')) # from line 8, col 82.
+                write('''&stype=''')
                 _v = VFFSL(SL,"stype",True) # u'$stype' on line 8, col 115
-                if _v is not None: write(_filter(_v, rawExpr=u'$stype')) # from line 8, col 115.
-                write(u'''\'); return false;" >''')
+                if _v is not None: write(_filter(_v, rawExpr='$stype')) # from line 8, col 115.
+                write('''\'); return false;" >''')
                 _v = VFFSL(SL,"satellite.name",True) # u'$satellite.name' on line 8, col 141
-                if _v is not None: write(_filter(_v, rawExpr=u'$satellite.name')) # from line 8, col 141.
-                write(u'''</a></li>
+                if _v is not None: write(_filter(_v, rawExpr='$satellite.name')) # from line 8, col 141.
+                write('''</a></li>
 ''')
             else: # generated from line 9, col 3
-                write(u'''\t\t\t<li><a href=\'#tab\' data-toggle="tab" onclick="load_subcontent(\'ajax/channels?id=''')
+                write('''\t\t\t<li><a href=\'#tab\' data-toggle="tab" onclick="load_subcontent(\'ajax/channels?id=''')
                 _v = VFFSL(SL,"quote",False)(VFFSL(SL,"satellite.service",True)) # u'$quote($satellite.service)' on line 10, col 84
-                if _v is not None: write(_filter(_v, rawExpr=u'$quote($satellite.service)')) # from line 10, col 84.
-                write(u'''&stype=''')
+                if _v is not None: write(_filter(_v, rawExpr='$quote($satellite.service)')) # from line 10, col 84.
+                write('''&stype=''')
                 _v = VFFSL(SL,"stype",True) # u'$stype' on line 10, col 117
-                if _v is not None: write(_filter(_v, rawExpr=u'$stype')) # from line 10, col 117.
-                write(u'''\'); return false;" >''')
+                if _v is not None: write(_filter(_v, rawExpr='$stype')) # from line 10, col 117.
+                write('''\'); return false;" >''')
                 _v = VFFSL(SL,"satellite.name",True) # u'$satellite.name' on line 10, col 143
-                if _v is not None: write(_filter(_v, rawExpr=u'$satellite.name')) # from line 10, col 143.
-                write(u'''</a></li>
+                if _v is not None: write(_filter(_v, rawExpr='$satellite.name')) # from line 10, col 143.
+                write('''</a></li>
 ''')
             i = VFFSL(SL,"i",True) + 1
-        write(u'''</ul>
+        write('''</ul>
 <div class="tab-content">
 \t<div class="tab-pane active" id="tab">
 \t\t<div id=\'sub_content_container\'></div>
--- ./plugin/controllers/views/responsive/ajax/satfinder.py	(original)
+++ ./plugin/controllers/views/responsive/ajax/satfinder.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -61,7 +62,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -71,7 +72,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -84,7 +85,7 @@
         ########################################
         ## START - generated method body
         
-        write(u'''
+        write('''
 <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
 \t<div class="card">
 \t\t<div class="header">
@@ -92,8 +93,8 @@
 \t\t\t\t<div class="col-xs-12 col-sm-6">
 \t\t\t\t\t<h2>''')
         _v = VFFSL(SL,"tstrings",True)['satfinder'] # u"$tstrings['satfinder']" on line 9, col 10
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['satfinder']")) # from line 9, col 10.
-        write(u'''</h2>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['satfinder']")) # from line 9, col 10.
+        write('''</h2>
 \t\t\t\t</div>
 \t\t\t</div>
 \t\t</div>
@@ -103,12 +104,12 @@
 \t\t\t\t\t<div class="card">
 \t\t\t\t\t\t<div class="header vti-colored-card bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 17, col 46
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 17, col 46.
-        write(u'''">
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 17, col 46.
+        write('''">
 \t\t\t\t\t\t\t<h2>''')
         _v = VFFSL(SL,"tstrings",True)['snr'] # u"$tstrings['snr']" on line 18, col 12
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['snr']")) # from line 18, col 12.
-        write(u'''</h2>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['snr']")) # from line 18, col 12.
+        write('''</h2>
 \t\t\t\t\t\t</div>
 \t\t\t\t\t\t<div class="body">
 \t\t\t\t\t\t\t<div class="row clearfix">
@@ -116,8 +117,8 @@
 \t\t\t\t\t\t\t\t\t<div class="progress progress-striped" style="height:22px;">
 \t\t\t\t\t\t\t\t\t\t<div id="snrslider" class="progress-bar bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 24, col 54
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 24, col 54.
-        write(u'''" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width:0;margin:0px"></div>
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 24, col 54.
+        write('''" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width:0;margin:0px"></div>
 \t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t</div>
@@ -126,12 +127,12 @@
 \t\t\t\t\t<div class="card">
 \t\t\t\t\t\t<div class="header vti-colored-card bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 31, col 46
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 31, col 46.
-        write(u'''">
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 31, col 46.
+        write('''">
 \t\t\t\t\t\t\t<h2>''')
         _v = VFFSL(SL,"tstrings",True)['agc'] # u"$tstrings['agc']" on line 32, col 12
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['agc']")) # from line 32, col 12.
-        write(u'''</h2>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['agc']")) # from line 32, col 12.
+        write('''</h2>
 \t\t\t\t\t\t</div>
 \t\t\t\t\t\t<div class="body">
 \t\t\t\t\t\t\t<div class="row clearfix">
@@ -140,8 +141,8 @@
 \t\t\t\t\t\t\t\t\t<div class="progress progress-striped" style="height:22px;">
 \t\t\t\t\t\t\t\t\t\t<div id="agcslider" class="progress-bar bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 39, col 54
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 39, col 54.
-        write(u'''" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width:0;margin:0px"></div>
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 39, col 54.
+        write('''" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width:0;margin:0px"></div>
 \t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t</div>
@@ -150,12 +151,12 @@
 \t\t\t\t\t<div class="card">
 \t\t\t\t\t\t<div class="header vti-colored-card bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 46, col 46
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 46, col 46.
-        write(u'''">
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 46, col 46.
+        write('''">
 \t\t\t\t\t\t\t<h2>''')
         _v = VFFSL(SL,"tstrings",True)['ber'] # u"$tstrings['ber']" on line 47, col 12
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ber']")) # from line 47, col 12.
-        write(u'''</h2>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['ber']")) # from line 47, col 12.
+        write('''</h2>
 \t\t\t\t\t\t</div>
 \t\t\t\t\t\t<div class="body">
 \t\t\t\t\t\t\t<div class="row clearfix">
@@ -163,8 +164,8 @@
 \t\t\t\t\t\t\t\t\t<div class="progress progress-striped" style="height:22px;">
 \t\t\t\t\t\t\t\t\t\t<div id="berslider" class="progress-bar bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 53, col 54
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 53, col 54.
-        write(u'''" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width:100%;margin:0px"></div>
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 53, col 54.
+        write('''" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width:100%;margin:0px"></div>
 \t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t</div>
--- ./plugin/controllers/views/responsive/ajax/screenshot.py	(original)
+++ ./plugin/controllers/views/responsive/ajax/screenshot.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -62,7 +63,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -72,7 +73,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -85,7 +86,7 @@
         ########################################
         ## START - generated method body
         
-        write(u'''<div id="responsivespinnerscreenshot"></div>
+        write('''<div id="responsivespinnerscreenshot"></div>
 
 <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
 \t<div class="card">
@@ -94,8 +95,8 @@
 \t\t\t\t<div class="col-xs-12 col-sm-6">
 \t\t\t\t\t<h2><i class="material-icons material-icons-centered">photo_camera</i>''')
         _v = VFFSL(SL,"tstrings",True)['screenshot'] # u"$tstrings['screenshot']" on line 11, col 76
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['screenshot']")) # from line 11, col 76.
-        write(u'''</h2>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['screenshot']")) # from line 11, col 76.
+        write('''</h2>
 \t\t\t\t</div>
 \t\t\t</div>
 \t\t\t<ul class="header-dropdown m-r--5">
@@ -104,24 +105,24 @@
 \t\t\t\t\t<ul class="dropdown-menu pull-right" id="screenshotbutton">
 \t\t\t\t\t\t<li><a href="#" id="screenshotbutton0" name="screenshotbutton" >''')
         _v = VFFSL(SL,"tstrings",True)['all'] # u"$tstrings['all']" on line 18, col 71
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['all']")) # from line 18, col 71.
-        write(u'''</a></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['all']")) # from line 18, col 71.
+        write('''</a></li>
 \t\t\t\t\t\t<li><a href="#" id="screenshotbutton1" name="screenshotbutton" >''')
         _v = VFFSL(SL,"tstrings",True)['video'] # u"$tstrings['video']" on line 19, col 71
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['video']")) # from line 19, col 71.
-        write(u'''</a></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['video']")) # from line 19, col 71.
+        write('''</a></li>
 \t\t\t\t\t\t<li><a href="#" id="screenshotbutton2" name="screenshotbutton" >''')
         _v = VFFSL(SL,"tstrings",True)['osd'] # u"$tstrings['osd']" on line 20, col 71
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['osd']")) # from line 20, col 71.
-        write(u'''</a></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['osd']")) # from line 20, col 71.
+        write('''</a></li>
 \t\t\t\t\t\t<li><a href="#" id="screenshotbutton3" name="screenshotbutton" style="display: none;" >''')
         _v = VFFSL(SL,"tstrings",True)['pip'] # u"$tstrings['pip']" on line 21, col 94
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['pip']")) # from line 21, col 94.
-        write(u'''</a></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['pip']")) # from line 21, col 94.
+        write('''</a></li>
 \t\t\t\t\t\t<li><a href="#" id="screenshotbutton4" name="screenshotbutton" style="display: none;" >''')
         _v = VFFSL(SL,"tstrings",True)['lcd'] # u"$tstrings['lcd']" on line 22, col 94
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['lcd']")) # from line 22, col 94.
-        write(u'''</a></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['lcd']")) # from line 22, col 94.
+        write('''</a></li>
 \t\t\t\t\t</ul>
 \t\t\t\t</li>
 \t\t\t</ul>
@@ -130,8 +131,8 @@
 \t\t\t<div class="row clearfix">
 \t\t\t\t<img id="screenshotimage" class="img-fluid rounded" src="" alt="''')
         _v = VFFSL(SL,"tstrings",True)['loading'] # u"$tstrings['loading']" on line 29, col 69
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['loading']")) # from line 29, col 69.
-        write(u''' ...">
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['loading']")) # from line 29, col 69.
+        write(''' ...">
 \t\t\t</div>
 \t\t\t<div class="row clearfix">
 \t\t\t\t<p></p>
@@ -141,38 +142,38 @@
 \t\t\t\t\t<div class="switch panel-switch-btn">
 \t\t\t\t\t\t<label><span class="m-r-10 font-12">''')
         _v = VFFSL(SL,"tstrings",True)['high_resolution'] # u"$tstrings['high_resolution']" on line 37, col 43
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['high_resolution']")) # from line 37, col 43.
-        write(u'''</span>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['high_resolution']")) # from line 37, col 43.
+        write('''</span>
 \t\t\t\t\t\t<label><input type="checkbox" id="ssr_hd"><span class="lever switch-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 38, col 79
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 38, col 79.
-        write(u'''"></span></label>
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 38, col 79.
+        write('''"></span></label>
 \t\t\t\t\t</div>
 \t\t\t\t\t<div class="switch panel-switch-btn">
 \t\t\t\t\t\t<label><span class="m-r-10 font-12">''')
         _v = VFFSL(SL,"tstrings",True)['refresh_auto'] # u"$tstrings['refresh_auto']" on line 41, col 43
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['refresh_auto']")) # from line 41, col 43.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['refresh_auto']")) # from line 41, col 43.
+        write('''</label>
 \t\t\t\t\t\t\t\t<input  class="input-field" type="text" size="2" id="ssr_i" value="30"><label>''')
         _v = VFFSL(SL,"tstrings",True)['seconds'] # u"$tstrings['seconds']" on line 42, col 87
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['seconds']")) # from line 42, col 87.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['seconds']")) # from line 42, col 87.
+        write('''</label>
 \t\t\t\t\t\t\t</span>
 \t\t\t\t\t\t<label><input type="checkbox" id="ssr_s"><span class="lever switch-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 44, col 78
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 44, col 78.
-        write(u'''"></span></label>
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 44, col 78.
+        write('''"></span></label>
 \t\t\t\t\t</div>
 \t\t\t\t</div>
 \t\t\t</div>
 \t\t\t<div class="row clearfix align-center">
 \t\t\t\t<button class="btn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 49, col 27
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 49, col 27.
-        write(u''' waves-effect" onclick="grabScreenshot(\'auto\'); return false">''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 49, col 27.
+        write(''' waves-effect" onclick="grabScreenshot(\'auto\'); return false">''')
         _v = VFFSL(SL,"tstrings",True)['refresh'] # u"$tstrings['refresh']" on line 49, col 99
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['refresh']")) # from line 49, col 99.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['refresh']")) # from line 49, col 99.
+        write('''</button>
 \t\t\t</div>
 \t\t</div>
 \t</div>
@@ -181,12 +182,12 @@
 <script type="text/javascript">
 var lcd = "''')
         _v = VFFSL(SL,"getInfo",True)['lcd'] # u"$getInfo['lcd']" on line 56, col 12
-        if _v is not None: write(_filter(_v, rawExpr=u"$getInfo['lcd']")) # from line 56, col 12.
-        write(u'''";
+        if _v is not None: write(_filter(_v, rawExpr="$getInfo['lcd']")) # from line 56, col 12.
+        write('''";
 var pip = "''')
         _v = VFFSL(SL,"getPipStatus",False)() # u'$getPipStatus()' on line 57, col 12
-        if _v is not None: write(_filter(_v, rawExpr=u'$getPipStatus()')) # from line 57, col 12.
-        write(u'''";
+        if _v is not None: write(_filter(_v, rawExpr='$getPipStatus()')) # from line 57, col 12.
+        write('''";
 $(function() {SSHelper.setup()});
 
 function buttonsSwitcher(pipval){
--- ./plugin/controllers/views/responsive/ajax/settings.py	(original)
+++ ./plugin/controllers/views/responsive/ajax/settings.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -61,7 +62,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -71,7 +72,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -84,7 +85,7 @@
         ########################################
         ## START - generated method body
         
-        write(u'''<style>
+        write('''<style>
 #packagelist {padding:0;}
 #packagelist li.installed {font-weight:bold;}
 #packagelist li {list-style-type:none;margin:4px 0;}
@@ -105,8 +106,8 @@
 \t\t\t\t<div class="col-xs-12 col-sm-8 col-md-9">
 \t\t\t\t\t<h2 id="configtitle"><i class="material-icons material-icons-centered">settings</i>''')
         _v = VFFSL(SL,"tstrings",True)['settings'] # u"$tstrings['settings']" on line 22, col 89
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['settings']")) # from line 22, col 89.
-        write(u'''</h2>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['settings']")) # from line 22, col 89.
+        write('''</h2>
 \t\t\t\t</div>
 \t\t\t\t<div class="col-xs-12 hidden-sm hidden-md hidden-lg hidden-xl">
 \t\t\t\t\t<div class="row vti-vspace-20"></div>
@@ -115,23 +116,23 @@
 \t\t\t\t\t<select id="settingselection" class="form-control" value="">
 \t\t\t\t\t\t<option value="packagemenu">''')
         _v = VFFSL(SL,"tstrings",True)['settings'] # u"$tstrings['settings']" on line 29, col 35
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['settings']")) # from line 29, col 35.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['settings']")) # from line 29, col 35.
+        write('''</option>
 \t\t\t\t\t\t<option value="bookmarksmenu">''')
         _v = VFFSL(SL,"tstrings",True)['bookmarks'] # u"$tstrings['bookmarks']" on line 30, col 37
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['bookmarks']")) # from line 30, col 37.
-        write(u'''</option>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['bookmarks']")) # from line 30, col 37.
+        write('''</option>
 ''')
         for sec in VFFSL(SL,"configsections",True): # generated from line 31, col 5
-            write(u'''\t\t\t\t\t<option value="''')
+            write('''\t\t\t\t\t<option value="''')
             _v = VFFSL(SL,"sec",True)["key"] # u'$sec["key"]' on line 32, col 21
-            if _v is not None: write(_filter(_v, rawExpr=u'$sec["key"]')) # from line 32, col 21.
-            write(u'''"  >''')
+            if _v is not None: write(_filter(_v, rawExpr='$sec["key"]')) # from line 32, col 21.
+            write('''"  >''')
             _v = VFFSL(SL,"sec",True)["description"] # u'$sec["description"]' on line 32, col 36
-            if _v is not None: write(_filter(_v, rawExpr=u'$sec["description"]')) # from line 32, col 36.
-            write(u'''</option>
+            if _v is not None: write(_filter(_v, rawExpr='$sec["description"]')) # from line 32, col 36.
+            write('''</option>
 ''')
-        write(u'''\t\t\t\t\t</select>
+        write('''\t\t\t\t\t</select>
 \t\t\t\t</div>
 \t\t\t</div>
 \t\t</div>
@@ -141,39 +142,39 @@
 \t\t\t\t\t<div id="scontent"></div>
 \t\t\t\t\t<div style="display:none" id="thistitlebookmarks"><i class=\'material-icons material-icons-centered\'>settings</i>''')
         _v = VFFSL(SL,"tstrings",True)['settings'] # u"$tstrings['settings']" on line 42, col 118
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['settings']")) # from line 42, col 118.
-        write(u''' - ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['settings']")) # from line 42, col 118.
+        write(''' - ''')
         _v = VFFSL(SL,"tstrings",True)['bookmarks'] # u"$tstrings['bookmarks']" on line 42, col 142
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['bookmarks']")) # from line 42, col 142.
-        write(u'''</div>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['bookmarks']")) # from line 42, col 142.
+        write('''</div>
 \t\t\t\t\t<div id=\'bookmarks\' style="display:none;">
 \t\t\t\t\t\t<div id="content_main2">
 \t\t\t\t\t\t\t<table id="configuration">
 \t\t\t\t\t\t\t<tr><td>''')
         _v = VFFSL(SL,"tstrings",True)['bookmark'] # u"$tstrings['bookmark']" on line 46, col 16
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['bookmark']")) # from line 46, col 16.
-        write(u'''</td><td>&nbsp;</td></tr>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['bookmark']")) # from line 46, col 16.
+        write('''</td><td>&nbsp;</td></tr>
 ''')
         for location in VFFSL(SL,"locations",True): # generated from line 47, col 8
-            write(u'''\t\t\t\t\t\t\t\t<tr><td>''')
+            write('''\t\t\t\t\t\t\t\t<tr><td>''')
             _v = VFFSL(SL,"location",True) # u'$location' on line 48, col 17
-            if _v is not None: write(_filter(_v, rawExpr=u'$location')) # from line 48, col 17.
-            write(u'''</td><td><a href=\'#\' onClick="deleteBookmark(\'''')
+            if _v is not None: write(_filter(_v, rawExpr='$location')) # from line 48, col 17.
+            write('''</td><td><a href=\'#\' onClick="deleteBookmark(\'''')
             _v = VFFSL(SL,"location",True) # u'$location' on line 48, col 72
-            if _v is not None: write(_filter(_v, rawExpr=u'$location')) # from line 48, col 72.
-            write(u'''\'); return false;" title=""><div><i class=\'material-icons material-icons-centered\'>delete</i></div></a></td></tr>
+            if _v is not None: write(_filter(_v, rawExpr='$location')) # from line 48, col 72.
+            write('''\'); return false;" title=""><div><i class=\'material-icons material-icons-centered\'>delete</i></div></a></td></tr>
 ''')
-        write(u'''\t\t\t\t\t\t\t<tr><td><input type="text" id="addbookmarktext" value=""></td><td><a href=\'#\' onClick="addBookmark(); return false;" title=""><div><i class=\'material-icons material-icons-centered\'>add</i></div></a></td></tr>
+        write('''\t\t\t\t\t\t\t<tr><td><input type="text" id="addbookmarktext" value=""></td><td><a href=\'#\' onClick="addBookmark(); return false;" title=""><div><i class=\'material-icons material-icons-centered\'>add</i></div></a></td></tr>
 \t\t\t\t\t\t\t</table>
 \t\t\t\t\t\t</div>
 \t\t\t\t\t</div>
 \t\t\t\t\t<div style="display:none" id="thistitlepackages"><i class=\'material-icons material-icons-centered\'>settings</i>''')
         _v = VFFSL(SL,"tstrings",True)['settings'] # u"$tstrings['settings']" on line 54, col 117
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['settings']")) # from line 54, col 117.
-        write(u''' - ''')
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['settings']")) # from line 54, col 117.
+        write(''' - ''')
         _v = VFFSL(SL,"tstrings",True)['packages'] # u"$tstrings['packages']" on line 54, col 141
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['packages']")) # from line 54, col 141.
-        write(u'''</div>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['packages']")) # from line 54, col 141.
+        write('''</div>
 \t\t\t\t\t<div id=\'packages\' style="display:none;">
 \t\t\t\t\t\t<div id="content_main2">
 \t\t\t\t\t\t\t<div class="row clearfix">
@@ -181,20 +182,20 @@
 \t\t\t\t\t\t\t\t\t<ul class="nav nav-tabs" >
 \t\t\t\t\t\t\t\t\t\t<li><a data-toggle="tab" href=\'#tab\' class="pkgbtn" id=\'pkgbtn1\' >''')
         _v = VFFSL(SL,"tstrings",True)['update'] # u"$tstrings['update']" on line 60, col 77
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['update']")) # from line 60, col 77.
-        write(u'''</a></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['update']")) # from line 60, col 77.
+        write('''</a></li>
 \t\t\t\t\t\t\t\t\t\t<li><a data-toggle="tab" href=\'#tab\' class="pkgbtn" id=\'pkgbtn2\' >''')
         _v = VFFSL(SL,"tstrings",True)['installed'] # u"$tstrings['installed']" on line 61, col 77
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['installed']")) # from line 61, col 77.
-        write(u'''</a></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['installed']")) # from line 61, col 77.
+        write('''</a></li>
 \t\t\t\t\t\t\t\t\t\t<li><a data-toggle="tab" href=\'#tab\' class="pkgbtn" id=\'pkgbtn3\' >''')
         _v = VFFSL(SL,"tstrings",True)['all'] # u"$tstrings['all']" on line 62, col 77
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['all']")) # from line 62, col 77.
-        write(u'''</a></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['all']")) # from line 62, col 77.
+        write('''</a></li>
 \t\t\t\t\t\t\t\t\t\t<li><a data-toggle="tab" href=\'#tab\' class="pkgbtn" id=\'pkgbtn4\' >''')
         _v = VFFSL(SL,"tstrings",True)['more'] # u"$tstrings['more']" on line 63, col 77
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['more']")) # from line 63, col 77.
-        write(u'''</a></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['more']")) # from line 63, col 77.
+        write('''</a></li>
 \t\t\t\t\t\t\t\t\t</ul>
 \t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t</div>
@@ -208,30 +209,30 @@
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class="col-xs-12 col-sm-6 col-md-4">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button id="updatefeed" type="button" class="btn waves-effect responsivebtn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 75, col 95
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 75, col 95.
-        write(u'''">''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 75, col 95.
+        write('''">''')
         _v = VFFSL(SL,"tstrings",True)['update_feed'] # u"$tstrings['update_feed']" on line 75, col 107
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['update_feed']")) # from line 75, col 107.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['update_feed']")) # from line 75, col 107.
+        write('''</button>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class="col-xs-12 col-sm-6 col-md-4">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button id="upgrade" type="button" class="btn waves-effect responsivebtn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 78, col 92
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 78, col 92.
-        write(u'''">''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 78, col 92.
+        write('''">''')
         _v = VFFSL(SL,"tstrings",True)['upgrade_packages'] # u"$tstrings['upgrade_packages']" on line 78, col 104
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['upgrade_packages']")) # from line 78, col 104.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['upgrade_packages']")) # from line 78, col 104.
+        write('''</button>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<span id="pkguploadOne">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class="col-xs-12 col-sm-6 col-md-4">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button id="selectfile" type="button" class="btn waves-effect responsivebtn bg-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 82, col 96
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 82, col 96.
-        write(u'''">''')
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 82, col 96.
+        write('''">''')
         _v = VFFSL(SL,"tstrings",True)['select_ipk_upload'] # u"$tstrings['select_ipk_upload']" on line 82, col 108
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['select_ipk_upload']")) # from line 82, col 108.
-        write(u'''</button>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['select_ipk_upload']")) # from line 82, col 108.
+        write('''</button>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>
 \t\t\t\t\t\t\t\t\t\t\t\t\t</div>
@@ -240,8 +241,8 @@
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class="col-xs-12">
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i class=\'material-icons material-icons-centered\'>folder_open</i>''')
         _v = VFFSL(SL,"tstrings",True)['uploaded_files'] # u"$tstrings['uploaded_files']" on line 89, col 82
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['uploaded_files']")) # from line 89, col 82.
-        write(u''':
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['uploaded_files']")) # from line 89, col 82.
+        write(''':
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class="row clearfix">
@@ -293,8 +294,8 @@
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p>''')
         _v = VFFSL(SL,"tstrings",True)['loading'] # u"$tstrings['loading']" on line 139, col 21
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['loading']")) # from line 139, col 21.
-        write(u'''...</p>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['loading']")) # from line 139, col 21.
+        write('''...</p>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t</ul>
@@ -316,8 +317,8 @@
 <script type="text/javascript">
 var str_db = "''')
         _v = VFFSL(SL,"tstrings",True)['delete_bookmark'] # u"$tstrings['delete_bookmark']" on line 159, col 15
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['delete_bookmark']")) # from line 159, col 15.
-        write(u'''";
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['delete_bookmark']")) # from line 159, col 15.
+        write('''";
 
 // TODO minimize js
 
@@ -657,16 +658,16 @@
 $.AdminBSB.input.activate();
 ''')
         if VFFSL(SL,"allowipkupload",True): # generated from line 499, col 1
-            write(u'''var noupload=true;
+            write('''var noupload=true;
 ''')
         else: # generated from line 501, col 1
-            write(u'''$(function() {
+            write('''$(function() {
 \t$("#pkguploadOne").hide();
 \t$("#pkguploadTwo").hide();
 });
 var noupload=false;
 ''')
-        write(u'''</script>
+        write('''</script>
 ''')
         
         ########################################
--- ./plugin/controllers/views/responsive/ajax/terminal.py	(original)
+++ ./plugin/controllers/views/responsive/ajax/terminal.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,13 +84,13 @@
         ## START - generated method body
         
         _orig_filter_47493530 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<head>
+        write('''<head>
 \t<style>
 \t\tp {
 \t\t\tfont-size:\t1.1em;
--- ./plugin/controllers/views/responsive/ajax/timers.py	(original)
+++ ./plugin/controllers/views/responsive/ajax/timers.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -63,7 +64,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -73,7 +74,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -87,21 +88,21 @@
         ## START - generated method body
         
         _orig_filter_50990075 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
+        write('''<div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
 \t<div class="card">
 \t\t<div class="header">
 \t\t\t<div class="row clearfix">
 \t\t\t\t<div class="col-xs-12 col-sm-6">
 \t\t\t\t\t<h2><i class="material-icons material-icons-centered">alarm</i>''')
         _v = VFFSL(SL,"tstrings",True)['timer'] # u"$tstrings['timer']" on line 11, col 69
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['timer']")) # from line 11, col 69.
-        write(u'''</h2>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['timer']")) # from line 11, col 69.
+        write('''</h2>
 \t\t\t\t</div>
 \t\t\t</div>
 \t\t\t<ul class="header-dropdown m-r--5">
@@ -111,16 +112,16 @@
 \t\t\t\t\t<ul class="dropdown-menu pull-right" id="timerbuttons">
 \t\t\t\t\t\t<li><a href="#addtimer" data-toggle="modal" data-target="#TimerModal" data-evid="" data-ref="" id="timerbutton0"  ><i class="material-icons material-icons-centered">alarm_add</i>''')
         _v = VFFSL(SL,"tstrings",True)['add_timer'] # u"$tstrings['add_timer']" on line 19, col 185
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['add_timer']")) # from line 19, col 185.
-        write(u'''</a></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['add_timer']")) # from line 19, col 185.
+        write('''</a></li>
 \t\t\t\t\t\t<li><a href="#" onclick="lastcontenturl=\'\';cleanupTimer(); return false" ><i class="material-icons material-icons-centered">delete</i>''')
         _v = VFFSL(SL,"tstrings",True)['cleanup_timer'] # u"$tstrings['cleanup_timer']" on line 20, col 141
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['cleanup_timer']")) # from line 20, col 141.
-        write(u'''</a></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['cleanup_timer']")) # from line 20, col 141.
+        write('''</a></li>
 \t\t\t\t\t\t<li><a href="#" ionclick="lastcontenturl=\'\';load_maincontent(\'ajax/timers\'); return false;" ><i class="material-icons material-icons-centered">autorenew</i>''')
         _v = VFFSL(SL,"tstrings",True)['refresh_timer'] # u"$tstrings['refresh_timer']" on line 21, col 163
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['refresh_timer']")) # from line 21, col 163.
-        write(u'''</a></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['refresh_timer']")) # from line 21, col 163.
+        write('''</a></li>
 \t\t\t\t\t</ul>
 \t\t\t\t</li>
 \t\t\t</ul>
@@ -131,242 +132,242 @@
 
 ''')
         if VFFSL(SL,"MinTimerList",True) == 'checked': # generated from line 30, col 1
-            write(u'''<div class="row clearfix" id="timers">
+            write('''<div class="row clearfix" id="timers">
 \t<div class="col-xs-12">
 ''')
         else: # generated from line 33, col 1
-            write(u'''<div id="timers">
+            write('''<div id="timers">
 ''')
         for timer in VFFSL(SL,"timers",True): # generated from line 36, col 1
-            write(u'''<div ''')
+            write('''<div ''')
             if VFFSL(SL,"MinTimerList",True) == 'checked' : # generated from line 37, col 6
                 _v =  'class="row row-striped clearfix pad-top-15"' 
                 if _v is not None: write(_filter(_v))
             else:
                 _v =  '' 
                 if _v is not None: write(_filter(_v))
-            write(u''' id="''')
+            write(''' id="''')
             _v = VFFSL(SL,"timer.begin",True) # u'$timer.begin' on line 37, col 102
-            if _v is not None: write(_filter(_v, rawExpr=u'$timer.begin')) # from line 37, col 102.
-            write(u'''-''')
+            if _v is not None: write(_filter(_v, rawExpr='$timer.begin')) # from line 37, col 102.
+            write('''-''')
             _v = VFFSL(SL,"timer.end",True) # u'$timer.end' on line 37, col 115
-            if _v is not None: write(_filter(_v, rawExpr=u'$timer.end')) # from line 37, col 115.
-            write(u'''">
+            if _v is not None: write(_filter(_v, rawExpr='$timer.end')) # from line 37, col 115.
+            write('''">
 
 ''')
             if MinTimerList == 'checked': # generated from line 39, col 1
-                write(u'''<div class="col-xs-12 col-md-6">
+                write('''<div class="col-xs-12 col-md-6">
 \t<b><i class="material-icons material-icons-centered">alarm</i>''')
                 _v = VFFSL(SL,"timer.servicename",True) # u'$timer.servicename' on line 41, col 64
-                if _v is not None: write(_filter(_v, rawExpr=u'$timer.servicename')) # from line 41, col 64.
-                write(u''' - ''')
+                if _v is not None: write(_filter(_v, rawExpr='$timer.servicename')) # from line 41, col 64.
+                write(''' - ''')
                 _v = VFFSL(SL,"timer.name",True) # u'$timer.name' on line 41, col 85
-                if _v is not None: write(_filter(_v, rawExpr=u'$timer.name')) # from line 41, col 85.
-                write(u'''</b>
+                if _v is not None: write(_filter(_v, rawExpr='$timer.name')) # from line 41, col 85.
+                write('''</b>
 \t</div>
 \t<div class="col-xs-12 col-md-3">
 \t<b>''')
                 _v = VFFSL(SL,"tstrings",True)[("day_" + (time.strftime("%w", time.localtime(VFFSL(SL,"timer.begin",True)))))] # u'$tstrings[("day_" + (time.strftime("%w", time.localtime($timer.begin))))]' on line 44, col 5
-                if _v is not None: write(_filter(_v, rawExpr=u'$tstrings[("day_" + (time.strftime("%w", time.localtime($timer.begin))))]')) # from line 44, col 5.
-                write(u'''</b>
+                if _v is not None: write(_filter(_v, rawExpr='$tstrings[("day_" + (time.strftime("%w", time.localtime($timer.begin))))]')) # from line 44, col 5.
+                write('''</b>
 \t''')
                 _v = VFFSL(SL,"timer.realbegin",True) # u'$timer.realbegin' on line 45, col 2
-                if _v is not None: write(_filter(_v, rawExpr=u'$timer.realbegin')) # from line 45, col 2.
-                write(u''' - ''')
+                if _v is not None: write(_filter(_v, rawExpr='$timer.realbegin')) # from line 45, col 2.
+                write(''' - ''')
                 _v = VFFSL(SL,"timer.realend",True) # u'$timer.realend' on line 45, col 21
-                if _v is not None: write(_filter(_v, rawExpr=u'$timer.realend')) # from line 45, col 21.
-                write(u'''
+                if _v is not None: write(_filter(_v, rawExpr='$timer.realend')) # from line 45, col 21.
+                write('''
 \t<b>
 ''')
                 if VFFSL(SL,"timer.disabled",True): # generated from line 47, col 2
-                    write(u'''\t\t''')
+                    write('''\t\t''')
                     _v = VFFSL(SL,"tstrings",True)['disabled'] # u"$tstrings['disabled']" on line 48, col 3
-                    if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['disabled']")) # from line 48, col 3.
-                    write(u'''
+                    if _v is not None: write(_filter(_v, rawExpr="$tstrings['disabled']")) # from line 48, col 3.
+                    write('''
 ''')
                 elif VFFSL(SL,"timer.state",True) == 0: # generated from line 49, col 2
-                    write(u'''\t\t''')
+                    write('''\t\t''')
                     _v = VFFSL(SL,"tstrings",True)['waiting'] # u"$tstrings['waiting']" on line 50, col 3
-                    if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['waiting']")) # from line 50, col 3.
-                    write(u'''
+                    if _v is not None: write(_filter(_v, rawExpr="$tstrings['waiting']")) # from line 50, col 3.
+                    write('''
 ''')
                 elif VFFSL(SL,"timer.state",True) == 2: # generated from line 51, col 2
-                    write(u'''\t\t''')
+                    write('''\t\t''')
                     _v = VFFSL(SL,"tstrings",True)['running'] # u"$tstrings['running']" on line 52, col 3
-                    if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['running']")) # from line 52, col 3.
-                    write(u'''
+                    if _v is not None: write(_filter(_v, rawExpr="$tstrings['running']")) # from line 52, col 3.
+                    write('''
 ''')
                 elif VFFSL(SL,"timer.state",True) == 3: # generated from line 53, col 2
-                    write(u'''\t\t''')
+                    write('''\t\t''')
                     _v = VFFSL(SL,"tstrings",True)['finished'] # u"$tstrings['finished']" on line 54, col 3
-                    if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['finished']")) # from line 54, col 3.
-                    write(u'''
-''')
-                write(u'''
+                    if _v is not None: write(_filter(_v, rawExpr="$tstrings['finished']")) # from line 54, col 3.
+                    write('''
+''')
+                write('''
 ''')
                 if VFFSL(SL,"timer.repeated",True) != 0: # generated from line 57, col 1
-                    write(u'''\t<div>
+                    write('''\t<div>
 \t''')
                     _v = VFFSL(SL,"tstrings",True)['every_timer'] # u"$tstrings['every_timer']" on line 59, col 2
-                    if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['every_timer']")) # from line 59, col 2.
-                    write(u'''
+                    if _v is not None: write(_filter(_v, rawExpr="$tstrings['every_timer']")) # from line 59, col 2.
+                    write('''
 ''')
                     flags = VFFSL(SL,"timer.repeated",True)
                     timerDays = []
                     for day in [VFFSL(SL,"tstrings",True)['monday'],VFFSL(SL,"tstrings",True)['tuesday'],VFFSL(SL,"tstrings",True)['wednesday'],VFFSL(SL,"tstrings",True)['thursday'],VFFSL(SL,"tstrings",True)['friday'],VFFSL(SL,"tstrings",True)['saturday'],VFFSL(SL,"tstrings",True)['sunday']]: # generated from line 62, col 2
                         if VFFSL(SL,"flags",True)&1: # generated from line 63, col 3
-                            write(u'''\t\t\t''')
+                            write('''\t\t\t''')
                             _v = VFN(VFFSL(SL,"timerDays",True),"append",False)(VFFSL(SL,"day",True)) # u'$timerDays.append($day)' on line 64, col 4
-                            if _v is not None: write(_filter(_v, rawExpr=u'$timerDays.append($day)')) # from line 64, col 4.
-                            write(u'''
+                            if _v is not None: write(_filter(_v, rawExpr='$timerDays.append($day)')) # from line 64, col 4.
+                            write('''
 ''')
                         flags = VFFSL(SL,"flags",True) >> 1
                     _v = ', '.join(VFFSL(SL,"timerDays",True))
                     if _v is not None: write(_filter(_v))
-                    write(u'''\t</div>
-''')
-                write(u'''</div>
+                    write('''\t</div>
+''')
+                write('''</div>
 <div class="col-xs-12 col-md-3 align-right">
 ''')
                 sref = quote(VFFSL(SL,"timer.serviceref",True), safe=' ~@#$&()*!+=:;,.?/\'')
                 tname = quote(VFFSL(SL,"timer.name",True))
-                write(u'''<a class="theme-link-color theme-link-col-''')
+                write('''<a class="theme-link-color theme-link-col-''')
                 _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 75, col 43
-                if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 75, col 43.
-                write(u''' href="#edittimer" data-toggle="modal" data-target="#TimerModal" data-ref="''')
+                if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 75, col 43.
+                write(''' href="#edittimer" data-toggle="modal" data-target="#TimerModal" data-ref="''')
                 _v = VFFSL(SL,"sref",True) # u'$sref' on line 75, col 128
-                if _v is not None: write(_filter(_v, rawExpr=u'$sref')) # from line 75, col 128.
-                write(u'''" data-begin="''')
+                if _v is not None: write(_filter(_v, rawExpr='$sref')) # from line 75, col 128.
+                write('''" data-begin="''')
                 _v = VFFSL(SL,"timer.begin",True) # u'$timer.begin' on line 75, col 147
-                if _v is not None: write(_filter(_v, rawExpr=u'$timer.begin')) # from line 75, col 147.
-                write(u'''" data-end="''')
+                if _v is not None: write(_filter(_v, rawExpr='$timer.begin')) # from line 75, col 147.
+                write('''" data-end="''')
                 _v = VFFSL(SL,"timer.end",True) # u'$timer.end' on line 75, col 171
-                if _v is not None: write(_filter(_v, rawExpr=u'$timer.end')) # from line 75, col 171.
-                write(u'''" title="''')
+                if _v is not None: write(_filter(_v, rawExpr='$timer.end')) # from line 75, col 171.
+                write('''" title="''')
                 _v = VFFSL(SL,"tstrings",True)['edit_timer'] # u"$tstrings['edit_timer']" on line 75, col 190
-                if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['edit_timer']")) # from line 75, col 190.
-                write(u'''"><i class="material-icons material-icons-mg-right">edit</i></a>
+                if _v is not None: write(_filter(_v, rawExpr="$tstrings['edit_timer']")) # from line 75, col 190.
+                write('''"><i class="material-icons material-icons-mg-right">edit</i></a>
 <a class="theme-link-color theme-link-col-''')
                 _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 76, col 43
-                if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 76, col 43.
-                write(u''' href="#" onClick="toggleTimerStatus(\'''')
+                if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 76, col 43.
+                write(''' href="#" onClick="toggleTimerStatus(\'''')
                 _v = VFFSL(SL,"sref",True) # u'$sref' on line 76, col 91
-                if _v is not None: write(_filter(_v, rawExpr=u'$sref')) # from line 76, col 91.
-                write(u"""', '""")
+                if _v is not None: write(_filter(_v, rawExpr='$sref')) # from line 76, col 91.
+                write("""', '""")
                 _v = VFFSL(SL,"timer.begin",True) # u'$timer.begin' on line 76, col 100
-                if _v is not None: write(_filter(_v, rawExpr=u'$timer.begin')) # from line 76, col 100.
-                write(u"""', '""")
+                if _v is not None: write(_filter(_v, rawExpr='$timer.begin')) # from line 76, col 100.
+                write("""', '""")
                 _v = VFFSL(SL,"timer.end",True) # u'$timer.end' on line 76, col 116
-                if _v is not None: write(_filter(_v, rawExpr=u'$timer.end')) # from line 76, col 116.
-                write(u'''\'); lastcontenturl=\'\'; setTimeout(function(){load_maincontent(\'ajax/timers\')}, 200); return false;"
+                if _v is not None: write(_filter(_v, rawExpr='$timer.end')) # from line 76, col 116.
+                write('''\'); lastcontenturl=\'\'; setTimeout(function(){load_maincontent(\'ajax/timers\')}, 200); return false;"
 ''')
                 if VFFSL(SL,"timer.disabled",True): # generated from line 77, col 1
-                    write(u'''\ttitle="''')
+                    write('''\ttitle="''')
                     _v = VFFSL(SL,"tstrings",True)['enable_timer'] # u"$tstrings['enable_timer']" on line 78, col 9
-                    if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['enable_timer']")) # from line 78, col 9.
-                    write(u'''"><i class="material-icons material-icons-mg-right">alarm_on</i></a>
+                    if _v is not None: write(_filter(_v, rawExpr="$tstrings['enable_timer']")) # from line 78, col 9.
+                    write('''"><i class="material-icons material-icons-mg-right">alarm_on</i></a>
 ''')
                 else: # generated from line 79, col 1
-                    write(u'''\ttitle="''')
+                    write('''\ttitle="''')
                     _v = VFFSL(SL,"tstrings",True)['disable_timer'] # u"$tstrings['disable_timer']" on line 80, col 9
-                    if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['disable_timer']")) # from line 80, col 9.
-                    write(u'''"><i class="material-icons material-icons-mg-right">alarm_off</i></a>
-''')
-                write(u'''<a class="theme-link-color theme-link-col-''')
+                    if _v is not None: write(_filter(_v, rawExpr="$tstrings['disable_timer']")) # from line 80, col 9.
+                    write('''"><i class="material-icons material-icons-mg-right">alarm_off</i></a>
+''')
+                write('''<a class="theme-link-color theme-link-col-''')
                 _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 82, col 43
-                if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 82, col 43.
-                write(u''' href="#" onClick="deleteTimer(\'''')
+                if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 82, col 43.
+                write(''' href="#" onClick="deleteTimer(\'''')
                 _v = VFFSL(SL,"sref",True) # u'$sref' on line 82, col 85
-                if _v is not None: write(_filter(_v, rawExpr=u'$sref')) # from line 82, col 85.
-                write(u"""', '""")
+                if _v is not None: write(_filter(_v, rawExpr='$sref')) # from line 82, col 85.
+                write("""', '""")
                 _v = VFFSL(SL,"timer.begin",True) # u'$timer.begin' on line 82, col 94
-                if _v is not None: write(_filter(_v, rawExpr=u'$timer.begin')) # from line 82, col 94.
-                write(u"""', '""")
+                if _v is not None: write(_filter(_v, rawExpr='$timer.begin')) # from line 82, col 94.
+                write("""', '""")
                 _v = VFFSL(SL,"timer.end",True) # u'$timer.end' on line 82, col 110
-                if _v is not None: write(_filter(_v, rawExpr=u'$timer.end')) # from line 82, col 110.
-                write(u"""', '""")
+                if _v is not None: write(_filter(_v, rawExpr='$timer.end')) # from line 82, col 110.
+                write("""', '""")
                 _v = VFFSL(SL,"tname",True) # u'$tname' on line 82, col 124
-                if _v is not None: write(_filter(_v, rawExpr=u'$tname')) # from line 82, col 124.
-                write(u'''\'); lastcontenturl=\'\'; setTimeout(function(){load_maincontent(\'ajax/timers\')}, 200); return false;" title="''')
+                if _v is not None: write(_filter(_v, rawExpr='$tname')) # from line 82, col 124.
+                write('''\'); lastcontenturl=\'\'; setTimeout(function(){load_maincontent(\'ajax/timers\')}, 200); return false;" title="''')
                 _v = VFFSL(SL,"tstrings",True)['delete_timer'] # u"$tstrings['delete_timer']" on line 82, col 237
-                if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['delete_timer']")) # from line 82, col 237.
-                write(u'''" ><i class="material-icons material-icons-mg-right">delete</i></a></div></div>
+                if _v is not None: write(_filter(_v, rawExpr="$tstrings['delete_timer']")) # from line 82, col 237.
+                write('''" ><i class="material-icons material-icons-mg-right">delete</i></a></div></div>
 
 ''')
             else: # generated from line 84, col 1
-                write(u'''<div class="card">
+                write('''<div class="card">
 \t<div class="header">
 \t\t<div class="row clearfix" style="margin-bottom:-20px;">
 \t\t<div class="col-xs-6">
 \t\t\t<h2><i class="material-icons material-icons-centered">alarm</i>''')
                 _v = VFFSL(SL,"timer.servicename",True) # u'$timer.servicename' on line 89, col 67
-                if _v is not None: write(_filter(_v, rawExpr=u'$timer.servicename')) # from line 89, col 67.
-                write(u''' - ''')
+                if _v is not None: write(_filter(_v, rawExpr='$timer.servicename')) # from line 89, col 67.
+                write(''' - ''')
                 _v = VFFSL(SL,"timer.name",True) # u'$timer.name' on line 89, col 88
-                if _v is not None: write(_filter(_v, rawExpr=u'$timer.name')) # from line 89, col 88.
-                write(u'''</h2>
+                if _v is not None: write(_filter(_v, rawExpr='$timer.name')) # from line 89, col 88.
+                write('''</h2>
 \t\t</div>
 \t\t<div class="col-xs-6">
 ''')
                 sref = quote(VFFSL(SL,"timer.serviceref",True), safe=' ~@#$&()*!+=:;,.?/\'')
                 tname = quote(VFFSL(SL,"timer.name",True))
-                write(u'''
+                write('''
 \t\t<ul class="header-dropdown m-r--5">
 \t\t\t<li><span role="button"><a href="#edittimer" data-toggle="modal" data-target="#TimerModal" data-ref="''')
                 _v = VFFSL(SL,"sref",True) # u'$sref' on line 96, col 105
-                if _v is not None: write(_filter(_v, rawExpr=u'$sref')) # from line 96, col 105.
-                write(u'''" data-ref="''')
+                if _v is not None: write(_filter(_v, rawExpr='$sref')) # from line 96, col 105.
+                write('''" data-ref="''')
                 _v = VFFSL(SL,"sref",True) # u'$sref' on line 96, col 122
-                if _v is not None: write(_filter(_v, rawExpr=u'$sref')) # from line 96, col 122.
-                write(u'''" data-begin="''')
+                if _v is not None: write(_filter(_v, rawExpr='$sref')) # from line 96, col 122.
+                write('''" data-begin="''')
                 _v = VFFSL(SL,"timer.begin",True) # u'$timer.begin' on line 96, col 141
-                if _v is not None: write(_filter(_v, rawExpr=u'$timer.begin')) # from line 96, col 141.
-                write(u'''" data-end="''')
+                if _v is not None: write(_filter(_v, rawExpr='$timer.begin')) # from line 96, col 141.
+                write('''" data-end="''')
                 _v = VFFSL(SL,"timer.end",True) # u'$timer.end' on line 96, col 165
-                if _v is not None: write(_filter(_v, rawExpr=u'$timer.end')) # from line 96, col 165.
-                write(u'''" title="''')
+                if _v is not None: write(_filter(_v, rawExpr='$timer.end')) # from line 96, col 165.
+                write('''" title="''')
                 _v = VFFSL(SL,"tstrings",True)['edit_timer'] # u"$tstrings['edit_timer']" on line 96, col 184
-                if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['edit_timer']")) # from line 96, col 184.
-                write(u'''"><i class="material-icons material-icons-mg-right">edit</i></a></span></li>
+                if _v is not None: write(_filter(_v, rawExpr="$tstrings['edit_timer']")) # from line 96, col 184.
+                write('''"><i class="material-icons material-icons-mg-right">edit</i></a></span></li>
 \t\t\t<li><span role="button"><a href="#" onClick="toggleTimerStatus(\'''')
                 _v = VFFSL(SL,"sref",True) # u'$sref' on line 97, col 68
-                if _v is not None: write(_filter(_v, rawExpr=u'$sref')) # from line 97, col 68.
-                write(u"""', '""")
+                if _v is not None: write(_filter(_v, rawExpr='$sref')) # from line 97, col 68.
+                write("""', '""")
                 _v = VFFSL(SL,"timer.begin",True) # u'$timer.begin' on line 97, col 77
-                if _v is not None: write(_filter(_v, rawExpr=u'$timer.begin')) # from line 97, col 77.
-                write(u"""', '""")
+                if _v is not None: write(_filter(_v, rawExpr='$timer.begin')) # from line 97, col 77.
+                write("""', '""")
                 _v = VFFSL(SL,"timer.end",True) # u'$timer.end' on line 97, col 93
-                if _v is not None: write(_filter(_v, rawExpr=u'$timer.end')) # from line 97, col 93.
-                write(u'''\'); lastcontenturl=\'\'; setTimeout(function(){load_maincontent(\'ajax/timers\')}, 200); return false;"
+                if _v is not None: write(_filter(_v, rawExpr='$timer.end')) # from line 97, col 93.
+                write('''\'); lastcontenturl=\'\'; setTimeout(function(){load_maincontent(\'ajax/timers\')}, 200); return false;"
 ''')
                 if VFFSL(SL,"timer.disabled",True): # generated from line 98, col 4
-                    write(u'''\t\t\t\ttitle="''')
+                    write('''\t\t\t\ttitle="''')
                     _v = VFFSL(SL,"tstrings",True)['enable_timer'] # u"$tstrings['enable_timer']" on line 99, col 12
-                    if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['enable_timer']")) # from line 99, col 12.
-                    write(u'''"><i class="material-icons material-icons-mg-right">alarm_on</i></a></span></li>
+                    if _v is not None: write(_filter(_v, rawExpr="$tstrings['enable_timer']")) # from line 99, col 12.
+                    write('''"><i class="material-icons material-icons-mg-right">alarm_on</i></a></span></li>
 ''')
                 else: # generated from line 100, col 4
-                    write(u'''\t\t\t\ttitle="''')
+                    write('''\t\t\t\ttitle="''')
                     _v = VFFSL(SL,"tstrings",True)['disable_timer'] # u"$tstrings['disable_timer']" on line 101, col 12
-                    if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['disable_timer']")) # from line 101, col 12.
-                    write(u'''"><i class="material-icons material-icons-mg-right">alarm_off</i></a></span></li>
-''')
-                write(u'''\t\t\t<li><span role="button"><a href="#" onClick="deleteTimer(\'''')
+                    if _v is not None: write(_filter(_v, rawExpr="$tstrings['disable_timer']")) # from line 101, col 12.
+                    write('''"><i class="material-icons material-icons-mg-right">alarm_off</i></a></span></li>
+''')
+                write('''\t\t\t<li><span role="button"><a href="#" onClick="deleteTimer(\'''')
                 _v = VFFSL(SL,"sref",True) # u'$sref' on line 103, col 62
-                if _v is not None: write(_filter(_v, rawExpr=u'$sref')) # from line 103, col 62.
-                write(u"""', '""")
+                if _v is not None: write(_filter(_v, rawExpr='$sref')) # from line 103, col 62.
+                write("""', '""")
                 _v = VFFSL(SL,"timer.begin",True) # u'$timer.begin' on line 103, col 71
-                if _v is not None: write(_filter(_v, rawExpr=u'$timer.begin')) # from line 103, col 71.
-                write(u"""', '""")
+                if _v is not None: write(_filter(_v, rawExpr='$timer.begin')) # from line 103, col 71.
+                write("""', '""")
                 _v = VFFSL(SL,"timer.end",True) # u'$timer.end' on line 103, col 87
-                if _v is not None: write(_filter(_v, rawExpr=u'$timer.end')) # from line 103, col 87.
-                write(u"""', '""")
+                if _v is not None: write(_filter(_v, rawExpr='$timer.end')) # from line 103, col 87.
+                write("""', '""")
                 _v = VFFSL(SL,"tname",True) # u'$tname' on line 103, col 101
-                if _v is not None: write(_filter(_v, rawExpr=u'$tname')) # from line 103, col 101.
-                write(u'''\'); lastcontenturl=\'\'; setTimeout(function(){load_maincontent(\'ajax/timers\')}, 200); return false;" title="''')
+                if _v is not None: write(_filter(_v, rawExpr='$tname')) # from line 103, col 101.
+                write('''\'); lastcontenturl=\'\'; setTimeout(function(){load_maincontent(\'ajax/timers\')}, 200); return false;" title="''')
                 _v = VFFSL(SL,"tstrings",True)['delete_timer'] # u"$tstrings['delete_timer']" on line 103, col 214
-                if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['delete_timer']")) # from line 103, col 214.
-                write(u'''" ><i class="material-icons material-icons-mg-right">delete</i></a></span></li>
+                if _v is not None: write(_filter(_v, rawExpr="$tstrings['delete_timer']")) # from line 103, col 214.
+                write('''" ><i class="material-icons material-icons-mg-right">delete</i></a></span></li>
 \t\t</ul>
 \t\t</div>
 \t</div>
@@ -377,80 +378,80 @@
 \t\t\t<div class="col-sm-5">
 \t\t\t\t<b>''')
                 _v = VFFSL(SL,"tstrings",True)[("day_" + (time.strftime("%w", time.localtime(VFFSL(SL,"timer.begin",True)))))] # u'$tstrings[("day_" + (time.strftime("%w", time.localtime($timer.begin))))]' on line 112, col 8
-                if _v is not None: write(_filter(_v, rawExpr=u'$tstrings[("day_" + (time.strftime("%w", time.localtime($timer.begin))))]')) # from line 112, col 8.
-                write(u'''</b>
+                if _v is not None: write(_filter(_v, rawExpr='$tstrings[("day_" + (time.strftime("%w", time.localtime($timer.begin))))]')) # from line 112, col 8.
+                write('''</b>
 \t\t\t\t''')
                 _v = VFFSL(SL,"timer.realbegin",True) # u'$timer.realbegin' on line 113, col 5
-                if _v is not None: write(_filter(_v, rawExpr=u'$timer.realbegin')) # from line 113, col 5.
-                write(u''' - ''')
+                if _v is not None: write(_filter(_v, rawExpr='$timer.realbegin')) # from line 113, col 5.
+                write(''' - ''')
                 _v = VFFSL(SL,"timer.realend",True) # u'$timer.realend' on line 113, col 24
-                if _v is not None: write(_filter(_v, rawExpr=u'$timer.realend')) # from line 113, col 24.
-                write(u'''
+                if _v is not None: write(_filter(_v, rawExpr='$timer.realend')) # from line 113, col 24.
+                write('''
 ''')
                 if VFFSL(SL,"timer.repeated",True) != 0: # generated from line 114, col 4
-                    write(u'''\t\t\t\t<div>
+                    write('''\t\t\t\t<div>
 \t\t\t\t''')
                     _v = VFFSL(SL,"tstrings",True)['every_timer'] # u"$tstrings['every_timer']" on line 116, col 5
-                    if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['every_timer']")) # from line 116, col 5.
-                    write(u'''
+                    if _v is not None: write(_filter(_v, rawExpr="$tstrings['every_timer']")) # from line 116, col 5.
+                    write('''
 ''')
                     flags = VFFSL(SL,"timer.repeated",True)
                     timerDays = []
                     for day in [VFFSL(SL,"tstrings",True)['monday'],VFFSL(SL,"tstrings",True)['tuesday'],VFFSL(SL,"tstrings",True)['wednesday'],VFFSL(SL,"tstrings",True)['thursday'],VFFSL(SL,"tstrings",True)['friday'],VFFSL(SL,"tstrings",True)['saturday'],VFFSL(SL,"tstrings",True)['sunday']]: # generated from line 119, col 5
                         if VFFSL(SL,"flags",True)&1: # generated from line 120, col 6
-                            write(u'''\t\t\t\t\t\t''')
+                            write('''\t\t\t\t\t\t''')
                             _v = VFN(VFFSL(SL,"timerDays",True),"append",False)(VFFSL(SL,"day",True)) # u'$timerDays.append($day)' on line 121, col 7
-                            if _v is not None: write(_filter(_v, rawExpr=u'$timerDays.append($day)')) # from line 121, col 7.
-                            write(u'''
+                            if _v is not None: write(_filter(_v, rawExpr='$timerDays.append($day)')) # from line 121, col 7.
+                            write('''
 ''')
                         flags = VFFSL(SL,"flags",True) >> 1
                     _v = ', '.join(VFFSL(SL,"timerDays",True))
                     if _v is not None: write(_filter(_v))
-                    write(u'''\t\t\t\t</div>
-''')
-                write(u'''\t\t\t</div>
+                    write('''\t\t\t\t</div>
+''')
+                write('''\t\t\t</div>
 \t\t\t<div class="col-sm-5">
 \t\t\t\t''')
                 _v = VFFSL(SL,"timer.description",True) # u'$timer.description' on line 130, col 5
-                if _v is not None: write(_filter(_v, rawExpr=u'$timer.description')) # from line 130, col 5.
-                write(u'''
+                if _v is not None: write(_filter(_v, rawExpr='$timer.description')) # from line 130, col 5.
+                write('''
 \t\t\t</div>
 \t\t\t<div class="col-sm-2" style="font-weight:bold;">
 ''')
                 if VFFSL(SL,"timer.disabled",True): # generated from line 133, col 4
-                    write(u'''\t\t\t\t''')
+                    write('''\t\t\t\t''')
                     _v = VFFSL(SL,"tstrings",True)['disabled'] # u"$tstrings['disabled']" on line 134, col 5
-                    if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['disabled']")) # from line 134, col 5.
-                    write(u'''
+                    if _v is not None: write(_filter(_v, rawExpr="$tstrings['disabled']")) # from line 134, col 5.
+                    write('''
 ''')
                 elif VFFSL(SL,"timer.state",True) == 0: # generated from line 135, col 4
-                    write(u'''\t\t\t\t''')
+                    write('''\t\t\t\t''')
                     _v = VFFSL(SL,"tstrings",True)['waiting'] # u"$tstrings['waiting']" on line 136, col 5
-                    if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['waiting']")) # from line 136, col 5.
-                    write(u'''
+                    if _v is not None: write(_filter(_v, rawExpr="$tstrings['waiting']")) # from line 136, col 5.
+                    write('''
 ''')
                 elif VFFSL(SL,"timer.state",True) == 2: # generated from line 137, col 4
-                    write(u'''\t\t\t\t''')
+                    write('''\t\t\t\t''')
                     _v = VFFSL(SL,"tstrings",True)['running'] # u"$tstrings['running']" on line 138, col 5
-                    if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['running']")) # from line 138, col 5.
-                    write(u'''
+                    if _v is not None: write(_filter(_v, rawExpr="$tstrings['running']")) # from line 138, col 5.
+                    write('''
 ''')
                 elif VFFSL(SL,"timer.state",True) == 3: # generated from line 139, col 4
-                    write(u'''\t\t\t\t''')
+                    write('''\t\t\t\t''')
                     _v = VFFSL(SL,"tstrings",True)['finished'] # u"$tstrings['finished']" on line 140, col 5
-                    if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['finished']")) # from line 140, col 5.
-                    write(u'''
-''')
-                write(u'''\t\t\t</div>
+                    if _v is not None: write(_filter(_v, rawExpr="$tstrings['finished']")) # from line 140, col 5.
+                    write('''
+''')
+                write('''\t\t\t</div>
 \t\t\t</div>
 \t\t</div>
 \t</div>
 </div>
 
 ''')
-            write(u'''
-''')
-        write(u'''
+            write('''
+''')
+        write('''
 </div>
 </div>
 </div>
--- ./plugin/controllers/views/responsive/ajax/tv.py	(original)
+++ ./plugin/controllers/views/responsive/ajax/tv.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -60,7 +61,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -70,7 +71,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,15 +84,15 @@
         ########################################
         ## START - generated method body
         
-        write(u'''<div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
+        write('''<div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
 \t<div class="card">
 \t\t<div class="header">
 \t\t\t<div class="row clearfix">
 \t\t\t\t<div class="col-xs-12 col-sm-6">
 \t\t\t\t\t<h2><i class="material-icons material-icons-centered">tv</i>''')
         _v = VFFSL(SL,"tstrings",True)['television'] # u"$tstrings['television']" on line 7, col 66
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['television']")) # from line 7, col 66.
-        write(u'''</h2>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['television']")) # from line 7, col 66.
+        write('''</h2>
 \t\t\t\t</div>
 \t\t\t</div>
 \t\t\t<ul class="header-dropdown m-r--5">
@@ -100,28 +101,28 @@
 \t\t\t\t\t<ul class="dropdown-menu pull-right" id="tvbuttons">
 \t\t\t\t\t\t<li><a href="#" id="btn0" >''')
         _v = VFFSL(SL,"tstrings",True)['current'] # u"$tstrings['current']" on line 14, col 34
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['current']")) # from line 14, col 34.
-        write(u'''</a></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['current']")) # from line 14, col 34.
+        write('''</a></li>
 \t\t\t\t\t\t<li><a href="#" id="btn1" >''')
         _v = VFFSL(SL,"tstrings",True)['bouquets'] # u"$tstrings['bouquets']" on line 15, col 34
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['bouquets']")) # from line 15, col 34.
-        write(u'''</a></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['bouquets']")) # from line 15, col 34.
+        write('''</a></li>
 \t\t\t\t\t\t<li><a href="#" id="btn2" >''')
         _v = VFFSL(SL,"tstrings",True)['providers'] # u"$tstrings['providers']" on line 16, col 34
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['providers']")) # from line 16, col 34.
-        write(u'''</a></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['providers']")) # from line 16, col 34.
+        write('''</a></li>
 \t\t\t\t\t\t<li><a href="#" id="btn3" >''')
         _v = VFFSL(SL,"tstrings",True)['satellites'] # u"$tstrings['satellites']" on line 17, col 34
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['satellites']")) # from line 17, col 34.
-        write(u'''</a></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['satellites']")) # from line 17, col 34.
+        write('''</a></li>
 \t\t\t\t\t\t<li><a href="#" id="btn4" >''')
         _v = VFFSL(SL,"tstrings",True)['all_channels'] # u"$tstrings['all_channels']" on line 18, col 34
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['all_channels']")) # from line 18, col 34.
-        write(u'''</a></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['all_channels']")) # from line 18, col 34.
+        write('''</a></li>
 \t\t\t\t\t\t<li><a href="#" id="btn5epg" onClick="load_maincontent(\'ajax/myepg?epgmode=tv\'); return false;">''')
         _v = VFFSL(SL,"tstrings",True)['epg'] # u"$tstrings['epg']" on line 19, col 103
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['epg']")) # from line 19, col 103.
-        write(u'''</a></li>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['epg']")) # from line 19, col 103.
+        write('''</a></li>
 \t\t\t\t\t</ul>
 \t\t\t\t</li>
 \t\t\t</ul>
--- ./plugin/controllers/views/responsive/ajax/webtv.py	(original)
+++ ./plugin/controllers/views/responsive/ajax/webtv.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -61,7 +62,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -71,7 +72,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -85,13 +86,13 @@
         ## START - generated method body
         
         _orig_filter_32110387 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''
+        write('''
 <style>
 #streamchannels-menu {max-height: 300px;}
 </style>
@@ -118,25 +119,25 @@
 \t\t\t\t\t\t\t</div>
 ''')
         if VFFSL(SL,"vxgenabled",True): # generated from line 29, col 7
-            write(u'''\t\t\t\t\t\t\t\t<div id="vxgPlayer" style="margin:0 auto 0 auto;width:640px;height:500px;display:none;">
+            write('''\t\t\t\t\t\t\t\t<div id="vxgPlayer" style="margin:0 auto 0 auto;width:640px;height:500px;display:none;">
 \t\t\t\t\t\t\t\t</div>
 ''')
-        write(u'''\t\t\t\t\t\t</div>
+        write('''\t\t\t\t\t\t</div>
 \t\t\t\t\t</div>
 \t\t\t\t\t<div class="row clearfix">
 \t\t\t\t\t\t<div class="col-xs-12 align-center">
 \t\t\t\t\t\t\t<input type="radio" class="radio-vti radio-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 37, col 55
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 37, col 55.
-        write(u'''" id="plbtn_vlc"><label for="plbtn_vlc">VLC</label></input>
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 37, col 55.
+        write('''" id="plbtn_vlc"><label for="plbtn_vlc">VLC</label></input>
 \t\t\t\t\t\t\t<input type="radio" class="radio-vti radio-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 38, col 55
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 38, col 55.
-        write(u'''" id="plbtn_vxg" /><label for="plbtn_vxg">VXG</label>
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 38, col 55.
+        write('''" id="plbtn_vxg" /><label for="plbtn_vxg">VXG</label>
 \t\t\t\t\t\t\t<input type="radio" class="radio-vti radio-col-''')
         _v = VFFSL(SL,"skinColor",True) # u'$skinColor' on line 39, col 55
-        if _v is not None: write(_filter(_v, rawExpr=u'$skinColor')) # from line 39, col 55.
-        write(u'''" id="plbtn_html"  /><label for="plbtn_html">HTML</label>
+        if _v is not None: write(_filter(_v, rawExpr='$skinColor')) # from line 39, col 55.
+        write('''" id="plbtn_html"  /><label for="plbtn_html">HTML</label>
 \t\t\t\t\t\t</div>
 \t\t\t\t\t</div>
 \t\t\t\t\t<div style="display:inline-block;margin-left:10px;">
@@ -159,8 +160,8 @@
 \t\t\t\t\t\t\t<label id="wtranscodingl" for="wtranscoding">Transcoding</label>
 \t\t\t\t\t\t\t<input type="checkbox" data-port="''')
         _v = VFFSL(SL,"transcoder_port",True) # u'$transcoder_port' on line 60, col 42
-        if _v is not None: write(_filter(_v, rawExpr=u'$transcoder_port')) # from line 60, col 42.
-        write(u'''" name="wtranscoding" id="wtranscoding">
+        if _v is not None: write(_filter(_v, rawExpr='$transcoder_port')) # from line 60, col 42.
+        write('''" name="wtranscoding" id="wtranscoding">
 \t\t\t\t\t\t\t<button id="btnstop" style="margin-left:5px;">Stop</button>
 \t\t\t\t\t\t\t<button id="btnplay" style="margin-left:5px;">Play</button>
 \t\t\t\t\t\t</div>
@@ -171,12 +172,12 @@
 \t\t\t\t\t<span id="srcbuttons" style="margin-right:10px;">
 \t\t\t\t\t<input type="radio" id="sbtn0" name="srcbutton" checked="checked" /><label for="sbtn0">''')
         _v = VFFSL(SL,"tstrings",True)['channels'] # u"$tstrings['channels']" on line 69, col 93
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['channels']")) # from line 69, col 93.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['channels']")) # from line 69, col 93.
+        write('''</label>
 \t\t\t\t\t<input type="radio" id="sbtn1" name="srcbutton" /><label for="sbtn1">''')
         _v = VFFSL(SL,"tstrings",True)['movies'] # u"$tstrings['movies']" on line 70, col 75
-        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['movies']")) # from line 70, col 75.
-        write(u'''</label>
+        if _v is not None: write(_filter(_v, rawExpr="$tstrings['movies']")) # from line 70, col 75.
+        write('''</label>
 \t\t\t\t\t</span>
 \t\t\t\t\t<span style="display:inline-block;">
 \t\t\t\t\t<select name="streamchannels" id="streamchannels" tabindex="16"></select>
@@ -190,19 +191,19 @@
         sorttypes = ['name','named','date','dated']
         sortimg = ['fa-sort-alpha-asc','fa-sort-alpha-desc','fa-sort-numeric-asc','fa-sort-numeric-desc']
         for title in VFFSL(SL,"sortnames",True): # generated from line 82, col 6
-            write(u'''\t\t\t\t\t\t<option value="''')
+            write('''\t\t\t\t\t\t<option value="''')
             _v = VFFSL(SL,"sorttypes",True)[VFFSL(SL,"count",True)] # u'$sorttypes[$count]' on line 83, col 22
-            if _v is not None: write(_filter(_v, rawExpr=u'$sorttypes[$count]')) # from line 83, col 22.
-            write(u'''" data-class="''')
+            if _v is not None: write(_filter(_v, rawExpr='$sorttypes[$count]')) # from line 83, col 22.
+            write('''" data-class="''')
             _v = VFFSL(SL,"sortimg",True)[VFFSL(SL,"count",True)] # u'$sortimg[$count]' on line 83, col 54
-            if _v is not None: write(_filter(_v, rawExpr=u'$sortimg[$count]')) # from line 83, col 54.
-            write(u'''">''')
+            if _v is not None: write(_filter(_v, rawExpr='$sortimg[$count]')) # from line 83, col 54.
+            write('''">''')
             _v = VFFSL(SL,"title",True) # u'$title' on line 83, col 72
-            if _v is not None: write(_filter(_v, rawExpr=u'$title')) # from line 83, col 72.
-            write(u'''</option>
+            if _v is not None: write(_filter(_v, rawExpr='$title')) # from line 83, col 72.
+            write('''</option>
 ''')
             count += 1
-        write(u'''\t\t\t\t\t</select>
+        write('''\t\t\t\t\t</select>
 \t\t\t\t\t</span>
 \t\t\t\t\t</div>
 \t\t\t\t</div>
@@ -212,22 +213,22 @@
 </div>
 ''')
         if VFFSL(SL,"vxgenabled",True): # generated from line 94, col 1
-            write(u'''<script type="text/javascript" src="/vxg/vxgplayer-1.8.51.min.js"></script>
-''')
-        write(u'''<script type="text/javascript" src="/webtv/webtv.js"></script>
+            write('''<script type="text/javascript" src="/vxg/vxgplayer-1.8.51.min.js"></script>
+''')
+        write('''<script type="text/javascript" src="/webtv/webtv.js"></script>
 <script type="text/javascript">
 $(function() { var playerObj=new PlayerObj(); playerObj.setup((\'''')
         _v = VFFSL(SL,"vxgenabled",True) # u'$vxgenabled' on line 99, col 66
-        if _v is not None: write(_filter(_v, rawExpr=u'$vxgenabled')) # from line 99, col 66.
-        write(u"""' === 'True'),'""")
+        if _v is not None: write(_filter(_v, rawExpr='$vxgenabled')) # from line 99, col 66.
+        write("""' === 'True'),'""")
         _v = VFFSL(SL,"auth",True) # u'$auth' on line 99, col 92
-        if _v is not None: write(_filter(_v, rawExpr=u'$auth')) # from line 99, col 92.
-        write(u'''\')});
+        if _v is not None: write(_filter(_v, rawExpr='$auth')) # from line 99, col 92.
+        write('''\')});
 </script>
 <link rel="stylesheet" type="text/css" href="/css/chosen.min.css" />
 ''')
         if VFFSL(SL,"vxgenabled",True): # generated from line 102, col 1
-            write(u'''<link rel="stylesheet" type="text/css" href="/vxg/vxgplayer-1.8.51.min.css" />
+            write('''<link rel="stylesheet" type="text/css" href="/vxg/vxgplayer-1.8.51.min.css" />
 <style>
 .vxgplayer-error { margin-left:0px;}
 </style>
--- ./plugin/controllers/views/web/about.py	(original)
+++ ./plugin/controllers/views/web/about.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,170 +84,170 @@
         ## START - generated method body
         
         _orig_filter_22236558 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2abouts>
 \t<e2about>
 \t\t<e2oeversion>''')
         _v = VFFSL(SL,"info.oever",True) # u'$info.oever' on line 5, col 16
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.oever')) # from line 5, col 16.
-        write(u'''</e2oeversion>
+        if _v is not None: write(_filter(_v, rawExpr='$info.oever')) # from line 5, col 16.
+        write('''</e2oeversion>
 \t\t<e2enigmaversion>''')
         _v = VFFSL(SL,"info.enigmaver",True) # u'$info.enigmaver' on line 6, col 20
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.enigmaver')) # from line 6, col 20.
-        write(u'''</e2enigmaversion>
+        if _v is not None: write(_filter(_v, rawExpr='$info.enigmaver')) # from line 6, col 20.
+        write('''</e2enigmaversion>
 \t\t<e2distroversion>''')
         _v = VFFSL(SL,"info.imagedistro",True) # u'$info.imagedistro' on line 7, col 20
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.imagedistro')) # from line 7, col 20.
-        write(u'''</e2distroversion>
+        if _v is not None: write(_filter(_v, rawExpr='$info.imagedistro')) # from line 7, col 20.
+        write('''</e2distroversion>
 \t\t<e2imageversion>''')
         _v = VFFSL(SL,"info.imagever",True) # u'$info.imagever' on line 8, col 19
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.imagever')) # from line 8, col 19.
-        write(u'''</e2imageversion>
+        if _v is not None: write(_filter(_v, rawExpr='$info.imagever')) # from line 8, col 19.
+        write('''</e2imageversion>
 \t\t<e2driverdate>''')
         _v = VFFSL(SL,"info.driverdate",True) # u'$info.driverdate' on line 9, col 17
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.driverdate')) # from line 9, col 17.
-        write(u'''</e2driverdate>
+        if _v is not None: write(_filter(_v, rawExpr='$info.driverdate')) # from line 9, col 17.
+        write('''</e2driverdate>
 \t\t<e2webifversion>''')
         _v = VFFSL(SL,"info.webifver",True) # u'$info.webifver' on line 10, col 19
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.webifver')) # from line 10, col 19.
-        write(u'''</e2webifversion>
+        if _v is not None: write(_filter(_v, rawExpr='$info.webifver')) # from line 10, col 19.
+        write('''</e2webifversion>
 \t\t<e2fpversion>''')
         _v = VFFSL(SL,"str",False)(VFFSL(SL,"info.fp_version",True)) # u'$str($info.fp_version)' on line 11, col 16
-        if _v is not None: write(_filter(_v, rawExpr=u'$str($info.fp_version)')) # from line 11, col 16.
-        write(u'''</e2fpversion>
+        if _v is not None: write(_filter(_v, rawExpr='$str($info.fp_version)')) # from line 11, col 16.
+        write('''</e2fpversion>
 \t\t<e2model>''')
         _v = VFFSL(SL,"info.model",True) # u'$info.model' on line 12, col 12
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.model')) # from line 12, col 12.
-        write(u'''</e2model>
+        if _v is not None: write(_filter(_v, rawExpr='$info.model')) # from line 12, col 12.
+        write('''</e2model>
 ''')
         if VFFSL(SL,"len",False)(VFFSL(SL,"info.ifaces",True)) > 0: # generated from line 13, col 3
-            write(u'''\t\t<e2lanmac>''')
+            write('''\t\t<e2lanmac>''')
             _v = VFN(VFN(VFFSL(SL,"info",True),"ifaces",True)[0],"mac",True) # u'$info.ifaces[0].mac' on line 14, col 13
-            if _v is not None: write(_filter(_v, rawExpr=u'$info.ifaces[0].mac')) # from line 14, col 13.
-            write(u'''</e2lanmac>
+            if _v is not None: write(_filter(_v, rawExpr='$info.ifaces[0].mac')) # from line 14, col 13.
+            write('''</e2lanmac>
 \t\t<e2landhcp>''')
             _v = VFN(VFN(VFFSL(SL,"info",True),"ifaces",True)[0],"dhcp",True) # u'$info.ifaces[0].dhcp' on line 15, col 14
-            if _v is not None: write(_filter(_v, rawExpr=u'$info.ifaces[0].dhcp')) # from line 15, col 14.
-            write(u'''</e2landhcp>
+            if _v is not None: write(_filter(_v, rawExpr='$info.ifaces[0].dhcp')) # from line 15, col 14.
+            write('''</e2landhcp>
 \t\t<e2lanip>''')
             _v = VFN(VFN(VFFSL(SL,"info",True),"ifaces",True)[0],"ip",True) # u'$info.ifaces[0].ip' on line 16, col 12
-            if _v is not None: write(_filter(_v, rawExpr=u'$info.ifaces[0].ip')) # from line 16, col 12.
-            write(u'''</e2lanip>
+            if _v is not None: write(_filter(_v, rawExpr='$info.ifaces[0].ip')) # from line 16, col 12.
+            write('''</e2lanip>
 \t\t<e2lanmask>''')
             _v = VFN(VFN(VFFSL(SL,"info",True),"ifaces",True)[0],"mask",True) # u'$info.ifaces[0].mask' on line 17, col 14
-            if _v is not None: write(_filter(_v, rawExpr=u'$info.ifaces[0].mask')) # from line 17, col 14.
-            write(u'''</e2lanmask>
+            if _v is not None: write(_filter(_v, rawExpr='$info.ifaces[0].mask')) # from line 17, col 14.
+            write('''</e2lanmask>
 \t\t<e2langw>''')
             _v = VFN(VFN(VFFSL(SL,"info",True),"ifaces",True)[0],"gw",True) # u'$info.ifaces[0].gw' on line 18, col 12
-            if _v is not None: write(_filter(_v, rawExpr=u'$info.ifaces[0].gw')) # from line 18, col 12.
-            write(u'''</e2langw>
+            if _v is not None: write(_filter(_v, rawExpr='$info.ifaces[0].gw')) # from line 18, col 12.
+            write('''</e2langw>
 ''')
         if VFFSL(SL,"len",False)(VFFSL(SL,"info.hdd",True)) > 0: # generated from line 20, col 3
-            write(u'''\t\t<e2hddinfo>
+            write('''\t\t<e2hddinfo>
 \t\t\t<model>''')
             _v = VFN(VFN(VFFSL(SL,"info",True),"hdd",True)[0],"model",True) # u'$info.hdd[0].model' on line 22, col 11
-            if _v is not None: write(_filter(_v, rawExpr=u'$info.hdd[0].model')) # from line 22, col 11.
-            write(u'''</model>
+            if _v is not None: write(_filter(_v, rawExpr='$info.hdd[0].model')) # from line 22, col 11.
+            write('''</model>
 \t\t\t<capacity>''')
             _v = VFN(VFN(VFFSL(SL,"info",True),"hdd",True)[0],"capacity",True) # u'$info.hdd[0].capacity' on line 23, col 14
-            if _v is not None: write(_filter(_v, rawExpr=u'$info.hdd[0].capacity')) # from line 23, col 14.
-            write(u'''</capacity>
+            if _v is not None: write(_filter(_v, rawExpr='$info.hdd[0].capacity')) # from line 23, col 14.
+            write('''</capacity>
 \t\t\t<free>''')
             _v = VFN(VFN(VFFSL(SL,"info",True),"hdd",True)[0],"free",True) # u'$info.hdd[0].free' on line 24, col 10
-            if _v is not None: write(_filter(_v, rawExpr=u'$info.hdd[0].free')) # from line 24, col 10.
-            write(u'''</free>
+            if _v is not None: write(_filter(_v, rawExpr='$info.hdd[0].free')) # from line 24, col 10.
+            write('''</free>
 \t\t\t<mount>''')
             _v = VFN(VFN(VFFSL(SL,"info",True),"hdd",True)[0],"mount",True) # u'$info.hdd[0].mount' on line 25, col 11
-            if _v is not None: write(_filter(_v, rawExpr=u'$info.hdd[0].mount')) # from line 25, col 11.
-            write(u'''</mount>
+            if _v is not None: write(_filter(_v, rawExpr='$info.hdd[0].mount')) # from line 25, col 11.
+            write('''</mount>
 \t\t</e2hddinfo>
 ''')
         if VFFSL(SL,"len",False)(VFFSL(SL,"info.tuners",True)) > 0: # generated from line 28, col 3
-            write(u'''\t\t<e2tunerinfo>
+            write('''\t\t<e2tunerinfo>
 ''')
             for tuner in VFFSL(SL,"info.tuners",True): # generated from line 30, col 4
-                write(u'''\t\t\t<e2nim>
+                write('''\t\t\t<e2nim>
 \t\t\t\t<name>''')
                 _v = VFFSL(SL,"tuner.name",True) # u'$tuner.name' on line 32, col 11
-                if _v is not None: write(_filter(_v, rawExpr=u'$tuner.name')) # from line 32, col 11.
-                write(u'''</name>
+                if _v is not None: write(_filter(_v, rawExpr='$tuner.name')) # from line 32, col 11.
+                write('''</name>
 \t\t\t\t<type>''')
                 _v = VFFSL(SL,"tuner.type",True) # u'$tuner.type' on line 33, col 11
-                if _v is not None: write(_filter(_v, rawExpr=u'$tuner.type')) # from line 33, col 11.
-                write(u'''</type>
+                if _v is not None: write(_filter(_v, rawExpr='$tuner.type')) # from line 33, col 11.
+                write('''</type>
 \t\t\t</e2nim>
 ''')
-            write(u'''\t\t</e2tunerinfo>
-''')
-        write(u'''\t\t<e2servicename>''')
+            write('''\t\t</e2tunerinfo>
+''')
+        write('''\t\t<e2servicename>''')
         _v = VFFSL(SL,"service.name",True) # u'$service.name' on line 38, col 18
-        if _v is not None: write(_filter(_v, rawExpr=u'$service.name')) # from line 38, col 18.
-        write(u'''</e2servicename>
+        if _v is not None: write(_filter(_v, rawExpr='$service.name')) # from line 38, col 18.
+        write('''</e2servicename>
 \t\t<e2servicenamespace>''')
         _v = VFFSL(SL,"service.namespace",True) # u'$service.namespace' on line 39, col 23
-        if _v is not None: write(_filter(_v, rawExpr=u'$service.namespace')) # from line 39, col 23.
-        write(u'''</e2servicenamespace>
+        if _v is not None: write(_filter(_v, rawExpr='$service.namespace')) # from line 39, col 23.
+        write('''</e2servicenamespace>
 \t\t<e2serviceaspect>''')
         _v = VFFSL(SL,"service.aspect",True) # u'$service.aspect' on line 40, col 20
-        if _v is not None: write(_filter(_v, rawExpr=u'$service.aspect')) # from line 40, col 20.
-        write(u'''</e2serviceaspect>
+        if _v is not None: write(_filter(_v, rawExpr='$service.aspect')) # from line 40, col 20.
+        write('''</e2serviceaspect>
 \t\t<e2serviceprovider>''')
         _v = VFFSL(SL,"service.provider",True) # u'$service.provider' on line 41, col 22
-        if _v is not None: write(_filter(_v, rawExpr=u'$service.provider')) # from line 41, col 22.
-        write(u'''</e2serviceprovider>
+        if _v is not None: write(_filter(_v, rawExpr='$service.provider')) # from line 41, col 22.
+        write('''</e2serviceprovider>
 \t\t<e2videowidth>''')
         _v = VFFSL(SL,"service.width",True) # u'$service.width' on line 42, col 17
-        if _v is not None: write(_filter(_v, rawExpr=u'$service.width')) # from line 42, col 17.
-        write(u'''</e2videowidth>
+        if _v is not None: write(_filter(_v, rawExpr='$service.width')) # from line 42, col 17.
+        write('''</e2videowidth>
 \t\t<e2videoheight>''')
         _v = VFFSL(SL,"service.height",True) # u'$service.height' on line 43, col 18
-        if _v is not None: write(_filter(_v, rawExpr=u'$service.height')) # from line 43, col 18.
-        write(u'''</e2videoheight>
+        if _v is not None: write(_filter(_v, rawExpr='$service.height')) # from line 43, col 18.
+        write('''</e2videoheight>
 \t\t<e2servicevideosize>''')
         _v = VFFSL(SL,"service.width",True) # u'${service.width}' on line 44, col 23
-        if _v is not None: write(_filter(_v, rawExpr=u'${service.width}')) # from line 44, col 23.
-        write(u'''x''')
+        if _v is not None: write(_filter(_v, rawExpr='${service.width}')) # from line 44, col 23.
+        write('''x''')
         _v = VFFSL(SL,"service.height",True) # u'${service.height}' on line 44, col 40
-        if _v is not None: write(_filter(_v, rawExpr=u'${service.height}')) # from line 44, col 40.
-        write(u'''</e2servicevideosize>
+        if _v is not None: write(_filter(_v, rawExpr='${service.height}')) # from line 44, col 40.
+        write('''</e2servicevideosize>
 \t\t<e2apid>''')
         _v = VFFSL(SL,"service.apid",True) # u'$service.apid' on line 45, col 11
-        if _v is not None: write(_filter(_v, rawExpr=u'$service.apid')) # from line 45, col 11.
-        write(u'''</e2apid>
+        if _v is not None: write(_filter(_v, rawExpr='$service.apid')) # from line 45, col 11.
+        write('''</e2apid>
 \t\t<e2vpid>''')
         _v = VFFSL(SL,"service.vpid",True) # u'$service.vpid' on line 46, col 11
-        if _v is not None: write(_filter(_v, rawExpr=u'$service.vpid')) # from line 46, col 11.
-        write(u'''</e2vpid>
+        if _v is not None: write(_filter(_v, rawExpr='$service.vpid')) # from line 46, col 11.
+        write('''</e2vpid>
 \t\t<e2pcrpid>''')
         _v = VFFSL(SL,"service.pcrpid",True) # u'$service.pcrpid' on line 47, col 13
-        if _v is not None: write(_filter(_v, rawExpr=u'$service.pcrpid')) # from line 47, col 13.
-        write(u'''</e2pcrpid>
+        if _v is not None: write(_filter(_v, rawExpr='$service.pcrpid')) # from line 47, col 13.
+        write('''</e2pcrpid>
 \t\t<e2pmtpid>''')
         _v = VFFSL(SL,"service.pmtpid",True) # u'$service.pmtpid' on line 48, col 13
-        if _v is not None: write(_filter(_v, rawExpr=u'$service.pmtpid')) # from line 48, col 13.
-        write(u'''</e2pmtpid>
+        if _v is not None: write(_filter(_v, rawExpr='$service.pmtpid')) # from line 48, col 13.
+        write('''</e2pmtpid>
 \t\t<e2txtpid>''')
         _v = VFFSL(SL,"service.txtpid",True) # u'$service.txtpid' on line 49, col 13
-        if _v is not None: write(_filter(_v, rawExpr=u'$service.txtpid')) # from line 49, col 13.
-        write(u'''</e2txtpid>
+        if _v is not None: write(_filter(_v, rawExpr='$service.txtpid')) # from line 49, col 13.
+        write('''</e2txtpid>
 \t\t<e2tsid>''')
         _v = VFFSL(SL,"service.tsid",True) # u'$service.tsid' on line 50, col 11
-        if _v is not None: write(_filter(_v, rawExpr=u'$service.tsid')) # from line 50, col 11.
-        write(u'''</e2tsid>
+        if _v is not None: write(_filter(_v, rawExpr='$service.tsid')) # from line 50, col 11.
+        write('''</e2tsid>
 \t\t<e2onid>''')
         _v = VFFSL(SL,"service.onid",True) # u'$service.onid' on line 51, col 11
-        if _v is not None: write(_filter(_v, rawExpr=u'$service.onid')) # from line 51, col 11.
-        write(u'''</e2onid>
+        if _v is not None: write(_filter(_v, rawExpr='$service.onid')) # from line 51, col 11.
+        write('''</e2onid>
 \t\t<e2sid>''')
         _v = VFFSL(SL,"service.sid",True) # u'$service.sid' on line 52, col 10
-        if _v is not None: write(_filter(_v, rawExpr=u'$service.sid')) # from line 52, col 10.
-        write(u'''</e2sid>
+        if _v is not None: write(_filter(_v, rawExpr='$service.sid')) # from line 52, col 10.
+        write('''</e2sid>
 \t</e2about>
 </e2abouts>
 ''')
--- ./plugin/controllers/views/web/addlocation.py	(original)
+++ ./plugin/controllers/views/web/addlocation.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,22 +84,22 @@
         ## START - generated method body
         
         _orig_filter_78580165 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2simplexmlresult>
 \t<e2state>''')
         _v = VFFSL(SL,"result",True) # u'$result' on line 4, col 11
-        if _v is not None: write(_filter(_v, rawExpr=u'$result')) # from line 4, col 11.
-        write(u'''</e2state>
+        if _v is not None: write(_filter(_v, rawExpr='$result')) # from line 4, col 11.
+        write('''</e2state>
 \t<e2statetext>''')
         _v = VFFSL(SL,"message",True) # u'$message' on line 5, col 15
-        if _v is not None: write(_filter(_v, rawExpr=u'$message')) # from line 5, col 15.
-        write(u'''</e2statetext>
+        if _v is not None: write(_filter(_v, rawExpr='$message')) # from line 5, col 15.
+        write('''</e2statetext>
 </e2simplexmlresult>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_78580165
--- ./plugin/controllers/views/web/bouquets.py	(original)
+++ ./plugin/controllers/views/web/bouquets.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,28 +84,28 @@
         ## START - generated method body
         
         _orig_filter_52969570 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2servicelist>
 ''')
         for bouquet in VFFSL(SL,"bouquets",True): # generated from line 4, col 2
-            write(u'''\t<e2service>
+            write('''\t<e2service>
 \t\t<e2servicereference>''')
             _v = VFFSL(SL,"bouquet",True)[0] # u'$bouquet[0]' on line 6, col 23
-            if _v is not None: write(_filter(_v, rawExpr=u'$bouquet[0]')) # from line 6, col 23.
-            write(u'''</e2servicereference>
+            if _v is not None: write(_filter(_v, rawExpr='$bouquet[0]')) # from line 6, col 23.
+            write('''</e2servicereference>
 \t\t<e2servicename>''')
             _v = VFFSL(SL,"bouquet",True)[1] # u'$bouquet[1]' on line 7, col 18
-            if _v is not None: write(_filter(_v, rawExpr=u'$bouquet[1]')) # from line 7, col 18.
-            write(u'''</e2servicename>
+            if _v is not None: write(_filter(_v, rawExpr='$bouquet[1]')) # from line 7, col 18.
+            write('''</e2servicename>
 \t</e2service>
 ''')
-        write(u'''</e2servicelist>
+        write('''</e2servicelist>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_52969570
         
--- ./plugin/controllers/views/web/css.py	(original)
+++ ./plugin/controllers/views/web/css.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,8 +84,8 @@
         ## START - generated method body
         
         _orig_filter_11838743 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
@@ -118,45 +119,45 @@
         # ui-lightness (not used)
         # vader
         # redmond -> original
-        write(u'''
+        write('''
 ''')
         # 
         # TODO :
         # * remove extra color for MEPG Timer
         # * optimize marker
         # * optimize config color
-        write(u'''
+        write('''
 ''')
         if not VFFSL(SL,"theme",True): # generated from line 40, col 1
             theme = "original"
-        write(u'''
+        write('''
 ''')
         if VFFSL(SL,"theme",True) == "south-street" or VFFSL(SL,"theme",True) == "smoothness" or VFFSL(SL,"theme",True) == "cupertino" or VFFSL(SL,"theme",True) == "mint-choc" or VFFSL(SL,"theme",True) == "ui-darkness" or VFFSL(SL,"theme",True) == "vader" or VFFSL(SL,"theme",True) == "eggplant" or VFFSL(SL,"theme",True) == "start" or VFFSL(SL,"theme",True) == "le-frog" or VFFSL(SL,"theme",True) == "dark-hive" or VFFSL(SL,"theme",True) == "humanity" or VFFSL(SL,"theme",True) == "flick" or VFFSL(SL,"theme",True) == "sunny": # generated from line 44, col 1
-            write(u'''body,.tm_row{background-image:none!important;}
-''')
-        write(u'''
+            write('''body,.tm_row{background-image:none!important;}
+''')
+        write('''
 ''')
         if VFFSL(SL,"theme",True) == "vader" or VFFSL(SL,"theme",True) == "dark-hive" or VFFSL(SL,"theme",True) == "dot-luv" or VFFSL(SL,"theme",True) == "eggplant" or VFFSL(SL,"theme",True) == "le-frog" or VFFSL(SL,"theme",True) == "mint-choc" or VFFSL(SL,"theme",True) == "ui-darkness": # generated from line 48, col 1
-            write(u'''.marker{color:#FFF;}
-''')
-        write(u'''
+            write('''.marker{color:#FFF;}
+''')
+        write('''
 ''')
         if VFFSL(SL,"theme",True) == "dark-hive": # generated from line 52, col 1
-            write(u'''.cht .fr {background-color:rgba(38,179,247,0.3);}
-''')
-        write(u'''
+            write('''.cht .fr {background-color:rgba(38,179,247,0.3);}
+''')
+        write('''
 ''')
         if VFFSL(SL,"theme",True) == "original": # generated from line 56, col 1
-            write(u'''
+            write('''
 ''')
         else: # generated from line 58, col 1
-            write(u'''#leftmenu_main ul li a:hover{background-color:rgba(0,0,0,.1);}
+            write('''#leftmenu_main ul li a:hover{background-color:rgba(0,0,0,.1);}
 #tbl1 .border{border-right: 1px solid;}
 ''')
-        write(u'''
+        write('''
 ''')
         if VFFSL(SL,"theme",True) == "clear": # generated from line 63, col 1
-            write(u''':focus,:active {outline:0;}
+            write(''':focus,:active {outline:0;}
 .ui-widget-header{background:#363636;}
 .ui-widget-header a{color:#000;}
 #header{height:100px;}
@@ -186,7 +187,7 @@
 #footer a{color: #fff;}
 ''')
         if not VFFSL(SL,"showchanneldetails",True): # generated from line 93, col 1
-            write(u'''span.channel-tag{display: none;}
+            write('''span.channel-tag{display: none;}
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_11838743
         
--- ./plugin/controllers/views/web/currenttime.py	(original)
+++ ./plugin/controllers/views/web/currenttime.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,18 +84,18 @@
         ## START - generated method body
         
         _orig_filter_32234431 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2currenttime>
 \t''')
         _v = VFFSL(SL,"time",True) # u'$time' on line 4, col 2
-        if _v is not None: write(_filter(_v, rawExpr=u'$time')) # from line 4, col 2.
-        write(u'''
+        if _v is not None: write(_filter(_v, rawExpr='$time')) # from line 4, col 2.
+        write('''
 </e2currenttime>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_32234431
--- ./plugin/controllers/views/web/deviceinfo.py	(original)
+++ ./plugin/controllers/views/web/deviceinfo.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,115 +84,115 @@
         ## START - generated method body
         
         _orig_filter_34279014 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2deviceinfo>
 \t<e2oeversion>''')
         _v = VFFSL(SL,"oever",True) # u'$oever' on line 4, col 15
-        if _v is not None: write(_filter(_v, rawExpr=u'$oever')) # from line 4, col 15.
-        write(u'''</e2oeversion>
+        if _v is not None: write(_filter(_v, rawExpr='$oever')) # from line 4, col 15.
+        write('''</e2oeversion>
 \t<e2enigmaversion>''')
         _v = VFFSL(SL,"enigmaver",True) # u'$enigmaver' on line 5, col 19
-        if _v is not None: write(_filter(_v, rawExpr=u'$enigmaver')) # from line 5, col 19.
-        write(u'''</e2enigmaversion>
+        if _v is not None: write(_filter(_v, rawExpr='$enigmaver')) # from line 5, col 19.
+        write('''</e2enigmaversion>
 \t<e2distroversion>''')
         _v = VFFSL(SL,"imagedistro",True) # u'$imagedistro' on line 6, col 19
-        if _v is not None: write(_filter(_v, rawExpr=u'$imagedistro')) # from line 6, col 19.
-        write(u'''</e2distroversion>
+        if _v is not None: write(_filter(_v, rawExpr='$imagedistro')) # from line 6, col 19.
+        write('''</e2distroversion>
 \t<e2imageversion>''')
         _v = VFFSL(SL,"imagever",True) # u'$imagever' on line 7, col 18
-        if _v is not None: write(_filter(_v, rawExpr=u'$imagever')) # from line 7, col 18.
-        write(u'''</e2imageversion>
+        if _v is not None: write(_filter(_v, rawExpr='$imagever')) # from line 7, col 18.
+        write('''</e2imageversion>
 \t<e2driverdate>''')
         _v = VFFSL(SL,"driverdate",True) # u'$driverdate' on line 8, col 16
-        if _v is not None: write(_filter(_v, rawExpr=u'$driverdate')) # from line 8, col 16.
-        write(u'''</e2driverdate>
+        if _v is not None: write(_filter(_v, rawExpr='$driverdate')) # from line 8, col 16.
+        write('''</e2driverdate>
 \t<e2webifversion>''')
         _v = VFFSL(SL,"webifver",True) # u'$webifver' on line 9, col 18
-        if _v is not None: write(_filter(_v, rawExpr=u'$webifver')) # from line 9, col 18.
-        write(u'''</e2webifversion>
+        if _v is not None: write(_filter(_v, rawExpr='$webifver')) # from line 9, col 18.
+        write('''</e2webifversion>
 \t<e2fpversion>''')
         _v = VFFSL(SL,"str",False)(VFFSL(SL,"fp_version",True)) # u'$str($fp_version)' on line 10, col 15
-        if _v is not None: write(_filter(_v, rawExpr=u'$str($fp_version)')) # from line 10, col 15.
-        write(u'''</e2fpversion>
+        if _v is not None: write(_filter(_v, rawExpr='$str($fp_version)')) # from line 10, col 15.
+        write('''</e2fpversion>
 \t<e2devicename>''')
         _v = VFFSL(SL,"model",True) # u'$model' on line 11, col 16
-        if _v is not None: write(_filter(_v, rawExpr=u'$model')) # from line 11, col 16.
-        write(u'''</e2devicename>
+        if _v is not None: write(_filter(_v, rawExpr='$model')) # from line 11, col 16.
+        write('''</e2devicename>
 \t<e2frontends>
 ''')
         for tuner in VFFSL(SL,"tuners",True): # generated from line 13, col 3
-            write(u'''\t\t<e2frontend>
+            write('''\t\t<e2frontend>
 \t\t\t<e2name>''')
             _v = VFFSL(SL,"tuner.name",True) # u'$tuner.name' on line 15, col 12
-            if _v is not None: write(_filter(_v, rawExpr=u'$tuner.name')) # from line 15, col 12.
-            write(u'''</e2name>
+            if _v is not None: write(_filter(_v, rawExpr='$tuner.name')) # from line 15, col 12.
+            write('''</e2name>
 \t\t\t<e2model>''')
             _v = VFFSL(SL,"tuner.type",True) # u'$tuner.type' on line 16, col 13
-            if _v is not None: write(_filter(_v, rawExpr=u'$tuner.type')) # from line 16, col 13.
-            write(u'''</e2model>
+            if _v is not None: write(_filter(_v, rawExpr='$tuner.type')) # from line 16, col 13.
+            write('''</e2model>
 \t\t</e2frontend>
 ''')
-        write(u'''\t</e2frontends>
+        write('''\t</e2frontends>
 \t<e2network>
 ''')
         for iface in VFFSL(SL,"ifaces",True): # generated from line 21, col 3
-            write(u'''\t\t<e2interface>
+            write('''\t\t<e2interface>
 \t\t\t<e2name>''')
             _v = VFFSL(SL,"iface.name",True) # u'$iface.name' on line 23, col 12
-            if _v is not None: write(_filter(_v, rawExpr=u'$iface.name')) # from line 23, col 12.
-            write(u'''</e2name>
+            if _v is not None: write(_filter(_v, rawExpr='$iface.name')) # from line 23, col 12.
+            write('''</e2name>
 \t\t\t<e2mac>''')
             _v = VFFSL(SL,"iface.mac",True) # u'$iface.mac' on line 24, col 11
-            if _v is not None: write(_filter(_v, rawExpr=u'$iface.mac')) # from line 24, col 11.
-            write(u'''</e2mac>
+            if _v is not None: write(_filter(_v, rawExpr='$iface.mac')) # from line 24, col 11.
+            write('''</e2mac>
 \t\t\t<e2dhcp>''')
             _v = VFFSL(SL,"iface.dhcp",True) # u'$iface.dhcp' on line 25, col 12
-            if _v is not None: write(_filter(_v, rawExpr=u'$iface.dhcp')) # from line 25, col 12.
-            write(u'''</e2dhcp>
+            if _v is not None: write(_filter(_v, rawExpr='$iface.dhcp')) # from line 25, col 12.
+            write('''</e2dhcp>
 \t\t\t<e2ip>''')
             _v = VFFSL(SL,"iface.ip",True) # u'$iface.ip' on line 26, col 10
-            if _v is not None: write(_filter(_v, rawExpr=u'$iface.ip')) # from line 26, col 10.
-            write(u'''</e2ip>
+            if _v is not None: write(_filter(_v, rawExpr='$iface.ip')) # from line 26, col 10.
+            write('''</e2ip>
 \t\t\t<e2gateway>''')
             _v = VFFSL(SL,"iface.gw",True) # u'$iface.gw' on line 27, col 15
-            if _v is not None: write(_filter(_v, rawExpr=u'$iface.gw')) # from line 27, col 15.
-            write(u'''</e2gateway>
+            if _v is not None: write(_filter(_v, rawExpr='$iface.gw')) # from line 27, col 15.
+            write('''</e2gateway>
 \t\t\t<e2netmask>''')
             _v = VFFSL(SL,"iface.mask",True) # u'$iface.mask' on line 28, col 15
-            if _v is not None: write(_filter(_v, rawExpr=u'$iface.mask')) # from line 28, col 15.
-            write(u'''</e2netmask>
+            if _v is not None: write(_filter(_v, rawExpr='$iface.mask')) # from line 28, col 15.
+            write('''</e2netmask>
 \t\t</e2interface>
 ''')
-        write(u'''\t</e2network>
+        write('''\t</e2network>
 \t<e2hdds>
 ''')
         for hd in VFFSL(SL,"hdd",True): # generated from line 33, col 3
-            write(u'''\t\t<e2hdd>
+            write('''\t\t<e2hdd>
 \t\t\t<e2model>''')
             _v = VFFSL(SL,"hd.model",True) # u'$hd.model' on line 35, col 13
-            if _v is not None: write(_filter(_v, rawExpr=u'$hd.model')) # from line 35, col 13.
-            write(u'''</e2model>
+            if _v is not None: write(_filter(_v, rawExpr='$hd.model')) # from line 35, col 13.
+            write('''</e2model>
 \t\t\t<e2capacity>''')
             _v = VFFSL(SL,"hd.capacity",True) # u'$hd.capacity' on line 36, col 16
-            if _v is not None: write(_filter(_v, rawExpr=u'$hd.capacity')) # from line 36, col 16.
-            write(u'''</e2capacity>
+            if _v is not None: write(_filter(_v, rawExpr='$hd.capacity')) # from line 36, col 16.
+            write('''</e2capacity>
 \t\t\t<e2free>''')
             _v = VFFSL(SL,"hd.free",True) # u'$hd.free' on line 37, col 12
-            if _v is not None: write(_filter(_v, rawExpr=u'$hd.free')) # from line 37, col 12.
-            write(u'''</e2free>
+            if _v is not None: write(_filter(_v, rawExpr='$hd.free')) # from line 37, col 12.
+            write('''</e2free>
 \t\t\t<e2mount>''')
             _v = VFFSL(SL,"hd.mount",True) # u'$hd.mount' on line 38, col 13
-            if _v is not None: write(_filter(_v, rawExpr=u'$hd.mount')) # from line 38, col 13.
-            write(u'''</e2mount>
+            if _v is not None: write(_filter(_v, rawExpr='$hd.mount')) # from line 38, col 13.
+            write('''</e2mount>
 \t\t</e2hdd>
 ''')
-        write(u'''\t</e2hdds>
+        write('''\t</e2hdds>
 </e2deviceinfo>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_34279014
--- ./plugin/controllers/views/web/epgbouquet.py	(original)
+++ ./plugin/controllers/views/web/epgbouquet.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,63 +84,63 @@
         ## START - generated method body
         
         _orig_filter_96458149 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2eventlist>
 ''')
         for event in VFFSL(SL,"events",True): # generated from line 4, col 2
-            write(u'''\t<e2event>
+            write('''\t<e2event>
 \t\t<e2eventid>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.id",True)) # u'$str($event.id)' on line 6, col 14
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.id)')) # from line 6, col 14.
-            write(u'''</e2eventid>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.id)')) # from line 6, col 14.
+            write('''</e2eventid>
 \t\t<e2eventstart>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.begin_timestamp",True)) # u'$str($event.begin_timestamp)' on line 7, col 17
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.begin_timestamp)')) # from line 7, col 17.
-            write(u'''</e2eventstart>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.begin_timestamp)')) # from line 7, col 17.
+            write('''</e2eventstart>
 \t\t<e2eventduration>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.duration_sec",True)) # u'$str($event.duration_sec)' on line 8, col 20
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.duration_sec)')) # from line 8, col 20.
-            write(u'''</e2eventduration>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.duration_sec)')) # from line 8, col 20.
+            write('''</e2eventduration>
 \t\t<e2eventcurrenttime>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.now_timestamp",True)) # u'$str($event.now_timestamp)' on line 9, col 23
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.now_timestamp)')) # from line 9, col 23.
-            write(u'''</e2eventcurrenttime>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.now_timestamp)')) # from line 9, col 23.
+            write('''</e2eventcurrenttime>
 \t\t<e2eventtitle>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.title",True)) # u'$str($event.title)' on line 10, col 17
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.title)')) # from line 10, col 17.
-            write(u'''</e2eventtitle>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.title)')) # from line 10, col 17.
+            write('''</e2eventtitle>
 \t\t<e2eventdescription>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.shortdesc",True)) # u'$str($event.shortdesc)' on line 11, col 23
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.shortdesc)')) # from line 11, col 23.
-            write(u'''</e2eventdescription>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.shortdesc)')) # from line 11, col 23.
+            write('''</e2eventdescription>
 \t\t<e2eventdescriptionextended>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.longdesc",True)) # u'$str($event.longdesc)' on line 12, col 31
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.longdesc)')) # from line 12, col 31.
-            write(u'''</e2eventdescriptionextended>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.longdesc)')) # from line 12, col 31.
+            write('''</e2eventdescriptionextended>
 \t\t<e2eventservicereference>''')
             _v = VFFSL(SL,"event.sref",True) # u'$event.sref' on line 13, col 28
-            if _v is not None: write(_filter(_v, rawExpr=u'$event.sref')) # from line 13, col 28.
-            write(u'''</e2eventservicereference>
+            if _v is not None: write(_filter(_v, rawExpr='$event.sref')) # from line 13, col 28.
+            write('''</e2eventservicereference>
 \t\t<e2eventservicename>''')
             _v = VFFSL(SL,"event.sname",True) # u'$event.sname' on line 14, col 23
-            if _v is not None: write(_filter(_v, rawExpr=u'$event.sname')) # from line 14, col 23.
-            write(u'''</e2eventservicename>
+            if _v is not None: write(_filter(_v, rawExpr='$event.sname')) # from line 14, col 23.
+            write('''</e2eventservicename>
 \t\t<e2eventgenre id="''')
             _v = VFFSL(SL,"event.genreid",True) # u'$event.genreid' on line 15, col 21
-            if _v is not None: write(_filter(_v, rawExpr=u'$event.genreid')) # from line 15, col 21.
-            write(u'''">''')
+            if _v is not None: write(_filter(_v, rawExpr='$event.genreid')) # from line 15, col 21.
+            write('''">''')
             _v = VFFSL(SL,"event.genre",True) # u'$event.genre' on line 15, col 37
-            if _v is not None: write(_filter(_v, rawExpr=u'$event.genre')) # from line 15, col 37.
-            write(u'''</e2eventgenre>
+            if _v is not None: write(_filter(_v, rawExpr='$event.genre')) # from line 15, col 37.
+            write('''</e2eventgenre>
 \t</e2event>
 ''')
-        write(u'''</e2eventlist>
+        write('''</e2eventlist>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_96458149
         
--- ./plugin/controllers/views/web/epgmulti.py	(original)
+++ ./plugin/controllers/views/web/epgmulti.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,63 +84,63 @@
         ## START - generated method body
         
         _orig_filter_75551375 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2eventlist>
 ''')
         for event in VFFSL(SL,"events",True): # generated from line 4, col 2
-            write(u'''\t<e2event>
+            write('''\t<e2event>
 \t\t<e2eventid>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.id",True)) # u'$str($event.id)' on line 6, col 14
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.id)')) # from line 6, col 14.
-            write(u'''</e2eventid>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.id)')) # from line 6, col 14.
+            write('''</e2eventid>
 \t\t<e2eventstart>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.begin_timestamp",True)) # u'$str($event.begin_timestamp)' on line 7, col 17
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.begin_timestamp)')) # from line 7, col 17.
-            write(u'''</e2eventstart>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.begin_timestamp)')) # from line 7, col 17.
+            write('''</e2eventstart>
 \t\t<e2eventduration>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.duration_sec",True)) # u'$str($event.duration_sec)' on line 8, col 20
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.duration_sec)')) # from line 8, col 20.
-            write(u'''</e2eventduration>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.duration_sec)')) # from line 8, col 20.
+            write('''</e2eventduration>
 \t\t<e2eventcurrenttime>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.now_timestamp",True)) # u'$str($event.now_timestamp)' on line 9, col 23
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.now_timestamp)')) # from line 9, col 23.
-            write(u'''</e2eventcurrenttime>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.now_timestamp)')) # from line 9, col 23.
+            write('''</e2eventcurrenttime>
 \t\t<e2eventtitle>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.title",True)) # u'$str($event.title)' on line 10, col 17
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.title)')) # from line 10, col 17.
-            write(u'''</e2eventtitle>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.title)')) # from line 10, col 17.
+            write('''</e2eventtitle>
 \t\t<e2eventdescription>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.shortdesc",True)) # u'$str($event.shortdesc)' on line 11, col 23
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.shortdesc)')) # from line 11, col 23.
-            write(u'''</e2eventdescription>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.shortdesc)')) # from line 11, col 23.
+            write('''</e2eventdescription>
 \t\t<e2eventdescriptionextended>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.longdesc",True)) # u'$str($event.longdesc)' on line 12, col 31
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.longdesc)')) # from line 12, col 31.
-            write(u'''</e2eventdescriptionextended>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.longdesc)')) # from line 12, col 31.
+            write('''</e2eventdescriptionextended>
 \t\t<e2eventservicereference>''')
             _v = VFFSL(SL,"event.sref",True) # u'$event.sref' on line 13, col 28
-            if _v is not None: write(_filter(_v, rawExpr=u'$event.sref')) # from line 13, col 28.
-            write(u'''</e2eventservicereference>
+            if _v is not None: write(_filter(_v, rawExpr='$event.sref')) # from line 13, col 28.
+            write('''</e2eventservicereference>
 \t\t<e2eventservicename>''')
             _v = VFFSL(SL,"event.sname",True) # u'$event.sname' on line 14, col 23
-            if _v is not None: write(_filter(_v, rawExpr=u'$event.sname')) # from line 14, col 23.
-            write(u'''</e2eventservicename>
+            if _v is not None: write(_filter(_v, rawExpr='$event.sname')) # from line 14, col 23.
+            write('''</e2eventservicename>
 \t\t<e2eventgenre id="''')
             _v = VFFSL(SL,"event.genreid",True) # u'$event.genreid' on line 15, col 21
-            if _v is not None: write(_filter(_v, rawExpr=u'$event.genreid')) # from line 15, col 21.
-            write(u'''">''')
+            if _v is not None: write(_filter(_v, rawExpr='$event.genreid')) # from line 15, col 21.
+            write('''">''')
             _v = VFFSL(SL,"event.genre",True) # u'$event.genre' on line 15, col 37
-            if _v is not None: write(_filter(_v, rawExpr=u'$event.genre')) # from line 15, col 37.
-            write(u'''</e2eventgenre>
+            if _v is not None: write(_filter(_v, rawExpr='$event.genre')) # from line 15, col 37.
+            write('''</e2eventgenre>
 \t</e2event>
 ''')
-        write(u'''</e2eventlist>
+        write('''</e2eventlist>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_75551375
         
--- ./plugin/controllers/views/web/epgnext.py	(original)
+++ ./plugin/controllers/views/web/epgnext.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,63 +84,63 @@
         ## START - generated method body
         
         _orig_filter_58627770 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2eventlist>
 ''')
         for event in VFFSL(SL,"events",True): # generated from line 4, col 2
-            write(u'''\t<e2event>
+            write('''\t<e2event>
 \t\t<e2eventid>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.id",True)) # u'$str($event.id)' on line 6, col 14
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.id)')) # from line 6, col 14.
-            write(u'''</e2eventid>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.id)')) # from line 6, col 14.
+            write('''</e2eventid>
 \t\t<e2eventstart>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.begin_timestamp",True)) # u'$str($event.begin_timestamp)' on line 7, col 17
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.begin_timestamp)')) # from line 7, col 17.
-            write(u'''</e2eventstart>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.begin_timestamp)')) # from line 7, col 17.
+            write('''</e2eventstart>
 \t\t<e2eventduration>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.duration_sec",True)) # u'$str($event.duration_sec)' on line 8, col 20
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.duration_sec)')) # from line 8, col 20.
-            write(u'''</e2eventduration>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.duration_sec)')) # from line 8, col 20.
+            write('''</e2eventduration>
 \t\t<e2eventcurrenttime>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.now_timestamp",True)) # u'$str($event.now_timestamp)' on line 9, col 23
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.now_timestamp)')) # from line 9, col 23.
-            write(u'''</e2eventcurrenttime>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.now_timestamp)')) # from line 9, col 23.
+            write('''</e2eventcurrenttime>
 \t\t<e2eventtitle>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.title",True)) # u'$str($event.title)' on line 10, col 17
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.title)')) # from line 10, col 17.
-            write(u'''</e2eventtitle>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.title)')) # from line 10, col 17.
+            write('''</e2eventtitle>
 \t\t<e2eventdescription>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.shortdesc",True)) # u'$str($event.shortdesc)' on line 11, col 23
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.shortdesc)')) # from line 11, col 23.
-            write(u'''</e2eventdescription>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.shortdesc)')) # from line 11, col 23.
+            write('''</e2eventdescription>
 \t\t<e2eventdescriptionextended>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.longdesc",True)) # u'$str($event.longdesc)' on line 12, col 31
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.longdesc)')) # from line 12, col 31.
-            write(u'''</e2eventdescriptionextended>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.longdesc)')) # from line 12, col 31.
+            write('''</e2eventdescriptionextended>
 \t\t<e2eventservicereference>''')
             _v = VFFSL(SL,"event.sref",True) # u'$event.sref' on line 13, col 28
-            if _v is not None: write(_filter(_v, rawExpr=u'$event.sref')) # from line 13, col 28.
-            write(u'''</e2eventservicereference>
+            if _v is not None: write(_filter(_v, rawExpr='$event.sref')) # from line 13, col 28.
+            write('''</e2eventservicereference>
 \t\t<e2eventservicename>''')
             _v = VFFSL(SL,"event.sname",True) # u'$event.sname' on line 14, col 23
-            if _v is not None: write(_filter(_v, rawExpr=u'$event.sname')) # from line 14, col 23.
-            write(u'''</e2eventservicename>
+            if _v is not None: write(_filter(_v, rawExpr='$event.sname')) # from line 14, col 23.
+            write('''</e2eventservicename>
 \t\t<e2eventgenre id="''')
             _v = VFFSL(SL,"event.genreid",True) # u'$event.genreid' on line 15, col 21
-            if _v is not None: write(_filter(_v, rawExpr=u'$event.genreid')) # from line 15, col 21.
-            write(u'''">''')
+            if _v is not None: write(_filter(_v, rawExpr='$event.genreid')) # from line 15, col 21.
+            write('''">''')
             _v = VFFSL(SL,"event.genre",True) # u'$event.genre' on line 15, col 37
-            if _v is not None: write(_filter(_v, rawExpr=u'$event.genre')) # from line 15, col 37.
-            write(u'''</e2eventgenre>
+            if _v is not None: write(_filter(_v, rawExpr='$event.genre')) # from line 15, col 37.
+            write('''</e2eventgenre>
 \t</e2event>
 ''')
-        write(u'''</e2eventlist>
+        write('''</e2eventlist>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_58627770
         
--- ./plugin/controllers/views/web/epgnow.py	(original)
+++ ./plugin/controllers/views/web/epgnow.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,63 +84,63 @@
         ## START - generated method body
         
         _orig_filter_48176485 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2eventlist>
 ''')
         for event in VFFSL(SL,"events",True): # generated from line 4, col 2
-            write(u'''\t<e2event>
+            write('''\t<e2event>
 \t\t<e2eventid>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.id",True)) # u'$str($event.id)' on line 6, col 14
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.id)')) # from line 6, col 14.
-            write(u'''</e2eventid>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.id)')) # from line 6, col 14.
+            write('''</e2eventid>
 \t\t<e2eventstart>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.begin_timestamp",True)) # u'$str($event.begin_timestamp)' on line 7, col 17
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.begin_timestamp)')) # from line 7, col 17.
-            write(u'''</e2eventstart>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.begin_timestamp)')) # from line 7, col 17.
+            write('''</e2eventstart>
 \t\t<e2eventduration>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.duration_sec",True)) # u'$str($event.duration_sec)' on line 8, col 20
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.duration_sec)')) # from line 8, col 20.
-            write(u'''</e2eventduration>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.duration_sec)')) # from line 8, col 20.
+            write('''</e2eventduration>
 \t\t<e2eventcurrenttime>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.now_timestamp",True)) # u'$str($event.now_timestamp)' on line 9, col 23
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.now_timestamp)')) # from line 9, col 23.
-            write(u'''</e2eventcurrenttime>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.now_timestamp)')) # from line 9, col 23.
+            write('''</e2eventcurrenttime>
 \t\t<e2eventtitle>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.title",True)) # u'$str($event.title)' on line 10, col 17
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.title)')) # from line 10, col 17.
-            write(u'''</e2eventtitle>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.title)')) # from line 10, col 17.
+            write('''</e2eventtitle>
 \t\t<e2eventdescription>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.shortdesc",True)) # u'$str($event.shortdesc)' on line 11, col 23
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.shortdesc)')) # from line 11, col 23.
-            write(u'''</e2eventdescription>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.shortdesc)')) # from line 11, col 23.
+            write('''</e2eventdescription>
 \t\t<e2eventdescriptionextended>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.longdesc",True)) # u'$str($event.longdesc)' on line 12, col 31
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.longdesc)')) # from line 12, col 31.
-            write(u'''</e2eventdescriptionextended>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.longdesc)')) # from line 12, col 31.
+            write('''</e2eventdescriptionextended>
 \t\t<e2eventservicereference>''')
             _v = VFFSL(SL,"event.sref",True) # u'$event.sref' on line 13, col 28
-            if _v is not None: write(_filter(_v, rawExpr=u'$event.sref')) # from line 13, col 28.
-            write(u'''</e2eventservicereference>
+            if _v is not None: write(_filter(_v, rawExpr='$event.sref')) # from line 13, col 28.
+            write('''</e2eventservicereference>
 \t\t<e2eventservicename>''')
             _v = VFFSL(SL,"event.sname",True) # u'$event.sname' on line 14, col 23
-            if _v is not None: write(_filter(_v, rawExpr=u'$event.sname')) # from line 14, col 23.
-            write(u'''</e2eventservicename>
+            if _v is not None: write(_filter(_v, rawExpr='$event.sname')) # from line 14, col 23.
+            write('''</e2eventservicename>
 \t\t<e2eventgenre id="''')
             _v = VFFSL(SL,"event.genreid",True) # u'$event.genreid' on line 15, col 21
-            if _v is not None: write(_filter(_v, rawExpr=u'$event.genreid')) # from line 15, col 21.
-            write(u'''">''')
+            if _v is not None: write(_filter(_v, rawExpr='$event.genreid')) # from line 15, col 21.
+            write('''">''')
             _v = VFFSL(SL,"event.genre",True) # u'$event.genre' on line 15, col 37
-            if _v is not None: write(_filter(_v, rawExpr=u'$event.genre')) # from line 15, col 37.
-            write(u'''</e2eventgenre>
+            if _v is not None: write(_filter(_v, rawExpr='$event.genre')) # from line 15, col 37.
+            write('''</e2eventgenre>
 \t</e2event>
 ''')
-        write(u'''</e2eventlist>
+        write('''</e2eventlist>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_48176485
         
--- ./plugin/controllers/views/web/epgnownext.py	(original)
+++ ./plugin/controllers/views/web/epgnownext.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,63 +84,63 @@
         ## START - generated method body
         
         _orig_filter_63291527 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2eventlist>
 ''')
         for event in VFFSL(SL,"events",True): # generated from line 4, col 2
-            write(u'''\t<e2event>
+            write('''\t<e2event>
 \t\t<e2eventid>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.id",True)) # u'$str($event.id)' on line 6, col 14
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.id)')) # from line 6, col 14.
-            write(u'''</e2eventid>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.id)')) # from line 6, col 14.
+            write('''</e2eventid>
 \t\t<e2eventstart>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.begin_timestamp",True)) # u'$str($event.begin_timestamp)' on line 7, col 17
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.begin_timestamp)')) # from line 7, col 17.
-            write(u'''</e2eventstart>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.begin_timestamp)')) # from line 7, col 17.
+            write('''</e2eventstart>
 \t\t<e2eventduration>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.duration_sec",True)) # u'$str($event.duration_sec)' on line 8, col 20
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.duration_sec)')) # from line 8, col 20.
-            write(u'''</e2eventduration>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.duration_sec)')) # from line 8, col 20.
+            write('''</e2eventduration>
 \t\t<e2eventcurrenttime>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.now_timestamp",True)) # u'$str($event.now_timestamp)' on line 9, col 23
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.now_timestamp)')) # from line 9, col 23.
-            write(u'''</e2eventcurrenttime>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.now_timestamp)')) # from line 9, col 23.
+            write('''</e2eventcurrenttime>
 \t\t<e2eventtitle>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.title",True)) # u'$str($event.title)' on line 10, col 17
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.title)')) # from line 10, col 17.
-            write(u'''</e2eventtitle>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.title)')) # from line 10, col 17.
+            write('''</e2eventtitle>
 \t\t<e2eventdescription>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.shortdesc",True)) # u'$str($event.shortdesc)' on line 11, col 23
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.shortdesc)')) # from line 11, col 23.
-            write(u'''</e2eventdescription>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.shortdesc)')) # from line 11, col 23.
+            write('''</e2eventdescription>
 \t\t<e2eventdescriptionextended>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.longdesc",True)) # u'$str($event.longdesc)' on line 12, col 31
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.longdesc)')) # from line 12, col 31.
-            write(u'''</e2eventdescriptionextended>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.longdesc)')) # from line 12, col 31.
+            write('''</e2eventdescriptionextended>
 \t\t<e2eventservicereference>''')
             _v = VFFSL(SL,"event.sref",True) # u'$event.sref' on line 13, col 28
-            if _v is not None: write(_filter(_v, rawExpr=u'$event.sref')) # from line 13, col 28.
-            write(u'''</e2eventservicereference>
+            if _v is not None: write(_filter(_v, rawExpr='$event.sref')) # from line 13, col 28.
+            write('''</e2eventservicereference>
 \t\t<e2eventservicename>''')
             _v = VFFSL(SL,"event.sname",True) # u'$event.sname' on line 14, col 23
-            if _v is not None: write(_filter(_v, rawExpr=u'$event.sname')) # from line 14, col 23.
-            write(u'''</e2eventservicename>
+            if _v is not None: write(_filter(_v, rawExpr='$event.sname')) # from line 14, col 23.
+            write('''</e2eventservicename>
 \t\t<e2eventgenre id="''')
             _v = VFFSL(SL,"event.genreid",True) # u'$event.genreid' on line 15, col 21
-            if _v is not None: write(_filter(_v, rawExpr=u'$event.genreid')) # from line 15, col 21.
-            write(u'''">''')
+            if _v is not None: write(_filter(_v, rawExpr='$event.genreid')) # from line 15, col 21.
+            write('''">''')
             _v = VFFSL(SL,"event.genre",True) # u'$event.genre' on line 15, col 37
-            if _v is not None: write(_filter(_v, rawExpr=u'$event.genre')) # from line 15, col 37.
-            write(u'''</e2eventgenre>
+            if _v is not None: write(_filter(_v, rawExpr='$event.genre')) # from line 15, col 37.
+            write('''</e2eventgenre>
 \t</e2event>
 ''')
-        write(u'''</e2eventlist>
+        write('''</e2eventlist>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_63291527
         
--- ./plugin/controllers/views/web/epgsearch.py	(original)
+++ ./plugin/controllers/views/web/epgsearch.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,63 +84,63 @@
         ## START - generated method body
         
         _orig_filter_87879935 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2eventlist>
 ''')
         for event in VFFSL(SL,"events",True): # generated from line 4, col 2
-            write(u'''\t<e2event>
+            write('''\t<e2event>
 \t\t<e2eventid>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.id",True)) # u'$str($event.id)' on line 6, col 14
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.id)')) # from line 6, col 14.
-            write(u'''</e2eventid>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.id)')) # from line 6, col 14.
+            write('''</e2eventid>
 \t\t<e2eventstart>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.begin_timestamp",True)) # u'$str($event.begin_timestamp)' on line 7, col 17
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.begin_timestamp)')) # from line 7, col 17.
-            write(u'''</e2eventstart>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.begin_timestamp)')) # from line 7, col 17.
+            write('''</e2eventstart>
 \t\t<e2eventduration>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.duration_sec",True)) # u'$str($event.duration_sec)' on line 8, col 20
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.duration_sec)')) # from line 8, col 20.
-            write(u'''</e2eventduration>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.duration_sec)')) # from line 8, col 20.
+            write('''</e2eventduration>
 \t\t<e2eventcurrenttime>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.now_timestamp",True)) # u'$str($event.now_timestamp)' on line 9, col 23
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.now_timestamp)')) # from line 9, col 23.
-            write(u'''</e2eventcurrenttime>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.now_timestamp)')) # from line 9, col 23.
+            write('''</e2eventcurrenttime>
 \t\t<e2eventtitle>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.title",True)) # u'$str($event.title)' on line 10, col 17
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.title)')) # from line 10, col 17.
-            write(u'''</e2eventtitle>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.title)')) # from line 10, col 17.
+            write('''</e2eventtitle>
 \t\t<e2eventdescription>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.shortdesc",True)) # u'$str($event.shortdesc)' on line 11, col 23
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.shortdesc)')) # from line 11, col 23.
-            write(u'''</e2eventdescription>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.shortdesc)')) # from line 11, col 23.
+            write('''</e2eventdescription>
 \t\t<e2eventdescriptionextended>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.longdesc",True)) # u'$str($event.longdesc)' on line 12, col 31
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.longdesc)')) # from line 12, col 31.
-            write(u'''</e2eventdescriptionextended>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.longdesc)')) # from line 12, col 31.
+            write('''</e2eventdescriptionextended>
 \t\t<e2eventservicereference>''')
             _v = VFFSL(SL,"event.sref",True) # u'$event.sref' on line 13, col 28
-            if _v is not None: write(_filter(_v, rawExpr=u'$event.sref')) # from line 13, col 28.
-            write(u'''</e2eventservicereference>
+            if _v is not None: write(_filter(_v, rawExpr='$event.sref')) # from line 13, col 28.
+            write('''</e2eventservicereference>
 \t\t<e2eventservicename>''')
             _v = VFFSL(SL,"event.sname",True) # u'$event.sname' on line 14, col 23
-            if _v is not None: write(_filter(_v, rawExpr=u'$event.sname')) # from line 14, col 23.
-            write(u'''</e2eventservicename>
+            if _v is not None: write(_filter(_v, rawExpr='$event.sname')) # from line 14, col 23.
+            write('''</e2eventservicename>
 \t\t<e2eventgenre id="''')
             _v = VFFSL(SL,"event.genreid",True) # u'$event.genreid' on line 15, col 21
-            if _v is not None: write(_filter(_v, rawExpr=u'$event.genreid')) # from line 15, col 21.
-            write(u'''">''')
+            if _v is not None: write(_filter(_v, rawExpr='$event.genreid')) # from line 15, col 21.
+            write('''">''')
             _v = VFFSL(SL,"event.genre",True) # u'$event.genre' on line 15, col 37
-            if _v is not None: write(_filter(_v, rawExpr=u'$event.genre')) # from line 15, col 37.
-            write(u'''</e2eventgenre>
+            if _v is not None: write(_filter(_v, rawExpr='$event.genre')) # from line 15, col 37.
+            write('''</e2eventgenre>
 \t</e2event>
 ''')
-        write(u'''</e2eventlist>
+        write('''</e2eventlist>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_87879935
         
--- ./plugin/controllers/views/web/epgsearchrss.py	(original)
+++ ./plugin/controllers/views/web/epgsearchrss.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,83 +84,83 @@
         ## START - generated method body
         
         _orig_filter_99324943 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <rss version="2.0">
 \t<channel>
 \t\t<title>''')
         _v = VFFSL(SL,"title",True) # u'$title' on line 5, col 10
-        if _v is not None: write(_filter(_v, rawExpr=u'$title')) # from line 5, col 10.
-        write(u'''</title>
+        if _v is not None: write(_filter(_v, rawExpr='$title')) # from line 5, col 10.
+        write('''</title>
 \t\t<link>
 \t\t\thttp://
 \t\t</link>
 \t\t<description>''')
         _v = VFFSL(SL,"description",True) # u'$description' on line 9, col 16
-        if _v is not None: write(_filter(_v, rawExpr=u'$description')) # from line 9, col 16.
-        write(u'''</description>
+        if _v is not None: write(_filter(_v, rawExpr='$description')) # from line 9, col 16.
+        write('''</description>
 \t\t<generator>''')
         _v = VFFSL(SL,"generator",True) # u'$generator' on line 10, col 14
-        if _v is not None: write(_filter(_v, rawExpr=u'$generator')) # from line 10, col 14.
-        write(u'''</generator>
+        if _v is not None: write(_filter(_v, rawExpr='$generator')) # from line 10, col 14.
+        write('''</generator>
 ''')
         for event in VFFSL(SL,"events",True): # generated from line 11, col 3
-            write(u'''\t\t<item>
+            write('''\t\t<item>
 \t\t\t<title>''')
             _v = VFFSL(SL,"event.title",True) # u'$event.title' on line 13, col 11
-            if _v is not None: write(_filter(_v, rawExpr=u'$event.title')) # from line 13, col 11.
-            write(u''' (''')
+            if _v is not None: write(_filter(_v, rawExpr='$event.title')) # from line 13, col 11.
+            write(''' (''')
             _v = VFFSL(SL,"event.date",True) # u'$event.date' on line 13, col 25
-            if _v is not None: write(_filter(_v, rawExpr=u'$event.date')) # from line 13, col 25.
-            write(u''' ''')
+            if _v is not None: write(_filter(_v, rawExpr='$event.date')) # from line 13, col 25.
+            write(''' ''')
             _v = VFFSL(SL,"event.begin",True) # u'$event.begin' on line 13, col 37
-            if _v is not None: write(_filter(_v, rawExpr=u'$event.begin')) # from line 13, col 37.
-            write(u''')</title>
+            if _v is not None: write(_filter(_v, rawExpr='$event.begin')) # from line 13, col 37.
+            write(''')</title>
 \t\t\t<description>
 \t\t\t\tService: ''')
             _v = VFFSL(SL,"event.sname",True) # u'$event.sname' on line 15, col 14
-            if _v is not None: write(_filter(_v, rawExpr=u'$event.sname')) # from line 15, col 14.
-            write(u'''
+            if _v is not None: write(_filter(_v, rawExpr='$event.sname')) # from line 15, col 14.
+            write('''
 \t\t\t\t<br/>
 \t\t\t\tStart Time: ''')
             _v = VFFSL(SL,"event.date",True) # u'$event.date' on line 17, col 17
-            if _v is not None: write(_filter(_v, rawExpr=u'$event.date')) # from line 17, col 17.
-            write(u''' ''')
+            if _v is not None: write(_filter(_v, rawExpr='$event.date')) # from line 17, col 17.
+            write(''' ''')
             _v = VFFSL(SL,"event.begin",True) # u'$event.begin' on line 17, col 29
-            if _v is not None: write(_filter(_v, rawExpr=u'$event.begin')) # from line 17, col 29.
-            write(u'''
+            if _v is not None: write(_filter(_v, rawExpr='$event.begin')) # from line 17, col 29.
+            write('''
 \t\t\t\t<br/>
 \t\t\t\tDuration: ''')
             _v = VFFSL(SL,"event.duration",True) # u'$event.duration' on line 19, col 15
-            if _v is not None: write(_filter(_v, rawExpr=u'$event.duration')) # from line 19, col 15.
-            write(u''' minutes
+            if _v is not None: write(_filter(_v, rawExpr='$event.duration')) # from line 19, col 15.
+            write(''' minutes
 \t\t\t\t<br/>
 ''')
             if VFFSL(SL,"event.shortdesc",True): # generated from line 21, col 5
-                write(u'''\t\t\t\t''')
+                write('''\t\t\t\t''')
                 _v = VFFSL(SL,"event.shortdesc",True) # u'$event.shortdesc' on line 22, col 5
-                if _v is not None: write(_filter(_v, rawExpr=u'$event.shortdesc')) # from line 22, col 5.
-                write(u'''
-\t\t\t\t<br/>
-''')
-            write(u'''\t\t\t\t<br/>
+                if _v is not None: write(_filter(_v, rawExpr='$event.shortdesc')) # from line 22, col 5.
+                write('''
+\t\t\t\t<br/>
+''')
+            write('''\t\t\t\t<br/>
 \t\t\t\t''')
             _v = VFFSL(SL,"event.longdesc",True) # u'$event.longdesc' on line 26, col 5
-            if _v is not None: write(_filter(_v, rawExpr=u'$event.longdesc')) # from line 26, col 5.
-            write(u'''
+            if _v is not None: write(_filter(_v, rawExpr='$event.longdesc')) # from line 26, col 5.
+            write('''
 \t\t\t</description>
 \t\t\t<author>''')
             _v = VFFSL(SL,"event.sname",True) # u'$event.sname' on line 28, col 12
-            if _v is not None: write(_filter(_v, rawExpr=u'$event.sname')) # from line 28, col 12.
-            write(u'''</author>
+            if _v is not None: write(_filter(_v, rawExpr='$event.sname')) # from line 28, col 12.
+            write('''</author>
 \t\t</item>
 ''')
-        write(u'''\t</channel>
+        write('''\t</channel>
 </rss>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_99324943
--- ./plugin/controllers/views/web/epgservice.py	(original)
+++ ./plugin/controllers/views/web/epgservice.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,63 +84,63 @@
         ## START - generated method body
         
         _orig_filter_81377960 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2eventlist>
 ''')
         for event in VFFSL(SL,"events",True): # generated from line 4, col 2
-            write(u'''\t<e2event>
+            write('''\t<e2event>
 \t\t<e2eventid>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.id",True)) # u'$str($event.id)' on line 6, col 14
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.id)')) # from line 6, col 14.
-            write(u'''</e2eventid>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.id)')) # from line 6, col 14.
+            write('''</e2eventid>
 \t\t<e2eventstart>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.begin_timestamp",True)) # u'$str($event.begin_timestamp)' on line 7, col 17
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.begin_timestamp)')) # from line 7, col 17.
-            write(u'''</e2eventstart>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.begin_timestamp)')) # from line 7, col 17.
+            write('''</e2eventstart>
 \t\t<e2eventduration>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.duration_sec",True)) # u'$str($event.duration_sec)' on line 8, col 20
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.duration_sec)')) # from line 8, col 20.
-            write(u'''</e2eventduration>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.duration_sec)')) # from line 8, col 20.
+            write('''</e2eventduration>
 \t\t<e2eventcurrenttime>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.now_timestamp",True)) # u'$str($event.now_timestamp)' on line 9, col 23
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.now_timestamp)')) # from line 9, col 23.
-            write(u'''</e2eventcurrenttime>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.now_timestamp)')) # from line 9, col 23.
+            write('''</e2eventcurrenttime>
 \t\t<e2eventtitle>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.title",True)) # u'$str($event.title)' on line 10, col 17
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.title)')) # from line 10, col 17.
-            write(u'''</e2eventtitle>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.title)')) # from line 10, col 17.
+            write('''</e2eventtitle>
 \t\t<e2eventdescription>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.shortdesc",True)) # u'$str($event.shortdesc)' on line 11, col 23
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.shortdesc)')) # from line 11, col 23.
-            write(u'''</e2eventdescription>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.shortdesc)')) # from line 11, col 23.
+            write('''</e2eventdescription>
 \t\t<e2eventdescriptionextended>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.longdesc",True)) # u'$str($event.longdesc)' on line 12, col 31
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.longdesc)')) # from line 12, col 31.
-            write(u'''</e2eventdescriptionextended>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.longdesc)')) # from line 12, col 31.
+            write('''</e2eventdescriptionextended>
 \t\t<e2eventservicereference>''')
             _v = VFFSL(SL,"event.sref",True) # u'$event.sref' on line 13, col 28
-            if _v is not None: write(_filter(_v, rawExpr=u'$event.sref')) # from line 13, col 28.
-            write(u'''</e2eventservicereference>
+            if _v is not None: write(_filter(_v, rawExpr='$event.sref')) # from line 13, col 28.
+            write('''</e2eventservicereference>
 \t\t<e2eventservicename>''')
             _v = VFFSL(SL,"event.sname",True) # u'$event.sname' on line 14, col 23
-            if _v is not None: write(_filter(_v, rawExpr=u'$event.sname')) # from line 14, col 23.
-            write(u'''</e2eventservicename>
+            if _v is not None: write(_filter(_v, rawExpr='$event.sname')) # from line 14, col 23.
+            write('''</e2eventservicename>
 \t\t<e2eventgenre id="''')
             _v = VFFSL(SL,"event.genreid",True) # u'$event.genreid' on line 15, col 21
-            if _v is not None: write(_filter(_v, rawExpr=u'$event.genreid')) # from line 15, col 21.
-            write(u'''">''')
+            if _v is not None: write(_filter(_v, rawExpr='$event.genreid')) # from line 15, col 21.
+            write('''">''')
             _v = VFFSL(SL,"event.genre",True) # u'$event.genre' on line 15, col 37
-            if _v is not None: write(_filter(_v, rawExpr=u'$event.genre')) # from line 15, col 37.
-            write(u'''</e2eventgenre>
+            if _v is not None: write(_filter(_v, rawExpr='$event.genre')) # from line 15, col 37.
+            write('''</e2eventgenre>
 \t</e2event>
 ''')
-        write(u'''</e2eventlist>
+        write('''</e2eventlist>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_81377960
         
--- ./plugin/controllers/views/web/epgservicenext.py	(original)
+++ ./plugin/controllers/views/web/epgservicenext.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,63 +84,63 @@
         ## START - generated method body
         
         _orig_filter_60536901 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2eventlist>
 ''')
         for event in VFFSL(SL,"events",True): # generated from line 4, col 2
-            write(u'''\t<e2event>
+            write('''\t<e2event>
 \t\t<e2eventid>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.id",True)) # u'$str($event.id)' on line 6, col 14
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.id)')) # from line 6, col 14.
-            write(u'''</e2eventid>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.id)')) # from line 6, col 14.
+            write('''</e2eventid>
 \t\t<e2eventstart>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.begin_timestamp",True)) # u'$str($event.begin_timestamp)' on line 7, col 17
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.begin_timestamp)')) # from line 7, col 17.
-            write(u'''</e2eventstart>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.begin_timestamp)')) # from line 7, col 17.
+            write('''</e2eventstart>
 \t\t<e2eventduration>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.duration_sec",True)) # u'$str($event.duration_sec)' on line 8, col 20
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.duration_sec)')) # from line 8, col 20.
-            write(u'''</e2eventduration>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.duration_sec)')) # from line 8, col 20.
+            write('''</e2eventduration>
 \t\t<e2eventcurrenttime>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.now_timestamp",True)) # u'$str($event.now_timestamp)' on line 9, col 23
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.now_timestamp)')) # from line 9, col 23.
-            write(u'''</e2eventcurrenttime>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.now_timestamp)')) # from line 9, col 23.
+            write('''</e2eventcurrenttime>
 \t\t<e2eventtitle>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.title",True)) # u'$str($event.title)' on line 10, col 17
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.title)')) # from line 10, col 17.
-            write(u'''</e2eventtitle>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.title)')) # from line 10, col 17.
+            write('''</e2eventtitle>
 \t\t<e2eventdescription>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.shortdesc",True)) # u'$str($event.shortdesc)' on line 11, col 23
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.shortdesc)')) # from line 11, col 23.
-            write(u'''</e2eventdescription>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.shortdesc)')) # from line 11, col 23.
+            write('''</e2eventdescription>
 \t\t<e2eventdescriptionextended>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.longdesc",True)) # u'$str($event.longdesc)' on line 12, col 31
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.longdesc)')) # from line 12, col 31.
-            write(u'''</e2eventdescriptionextended>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.longdesc)')) # from line 12, col 31.
+            write('''</e2eventdescriptionextended>
 \t\t<e2eventservicereference>''')
             _v = VFFSL(SL,"event.sref",True) # u'$event.sref' on line 13, col 28
-            if _v is not None: write(_filter(_v, rawExpr=u'$event.sref')) # from line 13, col 28.
-            write(u'''</e2eventservicereference>
+            if _v is not None: write(_filter(_v, rawExpr='$event.sref')) # from line 13, col 28.
+            write('''</e2eventservicereference>
 \t\t<e2eventservicename>''')
             _v = VFFSL(SL,"event.sname",True) # u'$event.sname' on line 14, col 23
-            if _v is not None: write(_filter(_v, rawExpr=u'$event.sname')) # from line 14, col 23.
-            write(u'''</e2eventservicename>
+            if _v is not None: write(_filter(_v, rawExpr='$event.sname')) # from line 14, col 23.
+            write('''</e2eventservicename>
 \t\t<e2eventgenre id="''')
             _v = VFFSL(SL,"event.genreid",True) # u'$event.genreid' on line 15, col 21
-            if _v is not None: write(_filter(_v, rawExpr=u'$event.genreid')) # from line 15, col 21.
-            write(u'''">''')
+            if _v is not None: write(_filter(_v, rawExpr='$event.genreid')) # from line 15, col 21.
+            write('''">''')
             _v = VFFSL(SL,"event.genre",True) # u'$event.genre' on line 15, col 37
-            if _v is not None: write(_filter(_v, rawExpr=u'$event.genre')) # from line 15, col 37.
-            write(u'''</e2eventgenre>
+            if _v is not None: write(_filter(_v, rawExpr='$event.genre')) # from line 15, col 37.
+            write('''</e2eventgenre>
 \t</e2event>
 ''')
-        write(u'''</e2eventlist>
+        write('''</e2eventlist>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_60536901
         
--- ./plugin/controllers/views/web/epgservicenow.py	(original)
+++ ./plugin/controllers/views/web/epgservicenow.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,63 +84,63 @@
         ## START - generated method body
         
         _orig_filter_65214403 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2eventlist>
 ''')
         for event in VFFSL(SL,"events",True): # generated from line 4, col 2
-            write(u'''\t<e2event>
+            write('''\t<e2event>
 \t\t<e2eventid>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.id",True)) # u'$str($event.id)' on line 6, col 14
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.id)')) # from line 6, col 14.
-            write(u'''</e2eventid>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.id)')) # from line 6, col 14.
+            write('''</e2eventid>
 \t\t<e2eventstart>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.begin_timestamp",True)) # u'$str($event.begin_timestamp)' on line 7, col 17
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.begin_timestamp)')) # from line 7, col 17.
-            write(u'''</e2eventstart>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.begin_timestamp)')) # from line 7, col 17.
+            write('''</e2eventstart>
 \t\t<e2eventduration>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.duration_sec",True)) # u'$str($event.duration_sec)' on line 8, col 20
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.duration_sec)')) # from line 8, col 20.
-            write(u'''</e2eventduration>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.duration_sec)')) # from line 8, col 20.
+            write('''</e2eventduration>
 \t\t<e2eventcurrenttime>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.now_timestamp",True)) # u'$str($event.now_timestamp)' on line 9, col 23
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.now_timestamp)')) # from line 9, col 23.
-            write(u'''</e2eventcurrenttime>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.now_timestamp)')) # from line 9, col 23.
+            write('''</e2eventcurrenttime>
 \t\t<e2eventtitle>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.title",True)) # u'$str($event.title)' on line 10, col 17
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.title)')) # from line 10, col 17.
-            write(u'''</e2eventtitle>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.title)')) # from line 10, col 17.
+            write('''</e2eventtitle>
 \t\t<e2eventdescription>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.shortdesc",True)) # u'$str($event.shortdesc)' on line 11, col 23
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.shortdesc)')) # from line 11, col 23.
-            write(u'''</e2eventdescription>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.shortdesc)')) # from line 11, col 23.
+            write('''</e2eventdescription>
 \t\t<e2eventdescriptionextended>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.longdesc",True)) # u'$str($event.longdesc)' on line 12, col 31
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.longdesc)')) # from line 12, col 31.
-            write(u'''</e2eventdescriptionextended>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.longdesc)')) # from line 12, col 31.
+            write('''</e2eventdescriptionextended>
 \t\t<e2eventservicereference>''')
             _v = VFFSL(SL,"event.sref",True) # u'$event.sref' on line 13, col 28
-            if _v is not None: write(_filter(_v, rawExpr=u'$event.sref')) # from line 13, col 28.
-            write(u'''</e2eventservicereference>
+            if _v is not None: write(_filter(_v, rawExpr='$event.sref')) # from line 13, col 28.
+            write('''</e2eventservicereference>
 \t\t<e2eventservicename>''')
             _v = VFFSL(SL,"event.sname",True) # u'$event.sname' on line 14, col 23
-            if _v is not None: write(_filter(_v, rawExpr=u'$event.sname')) # from line 14, col 23.
-            write(u'''</e2eventservicename>
+            if _v is not None: write(_filter(_v, rawExpr='$event.sname')) # from line 14, col 23.
+            write('''</e2eventservicename>
 \t\t<e2eventgenre id="''')
             _v = VFFSL(SL,"event.genreid",True) # u'$event.genreid' on line 15, col 21
-            if _v is not None: write(_filter(_v, rawExpr=u'$event.genreid')) # from line 15, col 21.
-            write(u'''">''')
+            if _v is not None: write(_filter(_v, rawExpr='$event.genreid')) # from line 15, col 21.
+            write('''">''')
             _v = VFFSL(SL,"event.genre",True) # u'$event.genre' on line 15, col 37
-            if _v is not None: write(_filter(_v, rawExpr=u'$event.genre')) # from line 15, col 37.
-            write(u'''</e2eventgenre>
+            if _v is not None: write(_filter(_v, rawExpr='$event.genre')) # from line 15, col 37.
+            write('''</e2eventgenre>
 \t</e2event>
 ''')
-        write(u'''</e2eventlist>
+        write('''</e2eventlist>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_65214403
         
--- ./plugin/controllers/views/web/epgsimilar.py	(original)
+++ ./plugin/controllers/views/web/epgsimilar.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,63 +84,63 @@
         ## START - generated method body
         
         _orig_filter_84246843 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2eventlist>
 ''')
         for event in VFFSL(SL,"events",True): # generated from line 4, col 2
-            write(u'''\t<e2event>
+            write('''\t<e2event>
 \t\t<e2eventid>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.id",True)) # u'$str($event.id)' on line 6, col 14
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.id)')) # from line 6, col 14.
-            write(u'''</e2eventid>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.id)')) # from line 6, col 14.
+            write('''</e2eventid>
 \t\t<e2eventstart>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.begin_timestamp",True)) # u'$str($event.begin_timestamp)' on line 7, col 17
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.begin_timestamp)')) # from line 7, col 17.
-            write(u'''</e2eventstart>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.begin_timestamp)')) # from line 7, col 17.
+            write('''</e2eventstart>
 \t\t<e2eventduration>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.duration_sec",True)) # u'$str($event.duration_sec)' on line 8, col 20
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.duration_sec)')) # from line 8, col 20.
-            write(u'''</e2eventduration>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.duration_sec)')) # from line 8, col 20.
+            write('''</e2eventduration>
 \t\t<e2eventcurrenttime>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.now_timestamp",True)) # u'$str($event.now_timestamp)' on line 9, col 23
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.now_timestamp)')) # from line 9, col 23.
-            write(u'''</e2eventcurrenttime>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.now_timestamp)')) # from line 9, col 23.
+            write('''</e2eventcurrenttime>
 \t\t<e2eventtitle>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.title",True)) # u'$str($event.title)' on line 10, col 17
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.title)')) # from line 10, col 17.
-            write(u'''</e2eventtitle>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.title)')) # from line 10, col 17.
+            write('''</e2eventtitle>
 \t\t<e2eventdescription>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.shortdesc",True)) # u'$str($event.shortdesc)' on line 11, col 23
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.shortdesc)')) # from line 11, col 23.
-            write(u'''</e2eventdescription>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.shortdesc)')) # from line 11, col 23.
+            write('''</e2eventdescription>
 \t\t<e2eventdescriptionextended>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.longdesc",True)) # u'$str($event.longdesc)' on line 12, col 31
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.longdesc)')) # from line 12, col 31.
-            write(u'''</e2eventdescriptionextended>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.longdesc)')) # from line 12, col 31.
+            write('''</e2eventdescriptionextended>
 \t\t<e2eventservicereference>''')
             _v = VFFSL(SL,"event.sref",True) # u'$event.sref' on line 13, col 28
-            if _v is not None: write(_filter(_v, rawExpr=u'$event.sref')) # from line 13, col 28.
-            write(u'''</e2eventservicereference>
+            if _v is not None: write(_filter(_v, rawExpr='$event.sref')) # from line 13, col 28.
+            write('''</e2eventservicereference>
 \t\t<e2eventservicename>''')
             _v = VFFSL(SL,"event.sname",True) # u'$event.sname' on line 14, col 23
-            if _v is not None: write(_filter(_v, rawExpr=u'$event.sname')) # from line 14, col 23.
-            write(u'''</e2eventservicename>
+            if _v is not None: write(_filter(_v, rawExpr='$event.sname')) # from line 14, col 23.
+            write('''</e2eventservicename>
 \t\t<e2eventgenre id="''')
             _v = VFFSL(SL,"event.genreid",True) # u'$event.genreid' on line 15, col 21
-            if _v is not None: write(_filter(_v, rawExpr=u'$event.genreid')) # from line 15, col 21.
-            write(u'''">''')
+            if _v is not None: write(_filter(_v, rawExpr='$event.genreid')) # from line 15, col 21.
+            write('''">''')
             _v = VFFSL(SL,"event.genre",True) # u'$event.genre' on line 15, col 37
-            if _v is not None: write(_filter(_v, rawExpr=u'$event.genre')) # from line 15, col 37.
-            write(u'''</e2eventgenre>
+            if _v is not None: write(_filter(_v, rawExpr='$event.genre')) # from line 15, col 37.
+            write('''</e2eventgenre>
 \t</e2event>
 ''')
-        write(u'''</e2eventlist>
+        write('''</e2eventlist>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_84246843
         
--- ./plugin/controllers/views/web/epgxmltv.py	(original)
+++ ./plugin/controllers/views/web/epgxmltv.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -60,7 +61,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -70,7 +71,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -84,80 +85,80 @@
         ## START - generated method body
         
         _orig_filter_81038063 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <tv source-info-url="https://github.com/E2OpenPlugins/e2openplugin-OpenWebif" source-info-name="OpenWebif">
 ''')
         for service in VFFSL(SL,"services",True): # generated from line 5, col 2
-            write(u'''\t<channel id="''')
+            write('''\t<channel id="''')
             _v = VFFSL(SL,"service.servicereference",True) # u'$service.servicereference' on line 6, col 15
-            if _v is not None: write(_filter(_v, rawExpr=u'$service.servicereference')) # from line 6, col 15.
-            write(u'''">
+            if _v is not None: write(_filter(_v, rawExpr='$service.servicereference')) # from line 6, col 15.
+            write('''">
 \t\t<display-name>''')
             _v = VFFSL(SL,"service.servicename",True) # u'$service.servicename' on line 7, col 17
-            if _v is not None: write(_filter(_v, rawExpr=u'$service.servicename')) # from line 7, col 17.
-            write(u'''</display-name>
+            if _v is not None: write(_filter(_v, rawExpr='$service.servicename')) # from line 7, col 17.
+            write('''</display-name>
 \t</channel>
 ''')
         for event in VFFSL(SL,"events",True): # generated from line 10, col 2
-            write(u'''\t<programme start="''')
+            write('''\t<programme start="''')
             _v = VFN(VFN(VFFSL(SL,"datetime",True),"utcfromtimestamp",False)(VFFSL(SL,"event.begin_timestamp",True)),"strftime",False)('%Y%m%d%H%M%S') # u"$datetime.utcfromtimestamp($event.begin_timestamp).strftime('%Y%m%d%H%M%S')" on line 11, col 20
-            if _v is not None: write(_filter(_v, rawExpr=u"$datetime.utcfromtimestamp($event.begin_timestamp).strftime('%Y%m%d%H%M%S')")) # from line 11, col 20.
-            write(u''' ''')
+            if _v is not None: write(_filter(_v, rawExpr="$datetime.utcfromtimestamp($event.begin_timestamp).strftime('%Y%m%d%H%M%S')")) # from line 11, col 20.
+            write(''' ''')
             _v = VFFSL(SL,"offset.utcoffset",True) # u'$offset.utcoffset' on line 11, col 96
-            if _v is not None: write(_filter(_v, rawExpr=u'$offset.utcoffset')) # from line 11, col 96.
-            write(u'''" stop="''')
+            if _v is not None: write(_filter(_v, rawExpr='$offset.utcoffset')) # from line 11, col 96.
+            write('''" stop="''')
             _v = VFN(VFN(VFFSL(SL,"datetime",True),"utcfromtimestamp",False)(VFFSL(SL,"event.begin_timestamp",True) + VFFSL(SL,"event.duration_sec",True)),"strftime",False)('%Y%m%d%H%M%S') # u"$datetime.utcfromtimestamp($event.begin_timestamp + $event.duration_sec).strftime('%Y%m%d%H%M%S')" on line 11, col 121
-            if _v is not None: write(_filter(_v, rawExpr=u"$datetime.utcfromtimestamp($event.begin_timestamp + $event.duration_sec).strftime('%Y%m%d%H%M%S')")) # from line 11, col 121.
-            write(u''' ''')
+            if _v is not None: write(_filter(_v, rawExpr="$datetime.utcfromtimestamp($event.begin_timestamp + $event.duration_sec).strftime('%Y%m%d%H%M%S')")) # from line 11, col 121.
+            write(''' ''')
             _v = VFFSL(SL,"offset.utcoffset",True) # u'$offset.utcoffset' on line 11, col 219
-            if _v is not None: write(_filter(_v, rawExpr=u'$offset.utcoffset')) # from line 11, col 219.
-            write(u'''" channel="''')
+            if _v is not None: write(_filter(_v, rawExpr='$offset.utcoffset')) # from line 11, col 219.
+            write('''" channel="''')
             _v = VFFSL(SL,"event.sref",True) # u'$event.sref' on line 11, col 247
-            if _v is not None: write(_filter(_v, rawExpr=u'$event.sref')) # from line 11, col 247.
-            write(u'''">
+            if _v is not None: write(_filter(_v, rawExpr='$event.sref')) # from line 11, col 247.
+            write('''">
 \t\t<title lang="''')
             _v = VFFSL(SL,"lang",True) # u'$lang' on line 12, col 16
-            if _v is not None: write(_filter(_v, rawExpr=u'$lang')) # from line 12, col 16.
-            write(u'''">''')
+            if _v is not None: write(_filter(_v, rawExpr='$lang')) # from line 12, col 16.
+            write('''">''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.title",True)) # u'$str($event.title)' on line 12, col 23
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.title)')) # from line 12, col 23.
-            write(u'''</title>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.title)')) # from line 12, col 23.
+            write('''</title>
 \t\t<sub-title lang="''')
             _v = VFFSL(SL,"lang",True) # u'$lang' on line 13, col 20
-            if _v is not None: write(_filter(_v, rawExpr=u'$lang')) # from line 13, col 20.
-            write(u'''">''')
+            if _v is not None: write(_filter(_v, rawExpr='$lang')) # from line 13, col 20.
+            write('''">''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.shortdesc",True)) # u'$str($event.shortdesc)' on line 13, col 27
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.shortdesc)')) # from line 13, col 27.
-            write(u'''</sub-title>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.shortdesc)')) # from line 13, col 27.
+            write('''</sub-title>
 \t\t<desc lang="''')
             _v = VFFSL(SL,"lang",True) # u'$lang' on line 14, col 15
-            if _v is not None: write(_filter(_v, rawExpr=u'$lang')) # from line 14, col 15.
-            write(u'''">''')
+            if _v is not None: write(_filter(_v, rawExpr='$lang')) # from line 14, col 15.
+            write('''">''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"event.longdesc",True)) # u'$str($event.longdesc)' on line 14, col 22
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($event.longdesc)')) # from line 14, col 22.
-            write(u'''</desc>
+            if _v is not None: write(_filter(_v, rawExpr='$str($event.longdesc)')) # from line 14, col 22.
+            write('''</desc>
 ''')
             if VFFSL(SL,"event.genreid",True) != 0: # generated from line 15, col 3
-                write(u'''\t\t<category lang="''')
+                write('''\t\t<category lang="''')
                 _v = VFFSL(SL,"lang",True) # u'$lang' on line 16, col 19
-                if _v is not None: write(_filter(_v, rawExpr=u'$lang')) # from line 16, col 19.
-                write(u'''" id="''')
+                if _v is not None: write(_filter(_v, rawExpr='$lang')) # from line 16, col 19.
+                write('''" id="''')
                 _v = VFFSL(SL,"event.genreid",True) # u'$event.genreid' on line 16, col 30
-                if _v is not None: write(_filter(_v, rawExpr=u'$event.genreid')) # from line 16, col 30.
-                write(u'''">''')
+                if _v is not None: write(_filter(_v, rawExpr='$event.genreid')) # from line 16, col 30.
+                write('''">''')
                 _v = VFFSL(SL,"event.genre",True) # u'$event.genre' on line 16, col 46
-                if _v is not None: write(_filter(_v, rawExpr=u'$event.genre')) # from line 16, col 46.
-                write(u'''</category>
-''')
-            write(u'''\t</programme>
-''')
-        write(u'''</tv>
+                if _v is not None: write(_filter(_v, rawExpr='$event.genre')) # from line 16, col 46.
+                write('''</category>
+''')
+            write('''\t</programme>
+''')
+        write('''</tv>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_81038063
         
--- ./plugin/controllers/views/web/external.py	(original)
+++ ./plugin/controllers/views/web/external.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,32 +84,32 @@
         ## START - generated method body
         
         _orig_filter_48086369 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2webifexternals>
 ''')
         for plugin in VFFSL(SL,"plugins",True): # generated from line 4, col 2
-            write(u'''\t<e2webifexternal>
+            write('''\t<e2webifexternal>
 \t\t<e2path>''')
             _v = VFFSL(SL,"plugin",True)[0] # u'$plugin[0]' on line 6, col 11
-            if _v is not None: write(_filter(_v, rawExpr=u'$plugin[0]')) # from line 6, col 11.
-            write(u'''</e2path>
+            if _v is not None: write(_filter(_v, rawExpr='$plugin[0]')) # from line 6, col 11.
+            write('''</e2path>
 \t\t<e2name>''')
             _v = VFFSL(SL,"plugin",True)[2] # u'$plugin[2]' on line 7, col 11
-            if _v is not None: write(_filter(_v, rawExpr=u'$plugin[2]')) # from line 7, col 11.
-            write(u'''</e2name>
+            if _v is not None: write(_filter(_v, rawExpr='$plugin[2]')) # from line 7, col 11.
+            write('''</e2name>
 \t\t<e2externalversion>''')
             _v = VFFSL(SL,"plugin",True)[3] # u'$plugin[3]' on line 8, col 22
-            if _v is not None: write(_filter(_v, rawExpr=u'$plugin[3]')) # from line 8, col 22.
-            write(u'''</e2externalversion>
+            if _v is not None: write(_filter(_v, rawExpr='$plugin[3]')) # from line 8, col 22.
+            write('''</e2externalversion>
 \t</e2webifexternal>
 ''')
-        write(u'''</e2webifexternals>
+        write('''</e2webifexternals>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_48086369
         
--- ./plugin/controllers/views/web/getallservices.py	(original)
+++ ./plugin/controllers/views/web/getallservices.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,56 +84,56 @@
         ## START - generated method body
         
         _orig_filter_42344476 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2servicelistrecursive>
 ''')
         for service in VFFSL(SL,"services",True): # generated from line 4, col 2
             if VFFSL(SL,"len",False)(VFFSL(SL,"service.subservices",True)) > 0: # generated from line 5, col 3
-                write(u'''\t\t<e2bouquet>
+                write('''\t\t<e2bouquet>
 \t\t\t<e2servicereference>''')
                 _v = VFFSL(SL,"service.servicereference",True) # u'$service.servicereference' on line 7, col 24
-                if _v is not None: write(_filter(_v, rawExpr=u'$service.servicereference')) # from line 7, col 24.
-                write(u'''</e2servicereference>
+                if _v is not None: write(_filter(_v, rawExpr='$service.servicereference')) # from line 7, col 24.
+                write('''</e2servicereference>
 \t\t\t<e2servicename>''')
                 _v = VFFSL(SL,"service.servicename",True) # u'$service.servicename' on line 8, col 19
-                if _v is not None: write(_filter(_v, rawExpr=u'$service.servicename')) # from line 8, col 19.
-                write(u'''</e2servicename>
+                if _v is not None: write(_filter(_v, rawExpr='$service.servicename')) # from line 8, col 19.
+                write('''</e2servicename>
 \t\t\t<e2servicelist>
 ''')
                 for service2 in VFFSL(SL,"service.subservices",True): # generated from line 10, col 4
-                    write(u'''\t\t\t<e2service>
+                    write('''\t\t\t<e2service>
 \t\t\t\t<e2servicereference>''')
                     _v = VFFSL(SL,"service2.servicereference",True) # u'$service2.servicereference' on line 12, col 25
-                    if _v is not None: write(_filter(_v, rawExpr=u'$service2.servicereference')) # from line 12, col 25.
-                    write(u'''</e2servicereference>
+                    if _v is not None: write(_filter(_v, rawExpr='$service2.servicereference')) # from line 12, col 25.
+                    write('''</e2servicereference>
 \t\t\t\t<e2servicename>''')
                     _v = VFFSL(SL,"service2.servicename",True) # u'$service2.servicename' on line 13, col 20
-                    if _v is not None: write(_filter(_v, rawExpr=u'$service2.servicename')) # from line 13, col 20.
-                    write(u'''</e2servicename>
+                    if _v is not None: write(_filter(_v, rawExpr='$service2.servicename')) # from line 13, col 20.
+                    write('''</e2servicename>
 \t\t\t</e2service>
 ''')
-                write(u'''\t\t\t</e2servicelist>
+                write('''\t\t\t</e2servicelist>
 \t\t</e2bouquet>
 ''')
             else: # generated from line 18, col 3
-                write(u'''\t\t<e2service>
+                write('''\t\t<e2service>
 \t\t\t<e2servicereference>''')
                 _v = VFFSL(SL,"service.servicereference",True) # u'$service.servicereference' on line 20, col 24
-                if _v is not None: write(_filter(_v, rawExpr=u'$service.servicereference')) # from line 20, col 24.
-                write(u'''</e2servicereference>
+                if _v is not None: write(_filter(_v, rawExpr='$service.servicereference')) # from line 20, col 24.
+                write('''</e2servicereference>
 \t\t\t<e2servicename>''')
                 _v = VFFSL(SL,"service.servicename",True) # u'$service.servicename' on line 21, col 19
-                if _v is not None: write(_filter(_v, rawExpr=u'$service.servicename')) # from line 21, col 19.
-                write(u'''</e2servicename>
+                if _v is not None: write(_filter(_v, rawExpr='$service.servicename')) # from line 21, col 19.
+                write('''</e2servicename>
 \t\t</e2service>
 ''')
-        write(u'''</e2servicelistrecursive>
+        write('''</e2servicelistrecursive>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_42344476
         
--- ./plugin/controllers/views/web/getaudiotracks.py	(original)
+++ ./plugin/controllers/views/web/getaudiotracks.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,36 +84,36 @@
         ## START - generated method body
         
         _orig_filter_95961987 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2audiotracklist>
 ''')
         for track in VFFSL(SL,"tracklist",True): # generated from line 4, col 2
-            write(u'''\t\t<e2audiotrack>
+            write('''\t\t<e2audiotrack>
 \t\t\t<e2audiotrackdescription>''')
             _v = VFFSL(SL,"track.description",True) # u'$track.description' on line 6, col 29
-            if _v is not None: write(_filter(_v, rawExpr=u'$track.description')) # from line 6, col 29.
-            write(u'''</e2audiotrackdescription>
+            if _v is not None: write(_filter(_v, rawExpr='$track.description')) # from line 6, col 29.
+            write('''</e2audiotrackdescription>
 \t\t\t<e2audiotrackid>''')
             _v = VFFSL(SL,"track.index",True) # u'$track.index' on line 7, col 20
-            if _v is not None: write(_filter(_v, rawExpr=u'$track.index')) # from line 7, col 20.
-            write(u'''</e2audiotrackid>
+            if _v is not None: write(_filter(_v, rawExpr='$track.index')) # from line 7, col 20.
+            write('''</e2audiotrackid>
 \t\t\t<e2audiotrackpid>''')
             _v = VFFSL(SL,"track.pid",True) # u'$track.pid' on line 8, col 21
-            if _v is not None: write(_filter(_v, rawExpr=u'$track.pid')) # from line 8, col 21.
-            write(u'''</e2audiotrackpid>
+            if _v is not None: write(_filter(_v, rawExpr='$track.pid')) # from line 8, col 21.
+            write('''</e2audiotrackpid>
 \t\t\t<e2audiotrackactive>''')
             _v = VFFSL(SL,"track.active",True) # u'$track.active' on line 9, col 24
-            if _v is not None: write(_filter(_v, rawExpr=u'$track.active')) # from line 9, col 24.
-            write(u'''</e2audiotrackactive>
+            if _v is not None: write(_filter(_v, rawExpr='$track.active')) # from line 9, col 24.
+            write('''</e2audiotrackactive>
 \t\t</e2audiotrack>
 ''')
-        write(u'''</e2audiotracklist>
+        write('''</e2audiotracklist>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_95961987
         
--- ./plugin/controllers/views/web/getcurrent.py	(original)
+++ ./plugin/controllers/views/web/getcurrent.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,42 +84,42 @@
         ## START - generated method body
         
         _orig_filter_55368615 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2currentserviceinformation>
 \t<e2service>
 \t\t<e2servicereference>''')
         _v = VFFSL(SL,"info.ref",True) # u'$info.ref' on line 5, col 23
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.ref')) # from line 5, col 23.
-        write(u'''</e2servicereference>
+        if _v is not None: write(_filter(_v, rawExpr='$info.ref')) # from line 5, col 23.
+        write('''</e2servicereference>
 \t\t<e2servicename>''')
         _v = VFFSL(SL,"info.name",True) # u'$info.name' on line 6, col 18
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.name')) # from line 6, col 18.
-        write(u'''</e2servicename>
+        if _v is not None: write(_filter(_v, rawExpr='$info.name')) # from line 6, col 18.
+        write('''</e2servicename>
 \t\t<e2providername>''')
         _v = VFFSL(SL,"info.provider",True) # u'$info.provider' on line 7, col 19
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.provider')) # from line 7, col 19.
-        write(u'''</e2providername>
+        if _v is not None: write(_filter(_v, rawExpr='$info.provider')) # from line 7, col 19.
+        write('''</e2providername>
 \t\t<e2videowidth>''')
         _v = VFFSL(SL,"info.width",True) # u'$info.width' on line 8, col 17
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.width')) # from line 8, col 17.
-        write(u'''</e2videowidth>
+        if _v is not None: write(_filter(_v, rawExpr='$info.width')) # from line 8, col 17.
+        write('''</e2videowidth>
 \t\t<e2videoheight>''')
         _v = VFFSL(SL,"info.height",True) # u'$info.height' on line 9, col 18
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.height')) # from line 9, col 18.
-        write(u'''</e2videoheight>
+        if _v is not None: write(_filter(_v, rawExpr='$info.height')) # from line 9, col 18.
+        write('''</e2videoheight>
 \t\t<e2servicevideosize>''')
         _v = VFFSL(SL,"info.width",True) # u'${info.width}' on line 10, col 23
-        if _v is not None: write(_filter(_v, rawExpr=u'${info.width}')) # from line 10, col 23.
-        write(u'''x''')
+        if _v is not None: write(_filter(_v, rawExpr='${info.width}')) # from line 10, col 23.
+        write('''x''')
         _v = VFFSL(SL,"info.height",True) # u'${info.height}' on line 10, col 37
-        if _v is not None: write(_filter(_v, rawExpr=u'${info.height}')) # from line 10, col 37.
-        write(u'''</e2servicevideosize>
+        if _v is not None: write(_filter(_v, rawExpr='${info.height}')) # from line 10, col 37.
+        write('''</e2servicevideosize>
 \t\t<e2iswidescreen>
 ''')
         if VFFSL(SL,"info.iswidescreen",True) : # generated from line 12, col 4
@@ -127,154 +128,154 @@
         else:
             _v =  "0"
             if _v is not None: write(_filter(_v))
-        write(u'''\t\t</e2iswidescreen>
+        write('''\t\t</e2iswidescreen>
 \t\t<e2apid>''')
         _v = VFFSL(SL,"info.apid",True) # u'$info.apid' on line 14, col 11
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.apid')) # from line 14, col 11.
-        write(u'''</e2apid>
+        if _v is not None: write(_filter(_v, rawExpr='$info.apid')) # from line 14, col 11.
+        write('''</e2apid>
 \t\t<e2vpid>''')
         _v = VFFSL(SL,"info.vpid",True) # u'$info.vpid' on line 15, col 11
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.vpid')) # from line 15, col 11.
-        write(u'''</e2vpid>
+        if _v is not None: write(_filter(_v, rawExpr='$info.vpid')) # from line 15, col 11.
+        write('''</e2vpid>
 \t\t<e2pcrpid>''')
         _v = VFFSL(SL,"info.pcrpid",True) # u'$info.pcrpid' on line 16, col 13
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.pcrpid')) # from line 16, col 13.
-        write(u'''</e2pcrpid>
+        if _v is not None: write(_filter(_v, rawExpr='$info.pcrpid')) # from line 16, col 13.
+        write('''</e2pcrpid>
 \t\t<e2pmtpid>''')
         _v = VFFSL(SL,"info.pmtpid",True) # u'$info.pmtpid' on line 17, col 13
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.pmtpid')) # from line 17, col 13.
-        write(u'''</e2pmtpid>
+        if _v is not None: write(_filter(_v, rawExpr='$info.pmtpid')) # from line 17, col 13.
+        write('''</e2pmtpid>
 \t\t<e2txtpid>''')
         _v = VFFSL(SL,"info.txtpid",True) # u'$info.txtpid' on line 18, col 13
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.txtpid')) # from line 18, col 13.
-        write(u'''</e2txtpid>
+        if _v is not None: write(_filter(_v, rawExpr='$info.txtpid')) # from line 18, col 13.
+        write('''</e2txtpid>
 \t\t<e2tsid>''')
         _v = VFFSL(SL,"info.tsid",True) # u'$info.tsid' on line 19, col 11
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.tsid')) # from line 19, col 11.
-        write(u'''</e2tsid>
+        if _v is not None: write(_filter(_v, rawExpr='$info.tsid')) # from line 19, col 11.
+        write('''</e2tsid>
 \t\t<e2onid>''')
         _v = VFFSL(SL,"info.onid",True) # u'$info.onid' on line 20, col 11
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.onid')) # from line 20, col 11.
-        write(u'''</e2onid>
+        if _v is not None: write(_filter(_v, rawExpr='$info.onid')) # from line 20, col 11.
+        write('''</e2onid>
 \t\t<e2sid>''')
         _v = VFFSL(SL,"info.sid",True) # u'$info.sid' on line 21, col 10
-        if _v is not None: write(_filter(_v, rawExpr=u'$info.sid')) # from line 21, col 10.
-        write(u'''</e2sid>
+        if _v is not None: write(_filter(_v, rawExpr='$info.sid')) # from line 21, col 10.
+        write('''</e2sid>
 \t</e2service>
 \t<e2eventlist>
 \t\t<e2event>
 \t\t\t<e2eventservicereference>''')
         _v = VFFSL(SL,"now.sref",True) # u'$now.sref' on line 25, col 29
-        if _v is not None: write(_filter(_v, rawExpr=u'$now.sref')) # from line 25, col 29.
-        write(u'''</e2eventservicereference>
+        if _v is not None: write(_filter(_v, rawExpr='$now.sref')) # from line 25, col 29.
+        write('''</e2eventservicereference>
 \t\t\t<e2eventservicename>''')
         _v = VFFSL(SL,"now.sname",True) # u'$now.sname' on line 26, col 24
-        if _v is not None: write(_filter(_v, rawExpr=u'$now.sname')) # from line 26, col 24.
-        write(u'''</e2eventservicename>
+        if _v is not None: write(_filter(_v, rawExpr='$now.sname')) # from line 26, col 24.
+        write('''</e2eventservicename>
 \t\t\t<e2eventprovidername>''')
         _v = VFFSL(SL,"now.provider",True) # u'$now.provider' on line 27, col 25
-        if _v is not None: write(_filter(_v, rawExpr=u'$now.provider')) # from line 27, col 25.
-        write(u'''</e2eventprovidername>
+        if _v is not None: write(_filter(_v, rawExpr='$now.provider')) # from line 27, col 25.
+        write('''</e2eventprovidername>
 \t\t\t<e2eventid>''')
         _v = VFFSL(SL,"now.id",True) # u'$now.id' on line 28, col 15
-        if _v is not None: write(_filter(_v, rawExpr=u'$now.id')) # from line 28, col 15.
-        write(u'''</e2eventid>
+        if _v is not None: write(_filter(_v, rawExpr='$now.id')) # from line 28, col 15.
+        write('''</e2eventid>
 \t\t\t<e2eventname>''')
         _v = VFFSL(SL,"now.title",True) # u'$now.title' on line 29, col 17
-        if _v is not None: write(_filter(_v, rawExpr=u'$now.title')) # from line 29, col 17.
-        write(u'''</e2eventname>
+        if _v is not None: write(_filter(_v, rawExpr='$now.title')) # from line 29, col 17.
+        write('''</e2eventname>
 \t\t\t<e2eventtitle>''')
         _v = VFFSL(SL,"now.title",True) # u'$now.title' on line 30, col 18
-        if _v is not None: write(_filter(_v, rawExpr=u'$now.title')) # from line 30, col 18.
-        write(u'''</e2eventtitle>
+        if _v is not None: write(_filter(_v, rawExpr='$now.title')) # from line 30, col 18.
+        write('''</e2eventtitle>
 \t\t\t<e2eventdescription>''')
         _v = VFFSL(SL,"now.shortdesc",True) # u'$now.shortdesc' on line 31, col 24
-        if _v is not None: write(_filter(_v, rawExpr=u'$now.shortdesc')) # from line 31, col 24.
-        write(u'''</e2eventdescription>
+        if _v is not None: write(_filter(_v, rawExpr='$now.shortdesc')) # from line 31, col 24.
+        write('''</e2eventdescription>
 \t\t\t<e2eventstart>''')
         _v = VFFSL(SL,"now.begin_timestamp",True) # u'$now.begin_timestamp' on line 32, col 18
-        if _v is not None: write(_filter(_v, rawExpr=u'$now.begin_timestamp')) # from line 32, col 18.
-        write(u'''</e2eventstart>
+        if _v is not None: write(_filter(_v, rawExpr='$now.begin_timestamp')) # from line 32, col 18.
+        write('''</e2eventstart>
 \t\t\t<e2eventduration>''')
         _v = VFFSL(SL,"now.duration_sec",True) # u'$now.duration_sec' on line 33, col 21
-        if _v is not None: write(_filter(_v, rawExpr=u'$now.duration_sec')) # from line 33, col 21.
-        write(u'''</e2eventduration>
+        if _v is not None: write(_filter(_v, rawExpr='$now.duration_sec')) # from line 33, col 21.
+        write('''</e2eventduration>
 \t\t\t<e2eventremaining>''')
         _v = VFFSL(SL,"now.remaining",True) # u'$now.remaining' on line 34, col 22
-        if _v is not None: write(_filter(_v, rawExpr=u'$now.remaining')) # from line 34, col 22.
-        write(u'''</e2eventremaining>
+        if _v is not None: write(_filter(_v, rawExpr='$now.remaining')) # from line 34, col 22.
+        write('''</e2eventremaining>
 \t\t\t<e2eventcurrenttime>''')
         _v = VFFSL(SL,"now.now_timestamp",True) # u'$now.now_timestamp' on line 35, col 24
-        if _v is not None: write(_filter(_v, rawExpr=u'$now.now_timestamp')) # from line 35, col 24.
-        write(u'''</e2eventcurrenttime>
+        if _v is not None: write(_filter(_v, rawExpr='$now.now_timestamp')) # from line 35, col 24.
+        write('''</e2eventcurrenttime>
 \t\t\t<e2eventdescriptionextended>''')
         _v = VFFSL(SL,"now.longdesc",True) # u'$now.longdesc' on line 36, col 32
-        if _v is not None: write(_filter(_v, rawExpr=u'$now.longdesc')) # from line 36, col 32.
-        write(u'''</e2eventdescriptionextended>
+        if _v is not None: write(_filter(_v, rawExpr='$now.longdesc')) # from line 36, col 32.
+        write('''</e2eventdescriptionextended>
 \t\t\t<e2eventgenre id="''')
         _v = VFFSL(SL,"now.genreid",True) # u'$now.genreid' on line 37, col 22
-        if _v is not None: write(_filter(_v, rawExpr=u'$now.genreid')) # from line 37, col 22.
-        write(u'''">''')
+        if _v is not None: write(_filter(_v, rawExpr='$now.genreid')) # from line 37, col 22.
+        write('''">''')
         _v = VFFSL(SL,"now.genre",True) # u'$now.genre' on line 37, col 36
-        if _v is not None: write(_filter(_v, rawExpr=u'$now.genre')) # from line 37, col 36.
-        write(u'''</e2eventgenre>
+        if _v is not None: write(_filter(_v, rawExpr='$now.genre')) # from line 37, col 36.
+        write('''</e2eventgenre>
 \t\t</e2event>
 \t\t<e2event>
 \t\t\t<e2eventservicereference>''')
         _v = VFFSL(SL,"next.sref",True) # u'$next.sref' on line 40, col 29
-        if _v is not None: write(_filter(_v, rawExpr=u'$next.sref')) # from line 40, col 29.
-        write(u'''</e2eventservicereference>
+        if _v is not None: write(_filter(_v, rawExpr='$next.sref')) # from line 40, col 29.
+        write('''</e2eventservicereference>
 \t\t\t<e2eventservicename>''')
         _v = VFFSL(SL,"next.sname",True) # u'$next.sname' on line 41, col 24
-        if _v is not None: write(_filter(_v, rawExpr=u'$next.sname')) # from line 41, col 24.
-        write(u'''</e2eventservicename>
+        if _v is not None: write(_filter(_v, rawExpr='$next.sname')) # from line 41, col 24.
+        write('''</e2eventservicename>
 \t\t\t<e2eventprovidername>''')
         _v = VFFSL(SL,"next.provider",True) # u'$next.provider' on line 42, col 25
-        if _v is not None: write(_filter(_v, rawExpr=u'$next.provider')) # from line 42, col 25.
-        write(u'''</e2eventprovidername>
+        if _v is not None: write(_filter(_v, rawExpr='$next.provider')) # from line 42, col 25.
+        write('''</e2eventprovidername>
 \t\t\t<e2eventid>''')
         _v = VFFSL(SL,"next.id",True) # u'$next.id' on line 43, col 15
-        if _v is not None: write(_filter(_v, rawExpr=u'$next.id')) # from line 43, col 15.
-        write(u'''</e2eventid>
+        if _v is not None: write(_filter(_v, rawExpr='$next.id')) # from line 43, col 15.
+        write('''</e2eventid>
 \t\t\t<e2eventname>''')
         _v = VFFSL(SL,"next.title",True) # u'$next.title' on line 44, col 17
-        if _v is not None: write(_filter(_v, rawExpr=u'$next.title')) # from line 44, col 17.
-        write(u'''</e2eventname>
+        if _v is not None: write(_filter(_v, rawExpr='$next.title')) # from line 44, col 17.
+        write('''</e2eventname>
 \t\t\t<e2eventtitle>''')
         _v = VFFSL(SL,"next.title",True) # u'$next.title' on line 45, col 18
-        if _v is not None: write(_filter(_v, rawExpr=u'$next.title')) # from line 45, col 18.
-        write(u'''</e2eventtitle>
+        if _v is not None: write(_filter(_v, rawExpr='$next.title')) # from line 45, col 18.
+        write('''</e2eventtitle>
 \t\t\t<e2eventdescription>''')
         _v = VFFSL(SL,"next.shortdesc",True) # u'$next.shortdesc' on line 46, col 24
-        if _v is not None: write(_filter(_v, rawExpr=u'$next.shortdesc')) # from line 46, col 24.
-        write(u'''</e2eventdescription>
+        if _v is not None: write(_filter(_v, rawExpr='$next.shortdesc')) # from line 46, col 24.
+        write('''</e2eventdescription>
 \t\t\t<e2eventstart>''')
         _v = VFFSL(SL,"next.begin_timestamp",True) # u'$next.begin_timestamp' on line 47, col 18
-        if _v is not None: write(_filter(_v, rawExpr=u'$next.begin_timestamp')) # from line 47, col 18.
-        write(u'''</e2eventstart>
+        if _v is not None: write(_filter(_v, rawExpr='$next.begin_timestamp')) # from line 47, col 18.
+        write('''</e2eventstart>
 \t\t\t<e2eventduration>''')
         _v = VFFSL(SL,"next.duration_sec",True) # u'$next.duration_sec' on line 48, col 21
-        if _v is not None: write(_filter(_v, rawExpr=u'$next.duration_sec')) # from line 48, col 21.
-        write(u'''</e2eventduration>
+        if _v is not None: write(_filter(_v, rawExpr='$next.duration_sec')) # from line 48, col 21.
+        write('''</e2eventduration>
 \t\t\t<e2eventremaining>''')
         _v = VFFSL(SL,"next.remaining",True) # u'$next.remaining' on line 49, col 22
-        if _v is not None: write(_filter(_v, rawExpr=u'$next.remaining')) # from line 49, col 22.
-        write(u'''</e2eventremaining>
+        if _v is not None: write(_filter(_v, rawExpr='$next.remaining')) # from line 49, col 22.
+        write('''</e2eventremaining>
 \t\t\t<e2eventcurrenttime>''')
         _v = VFFSL(SL,"next.now_timestamp",True) # u'$next.now_timestamp' on line 50, col 24
-        if _v is not None: write(_filter(_v, rawExpr=u'$next.now_timestamp')) # from line 50, col 24.
-        write(u'''</e2eventcurrenttime>
+        if _v is not None: write(_filter(_v, rawExpr='$next.now_timestamp')) # from line 50, col 24.
+        write('''</e2eventcurrenttime>
 \t\t\t<e2eventdescriptionextended>''')
         _v = VFFSL(SL,"next.longdesc",True) # u'$next.longdesc' on line 51, col 32
-        if _v is not None: write(_filter(_v, rawExpr=u'$next.longdesc')) # from line 51, col 32.
-        write(u'''</e2eventdescriptionextended>
+        if _v is not None: write(_filter(_v, rawExpr='$next.longdesc')) # from line 51, col 32.
+        write('''</e2eventdescriptionextended>
 \t\t\t<e2eventgenre id="''')
         _v = VFFSL(SL,"next.genreid",True) # u'$next.genreid' on line 52, col 22
-        if _v is not None: write(_filter(_v, rawExpr=u'$next.genreid')) # from line 52, col 22.
-        write(u'''">''')
+        if _v is not None: write(_filter(_v, rawExpr='$next.genreid')) # from line 52, col 22.
+        write('''">''')
         _v = VFFSL(SL,"next.genre",True) # u'$next.genre' on line 52, col 37
-        if _v is not None: write(_filter(_v, rawExpr=u'$next.genre')) # from line 52, col 37.
-        write(u'''</e2eventgenre>
+        if _v is not None: write(_filter(_v, rawExpr='$next.genre')) # from line 52, col 37.
+        write('''</e2eventgenre>
 \t\t</e2event>
 \t</e2eventlist>
 </e2currentserviceinformation>
--- ./plugin/controllers/views/web/getcurrlocation.py	(original)
+++ ./plugin/controllers/views/web/getcurrlocation.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,18 +84,18 @@
         ## START - generated method body
         
         _orig_filter_33693860 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2locations>
 \t<e2location>''')
         _v = VFFSL(SL,"location",True) # u'$location' on line 4, col 14
-        if _v is not None: write(_filter(_v, rawExpr=u'$location')) # from line 4, col 14.
-        write(u'''</e2location>
+        if _v is not None: write(_filter(_v, rawExpr='$location')) # from line 4, col 14.
+        write('''</e2location>
 </e2locations>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_33693860
--- ./plugin/controllers/views/web/getipv6.py	(original)
+++ ./plugin/controllers/views/web/getipv6.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -82,12 +83,12 @@
         ########################################
         ## START - generated method body
         
-        write(u'''<html>
+        write('''<html>
 <body>
 My IP address is: ''')
         _v = VFFSL(SL,"firstpublic",True) # u'$firstpublic' on line 3, col 19
-        if _v is not None: write(_filter(_v, rawExpr=u'$firstpublic')) # from line 3, col 19.
-        write(u'''
+        if _v is not None: write(_filter(_v, rawExpr='$firstpublic')) # from line 3, col 19.
+        write('''
 </body>
 </html>
 ''')
--- ./plugin/controllers/views/web/getlocations.py	(original)
+++ ./plugin/controllers/views/web/getlocations.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,22 +84,22 @@
         ## START - generated method body
         
         _orig_filter_71463844 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2locations>
 ''')
         for location in VFFSL(SL,"locations",True): # generated from line 4, col 2
-            write(u'''\t<e2location>''')
+            write('''\t<e2location>''')
             _v = VFFSL(SL,"location",True) # u'$location' on line 5, col 14
-            if _v is not None: write(_filter(_v, rawExpr=u'$location')) # from line 5, col 14.
-            write(u'''</e2location>
+            if _v is not None: write(_filter(_v, rawExpr='$location')) # from line 5, col 14.
+            write('''</e2location>
 ''')
-        write(u'''</e2locations>
+        write('''</e2locations>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_71463844
         
--- ./plugin/controllers/views/web/getpid.py	(original)
+++ ./plugin/controllers/views/web/getpid.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -82,19 +83,19 @@
         ########################################
         ## START - generated method body
         
-        write(u'''http://''')
+        write('''http://''')
         _v = VFFSL(SL,"host",True) # u'$host' on line 1, col 8
-        if _v is not None: write(_filter(_v, rawExpr=u'$host')) # from line 1, col 8.
-        write(u''':31339/0,''')
+        if _v is not None: write(_filter(_v, rawExpr='$host')) # from line 1, col 8.
+        write(''':31339/0,''')
         _v = VFFSL(SL,"ppid",True) # u'$ppid' on line 1, col 22
-        if _v is not None: write(_filter(_v, rawExpr=u'$ppid')) # from line 1, col 22.
-        write(u''',''')
+        if _v is not None: write(_filter(_v, rawExpr='$ppid')) # from line 1, col 22.
+        write(''',''')
         _v = VFFSL(SL,"vpid",True) # u'$vpid' on line 1, col 28
-        if _v is not None: write(_filter(_v, rawExpr=u'$vpid')) # from line 1, col 28.
-        write(u''',''')
+        if _v is not None: write(_filter(_v, rawExpr='$vpid')) # from line 1, col 28.
+        write(''',''')
         _v = VFFSL(SL,"apid",True) # u'$apid' on line 1, col 34
-        if _v is not None: write(_filter(_v, rawExpr=u'$apid')) # from line 1, col 34.
-        write(u'''
+        if _v is not None: write(_filter(_v, rawExpr='$apid')) # from line 1, col 34.
+        write('''
 ''')
         
         ########################################
--- ./plugin/controllers/views/web/getservices.py	(original)
+++ ./plugin/controllers/views/web/getservices.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,28 +84,28 @@
         ## START - generated method body
         
         _orig_filter_77172176 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2servicelist>
 ''')
         for service in VFFSL(SL,"services",True): # generated from line 4, col 2
-            write(u'''\t<e2service>
+            write('''\t<e2service>
 \t\t<e2servicereference>''')
             _v = VFFSL(SL,"service.servicereference",True) # u'$service.servicereference' on line 6, col 23
-            if _v is not None: write(_filter(_v, rawExpr=u'$service.servicereference')) # from line 6, col 23.
-            write(u'''</e2servicereference>
+            if _v is not None: write(_filter(_v, rawExpr='$service.servicereference')) # from line 6, col 23.
+            write('''</e2servicereference>
 \t\t<e2servicename>''')
             _v = VFFSL(SL,"service.servicename",True) # u'$service.servicename' on line 7, col 18
-            if _v is not None: write(_filter(_v, rawExpr=u'$service.servicename')) # from line 7, col 18.
-            write(u'''</e2servicename>
+            if _v is not None: write(_filter(_v, rawExpr='$service.servicename')) # from line 7, col 18.
+            write('''</e2servicename>
 \t</e2service>
 ''')
-        write(u'''</e2servicelist>
+        write('''</e2servicelist>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_77172176
         
--- ./plugin/controllers/views/web/gettags.py	(original)
+++ ./plugin/controllers/views/web/gettags.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,22 +84,22 @@
         ## START - generated method body
         
         _orig_filter_92072984 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2tags>
 ''')
         for tag in VFFSL(SL,"tags",True): # generated from line 4, col 2
-            write(u'''\t\t<e2tag>''')
+            write('''\t\t<e2tag>''')
             _v = VFFSL(SL,"tag",True) # u'$tag' on line 5, col 10
-            if _v is not None: write(_filter(_v, rawExpr=u'$tag')) # from line 5, col 10.
-            write(u'''</e2tag>
+            if _v is not None: write(_filter(_v, rawExpr='$tag')) # from line 5, col 10.
+            write('''</e2tag>
 ''')
-        write(u'''</e2tags>
+        write('''</e2tags>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_92072984
         
--- ./plugin/controllers/views/web/loadepg.py	(original)
+++ ./plugin/controllers/views/web/loadepg.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,22 +84,22 @@
         ## START - generated method body
         
         _orig_filter_47734623 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2simplexmlresult>
 \t<e2state>''')
         _v = VFFSL(SL,"result",True) # u'$result' on line 4, col 11
-        if _v is not None: write(_filter(_v, rawExpr=u'$result')) # from line 4, col 11.
-        write(u'''</e2state>
+        if _v is not None: write(_filter(_v, rawExpr='$result')) # from line 4, col 11.
+        write('''</e2state>
 \t<e2statetext>''')
         _v = VFFSL(SL,"message",True) # u'$message' on line 5, col 15
-        if _v is not None: write(_filter(_v, rawExpr=u'$message')) # from line 5, col 15.
-        write(u'''</e2statetext>
+        if _v is not None: write(_filter(_v, rawExpr='$message')) # from line 5, col 15.
+        write('''</e2statetext>
 </e2simplexmlresult>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_47734623
--- ./plugin/controllers/views/web/mediaplayeradd.py	(original)
+++ ./plugin/controllers/views/web/mediaplayeradd.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,22 +84,22 @@
         ## START - generated method body
         
         _orig_filter_67816937 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2simplexmlresult>
 \t<e2state>''')
         _v = VFFSL(SL,"result",True) # u'$result' on line 4, col 11
-        if _v is not None: write(_filter(_v, rawExpr=u'$result')) # from line 4, col 11.
-        write(u'''</e2state>
+        if _v is not None: write(_filter(_v, rawExpr='$result')) # from line 4, col 11.
+        write('''</e2state>
 \t<e2statetext>''')
         _v = VFFSL(SL,"message",True) # u'$message' on line 5, col 15
-        if _v is not None: write(_filter(_v, rawExpr=u'$message')) # from line 5, col 15.
-        write(u'''</e2statetext>
+        if _v is not None: write(_filter(_v, rawExpr='$message')) # from line 5, col 15.
+        write('''</e2statetext>
 </e2simplexmlresult>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_67816937
--- ./plugin/controllers/views/web/mediaplayercmd.py	(original)
+++ ./plugin/controllers/views/web/mediaplayercmd.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,22 +84,22 @@
         ## START - generated method body
         
         _orig_filter_35749699 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2simplexmlresult>
 \t<e2state>''')
         _v = VFFSL(SL,"result",True) # u'$result' on line 4, col 11
-        if _v is not None: write(_filter(_v, rawExpr=u'$result')) # from line 4, col 11.
-        write(u'''</e2state>
+        if _v is not None: write(_filter(_v, rawExpr='$result')) # from line 4, col 11.
+        write('''</e2state>
 \t<e2statetext>''')
         _v = VFFSL(SL,"message",True) # u'$message' on line 5, col 15
-        if _v is not None: write(_filter(_v, rawExpr=u'$message')) # from line 5, col 15.
-        write(u'''</e2statetext>
+        if _v is not None: write(_filter(_v, rawExpr='$message')) # from line 5, col 15.
+        write('''</e2statetext>
 </e2simplexmlresult>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_35749699
--- ./plugin/controllers/views/web/mediaplayercurrent.py	(original)
+++ ./plugin/controllers/views/web/mediaplayercurrent.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,39 +84,39 @@
         ## START - generated method body
         
         _orig_filter_71047094 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2mediaplayercurrent>
 \t<e2currenttrack>
 \t\t<e2artist>''')
         _v = VFFSL(SL,"artist",True) # u'$artist' on line 5, col 13
-        if _v is not None: write(_filter(_v, rawExpr=u'$artist')) # from line 5, col 13.
-        write(u'''</e2artist>
+        if _v is not None: write(_filter(_v, rawExpr='$artist')) # from line 5, col 13.
+        write('''</e2artist>
 \t\t<e2title>''')
         _v = VFFSL(SL,"title",True) # u'$title' on line 6, col 12
-        if _v is not None: write(_filter(_v, rawExpr=u'$title')) # from line 6, col 12.
-        write(u'''</e2title>
+        if _v is not None: write(_filter(_v, rawExpr='$title')) # from line 6, col 12.
+        write('''</e2title>
 \t\t<e2album>''')
         _v = VFFSL(SL,"album",True) # u'$album' on line 7, col 12
-        if _v is not None: write(_filter(_v, rawExpr=u'$album')) # from line 7, col 12.
-        write(u'''</e2album>
+        if _v is not None: write(_filter(_v, rawExpr='$album')) # from line 7, col 12.
+        write('''</e2album>
 \t\t<e2year>''')
         _v = VFFSL(SL,"year",True) # u'$year' on line 8, col 11
-        if _v is not None: write(_filter(_v, rawExpr=u'$year')) # from line 8, col 11.
-        write(u'''</e2year>
+        if _v is not None: write(_filter(_v, rawExpr='$year')) # from line 8, col 11.
+        write('''</e2year>
 \t\t<e2genre>''')
         _v = VFFSL(SL,"genre",True) # u'$genre' on line 9, col 12
-        if _v is not None: write(_filter(_v, rawExpr=u'$genre')) # from line 9, col 12.
-        write(u'''</e2genre>
+        if _v is not None: write(_filter(_v, rawExpr='$genre')) # from line 9, col 12.
+        write('''</e2genre>
 \t\t<e2coverfile>''')
         _v = VFFSL(SL,"coverArt",True) # u'$coverArt' on line 10, col 16
-        if _v is not None: write(_filter(_v, rawExpr=u'$coverArt')) # from line 10, col 16.
-        write(u'''</e2coverfile>
+        if _v is not None: write(_filter(_v, rawExpr='$coverArt')) # from line 10, col 16.
+        write('''</e2coverfile>
 \t</e2currenttrack>
 </e2mediaplayercurrent>
 ''')
--- ./plugin/controllers/views/web/mediaplayerfindfile.py	(original)
+++ ./plugin/controllers/views/web/mediaplayerfindfile.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,28 +84,28 @@
         ## START - generated method body
         
         _orig_filter_94964622 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2findfile>
 ''')
         for file in VFFSL(SL,"files",True): # generated from line 4, col 2
-            write(u'''\t<e2file>
+            write('''\t<e2file>
 \t\t<e2name>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"file.name",True)) # u'$str($file.name)' on line 6, col 11
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($file.name)')) # from line 6, col 11.
-            write(u'''</e2name>
+            if _v is not None: write(_filter(_v, rawExpr='$str($file.name)')) # from line 6, col 11.
+            write('''</e2name>
 \t\t<e2path>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"file.path",True)) # u'$str($file.path)' on line 7, col 11
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($file.path)')) # from line 7, col 11.
-            write(u'''</e2path>
+            if _v is not None: write(_filter(_v, rawExpr='$str($file.path)')) # from line 7, col 11.
+            write('''</e2path>
 \t</e2file>
 ''')
-        write(u'''</e2findfile>
+        write('''</e2findfile>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_94964622
         
--- ./plugin/controllers/views/web/mediaplayerlist.py	(original)
+++ ./plugin/controllers/views/web/mediaplayerlist.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,32 +84,32 @@
         ## START - generated method body
         
         _orig_filter_54365826 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2filelist>
 ''')
         for file in VFFSL(SL,"files",True): # generated from line 4, col 2
-            write(u'''\t<e2file>
+            write('''\t<e2file>
 \t\t<e2servicereference>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"file.servicereference",True)) # u'$str($file.servicereference)' on line 6, col 23
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($file.servicereference)')) # from line 6, col 23.
-            write(u'''</e2servicereference>
+            if _v is not None: write(_filter(_v, rawExpr='$str($file.servicereference)')) # from line 6, col 23.
+            write('''</e2servicereference>
 \t\t<e2isdirectory>''')
             _v = VFFSL(SL,"file.isdirectory",True) # u'$file.isdirectory' on line 7, col 18
-            if _v is not None: write(_filter(_v, rawExpr=u'$file.isdirectory')) # from line 7, col 18.
-            write(u'''</e2isdirectory>
+            if _v is not None: write(_filter(_v, rawExpr='$file.isdirectory')) # from line 7, col 18.
+            write('''</e2isdirectory>
 \t\t<e2root>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"file.root",True)) # u'$str($file.root)' on line 8, col 11
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($file.root)')) # from line 8, col 11.
-            write(u'''</e2root>
+            if _v is not None: write(_filter(_v, rawExpr='$str($file.root)')) # from line 8, col 11.
+            write('''</e2root>
 \t</e2file>
 ''')
-        write(u'''</e2filelist>
+        write('''</e2filelist>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_54365826
         
--- ./plugin/controllers/views/web/mediaplayerload.py	(original)
+++ ./plugin/controllers/views/web/mediaplayerload.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,22 +84,22 @@
         ## START - generated method body
         
         _orig_filter_43416614 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2simplexmlresult>
 \t<e2state>''')
         _v = VFFSL(SL,"result",True) # u'$result' on line 4, col 11
-        if _v is not None: write(_filter(_v, rawExpr=u'$result')) # from line 4, col 11.
-        write(u'''</e2state>
+        if _v is not None: write(_filter(_v, rawExpr='$result')) # from line 4, col 11.
+        write('''</e2state>
 \t<e2statetext>''')
         _v = VFFSL(SL,"message",True) # u'$message' on line 5, col 15
-        if _v is not None: write(_filter(_v, rawExpr=u'$message')) # from line 5, col 15.
-        write(u'''</e2statetext>
+        if _v is not None: write(_filter(_v, rawExpr='$message')) # from line 5, col 15.
+        write('''</e2statetext>
 </e2simplexmlresult>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_43416614
--- ./plugin/controllers/views/web/mediaplayerplay.py	(original)
+++ ./plugin/controllers/views/web/mediaplayerplay.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,22 +84,22 @@
         ## START - generated method body
         
         _orig_filter_81349214 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2simplexmlresult>
 \t<e2state>''')
         _v = VFFSL(SL,"result",True) # u'$result' on line 4, col 11
-        if _v is not None: write(_filter(_v, rawExpr=u'$result')) # from line 4, col 11.
-        write(u'''</e2state>
+        if _v is not None: write(_filter(_v, rawExpr='$result')) # from line 4, col 11.
+        write('''</e2state>
 \t<e2statetext>''')
         _v = VFFSL(SL,"message",True) # u'$message' on line 5, col 15
-        if _v is not None: write(_filter(_v, rawExpr=u'$message')) # from line 5, col 15.
-        write(u'''</e2statetext>
+        if _v is not None: write(_filter(_v, rawExpr='$message')) # from line 5, col 15.
+        write('''</e2statetext>
 </e2simplexmlresult>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_81349214
--- ./plugin/controllers/views/web/mediaplayerremove.py	(original)
+++ ./plugin/controllers/views/web/mediaplayerremove.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,22 +84,22 @@
         ## START - generated method body
         
         _orig_filter_25876862 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2simplexmlresult>
 \t<e2state>''')
         _v = VFFSL(SL,"result",True) # u'$result' on line 4, col 11
-        if _v is not None: write(_filter(_v, rawExpr=u'$result')) # from line 4, col 11.
-        write(u'''</e2state>
+        if _v is not None: write(_filter(_v, rawExpr='$result')) # from line 4, col 11.
+        write('''</e2state>
 \t<e2statetext>''')
         _v = VFFSL(SL,"message",True) # u'$message' on line 5, col 15
-        if _v is not None: write(_filter(_v, rawExpr=u'$message')) # from line 5, col 15.
-        write(u'''</e2statetext>
+        if _v is not None: write(_filter(_v, rawExpr='$message')) # from line 5, col 15.
+        write('''</e2statetext>
 </e2simplexmlresult>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_25876862
--- ./plugin/controllers/views/web/mediaplayerwrite.py	(original)
+++ ./plugin/controllers/views/web/mediaplayerwrite.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,22 +84,22 @@
         ## START - generated method body
         
         _orig_filter_89133244 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2simplexmlresult>
 \t<e2state>''')
         _v = VFFSL(SL,"result",True) # u'$result' on line 4, col 11
-        if _v is not None: write(_filter(_v, rawExpr=u'$result')) # from line 4, col 11.
-        write(u'''</e2state>
+        if _v is not None: write(_filter(_v, rawExpr='$result')) # from line 4, col 11.
+        write('''</e2state>
 \t<e2statetext>''')
         _v = VFFSL(SL,"message",True) # u'$message' on line 5, col 15
-        if _v is not None: write(_filter(_v, rawExpr=u'$message')) # from line 5, col 15.
-        write(u'''</e2statetext>
+        if _v is not None: write(_filter(_v, rawExpr='$message')) # from line 5, col 15.
+        write('''</e2statetext>
 </e2simplexmlresult>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_89133244
--- ./plugin/controllers/views/web/message.py	(original)
+++ ./plugin/controllers/views/web/message.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,22 +84,22 @@
         ## START - generated method body
         
         _orig_filter_47461374 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2simplexmlresult>
 \t<e2state>''')
         _v = VFFSL(SL,"result",True) # u'$result' on line 4, col 11
-        if _v is not None: write(_filter(_v, rawExpr=u'$result')) # from line 4, col 11.
-        write(u'''</e2state>
+        if _v is not None: write(_filter(_v, rawExpr='$result')) # from line 4, col 11.
+        write('''</e2state>
 \t<e2statetext>''')
         _v = VFFSL(SL,"message",True) # u'$message' on line 5, col 15
-        if _v is not None: write(_filter(_v, rawExpr=u'$message')) # from line 5, col 15.
-        write(u'''</e2statetext>
+        if _v is not None: write(_filter(_v, rawExpr='$message')) # from line 5, col 15.
+        write('''</e2statetext>
 </e2simplexmlresult>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_47461374
--- ./plugin/controllers/views/web/messageanswer.py	(original)
+++ ./plugin/controllers/views/web/messageanswer.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,22 +84,22 @@
         ## START - generated method body
         
         _orig_filter_86625933 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2simplexmlresult>
 \t<e2state>''')
         _v = VFFSL(SL,"result",True) # u'$result' on line 4, col 11
-        if _v is not None: write(_filter(_v, rawExpr=u'$result')) # from line 4, col 11.
-        write(u'''</e2state>
+        if _v is not None: write(_filter(_v, rawExpr='$result')) # from line 4, col 11.
+        write('''</e2state>
 \t<e2statetext>''')
         _v = VFFSL(SL,"message",True) # u'$message' on line 5, col 15
-        if _v is not None: write(_filter(_v, rawExpr=u'$message')) # from line 5, col 15.
-        write(u'''</e2statetext>
+        if _v is not None: write(_filter(_v, rawExpr='$message')) # from line 5, col 15.
+        write('''</e2statetext>
 </e2simplexmlresult>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_86625933
--- ./plugin/controllers/views/web/moviedelete.py	(original)
+++ ./plugin/controllers/views/web/moviedelete.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,22 +84,22 @@
         ## START - generated method body
         
         _orig_filter_62312616 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2simplexmlresult>
 \t<e2state>''')
         _v = VFFSL(SL,"result",True) # u'$result' on line 4, col 11
-        if _v is not None: write(_filter(_v, rawExpr=u'$result')) # from line 4, col 11.
-        write(u'''</e2state>
+        if _v is not None: write(_filter(_v, rawExpr='$result')) # from line 4, col 11.
+        write('''</e2state>
 \t<e2statetext>''')
         _v = VFFSL(SL,"message",True) # u'$message' on line 5, col 15
-        if _v is not None: write(_filter(_v, rawExpr=u'$message')) # from line 5, col 15.
-        write(u'''</e2statetext>
+        if _v is not None: write(_filter(_v, rawExpr='$message')) # from line 5, col 15.
+        write('''</e2statetext>
 </e2simplexmlresult>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_62312616
--- ./plugin/controllers/views/web/moviedetails.py	(original)
+++ ./plugin/controllers/views/web/moviedetails.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,54 +84,54 @@
         ## START - generated method body
         
         _orig_filter_90444579 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 \t<e2movie>
 \t\t<e2servicereference>''')
         _v = VFFSL(SL,"movie.fullname",True) # u'$movie.fullname' on line 4, col 23
-        if _v is not None: write(_filter(_v, rawExpr=u'$movie.fullname')) # from line 4, col 23.
-        write(u'''</e2servicereference>
+        if _v is not None: write(_filter(_v, rawExpr='$movie.fullname')) # from line 4, col 23.
+        write('''</e2servicereference>
 \t\t<e2title>''')
         _v = VFFSL(SL,"movie.eventname",True) # u'$movie.eventname' on line 5, col 12
-        if _v is not None: write(_filter(_v, rawExpr=u'$movie.eventname')) # from line 5, col 12.
-        write(u'''</e2title>
+        if _v is not None: write(_filter(_v, rawExpr='$movie.eventname')) # from line 5, col 12.
+        write('''</e2title>
 \t\t<e2description>''')
         _v = VFFSL(SL,"movie.description",True) # u'$movie.description' on line 6, col 18
-        if _v is not None: write(_filter(_v, rawExpr=u'$movie.description')) # from line 6, col 18.
-        write(u'''</e2description>
+        if _v is not None: write(_filter(_v, rawExpr='$movie.description')) # from line 6, col 18.
+        write('''</e2description>
 \t\t<e2descriptionextended>''')
         _v = VFFSL(SL,"movie.descriptionExtended",True) # u'$movie.descriptionExtended' on line 7, col 26
-        if _v is not None: write(_filter(_v, rawExpr=u'$movie.descriptionExtended')) # from line 7, col 26.
-        write(u'''</e2descriptionextended>
+        if _v is not None: write(_filter(_v, rawExpr='$movie.descriptionExtended')) # from line 7, col 26.
+        write('''</e2descriptionextended>
 \t\t<e2servicename>''')
         _v = VFFSL(SL,"movie.servicename",True) # u'$movie.servicename' on line 8, col 18
-        if _v is not None: write(_filter(_v, rawExpr=u'$movie.servicename')) # from line 8, col 18.
-        write(u'''</e2servicename>
+        if _v is not None: write(_filter(_v, rawExpr='$movie.servicename')) # from line 8, col 18.
+        write('''</e2servicename>
 \t\t<e2time>''')
         _v = VFFSL(SL,"movie.recordingtime",True) # u'$movie.recordingtime' on line 9, col 11
-        if _v is not None: write(_filter(_v, rawExpr=u'$movie.recordingtime')) # from line 9, col 11.
-        write(u'''</e2time>
+        if _v is not None: write(_filter(_v, rawExpr='$movie.recordingtime')) # from line 9, col 11.
+        write('''</e2time>
 \t\t<e2length>''')
         _v = VFFSL(SL,"movie.length",True) # u'$movie.length' on line 10, col 13
-        if _v is not None: write(_filter(_v, rawExpr=u'$movie.length')) # from line 10, col 13.
-        write(u'''</e2length>
+        if _v is not None: write(_filter(_v, rawExpr='$movie.length')) # from line 10, col 13.
+        write('''</e2length>
 \t\t<e2tags>''')
         _v = VFFSL(SL,"movie.tags",True) # u'$movie.tags' on line 11, col 11
-        if _v is not None: write(_filter(_v, rawExpr=u'$movie.tags')) # from line 11, col 11.
-        write(u'''</e2tags>
+        if _v is not None: write(_filter(_v, rawExpr='$movie.tags')) # from line 11, col 11.
+        write('''</e2tags>
 \t\t<e2filename>''')
         _v = VFFSL(SL,"movie.filename",True) # u'$movie.filename' on line 12, col 15
-        if _v is not None: write(_filter(_v, rawExpr=u'$movie.filename')) # from line 12, col 15.
-        write(u'''</e2filename>
+        if _v is not None: write(_filter(_v, rawExpr='$movie.filename')) # from line 12, col 15.
+        write('''</e2filename>
 \t\t<e2filesize>''')
         _v = VFFSL(SL,"movie.filesize",True) # u'$movie.filesize' on line 13, col 15
-        if _v is not None: write(_filter(_v, rawExpr=u'$movie.filesize')) # from line 13, col 15.
-        write(u'''</e2filesize>
+        if _v is not None: write(_filter(_v, rawExpr='$movie.filesize')) # from line 13, col 15.
+        write('''</e2filesize>
 \t</e2movie>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_90444579
--- ./plugin/controllers/views/web/movielist.py	(original)
+++ ./plugin/controllers/views/web/movielist.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,68 +84,68 @@
         ## START - generated method body
         
         _orig_filter_66313572 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2movielist>
 ''')
         for movie in VFFSL(SL,"movies",True): # generated from line 4, col 2
-            write(u'''\t\t<e2movie>
+            write('''\t\t<e2movie>
 \t\t\t<e2servicereference>''')
             _v = VFFSL(SL,"movie.fullname",True) # u'$movie.fullname' on line 6, col 24
-            if _v is not None: write(_filter(_v, rawExpr=u'$movie.fullname')) # from line 6, col 24.
-            write(u'''</e2servicereference>
+            if _v is not None: write(_filter(_v, rawExpr='$movie.fullname')) # from line 6, col 24.
+            write('''</e2servicereference>
 \t\t\t<e2title>''')
             _v = VFFSL(SL,"movie.eventname",True) # u'$movie.eventname' on line 7, col 13
-            if _v is not None: write(_filter(_v, rawExpr=u'$movie.eventname')) # from line 7, col 13.
-            write(u'''</e2title>
+            if _v is not None: write(_filter(_v, rawExpr='$movie.eventname')) # from line 7, col 13.
+            write('''</e2title>
 \t\t\t<e2description>''')
             _v = VFFSL(SL,"movie.description",True) # u'$movie.description' on line 8, col 19
-            if _v is not None: write(_filter(_v, rawExpr=u'$movie.description')) # from line 8, col 19.
-            write(u'''</e2description>
+            if _v is not None: write(_filter(_v, rawExpr='$movie.description')) # from line 8, col 19.
+            write('''</e2description>
 \t\t\t<e2descriptionextended>''')
             _v = VFFSL(SL,"movie.descriptionExtended",True) # u'$movie.descriptionExtended' on line 9, col 27
-            if _v is not None: write(_filter(_v, rawExpr=u'$movie.descriptionExtended')) # from line 9, col 27.
-            write(u'''</e2descriptionextended>
+            if _v is not None: write(_filter(_v, rawExpr='$movie.descriptionExtended')) # from line 9, col 27.
+            write('''</e2descriptionextended>
 \t\t\t<e2servicename>''')
             _v = VFFSL(SL,"movie.servicename",True) # u'$movie.servicename' on line 10, col 19
-            if _v is not None: write(_filter(_v, rawExpr=u'$movie.servicename')) # from line 10, col 19.
-            write(u'''</e2servicename>
+            if _v is not None: write(_filter(_v, rawExpr='$movie.servicename')) # from line 10, col 19.
+            write('''</e2servicename>
 \t\t\t<e2time>''')
             _v = VFFSL(SL,"movie.recordingtime",True) # u'$movie.recordingtime' on line 11, col 12
-            if _v is not None: write(_filter(_v, rawExpr=u'$movie.recordingtime')) # from line 11, col 12.
-            write(u'''</e2time>
+            if _v is not None: write(_filter(_v, rawExpr='$movie.recordingtime')) # from line 11, col 12.
+            write('''</e2time>
 \t\t\t<e2length>''')
             _v = VFFSL(SL,"movie.length",True) # u'$movie.length' on line 12, col 14
-            if _v is not None: write(_filter(_v, rawExpr=u'$movie.length')) # from line 12, col 14.
-            write(u'''</e2length>
+            if _v is not None: write(_filter(_v, rawExpr='$movie.length')) # from line 12, col 14.
+            write('''</e2length>
 \t\t\t<e2tags>''')
             _v = VFFSL(SL,"movie.tags",True) # u'$movie.tags' on line 13, col 12
-            if _v is not None: write(_filter(_v, rawExpr=u'$movie.tags')) # from line 13, col 12.
-            write(u'''</e2tags>
+            if _v is not None: write(_filter(_v, rawExpr='$movie.tags')) # from line 13, col 12.
+            write('''</e2tags>
 \t\t\t<e2filename>''')
             _v = VFFSL(SL,"movie.filename",True) # u'$movie.filename' on line 14, col 16
-            if _v is not None: write(_filter(_v, rawExpr=u'$movie.filename')) # from line 14, col 16.
-            write(u'''</e2filename>
+            if _v is not None: write(_filter(_v, rawExpr='$movie.filename')) # from line 14, col 16.
+            write('''</e2filename>
 \t\t\t<e2filesize>''')
             _v = VFFSL(SL,"movie.filesize",True) # u'$movie.filesize' on line 15, col 16
-            if _v is not None: write(_filter(_v, rawExpr=u'$movie.filesize')) # from line 15, col 16.
-            write(u'''</e2filesize>
+            if _v is not None: write(_filter(_v, rawExpr='$movie.filesize')) # from line 15, col 16.
+            write('''</e2filesize>
 \t\t</e2movie>
 ''')
-        write(u'''\t<e2locations>
+        write('''\t<e2locations>
 ''')
         for bookmark in VFFSL(SL,"bookmarks",True): # generated from line 19, col 2
-            write(u'''\t<e2location>''')
+            write('''\t<e2location>''')
             _v = VFFSL(SL,"bookmark",True) # u'$bookmark' on line 20, col 14
-            if _v is not None: write(_filter(_v, rawExpr=u'$bookmark')) # from line 20, col 14.
-            write(u'''</e2location>
+            if _v is not None: write(_filter(_v, rawExpr='$bookmark')) # from line 20, col 14.
+            write('''</e2location>
 ''')
-        write(u'''\t</e2locations>
+        write('''\t</e2locations>
 </e2movielist>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_66313572
--- ./plugin/controllers/views/web/movielisthtml.py	(original)
+++ ./plugin/controllers/views/web/movielisthtml.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,13 +84,13 @@
         ## START - generated method body
         
         _orig_filter_13274906 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <html>
 <head>
 \t<title>
@@ -101,12 +102,12 @@
 \t<table>
 ''')
         for movie in VFFSL(SL,"movies",True): # generated from line 12, col 3
-            write(u'''\t\t<tr>
+            write('''\t\t<tr>
 \t\t\t<td class="pageHeader">
 \t\t\t\t''')
             _v = VFFSL(SL,"movie.eventname",True) # u'$movie.eventname' on line 15, col 5
-            if _v is not None: write(_filter(_v, rawExpr=u'$movie.eventname')) # from line 15, col 5.
-            write(u'''
+            if _v is not None: write(_filter(_v, rawExpr='$movie.eventname')) # from line 15, col 5.
+            write('''
 \t\t\t</td>
 \t\t</tr>
 \t\t<tr>
@@ -114,32 +115,32 @@
 \t\t\t\t<b>Description:</b>
 \t\t\t\t''')
             _v = VFFSL(SL,"movie.description",True) # u'$movie.description' on line 21, col 5
-            if _v is not None: write(_filter(_v, rawExpr=u'$movie.description')) # from line 21, col 5.
-            write(u'''
+            if _v is not None: write(_filter(_v, rawExpr='$movie.description')) # from line 21, col 5.
+            write('''
 \t\t\t\t<br/>
 \t\t\t\t<b>Extended:</b>
 \t\t\t\t''')
             _v = VFFSL(SL,"movie.descriptionExtended",True) # u'$movie.descriptionExtended' on line 24, col 5
-            if _v is not None: write(_filter(_v, rawExpr=u'$movie.descriptionExtended')) # from line 24, col 5.
-            write(u'''
+            if _v is not None: write(_filter(_v, rawExpr='$movie.descriptionExtended')) # from line 24, col 5.
+            write('''
 \t\t\t\t<br/>
 \t\t\t\t<b>Recording Time:</b>
 \t\t\t\t''')
             _v = VFFSL(SL,"movie.begintime",True) # u'$movie.begintime' on line 27, col 5
-            if _v is not None: write(_filter(_v, rawExpr=u'$movie.begintime')) # from line 27, col 5.
-            write(u'''
+            if _v is not None: write(_filter(_v, rawExpr='$movie.begintime')) # from line 27, col 5.
+            write('''
 \t\t\t\t<br/>
 \t\t\t\t<b>Tags:</b>
 \t\t\t\t''')
             _v = VFFSL(SL,"movie.tags",True) # u'$movie.tags' on line 30, col 5
-            if _v is not None: write(_filter(_v, rawExpr=u'$movie.tags')) # from line 30, col 5.
-            write(u'''
+            if _v is not None: write(_filter(_v, rawExpr='$movie.tags')) # from line 30, col 5.
+            write('''
 \t\t\t\t<br/>
 \t\t\t\t<b>Channel:</b>
 \t\t\t\t''')
             _v = VFFSL(SL,"movie.servicename",True) # u'$movie.servicename' on line 33, col 5
-            if _v is not None: write(_filter(_v, rawExpr=u'$movie.servicename')) # from line 33, col 5.
-            write(u'''
+            if _v is not None: write(_filter(_v, rawExpr='$movie.servicename')) # from line 33, col 5.
+            write('''
 \t\t\t</td>
 \t\t</tr>
 \t\t<tr height="20">
@@ -147,7 +148,7 @@
 \t\t\t</td>
 \t\t</tr>
 ''')
-        write(u'''\t</table>
+        write('''\t</table>
 </body>
 </html>
 ''')
--- ./plugin/controllers/views/web/movielistm3u.py	(original)
+++ ./plugin/controllers/views/web/movielistm3u.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -60,7 +61,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -70,7 +71,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,21 +84,21 @@
         ########################################
         ## START - generated method body
         
-        write(u'''#EXTM3U
+        write('''#EXTM3U
 #EXTVLCOPT--http-reconnect=true
 ''')
         for movie in VFFSL(SL,"movies",True): # generated from line 4, col 1
-            write(u'''#EXTINF:-1,: ''')
+            write('''#EXTINF:-1,: ''')
             _v = VFFSL(SL,"movie.filename_stripped",True) # u'$movie.filename_stripped' on line 5, col 14
-            if _v is not None: write(_filter(_v, rawExpr=u'$movie.filename_stripped')) # from line 5, col 14.
-            write(u'''
+            if _v is not None: write(_filter(_v, rawExpr='$movie.filename_stripped')) # from line 5, col 14.
+            write('''
 ''')
             _v = VFFSL(SL,"host",True) # u'$host' on line 6, col 1
-            if _v is not None: write(_filter(_v, rawExpr=u'$host')) # from line 6, col 1.
-            write(u'''/file?file=''')
+            if _v is not None: write(_filter(_v, rawExpr='$host')) # from line 6, col 1.
+            write('''/file?file=''')
             _v = VFFSL(SL,"quote",False)(VFFSL(SL,"movie.filename",True)) # u'$quote($movie.filename)' on line 6, col 17
-            if _v is not None: write(_filter(_v, rawExpr=u'$quote($movie.filename)')) # from line 6, col 17.
-            write(u'''
+            if _v is not None: write(_filter(_v, rawExpr='$quote($movie.filename)')) # from line 6, col 17.
+            write('''
 ''')
         
         ########################################
--- ./plugin/controllers/views/web/movielistrss.py	(original)
+++ ./plugin/controllers/views/web/movielistrss.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -60,7 +61,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -70,7 +71,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -84,13 +85,13 @@
         ## START - generated method body
         
         _orig_filter_57910755 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <rss version="2.0">
 \t<channel>
 \t\t<title>Enigma2 Movielist</title>
@@ -99,63 +100,63 @@
 \t\t<generator>OpenWebif</generator>
 ''')
         for movie in VFFSL(SL,"movies",True): # generated from line 10, col 3
-            write(u'''\t\t<item>
+            write('''\t\t<item>
 \t\t\t<title>''')
             _v = VFFSL(SL,"movie.eventname",True) # u'$movie.eventname' on line 12, col 11
-            if _v is not None: write(_filter(_v, rawExpr=u'$movie.eventname')) # from line 12, col 11.
-            write(u'''</title>
+            if _v is not None: write(_filter(_v, rawExpr='$movie.eventname')) # from line 12, col 11.
+            write('''</title>
 \t\t\t<description>
 \t\t\t\tService: ''')
             _v = VFFSL(SL,"movie.servicename",True) # u'$movie.servicename' on line 14, col 14
-            if _v is not None: write(_filter(_v, rawExpr=u'$movie.servicename')) # from line 14, col 14.
-            write(u'''<br />
+            if _v is not None: write(_filter(_v, rawExpr='$movie.servicename')) # from line 14, col 14.
+            write('''<br />
 \t\t\t\t''')
             _v = VFFSL(SL,"movie.description",True) # u'$movie.description' on line 15, col 5
-            if _v is not None: write(_filter(_v, rawExpr=u'$movie.description')) # from line 15, col 5.
-            write(u'''<br />
+            if _v is not None: write(_filter(_v, rawExpr='$movie.description')) # from line 15, col 5.
+            write('''<br />
 \t\t\t\t''')
             _v = VFFSL(SL,"movie.descriptionExtended",True) # u'$movie.descriptionExtended' on line 16, col 5
-            if _v is not None: write(_filter(_v, rawExpr=u'$movie.descriptionExtended')) # from line 16, col 5.
-            write(u'''<br />
+            if _v is not None: write(_filter(_v, rawExpr='$movie.descriptionExtended')) # from line 16, col 5.
+            write('''<br />
 \t\t\t\t''')
             _v = VFFSL(SL,"movie.filename",True) # u'$movie.filename' on line 17, col 5
-            if _v is not None: write(_filter(_v, rawExpr=u'$movie.filename')) # from line 17, col 5.
-            write(u'''<br />
+            if _v is not None: write(_filter(_v, rawExpr='$movie.filename')) # from line 17, col 5.
+            write('''<br />
 \t\t\t\t''')
             _v = VFFSL(SL,"movie.tags",True) # u'$movie.tags' on line 18, col 5
-            if _v is not None: write(_filter(_v, rawExpr=u'$movie.tags')) # from line 18, col 5.
-            write(u'''<br />
+            if _v is not None: write(_filter(_v, rawExpr='$movie.tags')) # from line 18, col 5.
+            write('''<br />
 \t\t\t\t''')
             _v = VFFSL(SL,"movie.fullname",True) # u'$movie.fullname' on line 19, col 5
-            if _v is not None: write(_filter(_v, rawExpr=u'$movie.fullname')) # from line 19, col 5.
-            write(u'''
+            if _v is not None: write(_filter(_v, rawExpr='$movie.fullname')) # from line 19, col 5.
+            write('''
 \t\t\t</description>
 \t\t\t<link>''')
             _v = VFFSL(SL,"host",True) # u'$host' on line 21, col 10
-            if _v is not None: write(_filter(_v, rawExpr=u'$host')) # from line 21, col 10.
-            write(u'''/file?file=''')
+            if _v is not None: write(_filter(_v, rawExpr='$host')) # from line 21, col 10.
+            write('''/file?file=''')
             _v = VFFSL(SL,"quote",False)(VFFSL(SL,"movie.filename",True)) # u'$quote($movie.filename)' on line 21, col 26
-            if _v is not None: write(_filter(_v, rawExpr=u'$quote($movie.filename)')) # from line 21, col 26.
-            write(u'''</link>
+            if _v is not None: write(_filter(_v, rawExpr='$quote($movie.filename)')) # from line 21, col 26.
+            write('''</link>
 \t\t\t<enclosure type="video/mpeg" url="http://''')
             _v = VFFSL(SL,"host",True) # u'$host' on line 22, col 45
-            if _v is not None: write(_filter(_v, rawExpr=u'$host')) # from line 22, col 45.
-            write(u'''/file?file=''')
+            if _v is not None: write(_filter(_v, rawExpr='$host')) # from line 22, col 45.
+            write('''/file?file=''')
             _v = VFFSL(SL,"quote",False)(VFFSL(SL,"movie.filename",True)) # u'$quote($movie.filename)' on line 22, col 61
-            if _v is not None: write(_filter(_v, rawExpr=u'$quote($movie.filename)')) # from line 22, col 61.
-            write(u'''"/>
+            if _v is not None: write(_filter(_v, rawExpr='$quote($movie.filename)')) # from line 22, col 61.
+            write('''"/>
 \t\t\t<pubDate>''')
             _v = VFFSL(SL,"movie.begintime",True) # u'$movie.begintime' on line 23, col 13
-            if _v is not None: write(_filter(_v, rawExpr=u'$movie.begintime')) # from line 23, col 13.
-            write(u'''</pubDate>
+            if _v is not None: write(_filter(_v, rawExpr='$movie.begintime')) # from line 23, col 13.
+            write('''</pubDate>
 \t\t\t<category>''')
             _v = VFFSL(SL,"movie.servicename",True) # u'$movie.servicename' on line 24, col 14
-            if _v is not None: write(_filter(_v, rawExpr=u'$movie.servicename')) # from line 24, col 14.
-            write(u'''</category>
+            if _v is not None: write(_filter(_v, rawExpr='$movie.servicename')) # from line 24, col 14.
+            write('''</category>
 \t\t\t<author>Dreambox Enigma2</author>
 \t\t</item>
 ''')
-        write(u'''\t</channel>
+        write('''\t</channel>
 </rss>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_57910755
--- ./plugin/controllers/views/web/moviemove.py	(original)
+++ ./plugin/controllers/views/web/moviemove.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,22 +84,22 @@
         ## START - generated method body
         
         _orig_filter_73045021 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2simplexmlresult>
 \t<e2state>''')
         _v = VFFSL(SL,"result",True) # u'$result' on line 4, col 11
-        if _v is not None: write(_filter(_v, rawExpr=u'$result')) # from line 4, col 11.
-        write(u'''</e2state>
+        if _v is not None: write(_filter(_v, rawExpr='$result')) # from line 4, col 11.
+        write('''</e2state>
 \t<e2statetext>''')
         _v = VFFSL(SL,"message",True) # u'$message' on line 5, col 15
-        if _v is not None: write(_filter(_v, rawExpr=u'$message')) # from line 5, col 15.
-        write(u'''</e2statetext>
+        if _v is not None: write(_filter(_v, rawExpr='$message')) # from line 5, col 15.
+        write('''</e2statetext>
 </e2simplexmlresult>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_73045021
--- ./plugin/controllers/views/web/movierename.py	(original)
+++ ./plugin/controllers/views/web/movierename.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,22 +84,22 @@
         ## START - generated method body
         
         _orig_filter_82386607 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2simplexmlresult>
 \t<e2state>''')
         _v = VFFSL(SL,"result",True) # u'$result' on line 4, col 11
-        if _v is not None: write(_filter(_v, rawExpr=u'$result')) # from line 4, col 11.
-        write(u'''</e2state>
+        if _v is not None: write(_filter(_v, rawExpr='$result')) # from line 4, col 11.
+        write('''</e2state>
 \t<e2statetext>''')
         _v = VFFSL(SL,"message",True) # u'$message' on line 5, col 15
-        if _v is not None: write(_filter(_v, rawExpr=u'$message')) # from line 5, col 15.
-        write(u'''</e2statetext>
+        if _v is not None: write(_filter(_v, rawExpr='$message')) # from line 5, col 15.
+        write('''</e2statetext>
 </e2simplexmlresult>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_82386607
--- ./plugin/controllers/views/web/movietags.py	(original)
+++ ./plugin/controllers/views/web/movietags.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,22 +84,22 @@
         ## START - generated method body
         
         _orig_filter_13766087 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2tags>
 ''')
         for tag in VFFSL(SL,"tags",True): # generated from line 4, col 2
-            write(u'''\t\t<e2tag>''')
+            write('''\t\t<e2tag>''')
             _v = VFFSL(SL,"tag",True) # u'$tag' on line 5, col 10
-            if _v is not None: write(_filter(_v, rawExpr=u'$tag')) # from line 5, col 10.
-            write(u'''</e2tag>
+            if _v is not None: write(_filter(_v, rawExpr='$tag')) # from line 5, col 10.
+            write('''</e2tag>
 ''')
-        write(u'''</e2tags>
+        write('''</e2tags>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_13766087
         
--- ./plugin/controllers/views/web/parentcontrollist.py	(original)
+++ ./plugin/controllers/views/web/parentcontrollist.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,28 +84,28 @@
         ## START - generated method body
         
         _orig_filter_80556379 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2servicelist>
 ''')
         for service in VFFSL(SL,"services",True): # generated from line 4, col 2
-            write(u'''\t<e2service>
+            write('''\t<e2service>
 \t\t<e2servicereference>''')
             _v = VFFSL(SL,"service.servicereference",True) # u'$service.servicereference' on line 6, col 23
-            if _v is not None: write(_filter(_v, rawExpr=u'$service.servicereference')) # from line 6, col 23.
-            write(u'''</e2servicereference>
+            if _v is not None: write(_filter(_v, rawExpr='$service.servicereference')) # from line 6, col 23.
+            write('''</e2servicereference>
 \t\t<e2servicename>''')
             _v = VFFSL(SL,"service.servicename",True) # u'$service.servicename' on line 7, col 18
-            if _v is not None: write(_filter(_v, rawExpr=u'$service.servicename')) # from line 7, col 18.
-            write(u'''</e2servicename>
+            if _v is not None: write(_filter(_v, rawExpr='$service.servicename')) # from line 7, col 18.
+            write('''</e2servicename>
 \t</e2service>
 ''')
-        write(u'''</e2servicelist>
+        write('''</e2servicelist>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_80556379
         
--- ./plugin/controllers/views/web/pluginlistread.py	(original)
+++ ./plugin/controllers/views/web/pluginlistread.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,22 +84,22 @@
         ## START - generated method body
         
         _orig_filter_92981241 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2simplexmlresult>
 \t<e2state>''')
         _v = VFFSL(SL,"result",True) # u'$result' on line 4, col 11
-        if _v is not None: write(_filter(_v, rawExpr=u'$result')) # from line 4, col 11.
-        write(u'''</e2state>
+        if _v is not None: write(_filter(_v, rawExpr='$result')) # from line 4, col 11.
+        write('''</e2state>
 \t<e2statetext>''')
         _v = VFFSL(SL,"message",True) # u'$message' on line 5, col 15
-        if _v is not None: write(_filter(_v, rawExpr=u'$message')) # from line 5, col 15.
-        write(u'''</e2statetext>
+        if _v is not None: write(_filter(_v, rawExpr='$message')) # from line 5, col 15.
+        write('''</e2statetext>
 </e2simplexmlresult>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_92981241
--- ./plugin/controllers/views/web/powerstate.py	(original)
+++ ./plugin/controllers/views/web/powerstate.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,13 +84,13 @@
         ## START - generated method body
         
         _orig_filter_54247970 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2powerstate>
 \t<e2instandby>
 ''')
@@ -99,7 +100,7 @@
         else:
             _v =  "false"
             if _v is not None: write(_filter(_v))
-        write(u'''\t</e2instandby>
+        write('''\t</e2instandby>
 </e2powerstate>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_54247970
--- ./plugin/controllers/views/web/recordnow.py	(original)
+++ ./plugin/controllers/views/web/recordnow.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,22 +84,22 @@
         ## START - generated method body
         
         _orig_filter_12215589 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2simplexmlresult>
 \t<e2state>''')
         _v = VFFSL(SL,"result",True) # u'$result' on line 4, col 11
-        if _v is not None: write(_filter(_v, rawExpr=u'$result')) # from line 4, col 11.
-        write(u'''</e2state>
+        if _v is not None: write(_filter(_v, rawExpr='$result')) # from line 4, col 11.
+        write('''</e2state>
 \t<e2statetext>''')
         _v = VFFSL(SL,"message",True) # u'$message' on line 5, col 15
-        if _v is not None: write(_filter(_v, rawExpr=u'$message')) # from line 5, col 15.
-        write(u'''</e2statetext>
+        if _v is not None: write(_filter(_v, rawExpr='$message')) # from line 5, col 15.
+        write('''</e2statetext>
 </e2simplexmlresult>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_12215589
--- ./plugin/controllers/views/web/remotecontrol.py	(original)
+++ ./plugin/controllers/views/web/remotecontrol.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,22 +84,22 @@
         ## START - generated method body
         
         _orig_filter_96652851 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2remotecontrol>
 \t<e2result>''')
         _v = VFFSL(SL,"result",True) # u'$result' on line 4, col 12
-        if _v is not None: write(_filter(_v, rawExpr=u'$result')) # from line 4, col 12.
-        write(u'''</e2result>
+        if _v is not None: write(_filter(_v, rawExpr='$result')) # from line 4, col 12.
+        write('''</e2result>
 \t<e2resulttext>''')
         _v = VFFSL(SL,"message",True) # u'$message' on line 5, col 16
-        if _v is not None: write(_filter(_v, rawExpr=u'$message')) # from line 5, col 16.
-        write(u'''</e2resulttext>
+        if _v is not None: write(_filter(_v, rawExpr='$message')) # from line 5, col 16.
+        write('''</e2resulttext>
 </e2remotecontrol>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_96652851
--- ./plugin/controllers/views/web/removelocation.py	(original)
+++ ./plugin/controllers/views/web/removelocation.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,22 +84,22 @@
         ## START - generated method body
         
         _orig_filter_52389691 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2simplexmlresult>
 \t<e2state>''')
         _v = VFFSL(SL,"result",True) # u'$result' on line 4, col 11
-        if _v is not None: write(_filter(_v, rawExpr=u'$result')) # from line 4, col 11.
-        write(u'''</e2state>
+        if _v is not None: write(_filter(_v, rawExpr='$result')) # from line 4, col 11.
+        write('''</e2state>
 \t<e2statetext>''')
         _v = VFFSL(SL,"message",True) # u'$message' on line 5, col 15
-        if _v is not None: write(_filter(_v, rawExpr=u'$message')) # from line 5, col 15.
-        write(u'''</e2statetext>
+        if _v is not None: write(_filter(_v, rawExpr='$message')) # from line 5, col 15.
+        write('''</e2statetext>
 </e2simplexmlresult>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_52389691
--- ./plugin/controllers/views/web/restarttwisted.py	(original)
+++ ./plugin/controllers/views/web/restarttwisted.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
--- ./plugin/controllers/views/web/saveepg.py	(original)
+++ ./plugin/controllers/views/web/saveepg.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,22 +84,22 @@
         ## START - generated method body
         
         _orig_filter_62412530 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2simplexmlresult>
 \t<e2state>''')
         _v = VFFSL(SL,"result",True) # u'$result' on line 4, col 11
-        if _v is not None: write(_filter(_v, rawExpr=u'$result')) # from line 4, col 11.
-        write(u'''</e2state>
+        if _v is not None: write(_filter(_v, rawExpr='$result')) # from line 4, col 11.
+        write('''</e2state>
 \t<e2statetext>''')
         _v = VFFSL(SL,"message",True) # u'$message' on line 5, col 15
-        if _v is not None: write(_filter(_v, rawExpr=u'$message')) # from line 5, col 15.
-        write(u'''</e2statetext>
+        if _v is not None: write(_filter(_v, rawExpr='$message')) # from line 5, col 15.
+        write('''</e2statetext>
 </e2simplexmlresult>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_62412530
--- ./plugin/controllers/views/web/selectaudiotrack.py	(original)
+++ ./plugin/controllers/views/web/selectaudiotrack.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,22 +84,22 @@
         ## START - generated method body
         
         _orig_filter_70921773 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2result>
 ''')
         if VFFSL(SL,"result",True) == True: # generated from line 4, col 1
-            write(u'''\tSuccess
+            write('''\tSuccess
 ''')
         else: # generated from line 6, col 1
-            write(u'''\tError
+            write('''\tError
 ''')
-        write(u'''</e2result>
+        write('''</e2result>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_70921773
         
--- ./plugin/controllers/views/web/servicelistplayable.py	(original)
+++ ./plugin/controllers/views/web/servicelistplayable.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,28 +84,28 @@
         ## START - generated method body
         
         _orig_filter_89737218 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2servicelistplayable>
 ''')
         for service in VFFSL(SL,"services",True): # generated from line 4, col 2
-            write(u'''\t<e2serviceplayable>
+            write('''\t<e2serviceplayable>
 \t\t<e2servicereference>''')
             _v = VFFSL(SL,"service.servicereference",True) # u'$service.servicereference' on line 6, col 23
-            if _v is not None: write(_filter(_v, rawExpr=u'$service.servicereference')) # from line 6, col 23.
-            write(u'''</e2servicereference>
+            if _v is not None: write(_filter(_v, rawExpr='$service.servicereference')) # from line 6, col 23.
+            write('''</e2servicereference>
 \t\t<e2isplayable>''')
             _v = VFFSL(SL,"str",False)(VFFSL(SL,"service.isplayable",True)) # u'$str($service.isplayable)' on line 7, col 17
-            if _v is not None: write(_filter(_v, rawExpr=u'$str($service.isplayable)')) # from line 7, col 17.
-            write(u'''</e2isplayable>
+            if _v is not None: write(_filter(_v, rawExpr='$str($service.isplayable)')) # from line 7, col 17.
+            write('''</e2isplayable>
 \t</e2serviceplayable>
 ''')
-        write(u'''</e2servicelistplayable>
+        write('''</e2servicelistplayable>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_89737218
         
--- ./plugin/controllers/views/web/servicelistreload.py	(original)
+++ ./plugin/controllers/views/web/servicelistreload.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,22 +84,22 @@
         ## START - generated method body
         
         _orig_filter_41493449 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2simplexmlresult>
 \t<e2state>''')
         _v = VFFSL(SL,"result",True) # u'$result' on line 4, col 11
-        if _v is not None: write(_filter(_v, rawExpr=u'$result')) # from line 4, col 11.
-        write(u'''</e2state>
+        if _v is not None: write(_filter(_v, rawExpr='$result')) # from line 4, col 11.
+        write('''</e2state>
 \t<e2statetext>''')
         _v = VFFSL(SL,"message",True) # u'$message' on line 5, col 15
-        if _v is not None: write(_filter(_v, rawExpr=u'$message')) # from line 5, col 15.
-        write(u'''</e2statetext>
+        if _v is not None: write(_filter(_v, rawExpr='$message')) # from line 5, col 15.
+        write('''</e2statetext>
 </e2simplexmlresult>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_41493449
--- ./plugin/controllers/views/web/serviceplayable.py	(original)
+++ ./plugin/controllers/views/web/serviceplayable.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,22 +84,22 @@
         ## START - generated method body
         
         _orig_filter_71054524 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2serviceplayable>
 \t<e2servicereference>''')
         _v = VFFSL(SL,"service.servicereference",True) # u'$service.servicereference' on line 4, col 22
-        if _v is not None: write(_filter(_v, rawExpr=u'$service.servicereference')) # from line 4, col 22.
-        write(u'''</e2servicereference>
+        if _v is not None: write(_filter(_v, rawExpr='$service.servicereference')) # from line 4, col 22.
+        write('''</e2servicereference>
 \t<e2isplayable>''')
         _v = VFFSL(SL,"str",False)(VFFSL(SL,"service.isplayable",True)) # u'$str($service.isplayable)' on line 5, col 16
-        if _v is not None: write(_filter(_v, rawExpr=u'$str($service.isplayable)')) # from line 5, col 16.
-        write(u'''</e2isplayable>
+        if _v is not None: write(_filter(_v, rawExpr='$str($service.isplayable)')) # from line 5, col 16.
+        write('''</e2isplayable>
 </e2serviceplayable>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_71054524
--- ./plugin/controllers/views/web/servicesm3u.py	(original)
+++ ./plugin/controllers/views/web/servicesm3u.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -60,7 +61,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -70,7 +71,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,46 +84,46 @@
         ########################################
         ## START - generated method body
         
-        write(u'''#EXTM3U 
+        write('''#EXTM3U 
 #EXTVLCOPT--http-reconnect=true
 ''')
-        _url = "http://"+VFFSL(SL,"auth",True)+VFN(VFFSL(SL,"host",True),"split",False)(u":")[0]
+        _url = "http://"+VFFSL(SL,"auth",True)+VFN(VFFSL(SL,"host",True),"split",False)(":")[0]
         for service in VFFSL(SL,"services",True): # generated from line 5, col 1
             _sref = ":".join(VFN(VFFSL(SL,"service.servicereference",True),"split",False)(":", 10)[:-1])+":"
             try: # generated from line 7, col 1
                 _piconurl = VFFSL(SL,"_url",True)+getPicon(VFFSL(SL,"_sref",True))
             except: # generated from line 9, col 1
                 _piconurl = ""
-            write(u'''#EXTINF:-1 tvg-chno="''')
+            write('''#EXTINF:-1 tvg-chno="''')
             _v = VFFSL(SL,"service.program",True) # u'$service.program' on line 12, col 22
-            if _v is not None: write(_filter(_v, rawExpr=u'$service.program')) # from line 12, col 22.
-            write(u'''" tvg-logo="''')
+            if _v is not None: write(_filter(_v, rawExpr='$service.program')) # from line 12, col 22.
+            write('''" tvg-logo="''')
             _v = VFFSL(SL,"_piconurl",True) # u'$_piconurl' on line 12, col 50
-            if _v is not None: write(_filter(_v, rawExpr=u'$_piconurl')) # from line 12, col 50.
-            write(u'''" tvg-id="''')
+            if _v is not None: write(_filter(_v, rawExpr='$_piconurl')) # from line 12, col 50.
+            write('''" tvg-id="''')
             _v = VFFSL(SL,"_sref",True) # u'$_sref' on line 12, col 70
-            if _v is not None: write(_filter(_v, rawExpr=u'$_sref')) # from line 12, col 70.
-            write(u'''" tvg-name="''')
+            if _v is not None: write(_filter(_v, rawExpr='$_sref')) # from line 12, col 70.
+            write('''" tvg-name="''')
             _v = VFFSL(SL,"service.servicename",True) # u'$service.servicename' on line 12, col 88
-            if _v is not None: write(_filter(_v, rawExpr=u'$service.servicename')) # from line 12, col 88.
-            write(u'''",''')
+            if _v is not None: write(_filter(_v, rawExpr='$service.servicename')) # from line 12, col 88.
+            write('''",''')
             _v = VFFSL(SL,"service.servicename",True) # u'$service.servicename' on line 12, col 110
-            if _v is not None: write(_filter(_v, rawExpr=u'$service.servicename')) # from line 12, col 110.
-            write(u'''
+            if _v is not None: write(_filter(_v, rawExpr='$service.servicename')) # from line 12, col 110.
+            write('''
 ''')
-            if _sref and u"//127.0.0.1%3" in _sref: # generated from line 13, col 1
-                _sref = _sref.split(u":")[10].split(u"//127.0.0.1%3")[-1]
-                _v = u"http://"+VFFSL(SL,"auth",True)+VFN(VFFSL(SL,"host",True),"split",False)(u":")[0]+u":"+_sref[1:]
+            if _sref and "//127.0.0.1%3" in _sref: # generated from line 13, col 1
+                _sref = _sref.split(":")[10].split("//127.0.0.1%3")[-1]
+                _v = "http://"+VFFSL(SL,"auth",True)+VFN(VFFSL(SL,"host",True),"split",False)(":")[0]+":"+_sref[1:]
                 if _v is not None: write(_filter(_v))
             elif _sref: # generated from line 16, col 1
-                write(u'''#EXTVLCOPT:program=''')
+                write('''#EXTVLCOPT:program=''')
                 _v = VFFSL(SL,"service.program",True) # u'$service.program' on line 17, col 20
-                if _v is not None: write(_filter(_v, rawExpr=u'$service.program')) # from line 17, col 20.
-                write(u'''
+                if _v is not None: write(_filter(_v, rawExpr='$service.program')) # from line 17, col 20.
+                write('''
 ''')
-                _v = u"http://"+VFFSL(SL,"auth",True)+VFFSL(SL,"host",True)+u"/"+_sref
+                _v = "http://"+VFFSL(SL,"auth",True)+VFFSL(SL,"host",True)+"/"+_sref
                 if _v is not None: write(_filter(_v))
-            write(u'''
+            write('''
 ''')
         
         ########################################
--- ./plugin/controllers/views/web/servicesxspf.py	(original)
+++ ./plugin/controllers/views/web/servicesxspf.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -60,7 +61,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -70,7 +71,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,51 +84,51 @@
         ########################################
         ## START - generated method body
         
-        _url = "http://"+VFFSL(SL,"auth",True)+VFN(VFFSL(SL,"host",True),"split",False)(u":")[0]
+        _url = "http://"+VFFSL(SL,"auth",True)+VFN(VFFSL(SL,"host",True),"split",False)(":")[0]
         _orig_filter_60654258 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <playlist version="1" xmlns="http://xspf.org/ns/0/">
 \t<trackList>
 \t<title>''')
         _v = VFFSL(SL,"bname",True) # u'$bname' on line 7, col 9
-        if _v is not None: write(_filter(_v, rawExpr=u'$bname')) # from line 7, col 9.
-        write(u'''</title>
+        if _v is not None: write(_filter(_v, rawExpr='$bname')) # from line 7, col 9.
+        write('''</title>
 ''')
         for service in VFFSL(SL,"services",True): # generated from line 8, col 2
-            write(u'''\t\t<track>
+            write('''\t\t<track>
 \t\t<title>''')
             _v = VFFSL(SL,"service.servicename",True) # u'$service.servicename' on line 10, col 10
-            if _v is not None: write(_filter(_v, rawExpr=u'$service.servicename')) # from line 10, col 10.
-            write(u'''</title>
+            if _v is not None: write(_filter(_v, rawExpr='$service.servicename')) # from line 10, col 10.
+            write('''</title>
 ''')
             _sref = ":".join(VFN(VFFSL(SL,"service.servicereference",True),"split",False)(":", 10)[:-1])+":"
             try: # generated from line 12, col 3
                 _piconurl = VFFSL(SL,"_url",True)+getPicon(VFFSL(SL,"_sref",True))
             except: # generated from line 14, col 3
                 _piconurl = ""
-            write(u'''\t\t<image>''')
+            write('''\t\t<image>''')
             _v = VFFSL(SL,"_piconurl",True) # u'$_piconurl' on line 17, col 10
-            if _v is not None: write(_filter(_v, rawExpr=u'$_piconurl')) # from line 17, col 10.
-            write(u'''</image>
+            if _v is not None: write(_filter(_v, rawExpr='$_piconurl')) # from line 17, col 10.
+            write('''</image>
 ''')
-            if _sref and u"//127.0.0.1%3" in _sref: # generated from line 18, col 4
-                _sref = _sref.split(u":")[10].split(u"//127.0.0.1%3")[-1]
-                _sref = u"http://"+VFFSL(SL,"auth",True)+VFN(VFFSL(SL,"host",True),"split",False)(u":")[0]+u":"+_sref[1:]
+            if _sref and "//127.0.0.1%3" in _sref: # generated from line 18, col 4
+                _sref = _sref.split(":")[10].split("//127.0.0.1%3")[-1]
+                _sref = "http://"+VFFSL(SL,"auth",True)+VFN(VFFSL(SL,"host",True),"split",False)(":")[0]+":"+_sref[1:]
             elif _sref: # generated from line 21, col 4
-                _sref = u"http://"+VFFSL(SL,"auth",True)+VFFSL(SL,"host",True)+u"/"+_sref
-            write(u'''\t\t\t<location>''')
+                _sref = "http://"+VFFSL(SL,"auth",True)+VFFSL(SL,"host",True)+"/"+_sref
+            write('''\t\t\t<location>''')
             _v = VFFSL(SL,"_sref",True) # u'$_sref' on line 24, col 14
-            if _v is not None: write(_filter(_v, rawExpr=u'$_sref')) # from line 24, col 14.
-            write(u'''</location>
+            if _v is not None: write(_filter(_v, rawExpr='$_sref')) # from line 24, col 14.
+            write('''</location>
 \t\t</track>
 ''')
-        write(u'''\t</trackList>
+        write('''\t</trackList>
 </playlist>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_60654258
--- ./plugin/controllers/views/web/settings.py	(original)
+++ ./plugin/controllers/views/web/settings.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,28 +84,28 @@
         ## START - generated method body
         
         _orig_filter_65434891 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2settings>
 ''')
         for setting in VFFSL(SL,"settings",True): # generated from line 4, col 2
-            write(u'''\t<e2setting>
+            write('''\t<e2setting>
 \t\t<e2settingname>''')
             _v = VFFSL(SL,"setting",True)[0] # u'$setting[0]' on line 6, col 18
-            if _v is not None: write(_filter(_v, rawExpr=u'$setting[0]')) # from line 6, col 18.
-            write(u'''</e2settingname>
+            if _v is not None: write(_filter(_v, rawExpr='$setting[0]')) # from line 6, col 18.
+            write('''</e2settingname>
 \t\t<e2settingvalue>''')
             _v = VFFSL(SL,"setting",True)[1] # u'$setting[1]' on line 7, col 19
-            if _v is not None: write(_filter(_v, rawExpr=u'$setting[1]')) # from line 7, col 19.
-            write(u'''</e2settingvalue>
+            if _v is not None: write(_filter(_v, rawExpr='$setting[1]')) # from line 7, col 19.
+            write('''</e2settingvalue>
 \t</e2setting>
 ''')
-        write(u'''</e2settings>
+        write('''</e2settings>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_65434891
         
--- ./plugin/controllers/views/web/sleeptimer.py	(original)
+++ ./plugin/controllers/views/web/sleeptimer.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,30 +84,30 @@
         ## START - generated method body
         
         _orig_filter_99447250 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2sleeptimer>
 \t<e2enabled>''')
         _v = VFFSL(SL,"enabled",True) # u'$enabled' on line 4, col 13
-        if _v is not None: write(_filter(_v, rawExpr=u'$enabled')) # from line 4, col 13.
-        write(u'''</e2enabled>
+        if _v is not None: write(_filter(_v, rawExpr='$enabled')) # from line 4, col 13.
+        write('''</e2enabled>
 \t<e2minutes>''')
         _v = VFFSL(SL,"minutes",True) # u'$minutes' on line 5, col 13
-        if _v is not None: write(_filter(_v, rawExpr=u'$minutes')) # from line 5, col 13.
-        write(u'''</e2minutes>
+        if _v is not None: write(_filter(_v, rawExpr='$minutes')) # from line 5, col 13.
+        write('''</e2minutes>
 \t<e2action>''')
         _v = VFFSL(SL,"action",True) # u'$action' on line 6, col 12
-        if _v is not None: write(_filter(_v, rawExpr=u'$action')) # from line 6, col 12.
-        write(u'''</e2action>
+        if _v is not None: write(_filter(_v, rawExpr='$action')) # from line 6, col 12.
+        write('''</e2action>
 \t<e2text>''')
         _v = VFFSL(SL,"message",True) # u'$message' on line 7, col 10
-        if _v is not None: write(_filter(_v, rawExpr=u'$message')) # from line 7, col 10.
-        write(u'''</e2text>
+        if _v is not None: write(_filter(_v, rawExpr='$message')) # from line 7, col 10.
+        write('''</e2text>
 </e2sleeptimer>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_99447250
--- ./plugin/controllers/views/web/streamsubservices.py	(original)
+++ ./plugin/controllers/views/web/streamsubservices.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,28 +84,28 @@
         ## START - generated method body
         
         _orig_filter_72667408 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2servicelist>
 ''')
         for service in VFFSL(SL,"services",True): # generated from line 4, col 2
-            write(u'''\t<e2service>
+            write('''\t<e2service>
 \t\t<e2servicereference>''')
             _v = VFFSL(SL,"service.servicereference",True) # u'$service.servicereference' on line 6, col 23
-            if _v is not None: write(_filter(_v, rawExpr=u'$service.servicereference')) # from line 6, col 23.
-            write(u'''</e2servicereference>
+            if _v is not None: write(_filter(_v, rawExpr='$service.servicereference')) # from line 6, col 23.
+            write('''</e2servicereference>
 \t\t<e2servicename>''')
             _v = VFFSL(SL,"service.servicename",True) # u'$service.servicename' on line 7, col 18
-            if _v is not None: write(_filter(_v, rawExpr=u'$service.servicename')) # from line 7, col 18.
-            write(u'''</e2servicename>
+            if _v is not None: write(_filter(_v, rawExpr='$service.servicename')) # from line 7, col 18.
+            write('''</e2servicename>
 \t</e2service>
 ''')
-        write(u'''</e2servicelist>
+        write('''</e2servicelist>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_72667408
         
--- ./plugin/controllers/views/web/subservices.py	(original)
+++ ./plugin/controllers/views/web/subservices.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,28 +84,28 @@
         ## START - generated method body
         
         _orig_filter_62156907 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2servicelist>
 ''')
         for service in VFFSL(SL,"services",True): # generated from line 4, col 2
-            write(u'''\t<e2service>
+            write('''\t<e2service>
 \t\t<e2servicereference>''')
             _v = VFFSL(SL,"service.servicereference",True) # u'$service.servicereference' on line 6, col 23
-            if _v is not None: write(_filter(_v, rawExpr=u'$service.servicereference')) # from line 6, col 23.
-            write(u'''</e2servicereference>
+            if _v is not None: write(_filter(_v, rawExpr='$service.servicereference')) # from line 6, col 23.
+            write('''</e2servicereference>
 \t\t<e2servicename>''')
             _v = VFFSL(SL,"service.servicename",True) # u'$service.servicename' on line 7, col 18
-            if _v is not None: write(_filter(_v, rawExpr=u'$service.servicename')) # from line 7, col 18.
-            write(u'''</e2servicename>
+            if _v is not None: write(_filter(_v, rawExpr='$service.servicename')) # from line 7, col 18.
+            write('''</e2servicename>
 \t</e2service>
 ''')
-        write(u'''</e2servicelist>
+        write('''</e2servicelist>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_62156907
         
--- ./plugin/controllers/views/web/timeradd.py	(original)
+++ ./plugin/controllers/views/web/timeradd.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,22 +84,22 @@
         ## START - generated method body
         
         _orig_filter_33989443 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2simplexmlresult>
 \t<e2state>''')
         _v = VFFSL(SL,"result",True) # u'$result' on line 4, col 11
-        if _v is not None: write(_filter(_v, rawExpr=u'$result')) # from line 4, col 11.
-        write(u'''</e2state>
+        if _v is not None: write(_filter(_v, rawExpr='$result')) # from line 4, col 11.
+        write('''</e2state>
 \t<e2statetext>''')
         _v = VFFSL(SL,"message",True) # u'$message' on line 5, col 15
-        if _v is not None: write(_filter(_v, rawExpr=u'$message')) # from line 5, col 15.
-        write(u'''</e2statetext>
+        if _v is not None: write(_filter(_v, rawExpr='$message')) # from line 5, col 15.
+        write('''</e2statetext>
 </e2simplexmlresult>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_33989443
--- ./plugin/controllers/views/web/timeraddbyeventid.py	(original)
+++ ./plugin/controllers/views/web/timeraddbyeventid.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,22 +84,22 @@
         ## START - generated method body
         
         _orig_filter_64160065 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2simplexmlresult>
 \t<e2state>''')
         _v = VFFSL(SL,"result",True) # u'$result' on line 4, col 11
-        if _v is not None: write(_filter(_v, rawExpr=u'$result')) # from line 4, col 11.
-        write(u'''</e2state>
+        if _v is not None: write(_filter(_v, rawExpr='$result')) # from line 4, col 11.
+        write('''</e2state>
 \t<e2statetext>''')
         _v = VFFSL(SL,"message",True) # u'$message' on line 5, col 15
-        if _v is not None: write(_filter(_v, rawExpr=u'$message')) # from line 5, col 15.
-        write(u'''</e2statetext>
+        if _v is not None: write(_filter(_v, rawExpr='$message')) # from line 5, col 15.
+        write('''</e2statetext>
 </e2simplexmlresult>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_64160065
--- ./plugin/controllers/views/web/timerchange.py	(original)
+++ ./plugin/controllers/views/web/timerchange.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,22 +84,22 @@
         ## START - generated method body
         
         _orig_filter_65167361 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2simplexmlresult>
 \t<e2state>''')
         _v = VFFSL(SL,"result",True) # u'$result' on line 4, col 11
-        if _v is not None: write(_filter(_v, rawExpr=u'$result')) # from line 4, col 11.
-        write(u'''</e2state>
+        if _v is not None: write(_filter(_v, rawExpr='$result')) # from line 4, col 11.
+        write('''</e2state>
 \t<e2statetext>''')
         _v = VFFSL(SL,"message",True) # u'$message' on line 5, col 15
-        if _v is not None: write(_filter(_v, rawExpr=u'$message')) # from line 5, col 15.
-        write(u'''</e2statetext>
+        if _v is not None: write(_filter(_v, rawExpr='$message')) # from line 5, col 15.
+        write('''</e2statetext>
 </e2simplexmlresult>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_65167361
--- ./plugin/controllers/views/web/timercleanup.py	(original)
+++ ./plugin/controllers/views/web/timercleanup.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,22 +84,22 @@
         ## START - generated method body
         
         _orig_filter_44045084 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2simplexmlresult>
 \t<e2state>''')
         _v = VFFSL(SL,"result",True) # u'$result' on line 4, col 11
-        if _v is not None: write(_filter(_v, rawExpr=u'$result')) # from line 4, col 11.
-        write(u'''</e2state>
+        if _v is not None: write(_filter(_v, rawExpr='$result')) # from line 4, col 11.
+        write('''</e2state>
 \t<e2statetext>''')
         _v = VFFSL(SL,"message",True) # u'$message' on line 5, col 15
-        if _v is not None: write(_filter(_v, rawExpr=u'$message')) # from line 5, col 15.
-        write(u'''</e2statetext>
+        if _v is not None: write(_filter(_v, rawExpr='$message')) # from line 5, col 15.
+        write('''</e2statetext>
 </e2simplexmlresult>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_44045084
--- ./plugin/controllers/views/web/timerdelete.py	(original)
+++ ./plugin/controllers/views/web/timerdelete.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,22 +84,22 @@
         ## START - generated method body
         
         _orig_filter_69699009 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2simplexmlresult>
 \t<e2state>''')
         _v = VFFSL(SL,"result",True) # u'$result' on line 4, col 11
-        if _v is not None: write(_filter(_v, rawExpr=u'$result')) # from line 4, col 11.
-        write(u'''</e2state>
+        if _v is not None: write(_filter(_v, rawExpr='$result')) # from line 4, col 11.
+        write('''</e2state>
 \t<e2statetext>''')
         _v = VFFSL(SL,"message",True) # u'$message' on line 5, col 15
-        if _v is not None: write(_filter(_v, rawExpr=u'$message')) # from line 5, col 15.
-        write(u'''</e2statetext>
+        if _v is not None: write(_filter(_v, rawExpr='$message')) # from line 5, col 15.
+        write('''</e2statetext>
 </e2simplexmlresult>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_69699009
--- ./plugin/controllers/views/web/timerlist.py	(original)
+++ ./plugin/controllers/views/web/timerlist.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,132 +84,132 @@
         ## START - generated method body
         
         _orig_filter_83212405 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2timerlist>
 ''')
         for timer in VFFSL(SL,"timers",True): # generated from line 4, col 2
-            write(u'''\t<e2timer>
+            write('''\t<e2timer>
 \t\t<e2servicereference>''')
             _v = VFFSL(SL,"timer.serviceref",True) # u'$timer.serviceref' on line 6, col 23
-            if _v is not None: write(_filter(_v, rawExpr=u'$timer.serviceref')) # from line 6, col 23.
-            write(u'''</e2servicereference>
+            if _v is not None: write(_filter(_v, rawExpr='$timer.serviceref')) # from line 6, col 23.
+            write('''</e2servicereference>
 \t\t<e2servicename>''')
             _v = VFFSL(SL,"timer.servicename",True) # u'$timer.servicename' on line 7, col 18
-            if _v is not None: write(_filter(_v, rawExpr=u'$timer.servicename')) # from line 7, col 18.
-            write(u'''</e2servicename>
+            if _v is not None: write(_filter(_v, rawExpr='$timer.servicename')) # from line 7, col 18.
+            write('''</e2servicename>
 \t\t<e2eit>''')
             _v = VFFSL(SL,"timer.eit",True) # u'$timer.eit' on line 8, col 10
-            if _v is not None: write(_filter(_v, rawExpr=u'$timer.eit')) # from line 8, col 10.
-            write(u'''</e2eit>
+            if _v is not None: write(_filter(_v, rawExpr='$timer.eit')) # from line 8, col 10.
+            write('''</e2eit>
 \t\t<e2name>''')
             _v = VFFSL(SL,"timer.name",True) # u'$timer.name' on line 9, col 11
-            if _v is not None: write(_filter(_v, rawExpr=u'$timer.name')) # from line 9, col 11.
-            write(u'''</e2name>
+            if _v is not None: write(_filter(_v, rawExpr='$timer.name')) # from line 9, col 11.
+            write('''</e2name>
 \t\t<e2description>''')
             _v = VFFSL(SL,"timer.description",True) # u'$timer.description' on line 10, col 18
-            if _v is not None: write(_filter(_v, rawExpr=u'$timer.description')) # from line 10, col 18.
-            write(u'''</e2description>
+            if _v is not None: write(_filter(_v, rawExpr='$timer.description')) # from line 10, col 18.
+            write('''</e2description>
 \t\t<e2descriptionextended>''')
             _v = VFFSL(SL,"timer.descriptionextended",True) # u'$timer.descriptionextended' on line 11, col 26
-            if _v is not None: write(_filter(_v, rawExpr=u'$timer.descriptionextended')) # from line 11, col 26.
-            write(u'''</e2descriptionextended>
+            if _v is not None: write(_filter(_v, rawExpr='$timer.descriptionextended')) # from line 11, col 26.
+            write('''</e2descriptionextended>
 \t\t<e2disabled>''')
             _v = VFFSL(SL,"timer.disabled",True) # u'$timer.disabled' on line 12, col 15
-            if _v is not None: write(_filter(_v, rawExpr=u'$timer.disabled')) # from line 12, col 15.
-            write(u'''</e2disabled>
+            if _v is not None: write(_filter(_v, rawExpr='$timer.disabled')) # from line 12, col 15.
+            write('''</e2disabled>
 \t\t<e2timebegin>''')
             _v = VFFSL(SL,"timer.begin",True) # u'$timer.begin' on line 13, col 16
-            if _v is not None: write(_filter(_v, rawExpr=u'$timer.begin')) # from line 13, col 16.
-            write(u'''</e2timebegin>
+            if _v is not None: write(_filter(_v, rawExpr='$timer.begin')) # from line 13, col 16.
+            write('''</e2timebegin>
 \t\t<e2timeend>''')
             _v = VFFSL(SL,"timer.end",True) # u'$timer.end' on line 14, col 14
-            if _v is not None: write(_filter(_v, rawExpr=u'$timer.end')) # from line 14, col 14.
-            write(u'''</e2timeend>
+            if _v is not None: write(_filter(_v, rawExpr='$timer.end')) # from line 14, col 14.
+            write('''</e2timeend>
 \t\t<e2duration>''')
             _v = VFFSL(SL,"timer.duration",True) # u'$timer.duration' on line 15, col 15
-            if _v is not None: write(_filter(_v, rawExpr=u'$timer.duration')) # from line 15, col 15.
-            write(u'''</e2duration>
+            if _v is not None: write(_filter(_v, rawExpr='$timer.duration')) # from line 15, col 15.
+            write('''</e2duration>
 \t\t<e2startprepare>''')
             _v = VFFSL(SL,"timer.startprepare",True) # u'$timer.startprepare' on line 16, col 19
-            if _v is not None: write(_filter(_v, rawExpr=u'$timer.startprepare')) # from line 16, col 19.
-            write(u'''</e2startprepare>
+            if _v is not None: write(_filter(_v, rawExpr='$timer.startprepare')) # from line 16, col 19.
+            write('''</e2startprepare>
 \t\t<e2justplay>''')
             _v = VFFSL(SL,"timer.justplay",True) # u'$timer.justplay' on line 17, col 15
-            if _v is not None: write(_filter(_v, rawExpr=u'$timer.justplay')) # from line 17, col 15.
-            write(u'''</e2justplay>
+            if _v is not None: write(_filter(_v, rawExpr='$timer.justplay')) # from line 17, col 15.
+            write('''</e2justplay>
 \t\t<e2afterevent>''')
             _v = VFFSL(SL,"timer.afterevent",True) # u'$timer.afterevent' on line 18, col 17
-            if _v is not None: write(_filter(_v, rawExpr=u'$timer.afterevent')) # from line 18, col 17.
-            write(u'''</e2afterevent>
+            if _v is not None: write(_filter(_v, rawExpr='$timer.afterevent')) # from line 18, col 17.
+            write('''</e2afterevent>
 \t\t<e2location>''')
             _v = VFFSL(SL,"timer.dirname",True) # u'$timer.dirname' on line 19, col 15
-            if _v is not None: write(_filter(_v, rawExpr=u'$timer.dirname')) # from line 19, col 15.
-            write(u'''</e2location>
+            if _v is not None: write(_filter(_v, rawExpr='$timer.dirname')) # from line 19, col 15.
+            write('''</e2location>
 \t\t<e2tags>''')
             _v = VFFSL(SL,"timer.tags",True) # u'$timer.tags' on line 20, col 11
-            if _v is not None: write(_filter(_v, rawExpr=u'$timer.tags')) # from line 20, col 11.
-            write(u'''</e2tags>
+            if _v is not None: write(_filter(_v, rawExpr='$timer.tags')) # from line 20, col 11.
+            write('''</e2tags>
 \t\t<e2logentries>''')
             _v = VFFSL(SL,"timer.logentries",True) # u'$timer.logentries' on line 21, col 17
-            if _v is not None: write(_filter(_v, rawExpr=u'$timer.logentries')) # from line 21, col 17.
-            write(u'''</e2logentries>
+            if _v is not None: write(_filter(_v, rawExpr='$timer.logentries')) # from line 21, col 17.
+            write('''</e2logentries>
 \t\t<e2filename>''')
             _v = VFFSL(SL,"timer.filename",True) # u'$timer.filename' on line 22, col 15
-            if _v is not None: write(_filter(_v, rawExpr=u'$timer.filename')) # from line 22, col 15.
-            write(u'''</e2filename>
+            if _v is not None: write(_filter(_v, rawExpr='$timer.filename')) # from line 22, col 15.
+            write('''</e2filename>
 \t\t<e2backoff>''')
             _v = VFFSL(SL,"timer.backoff",True) # u'$timer.backoff' on line 23, col 14
-            if _v is not None: write(_filter(_v, rawExpr=u'$timer.backoff')) # from line 23, col 14.
-            write(u'''</e2backoff>
+            if _v is not None: write(_filter(_v, rawExpr='$timer.backoff')) # from line 23, col 14.
+            write('''</e2backoff>
 \t\t<e2nextactivation>''')
             _v = VFFSL(SL,"timer.nextactivation",True) # u'$timer.nextactivation' on line 24, col 21
-            if _v is not None: write(_filter(_v, rawExpr=u'$timer.nextactivation')) # from line 24, col 21.
-            write(u'''</e2nextactivation>
+            if _v is not None: write(_filter(_v, rawExpr='$timer.nextactivation')) # from line 24, col 21.
+            write('''</e2nextactivation>
 \t\t<e2firsttryprepare>''')
             _v = VFFSL(SL,"timer.firsttryprepare",True) # u'$timer.firsttryprepare' on line 25, col 22
-            if _v is not None: write(_filter(_v, rawExpr=u'$timer.firsttryprepare')) # from line 25, col 22.
-            write(u'''</e2firsttryprepare>
+            if _v is not None: write(_filter(_v, rawExpr='$timer.firsttryprepare')) # from line 25, col 22.
+            write('''</e2firsttryprepare>
 \t\t<e2state>''')
             _v = VFFSL(SL,"timer.state",True) # u'$timer.state' on line 26, col 12
-            if _v is not None: write(_filter(_v, rawExpr=u'$timer.state')) # from line 26, col 12.
-            write(u'''</e2state>
+            if _v is not None: write(_filter(_v, rawExpr='$timer.state')) # from line 26, col 12.
+            write('''</e2state>
 \t\t<e2repeated>''')
             _v = VFFSL(SL,"timer.repeated",True) # u'$timer.repeated' on line 27, col 15
-            if _v is not None: write(_filter(_v, rawExpr=u'$timer.repeated')) # from line 27, col 15.
-            write(u'''</e2repeated>
+            if _v is not None: write(_filter(_v, rawExpr='$timer.repeated')) # from line 27, col 15.
+            write('''</e2repeated>
 \t\t<e2dontsave>''')
             _v = VFFSL(SL,"timer.dontsave",True) # u'$timer.dontsave' on line 28, col 15
-            if _v is not None: write(_filter(_v, rawExpr=u'$timer.dontsave')) # from line 28, col 15.
-            write(u'''</e2dontsave>
+            if _v is not None: write(_filter(_v, rawExpr='$timer.dontsave')) # from line 28, col 15.
+            write('''</e2dontsave>
 \t\t<e2cancled>''')
             _v = VFFSL(SL,"timer.cancelled",True) # u'$timer.cancelled' on line 29, col 14
-            if _v is not None: write(_filter(_v, rawExpr=u'$timer.cancelled')) # from line 29, col 14.
-            write(u'''</e2cancled>
+            if _v is not None: write(_filter(_v, rawExpr='$timer.cancelled')) # from line 29, col 14.
+            write('''</e2cancled>
 \t\t<e2toggledisabled>''')
             _v = VFFSL(SL,"timer.toggledisabled",True) # u'$timer.toggledisabled' on line 30, col 21
-            if _v is not None: write(_filter(_v, rawExpr=u'$timer.toggledisabled')) # from line 30, col 21.
-            write(u'''</e2toggledisabled>
+            if _v is not None: write(_filter(_v, rawExpr='$timer.toggledisabled')) # from line 30, col 21.
+            write('''</e2toggledisabled>
 \t\t<e2toggledisabledimg>''')
             _v = VFFSL(SL,"timer.toggledisabledimg",True) # u'$timer.toggledisabledimg' on line 31, col 24
-            if _v is not None: write(_filter(_v, rawExpr=u'$timer.toggledisabledimg')) # from line 31, col 24.
-            write(u'''</e2toggledisabledimg>
+            if _v is not None: write(_filter(_v, rawExpr='$timer.toggledisabledimg')) # from line 31, col 24.
+            write('''</e2toggledisabledimg>
 \t\t<e2alwayszap>''')
             _v = VFFSL(SL,"timer.always_zap",True) # u'$timer.always_zap' on line 32, col 16
-            if _v is not None: write(_filter(_v, rawExpr=u'$timer.always_zap')) # from line 32, col 16.
-            write(u'''</e2alwayszap>
+            if _v is not None: write(_filter(_v, rawExpr='$timer.always_zap')) # from line 32, col 16.
+            write('''</e2alwayszap>
 \t\t<e2pipzap>''')
             _v = VFFSL(SL,"timer.pipzap",True) # u'$timer.pipzap' on line 33, col 13
-            if _v is not None: write(_filter(_v, rawExpr=u'$timer.pipzap')) # from line 33, col 13.
-            write(u'''</e2pipzap>
+            if _v is not None: write(_filter(_v, rawExpr='$timer.pipzap')) # from line 33, col 13.
+            write('''</e2pipzap>
 \t</e2timer>
 ''')
-        write(u'''</e2timerlist>
+        write('''</e2timerlist>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_83212405
         
--- ./plugin/controllers/views/web/timerlistwrite.py	(original)
+++ ./plugin/controllers/views/web/timerlistwrite.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,22 +84,22 @@
         ## START - generated method body
         
         _orig_filter_74325095 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2simplexmlresult>
 \t<e2state>''')
         _v = VFFSL(SL,"result",True) # u'$result' on line 4, col 11
-        if _v is not None: write(_filter(_v, rawExpr=u'$result')) # from line 4, col 11.
-        write(u'''</e2state>
+        if _v is not None: write(_filter(_v, rawExpr='$result')) # from line 4, col 11.
+        write('''</e2state>
 \t<e2statetext>''')
         _v = VFFSL(SL,"message",True) # u'$message' on line 5, col 15
-        if _v is not None: write(_filter(_v, rawExpr=u'$message')) # from line 5, col 15.
-        write(u'''</e2statetext>
+        if _v is not None: write(_filter(_v, rawExpr='$message')) # from line 5, col 15.
+        write('''</e2statetext>
 </e2simplexmlresult>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_74325095
--- ./plugin/controllers/views/web/timertogglestatus.py	(original)
+++ ./plugin/controllers/views/web/timertogglestatus.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,22 +84,22 @@
         ## START - generated method body
         
         _orig_filter_84471183 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2simplexmlresult>
 \t<e2state>''')
         _v = VFFSL(SL,"result",True) # u'$result' on line 4, col 11
-        if _v is not None: write(_filter(_v, rawExpr=u'$result')) # from line 4, col 11.
-        write(u'''</e2state>
+        if _v is not None: write(_filter(_v, rawExpr='$result')) # from line 4, col 11.
+        write('''</e2state>
 \t<e2statetext>''')
         _v = VFFSL(SL,"message",True) # u'$message' on line 5, col 15
-        if _v is not None: write(_filter(_v, rawExpr=u'$message')) # from line 5, col 15.
-        write(u'''</e2statetext>
+        if _v is not None: write(_filter(_v, rawExpr='$message')) # from line 5, col 15.
+        write('''</e2statetext>
 </e2simplexmlresult>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_84471183
--- ./plugin/controllers/views/web/tunersignal.py	(original)
+++ ./plugin/controllers/views/web/tunersignal.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,30 +84,30 @@
         ## START - generated method body
         
         _orig_filter_58711158 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2frontendstatus>
 \t<e2snrdb>''')
         _v = VFFSL(SL,"snr_db",True) # u'$snr_db' on line 4, col 11
-        if _v is not None: write(_filter(_v, rawExpr=u'$snr_db')) # from line 4, col 11.
-        write(u''' dB</e2snrdb>
+        if _v is not None: write(_filter(_v, rawExpr='$snr_db')) # from line 4, col 11.
+        write(''' dB</e2snrdb>
 \t<e2snr>''')
         _v = VFFSL(SL,"snr",True) # u'$snr' on line 5, col 9
-        if _v is not None: write(_filter(_v, rawExpr=u'$snr')) # from line 5, col 9.
-        write(u''' %</e2snr>
+        if _v is not None: write(_filter(_v, rawExpr='$snr')) # from line 5, col 9.
+        write(''' %</e2snr>
 \t<e2ber>''')
         _v = VFFSL(SL,"ber",True) # u'$ber' on line 6, col 9
-        if _v is not None: write(_filter(_v, rawExpr=u'$ber')) # from line 6, col 9.
-        write(u'''</e2ber>
+        if _v is not None: write(_filter(_v, rawExpr='$ber')) # from line 6, col 9.
+        write('''</e2ber>
 \t<e2acg>''')
         _v = VFFSL(SL,"agc",True) # u'$agc' on line 7, col 9
-        if _v is not None: write(_filter(_v, rawExpr=u'$agc')) # from line 7, col 9.
-        write(u''' %</e2acg>
+        if _v is not None: write(_filter(_v, rawExpr='$agc')) # from line 7, col 9.
+        write(''' %</e2acg>
 </e2frontendstatus>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_58711158
--- ./plugin/controllers/views/web/tvbrowser.py	(original)
+++ ./plugin/controllers/views/web/tvbrowser.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,22 +84,22 @@
         ## START - generated method body
         
         _orig_filter_79452985 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2simplexmlresult>
 \t<e2state>''')
         _v = VFFSL(SL,"result",True) # u'$result' on line 4, col 11
-        if _v is not None: write(_filter(_v, rawExpr=u'$result')) # from line 4, col 11.
-        write(u'''</e2state>
+        if _v is not None: write(_filter(_v, rawExpr='$result')) # from line 4, col 11.
+        write('''</e2state>
 \t<e2statetext>''')
         _v = VFFSL(SL,"message",True) # u'$message' on line 5, col 15
-        if _v is not None: write(_filter(_v, rawExpr=u'$message')) # from line 5, col 15.
-        write(u'''</e2statetext>
+        if _v is not None: write(_filter(_v, rawExpr='$message')) # from line 5, col 15.
+        write('''</e2statetext>
 </e2simplexmlresult>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_79452985
--- ./plugin/controllers/views/web/vol.py	(original)
+++ ./plugin/controllers/views/web/vol.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,30 +84,30 @@
         ## START - generated method body
         
         _orig_filter_49124379 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="utf-8"?>
+        write('''<?xml version="1.0" encoding="utf-8"?>
 <e2volume>
 \t<e2result>''')
         _v = VFFSL(SL,"result",True) # u'$result' on line 4, col 12
-        if _v is not None: write(_filter(_v, rawExpr=u'$result')) # from line 4, col 12.
-        write(u'''</e2result>
+        if _v is not None: write(_filter(_v, rawExpr='$result')) # from line 4, col 12.
+        write('''</e2result>
 \t<e2resulttext>''')
         _v = VFFSL(SL,"message",True) # u'$message' on line 5, col 16
-        if _v is not None: write(_filter(_v, rawExpr=u'$message')) # from line 5, col 16.
-        write(u'''</e2resulttext>
+        if _v is not None: write(_filter(_v, rawExpr='$message')) # from line 5, col 16.
+        write('''</e2resulttext>
 \t<e2current>''')
         _v = VFFSL(SL,"current",True) # u'$current' on line 6, col 13
-        if _v is not None: write(_filter(_v, rawExpr=u'$current')) # from line 6, col 13.
-        write(u'''</e2current>
+        if _v is not None: write(_filter(_v, rawExpr='$current')) # from line 6, col 13.
+        write('''</e2current>
 \t<e2ismuted>''')
         _v = VFFSL(SL,"ismute",True) # u'$ismute' on line 7, col 13
-        if _v is not None: write(_filter(_v, rawExpr=u'$ismute')) # from line 7, col 13.
-        write(u'''</e2ismuted>
+        if _v is not None: write(_filter(_v, rawExpr='$ismute')) # from line 7, col 13.
+        write('''</e2ismuted>
 </e2volume>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_49124379
--- ./plugin/controllers/views/web/zap.py	(original)
+++ ./plugin/controllers/views/web/zap.py	(refactored)
@@ -8,10 +8,11 @@
 import sys
 import os
 import os.path
+import collections
 try:
     import builtins as builtin
 except ImportError:
-    import __builtin__ as builtin
+    import builtins as builtin
 from os.path import getmtime, exists
 import time
 import types
@@ -59,7 +60,7 @@
         if not self._CHEETAH__instanceInitialized:
             cheetahKWArgs = {}
             allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
-            for k,v in KWs.items():
+            for k,v in list(KWs.items()):
                 if k in allowedKWs: cheetahKWArgs[k] = v
             self._initCheetahInstance(**cheetahKWArgs)
         
@@ -69,7 +70,7 @@
 
 
         ## CHEETAH: main method generated for this template
-        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
+        if (not trans and not self._CHEETAH__isBuffering and not isinstance(self.transaction, collections.Callable)):
             trans = self.transaction # is None unless self.awake() was called
         if not trans:
             trans = DummyTransaction()
@@ -83,22 +84,22 @@
         ## START - generated method body
         
         _orig_filter_72625791 = _filter
-        filterName = u'WebSafe'
-        if self._CHEETAH__filters.has_key("WebSafe"):
+        filterName = 'WebSafe'
+        if "WebSafe" in self._CHEETAH__filters:
             _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
         else:
             _filter = self._CHEETAH__currentFilter = \
 			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
-        write(u'''<?xml version="1.0" encoding="UTF-8"?>
+        write('''<?xml version="1.0" encoding="UTF-8"?>
 <e2simplexmlresult>
 \t<e2state>''')
         _v = VFFSL(SL,"result",True) # u'$result' on line 4, col 11
-        if _v is not None: write(_filter(_v, rawExpr=u'$result')) # from line 4, col 11.
-        write(u'''</e2state>
+        if _v is not None: write(_filter(_v, rawExpr='$result')) # from line 4, col 11.
+        write('''</e2state>
 \t<e2statetext>''')
         _v = VFFSL(SL,"message",True) # u'$message' on line 5, col 15
-        if _v is not None: write(_filter(_v, rawExpr=u'$message')) # from line 5, col 15.
-        write(u'''</e2statetext>
+        if _v is not None: write(_filter(_v, rawExpr='$message')) # from line 5, col 15.
+        write('''</e2statetext>
 </e2simplexmlresult>
 ''')
         _filter = self._CHEETAH__currentFilter = _orig_filter_72625791
--- ./testsuite/evil_eval.py	(original)
+++ ./testsuite/evil_eval.py	(refactored)
@@ -1,6 +1,6 @@
 #!/usr/bin/python
 # -*- coding: utf-8 -*-
-from __future__ import print_function
+
 """
 Unit Test for Code Trying to Mitigate a Remote Code Execution Vulnerability
 (CVE-2017-9807).
--- ./testsuite/movie_files_testsuite.py	(original)
+++ ./testsuite/movie_files_testsuite.py	(refactored)
@@ -1,6 +1,6 @@
 #!/usr/bin/python
 # -*- coding: utf-8 -*-
-from __future__ import print_function
+
 import os
 import copy
 import unittest
@@ -13,18 +13,18 @@
 MOVIE_FOLDER = '/media/hdd/movie'
 
 #: the main .ts file
-MAIN_TS_FILE = u"{dir}/20170830 1650 - TNT Serie HD (S) - Animal Kingdom - S\u00fcndenbock.ts".format(
+MAIN_TS_FILE = "{dir}/20170830 1650 - TNT Serie HD (S) - Animal Kingdom - S\u00fcndenbock.ts".format(
 	dir=MOVIE_FOLDER)
 
 EXPECTED_FILES = [
-	u"{dir}/20170830 1650 - TNT Serie HD (S) - Animal Kingdom - S\u00fcndenbock.eit".format(
+	"{dir}/20170830 1650 - TNT Serie HD (S) - Animal Kingdom - S\u00fcndenbock.eit".format(
 		dir=MOVIE_FOLDER),
 	MAIN_TS_FILE,
-	u"{dir}/20170830 1650 - TNT Serie HD (S) - Animal Kingdom - S\u00fcndenbock.ts.ap".format(
+	"{dir}/20170830 1650 - TNT Serie HD (S) - Animal Kingdom - S\u00fcndenbock.ts.ap".format(
 		dir=MOVIE_FOLDER),
-	u"{dir}/20170830 1650 - TNT Serie HD (S) - Animal Kingdom - S\u00fcndenbock.ts.cuts".format(
+	"{dir}/20170830 1650 - TNT Serie HD (S) - Animal Kingdom - S\u00fcndenbock.ts.cuts".format(
 		dir=MOVIE_FOLDER),
-	u"{dir}/20170830 1650 - TNT Serie HD (S) - Animal Kingdom - S\u00fcndenbock.ts.meta".format(
+	"{dir}/20170830 1650 - TNT Serie HD (S) - Animal Kingdom - S\u00fcndenbock.ts.meta".format(
 		dir=MOVIE_FOLDER),
 ]
 
@@ -33,21 +33,21 @@
 ENV_VAL_FALLBACK = "127.0.0.1"
 
 EXPECTED_MOVIE_ITEM = {
-	u'filename_stripped': u'20170830 1650 - TNT Serie HD (S) - Animal Kingdom - S\xfcndenbock.ts',
-	u'description': u'S\xfcndenbock',
-	u'tags': u'',
-	u'filesize': 0,
-	u'filesize_readable': u'',
-	u'serviceref': u'1:0:0:0:0:0:0:0:0:0:/media/hdd/movie/20170830 1650 - TNT Serie HD (S) - Animal Kingdom - S\xfcndenbock.ts',
-	u'filename': u'/media/hdd/movie/20170830 1650 - TNT Serie HD (S) - Animal Kingdom - S\xfcndenbock.ts',
-	u'eventname': u'Animal Kingdom',
-	u'length': u'?:??',
-	u'servicename': u'TNT Serie HD (S)',
-	u'begintime': u'30.8., 16:50',
-	u'fullname': u'1:0:0:0:0:0:0:0:0:0:/media/hdd/movie/20170830 1650 - TNT Serie HD (S) - Animal Kingdom - S\xfcndenbock.ts',
-	u'recordingtime': 1504104600,
-	u'descriptionExtended': u'1. Staffel, Folge 5: XXXXX XXXXXXXXX XXXX XXXXXX D\xe4mxxxx XX xxxxxxXx XXX XXXXXXX xxxx XXXX XXXXX XX XXXXXXX XXX xxxx XX XXXXXXXX XXXXXXX XXXXXXX x\xe4xxxx XXX xxx XXXXX xxxx xxxxx XXX xxx XXXXXXX XXXX xx XXX XXXXX Xp\xfclxx X\xf6xxXXX X XXXX XXX XXXXXX XXXxxxxx xxx xxx xxxxx xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 50 Min.\n2016.\nAb 12 Jahren',
-	u'lastseen': 0
+	'filename_stripped': '20170830 1650 - TNT Serie HD (S) - Animal Kingdom - S\xfcndenbock.ts',
+	'description': 'S\xfcndenbock',
+	'tags': '',
+	'filesize': 0,
+	'filesize_readable': '',
+	'serviceref': '1:0:0:0:0:0:0:0:0:0:/media/hdd/movie/20170830 1650 - TNT Serie HD (S) - Animal Kingdom - S\xfcndenbock.ts',
+	'filename': '/media/hdd/movie/20170830 1650 - TNT Serie HD (S) - Animal Kingdom - S\xfcndenbock.ts',
+	'eventname': 'Animal Kingdom',
+	'length': '?:??',
+	'servicename': 'TNT Serie HD (S)',
+	'begintime': '30.8., 16:50',
+	'fullname': '1:0:0:0:0:0:0:0:0:0:/media/hdd/movie/20170830 1650 - TNT Serie HD (S) - Animal Kingdom - S\xfcndenbock.ts',
+	'recordingtime': 1504104600,
+	'descriptionExtended': '1. Staffel, Folge 5: XXXXX XXXXXXXXX XXXX XXXXXX D\xe4mxxxx XX xxxxxxXx XXX XXXXXXX xxxx XXXX XXXXX XX XXXXXXX XXX xxxx XX XXXXXXXX XXXXXXX XXXXXXX x\xe4xxxx XXX xxx XXXXX xxxx xxxxx XXX xxx XXXXXXX XXXX xx XXX XXXXX Xp\xfclxx X\xf6xxXXX X XXXX XXX XXXXXX XXXxxxxx xxx xxx xxxxx xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 50 Min.\n2016.\nAb 12 Jahren',
+	'lastseen': 0
 }
 
 
@@ -120,7 +120,7 @@
 		self.assertTrue(req.status_code, 200)
 
 		data = req.json()
-		test_filename_remote = u"{dir}/{filename}".format(
+		test_filename_remote = "{dir}/{filename}".format(
 			dir=MOVIE_FOLDER, filename=self.test_filename)
 		self.assertTrue(test_filename_remote in data['files'])
 
--- ./testsuite/status_quo_file_controller.py	(original)
+++ ./testsuite/status_quo_file_controller.py	(refactored)
@@ -1,6 +1,6 @@
 #!/usr/bin/python
 # -*- coding: utf-8 -*-
-from __future__ import print_function
+
 import os
 import unittest
 import uuid
